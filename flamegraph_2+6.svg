<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="454.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="437" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="437" > </text>
<g id="frames">
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (109,777,782 samples, 1.58%)</title><rect x="788.8" y="197" width="18.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="791.81" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (1,537,945 samples, 0.02%)</title><rect x="221.0" y="229" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="224.04" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (1,032,756 samples, 0.01%)</title><rect x="207.5" y="277" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="210.46" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (1,519,162 samples, 0.02%)</title><rect x="900.4" y="261" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="903.36" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (194,359,174 samples, 2.79%)</title><rect x="724.0" y="213" width="32.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="726.98" y="223.5" >bo..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (623,601 samples, 0.01%)</title><rect x="98.1" y="165" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="101.13" y="175.5" ></text>
</g>
<g >
<title>read_matrix (830,729 samples, 0.01%)</title><rect x="1164.9" y="341" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1167.92" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (11,391,791 samples, 0.16%)</title><rect x="199.9" y="133" width="1.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="202.89" y="143.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_examine_edge&gt; (60,988,820 samples, 0.88%)</title><rect x="420.9" y="197" width="10.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="423.92" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (29,928,073 samples, 0.43%)</title><rect x="213.5" y="309" width="5.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="216.50" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_state (923,963 samples, 0.01%)</title><rect x="184.1" y="261" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="187.13" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (734,444 samples, 0.01%)</title><rect x="136.1" y="245" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="139.07" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (9,867,069 samples, 0.14%)</title><rect x="153.6" y="277" width="1.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="156.63" y="287.5" ></text>
</g>
<g >
<title>_int_free (612,186 samples, 0.01%)</title><rect x="1157.7" y="213" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1160.71" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_do_relocate (2,923,325 samples, 0.04%)</title><rect x="532.1" y="149" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="535.11" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (2,195,069 samples, 0.03%)</title><rect x="89.0" y="277" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="91.97" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long&gt; (735,874 samples, 0.01%)</title><rect x="125.9" y="213" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="128.86" y="223.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (1,765,865 samples, 0.03%)</title><rect x="339.0" y="309" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="342.02" y="319.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (13,130,891 samples, 0.19%)</title><rect x="651.9" y="149" width="2.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="654.92" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (925,794 samples, 0.01%)</title><rect x="170.5" y="277" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="173.48" y="287.5" ></text>
</g>
<g >
<title>boost::source&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (6,190,415 samples, 0.09%)</title><rect x="846.6" y="197" width="1.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="849.56" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (5,006,472 samples, 0.07%)</title><rect x="140.4" y="149" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="143.41" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (30,400,522 samples, 0.44%)</title><rect x="1037.9" y="213" width="5.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1040.89" y="223.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (74,052,716 samples, 1.06%)</title><rect x="674.5" y="101" width="12.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="677.46" y="111.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (629,804 samples, 0.01%)</title><rect x="132.1" y="277" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="135.07" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, bool&gt;::pair&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, bool, true&gt; (5,860,523 samples, 0.08%)</title><rect x="80.6" y="277" width="0.9" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="83.55" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_v (899,191 samples, 0.01%)</title><rect x="1140.9" y="277" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1143.89" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (2,951,646 samples, 0.04%)</title><rect x="1139.9" y="229" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1142.86" y="239.5" ></text>
</g>
<g >
<title>free_unref_page_commit (620,032 samples, 0.01%)</title><rect x="1179.4" y="181" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1182.40" y="191.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; (3,148,985 samples, 0.05%)</title><rect x="21.4" y="245" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="24.39" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*&gt; (618,033 samples, 0.01%)</title><rect x="208.9" y="277" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="211.92" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt; &gt; (77,974,973 samples, 1.12%)</title><rect x="63.0" y="245" width="13.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="65.99" y="255.5" ></text>
</g>
<g >
<title>boost::graph_detail::find&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (162,155,543 samples, 2.33%)</title><rect x="51.1" y="293" width="27.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="54.10" y="303.5" >b..</text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (3,443,422 samples, 0.05%)</title><rect x="481.7" y="165" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="484.73" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::size (2,062,866 samples, 0.03%)</title><rect x="204.2" y="293" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="207.23" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (9,124,402 samples, 0.13%)</title><rect x="222.0" y="293" width="1.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="225.05" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (4,720,281 samples, 0.07%)</title><rect x="1064.9" y="245" width="0.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1067.88" y="255.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::clear (14,715,545 samples, 0.21%)</title><rect x="171.2" y="309" width="2.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="174.19" y="319.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (6,595,494 samples, 0.09%)</title><rect x="112.4" y="181" width="1.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="115.41" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (811,343 samples, 0.01%)</title><rect x="500.2" y="149" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="503.24" y="159.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (9,859,050 samples, 0.14%)</title><rect x="521.5" y="181" width="1.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="524.55" y="191.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (2,024,481 samples, 0.03%)</title><rect x="1057.8" y="229" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1060.76" y="239.5" ></text>
</g>
<g >
<title>update_process_times (1,021,982 samples, 0.01%)</title><rect x="338.7" y="213" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="341.72" y="223.5" ></text>
</g>
<g >
<title>_int_free (1,125,270 samples, 0.02%)</title><rect x="226.4" y="245" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="229.42" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Deque_base (3,349,105 samples, 0.05%)</title><rect x="1017.0" y="261" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1020.05" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (1,304,910 samples, 0.02%)</title><rect x="530.5" y="149" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="533.52" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (30,961,216 samples, 0.44%)</title><rect x="142.6" y="277" width="5.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="145.63" y="287.5" ></text>
</g>
<g >
<title>main (6,752,853,553 samples, 96.93%)</title><rect x="21.4" y="357" width="1143.8" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="24.35" y="367.5" >main</text>
</g>
<g >
<title>boost::graph_detail::vector_tag::vector_tag (53,790,066 samples, 0.77%)</title><rect x="52.2" y="261" width="9.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="55.21" y="271.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (28,574,788 samples, 0.41%)</title><rect x="597.3" y="181" width="4.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="600.33" y="191.5" ></text>
</g>
<g >
<title>boost::mutate_graph_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::do_add_edge (3,914,831 samples, 0.06%)</title><rect x="19.4" y="325" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="22.35" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (159,828,401 samples, 2.29%)</title><rect x="660.5" y="149" width="27.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="663.46" y="159.5" >s..</text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (4,787,419 samples, 0.07%)</title><rect x="1010.7" y="293" width="0.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1013.68" y="303.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (58,530,501 samples, 0.84%)</title><rect x="593.2" y="197" width="9.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="596.17" y="207.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (895,524 samples, 0.01%)</title><rect x="1034.2" y="229" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1037.16" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (832,624 samples, 0.01%)</title><rect x="137.3" y="181" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="140.29" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (645,619 samples, 0.01%)</title><rect x="758.9" y="197" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="761.88" y="207.5" ></text>
</g>
<g >
<title>rmqueue (1,030,402 samples, 0.01%)</title><rect x="1177.7" y="197" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1180.69" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::max_size (918,738 samples, 0.01%)</title><rect x="1062.8" y="229" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1065.76" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::new_allocator (1,020,209 samples, 0.01%)</title><rect x="1108.5" y="245" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1111.46" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long const&amp;&gt; (894,093 samples, 0.01%)</title><rect x="529.9" y="165" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="532.85" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (619,980 samples, 0.01%)</title><rect x="1164.3" y="133" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1167.26" y="143.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (4,246,995 samples, 0.06%)</title><rect x="523.2" y="181" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="526.22" y="191.5" ></text>
</g>
<g >
<title>operator new (1,021,961 samples, 0.01%)</title><rect x="1112.7" y="213" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1115.70" y="223.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (14,197,876 samples, 0.20%)</title><rect x="139.8" y="197" width="2.4" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="142.83" y="207.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (5,313,823 samples, 0.08%)</title><rect x="733.2" y="197" width="0.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="736.21" y="207.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (8,163,258 samples, 0.12%)</title><rect x="955.7" y="133" width="1.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="958.70" y="143.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (837,769 samples, 0.01%)</title><rect x="120.1" y="165" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="123.09" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::capacity (826,321 samples, 0.01%)</title><rect x="212.6" y="293" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="215.63" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (6,232,521 samples, 0.09%)</title><rect x="501.4" y="181" width="1.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="504.37" y="191.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (6,743,509 samples, 0.10%)</title><rect x="1003.5" y="293" width="1.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1006.46" y="303.5" ></text>
</g>
<g >
<title>boost::graph_detail::push_dispatch&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,848,317 samples, 0.03%)</title><rect x="1164.1" y="213" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1167.10" y="223.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (1,133,390 samples, 0.02%)</title><rect x="38.9" y="181" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="41.89" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt;::allocate (1,124,957 samples, 0.02%)</title><rect x="166.4" y="245" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="169.36" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,669,806 samples, 0.02%)</title><rect x="151.5" y="229" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="154.54" y="239.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, false, false&gt;::derived (1,250,242 samples, 0.02%)</title><rect x="888.0" y="229" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="891.01" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (13,443,437 samples, 0.19%)</title><rect x="199.7" y="149" width="2.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="202.69" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config::stored_vertex, std::allocator&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config::stored_vertex&gt; &gt;::operator[] (4,598,980 samples, 0.07%)</title><rect x="759.5" y="181" width="0.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="762.54" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;unsigned long const, float&gt;, false, false&gt;::_Node_iterator (1,228,470 samples, 0.02%)</title><rect x="163.5" y="261" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="166.49" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (4,060,825 samples, 0.06%)</title><rect x="140.6" y="133" width="0.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="143.57" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::deallocate (1,120,830 samples, 0.02%)</title><rect x="1080.1" y="261" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1083.08" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (1,461,003 samples, 0.02%)</title><rect x="182.9" y="213" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="185.88" y="223.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (627,679 samples, 0.01%)</title><rect x="99.8" y="181" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="102.81" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt;::operator (34,279,347 samples, 0.49%)</title><rect x="68.5" y="213" width="5.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="71.53" y="223.5" ></text>
</g>
<g >
<title>std::tuple&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::tuple&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, true&gt; (1,437,615 samples, 0.02%)</title><rect x="44.7" y="261" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="47.69" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;unsigned long const, float&gt;, false, false&gt;::operator (2,666,240 samples, 0.04%)</title><rect x="169.8" y="277" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="172.81" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (1,039,968 samples, 0.01%)</title><rect x="110.4" y="37" width="0.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="113.36" y="47.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long const&amp;&gt; (723,656 samples, 0.01%)</title><rect x="217.1" y="277" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="220.07" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (8,012,809 samples, 0.12%)</title><rect x="37.7" y="229" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="40.72" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (91,283,317 samples, 1.31%)</title><rect x="155.5" y="293" width="15.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="158.54" y="303.5" ></text>
</g>
<g >
<title>malloc_consolidate (14,178,966 samples, 0.20%)</title><rect x="1186.5" y="373" width="2.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.52" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (3,078,552 samples, 0.04%)</title><rect x="161.0" y="213" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="163.99" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (646,536 samples, 0.01%)</title><rect x="1144.5" y="261" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1147.51" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (4,815,548 samples, 0.07%)</title><rect x="222.5" y="229" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="225.52" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (11,383,298 samples, 0.16%)</title><rect x="220.1" y="293" width="1.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="223.07" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_valptr (689,162 samples, 0.01%)</title><rect x="1140.9" y="261" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1143.93" y="271.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt; (2,244,243 samples, 0.03%)</title><rect x="532.2" y="133" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="535.20" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (17,280,316 samples, 0.25%)</title><rect x="1155.7" y="309" width="2.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1158.70" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (2,293,197 samples, 0.03%)</title><rect x="959.5" y="245" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="962.48" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (34,693,353 samples, 0.50%)</title><rect x="968.2" y="277" width="5.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="971.15" y="287.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (1,897,075 samples, 0.03%)</title><rect x="522.8" y="149" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="525.77" y="159.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::find (4,102,103 samples, 0.06%)</title><rect x="1136.4" y="309" width="0.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1139.39" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (3,185,030 samples, 0.05%)</title><rect x="957.1" y="197" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="960.09" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_push_back_aux&lt;unsigned long const&amp;&gt; (792,183 samples, 0.01%)</title><rect x="1016.8" y="261" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1019.84" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (8,954,994 samples, 0.13%)</title><rect x="528.5" y="181" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="531.49" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (899,054 samples, 0.01%)</title><rect x="998.8" y="277" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1001.75" y="287.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (8,295,310 samples, 0.12%)</title><rect x="525.3" y="197" width="1.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="528.33" y="207.5" ></text>
</g>
<g >
<title>std::accumulate&lt;std::_List_iterator&lt;float&gt;, float&gt; (11,087,908 samples, 0.16%)</title><rect x="1130.3" y="309" width="1.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1133.30" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, bool&gt;::pair&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, bool, true&gt; (893,596 samples, 0.01%)</title><rect x="343.6" y="277" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="346.57" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_allocate_buckets (2,565,781 samples, 0.04%)</title><rect x="162.6" y="229" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="165.57" y="239.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (4,082,889 samples, 0.06%)</title><rect x="691.9" y="181" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="694.87" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~_Vector_base (1,106,451 samples, 0.02%)</title><rect x="1163.5" y="309" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1166.45" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt;::destroy&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (9,957,632 samples, 0.14%)</title><rect x="1160.0" y="229" width="1.7" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1163.00" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (20,132,908 samples, 0.29%)</title><rect x="159.0" y="261" width="3.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="162.02" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (84,390,249 samples, 1.21%)</title><rect x="705.9" y="197" width="14.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="708.86" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (1,068,706 samples, 0.02%)</title><rect x="501.1" y="149" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="504.11" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::deallocate (5,902,027 samples, 0.08%)</title><rect x="1078.4" y="245" width="1.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1081.39" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (47,487,732 samples, 0.68%)</title><rect x="1068.1" y="245" width="8.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1071.10" y="255.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (5,938,453 samples, 0.09%)</title><rect x="757.9" y="197" width="1.0" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="760.88" y="207.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (825,685 samples, 0.01%)</title><rect x="86.6" y="277" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="89.61" y="287.5" ></text>
</g>
<g >
<title>[unknown] (2,994,229 samples, 0.04%)</title><rect x="11.2" y="341" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.22" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (1,499,294 samples, 0.02%)</title><rect x="1042.7" y="181" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1045.67" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (5,878,828 samples, 0.08%)</title><rect x="1087.9" y="245" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1090.86" y="255.5" ></text>
</g>
<g >
<title>boost::integer_range&lt;unsigned long&gt;::integer_range (1,581,250 samples, 0.02%)</title><rect x="996.5" y="261" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="999.52" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~pair (6,467,365 samples, 0.09%)</title><rect x="172.4" y="213" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="175.43" y="223.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::operator[] (113,054,675 samples, 1.62%)</title><rect x="173.7" y="309" width="19.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="176.69" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (1,918,932 samples, 0.03%)</title><rect x="1138.4" y="261" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1141.42" y="271.5" ></text>
</g>
<g >
<title>boost::graph_detail::push_dispatch&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (2,099,954 samples, 0.03%)</title><rect x="21.5" y="213" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="24.53" y="223.5" ></text>
</g>
<g >
<title>boost::graph_detail::reversible_container_tag::reversible_container_tag (6,171,250 samples, 0.09%)</title><rect x="59.1" y="245" width="1.0" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="62.09" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;unsigned long const*, unsigned long*&gt; (913,822 samples, 0.01%)</title><rect x="1120.8" y="229" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1123.76" y="239.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (1,023,297 samples, 0.01%)</title><rect x="49.0" y="197" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="52.04" y="207.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (3,020,372 samples, 0.04%)</title><rect x="116.5" y="197" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="119.55" y="207.5" ></text>
</g>
<g >
<title>[unknown] (917,750 samples, 0.01%)</title><rect x="20.6" y="341" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="23.63" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (2,756,621 samples, 0.04%)</title><rect x="939.1" y="229" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="942.07" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (13,868,668 samples, 0.20%)</title><rect x="1156.2" y="277" width="2.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1159.22" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (734,872 samples, 0.01%)</title><rect x="129.4" y="133" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="132.38" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (1,463,647 samples, 0.02%)</title><rect x="146.2" y="229" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="149.19" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (1,988,012 samples, 0.03%)</title><rect x="148.8" y="213" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="151.76" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_v (2,056,731 samples, 0.03%)</title><rect x="160.6" y="213" width="0.3" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="163.57" y="223.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (33,087,168 samples, 0.47%)</title><rect x="929.2" y="245" width="5.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="932.21" y="255.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::~stored_edge_property (2,452,843 samples, 0.04%)</title><rect x="340.9" y="293" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="343.93" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (4,136,308 samples, 0.06%)</title><rect x="1019.9" y="277" width="0.7" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1022.92" y="287.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1,292,989 samples, 0.02%)</title><rect x="1178.7" y="357" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1181.69" y="367.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (2,904,344 samples, 0.04%)</title><rect x="884.2" y="229" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="887.24" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size (4,704,143 samples, 0.07%)</title><rect x="145.4" y="229" width="0.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="148.39" y="239.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (13,390,480 samples, 0.19%)</title><rect x="120.3" y="181" width="2.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="123.26" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (666,609 samples, 0.01%)</title><rect x="899.9" y="229" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="902.86" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (11,217,323 samples, 0.16%)</title><rect x="205.1" y="245" width="1.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="208.07" y="255.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (15,389,706 samples, 0.22%)</title><rect x="1014.4" y="293" width="2.6" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1017.42" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (10,255,740 samples, 0.15%)</title><rect x="37.4" y="245" width="1.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="40.36" y="255.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt;*&gt;::pointer_to (1,042,345 samples, 0.01%)</title><rect x="172.1" y="229" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="175.13" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~allocator (1,085,673 samples, 0.02%)</title><rect x="1079.7" y="245" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1082.74" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (615,483 samples, 0.01%)</title><rect x="209.4" y="293" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="212.36" y="303.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (26,638,015 samples, 0.38%)</title><rect x="1043.6" y="197" width="4.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1046.61" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::~_Vector_base (852,558 samples, 0.01%)</title><rect x="900.5" y="245" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="903.48" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (1,033,193 samples, 0.01%)</title><rect x="180.0" y="197" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="183.00" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (10,089,420 samples, 0.14%)</title><rect x="205.3" y="229" width="1.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="208.26" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_state (1,227,865 samples, 0.02%)</title><rect x="163.7" y="261" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="166.75" y="271.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (1,254,980 samples, 0.02%)</title><rect x="96.4" y="133" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="99.36" y="143.5" ></text>
</g>
<g >
<title>_int_free (836,410 samples, 0.01%)</title><rect x="144.5" y="213" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="147.52" y="223.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (1,142,042 samples, 0.02%)</title><rect x="1023.6" y="213" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1026.58" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (949,975 samples, 0.01%)</title><rect x="369.5" y="277" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="372.50" y="287.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (626,773 samples, 0.01%)</title><rect x="123.1" y="181" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="126.08" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~vector (18,510,252 samples, 0.27%)</title><rect x="204.6" y="309" width="3.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="207.58" y="319.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt;, boost::edge_weight_t&gt; (3,688,226 samples, 0.05%)</title><rect x="84.2" y="293" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="87.16" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (1,129,592 samples, 0.02%)</title><rect x="158.8" y="261" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="161.83" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;float, std::allocator&lt;float&gt; &gt;::end (645,897 samples, 0.01%)</title><rect x="1129.6" y="293" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1132.65" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (4,888,992 samples, 0.07%)</title><rect x="531.2" y="165" width="0.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="534.17" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (979,145 samples, 0.01%)</title><rect x="1144.5" y="293" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1147.47" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (661,019 samples, 0.01%)</title><rect x="1121.6" y="261" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1124.63" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (3,345,725 samples, 0.05%)</title><rect x="129.9" y="277" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="132.87" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (1,102,621 samples, 0.02%)</title><rect x="340.2" y="277" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="343.20" y="287.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (1,257,211 samples, 0.02%)</title><rect x="134.8" y="165" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="137.81" y="175.5" ></text>
</g>
<g >
<title>boost::tuples::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type&gt; &gt;::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const&gt; (6,946,909 samples, 0.10%)</title><rect x="1006.4" y="261" width="1.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1009.36" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (940,281 samples, 0.01%)</title><rect x="144.0" y="245" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="146.97" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,016,036 samples, 0.01%)</title><rect x="181.0" y="133" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="184.00" y="143.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (1,987,579 samples, 0.03%)</title><rect x="493.2" y="181" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="496.24" y="191.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (131,941,540 samples, 1.89%)</title><rect x="564.5" y="213" width="22.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="567.53" y="223.5" >b..</text>
</g>
<g >
<title>std::operator!=&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; (1,226,635 samples, 0.02%)</title><rect x="1132.7" y="309" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1135.71" y="319.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (5,219,560 samples, 0.07%)</title><rect x="96.7" y="165" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="99.66" y="175.5" ></text>
</g>
<g >
<title>boost::graph_detail::container_category&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; (57,073,979 samples, 0.82%)</title><rect x="51.7" y="277" width="9.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="54.66" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (1,362,279 samples, 0.02%)</title><rect x="141.9" y="117" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="144.86" y="127.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (6,394,116 samples, 0.09%)</title><rect x="124.2" y="197" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="127.21" y="207.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (628,441 samples, 0.01%)</title><rect x="183.0" y="197" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="186.02" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (1,543,797 samples, 0.02%)</title><rect x="202.5" y="213" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="205.46" y="223.5" ></text>
</g>
<g >
<title>malloc (1,236,338 samples, 0.02%)</title><rect x="79.3" y="293" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="82.33" y="303.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (3,682,035 samples, 0.05%)</title><rect x="806.8" y="181" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="809.78" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (2,113,216 samples, 0.03%)</title><rect x="509.0" y="181" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="512.02" y="191.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (2,362,179 samples, 0.03%)</title><rect x="211.2" y="197" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="214.18" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (1,354,008 samples, 0.02%)</title><rect x="758.7" y="181" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="761.65" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::begin (3,685,647 samples, 0.05%)</title><rect x="1001.8" y="277" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1004.78" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::deallocate (1,713,639 samples, 0.02%)</title><rect x="1159.4" y="229" width="0.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1162.40" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::end (8,422,741 samples, 0.12%)</title><rect x="76.8" y="261" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="79.83" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (824,849 samples, 0.01%)</title><rect x="162.0" y="229" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="165.03" y="239.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::unordered_map (1,041,565 samples, 0.01%)</title><rect x="22.1" y="325" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="25.13" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;float, std::allocator&lt;float&gt; &gt;::~_List_base (617,258 samples, 0.01%)</title><rect x="1129.9" y="293" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1132.87" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::~unique_ptr (2,119,591 samples, 0.03%)</title><rect x="341.0" y="277" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="343.99" y="287.5" ></text>
</g>
<g >
<title>__lru_cache_add (612,812 samples, 0.01%)</title><rect x="1178.0" y="229" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1180.96" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1,337,484 samples, 0.02%)</title><rect x="170.3" y="277" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="173.26" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_allocate_buckets (1,535,961 samples, 0.02%)</title><rect x="162.7" y="213" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="165.66" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (12,061,845 samples, 0.17%)</title><rect x="744.1" y="165" width="2.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="747.12" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::~_Vector_impl (1,646,143 samples, 0.02%)</title><rect x="206.7" y="197" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="209.65" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt;::operator (2,003,446 samples, 0.03%)</title><rect x="342.7" y="213" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="345.75" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::~unique_ptr (31,679,389 samples, 0.45%)</title><rect x="45.7" y="277" width="5.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="48.70" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (1,439,167 samples, 0.02%)</title><rect x="213.0" y="293" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="215.96" y="303.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (39,324,733 samples, 0.56%)</title><rect x="369.8" y="293" width="6.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="372.82" y="303.5" ></text>
</g>
<g >
<title>alloc_pages_vma (609,783 samples, 0.01%)</title><rect x="181.0" y="85" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="184.01" y="95.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (1,359,671 samples, 0.02%)</title><rect x="149.9" y="181" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="152.91" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (629,510 samples, 0.01%)</title><rect x="137.2" y="149" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="140.17" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (9,950,253 samples, 0.14%)</title><rect x="1111.2" y="245" width="1.7" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1114.18" y="255.5" ></text>
</g>
<g >
<title>boost::graph_detail::vector_tag::vector_tag (4,666,790 samples, 0.07%)</title><rect x="341.5" y="261" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="344.47" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (1,409,191 samples, 0.02%)</title><rect x="530.5" y="165" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="533.50" y="175.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (12,191,881 samples, 0.18%)</title><rect x="684.9" y="53" width="2.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="687.94" y="63.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (800,157 samples, 0.01%)</title><rect x="543.9" y="165" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="546.95" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_base (13,958,078 samples, 0.20%)</title><rect x="1064.1" y="277" width="2.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1067.09" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const&amp;&gt; (2,874,641 samples, 0.04%)</title><rect x="167.8" y="197" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="170.80" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (2,142,117 samples, 0.03%)</title><rect x="1104.7" y="245" width="0.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1107.66" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt;::_M_next (2,922,343 samples, 0.04%)</title><rect x="183.2" y="229" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="186.23" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (1,151,152 samples, 0.02%)</title><rect x="115.4" y="149" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="118.45" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (602,952 samples, 0.01%)</title><rect x="1137.2" y="245" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1140.20" y="255.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; (2,681,557 samples, 0.04%)</title><rect x="19.4" y="277" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="22.37" y="287.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::operator[] (615,189 samples, 0.01%)</title><rect x="1154.2" y="325" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1157.22" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (5,332,802 samples, 0.08%)</title><rect x="151.0" y="277" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="153.97" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt;::deallocate (615,668 samples, 0.01%)</title><rect x="1159.5" y="213" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1162.48" y="223.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (3,624,664 samples, 0.05%)</title><rect x="960.2" y="261" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="963.22" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_use_relocate (838,441 samples, 0.01%)</title><rect x="147.5" y="245" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="150.52" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_use_relocate (3,000,826 samples, 0.04%)</title><rect x="1103.9" y="261" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1106.85" y="271.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (37,130,666 samples, 0.53%)</title><rect x="467.1" y="165" width="6.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="470.08" y="175.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (1,242,306 samples, 0.02%)</title><rect x="103.0" y="165" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="106.01" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::construct&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (622,447 samples, 0.01%)</title><rect x="1164.2" y="149" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1167.15" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (1,002,669 samples, 0.01%)</title><rect x="1145.6" y="277" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1148.59" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (3,209,267 samples, 0.05%)</title><rect x="1179.3" y="341" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1182.26" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator= (31,454,770 samples, 0.45%)</title><rect x="207.9" y="309" width="5.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="210.88" y="319.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, false&gt;::operator mpl_::bool_&lt;false&gt; const&amp; (2,518,332 samples, 0.04%)</title><rect x="430.8" y="181" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="433.83" y="191.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (818,993 samples, 0.01%)</title><rect x="191.0" y="197" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="194.01" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,002,669 samples, 0.01%)</title><rect x="1145.6" y="261" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1148.59" y="271.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (4,450,701 samples, 0.06%)</title><rect x="914.7" y="261" width="0.8" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="917.71" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::push_back (1,680,302 samples, 0.02%)</title><rect x="21.6" y="197" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="24.60" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (22,008,121 samples, 0.32%)</title><rect x="1125.0" y="277" width="3.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1128.05" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config::stored_vertex, std::allocator&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config::stored_vertex&gt; &gt;::operator[] (3,577,573 samples, 0.05%)</title><rect x="999.4" y="261" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1002.40" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (1,339,536 samples, 0.02%)</title><rect x="36.8" y="261" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="39.82" y="271.5" ></text>
</g>
<g >
<title>do_lookup_x (637,266 samples, 0.01%)</title><rect x="1179.1" y="373" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1182.15" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (2,361,569 samples, 0.03%)</title><rect x="28.6" y="309" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="31.57" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*&gt; (2,036,054 samples, 0.03%)</title><rect x="1070.8" y="181" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1073.76" y="191.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (1,879,156 samples, 0.03%)</title><rect x="122.5" y="181" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="125.53" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (1,097,289 samples, 0.02%)</title><rect x="1136.2" y="293" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1139.20" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::~new_allocator (732,132 samples, 0.01%)</title><rect x="1128.4" y="229" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1131.42" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (875,047 samples, 0.01%)</title><rect x="899.8" y="245" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="902.84" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (31,241,098 samples, 0.45%)</title><rect x="164.4" y="277" width="5.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.43" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (6,077,212 samples, 0.09%)</title><rect x="197.5" y="197" width="1.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="200.46" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (1,464,802 samples, 0.02%)</title><rect x="1089.4" y="229" width="0.3" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1092.41" y="239.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (622,922 samples, 0.01%)</title><rect x="124.1" y="197" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="127.09" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (5,229,197 samples, 0.08%)</title><rect x="162.4" y="261" width="0.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="165.43" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;unsigned long, unsigned long&amp;, unsigned long*&gt;::_Deque_iterator (838,045 samples, 0.01%)</title><rect x="132.6" y="229" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="135.58" y="239.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (1,024,725 samples, 0.01%)</title><rect x="79.6" y="293" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="82.64" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (8,135,525 samples, 0.12%)</title><rect x="41.6" y="245" width="1.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="44.62" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (2,154,640 samples, 0.03%)</title><rect x="190.8" y="213" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="193.79" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (2,972,663 samples, 0.04%)</title><rect x="220.9" y="245" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="223.92" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get_deleter (1,434,429 samples, 0.02%)</title><rect x="45.5" y="277" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="48.45" y="287.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1,610,653 samples, 0.02%)</title><rect x="1179.3" y="245" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1182.30" y="255.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (10,745,991 samples, 0.15%)</title><rect x="519.3" y="165" width="1.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="522.33" y="175.5" ></text>
</g>
<g >
<title>operator new (682,584 samples, 0.01%)</title><rect x="529.7" y="165" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="532.74" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (4,791,123 samples, 0.07%)</title><rect x="1162.6" y="229" width="0.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1165.58" y="239.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (13,446,136 samples, 0.19%)</title><rect x="127.5" y="245" width="2.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="130.45" y="255.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (8,356,330 samples, 0.12%)</title><rect x="934.8" y="245" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="937.81" y="255.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (5,824,295 samples, 0.08%)</title><rect x="547.4" y="181" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="550.44" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (6,190,666 samples, 0.09%)</title><rect x="738.8" y="181" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="741.85" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::front (838,045 samples, 0.01%)</title><rect x="132.6" y="261" width="0.1" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="135.58" y="271.5" ></text>
</g>
<g >
<title>boost::any_cast&lt;unsigned long&gt; (824,659 samples, 0.01%)</title><rect x="19.9" y="293" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="22.86" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pair&lt;unsigned long const&amp;, 0ul&gt; (1,386,881 samples, 0.02%)</title><rect x="1141.3" y="213" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1144.29" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (8,218,241 samples, 0.12%)</title><rect x="47.8" y="261" width="1.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="50.82" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_allocate (629,741 samples, 0.01%)</title><rect x="136.0" y="245" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="138.96" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;std::tuple&lt;&gt; &gt; (618,591 samples, 0.01%)</title><rect x="191.5" y="261" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="194.46" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (1,425,681 samples, 0.02%)</title><rect x="1000.4" y="261" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1003.41" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (56,213,748 samples, 0.81%)</title><rect x="194.4" y="293" width="9.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="197.43" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (89,697,281 samples, 1.29%)</title><rect x="942.4" y="213" width="15.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="945.43" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (7,509,897 samples, 0.11%)</title><rect x="74.3" y="213" width="1.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="77.34" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, false, false&gt;::operator++ (8,693,177 samples, 0.12%)</title><rect x="889.0" y="229" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="891.96" y="239.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (1,675,283 samples, 0.02%)</title><rect x="112.1" y="181" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="115.13" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_node&lt;float const&amp;&gt; (2,549,853 samples, 0.04%)</title><rect x="1129.1" y="277" width="0.5" height="15.0" fill="rgb(219,66,16)" rx="2" ry="2" />
<text  x="1132.14" y="287.5" ></text>
</g>
<g >
<title>std::advance&lt;std::_List_iterator&lt;float&gt;, long&gt; (13,940,633 samples, 0.20%)</title><rect x="1133.0" y="293" width="2.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1136.01" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (3,185,914 samples, 0.05%)</title><rect x="175.1" y="245" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="178.06" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (1,540,771 samples, 0.02%)</title><rect x="224.1" y="293" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="227.12" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (2,690,069 samples, 0.04%)</title><rect x="975.0" y="293" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="978.03" y="303.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (9,024,411 samples, 0.13%)</title><rect x="222.1" y="277" width="1.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="225.06" y="287.5" ></text>
</g>
<g >
<title>boost::tuples::tie&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (1,049,208 samples, 0.02%)</title><rect x="132.2" y="277" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="135.17" y="287.5" ></text>
</g>
<g >
<title>boost::vertices&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (1,233,019 samples, 0.02%)</title><rect x="897.2" y="229" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="900.24" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (3,056,614 samples, 0.04%)</title><rect x="502.4" y="181" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="505.43" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (42,389,663 samples, 0.61%)</title><rect x="135.3" y="261" width="7.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="138.27" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::erase (3,876,391 samples, 0.06%)</title><rect x="1142.9" y="309" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1145.89" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (4,939,156 samples, 0.07%)</title><rect x="50.2" y="229" width="0.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="53.23" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_max_size (1,574,727 samples, 0.02%)</title><rect x="138.7" y="213" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="141.73" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (11,310,071 samples, 0.16%)</title><rect x="215.3" y="293" width="1.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="218.28" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::emplace_back&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (5,436,043 samples, 0.08%)</title><rect x="1062.3" y="277" width="0.9" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1065.31" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, float&gt;::pair&lt;unsigned long const&amp;, 0ul&gt; (4,409,372 samples, 0.06%)</title><rect x="167.5" y="213" width="0.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="170.54" y="223.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (623,720 samples, 0.01%)</title><rect x="114.4" y="181" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="117.44" y="191.5" ></text>
</g>
<g >
<title>boost::tuples::tuple&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type&gt;::operator=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (5,457,901 samples, 0.08%)</title><rect x="1008.0" y="293" width="0.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1010.97" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (622,688 samples, 0.01%)</title><rect x="900.5" y="229" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="903.50" y="239.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::dummy_property_map, boost::detail::dummy_pmap_reference, unsigned long, unsigned long&gt; (5,881,299 samples, 0.08%)</title><rect x="843.0" y="197" width="1.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="845.99" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (789,652 samples, 0.01%)</title><rect x="1033.9" y="229" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1036.91" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::construct&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (622,447 samples, 0.01%)</title><rect x="1164.2" y="165" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1167.15" y="175.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (7,907,342 samples, 0.11%)</title><rect x="210.9" y="229" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="213.85" y="239.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (12,957,805 samples, 0.19%)</title><rect x="108.4" y="149" width="2.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="111.45" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (1,023,878 samples, 0.01%)</title><rect x="164.2" y="261" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="167.18" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (16,323,561 samples, 0.23%)</title><rect x="1159.0" y="261" width="2.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1161.98" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_do_relocate (4,607,585 samples, 0.07%)</title><rect x="146.7" y="229" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="149.73" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (771,725 samples, 0.01%)</title><rect x="548.7" y="197" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="551.68" y="207.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (3,302,239 samples, 0.05%)</title><rect x="507.4" y="197" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="510.44" y="207.5" ></text>
</g>
<g >
<title>boost::graph_detail::sequence_tag::sequence_tag (6,992,214 samples, 0.10%)</title><rect x="60.1" y="245" width="1.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="63.14" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; (619,980 samples, 0.01%)</title><rect x="1164.3" y="149" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1167.26" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (14,993,975 samples, 0.22%)</title><rect x="159.8" y="245" width="2.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="162.82" y="255.5" ></text>
</g>
<g >
<title>_int_free (2,712,254 samples, 0.04%)</title><rect x="1126.8" y="229" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1129.79" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (1,750,950 samples, 0.03%)</title><rect x="213.2" y="309" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="216.20" y="319.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt; &gt; (67,599,913 samples, 0.97%)</title><rect x="64.7" y="229" width="11.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="67.70" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (865,319 samples, 0.01%)</title><rect x="1138.2" y="277" width="0.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1141.19" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (678,667 samples, 0.01%)</title><rect x="1120.6" y="245" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1123.64" y="255.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (3,181,874 samples, 0.05%)</title><rect x="982.2" y="277" width="0.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="985.25" y="287.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (8,213,073 samples, 0.12%)</title><rect x="894.6" y="213" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="897.55" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (3,797,549 samples, 0.05%)</title><rect x="33.4" y="293" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="36.39" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (1,543,390 samples, 0.02%)</title><rect x="189.4" y="165" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="192.36" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (6,494,910 samples, 0.09%)</title><rect x="523.9" y="181" width="1.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="526.94" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (1,127,948 samples, 0.02%)</title><rect x="1030.8" y="245" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1033.84" y="255.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (1,775,454 samples, 0.03%)</title><rect x="521.2" y="181" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="524.15" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (14,721,513 samples, 0.21%)</title><rect x="1156.1" y="293" width="2.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1159.07" y="303.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (16,411,722 samples, 0.24%)</title><rect x="199.5" y="165" width="2.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="202.52" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::size (8,187,226 samples, 0.12%)</title><rect x="1054.8" y="245" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1057.78" y="255.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::update (838,997 samples, 0.01%)</title><rect x="100.7" y="197" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="103.71" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (1,470,811 samples, 0.02%)</title><rect x="137.7" y="133" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="140.73" y="143.5" ></text>
</g>
<g >
<title>operator new (723,171 samples, 0.01%)</title><rect x="216.9" y="277" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="219.95" y="287.5" ></text>
</g>
<g >
<title>boost::tuples::tuple&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type&gt;::tuple (15,337,563 samples, 0.22%)</title><rect x="1005.4" y="277" width="2.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1008.37" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (927,164 samples, 0.01%)</title><rect x="1164.3" y="165" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1167.26" y="175.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (1,286,836 samples, 0.02%)</title><rect x="472.7" y="117" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="475.65" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash_aux (4,920,331 samples, 0.07%)</title><rect x="162.5" y="245" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="165.48" y="255.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long*&gt; (3,784,559 samples, 0.05%)</title><rect x="1102.1" y="213" width="0.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1105.13" y="223.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (8,603,015 samples, 0.12%)</title><rect x="845.1" y="181" width="1.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="848.11" y="191.5" ></text>
</g>
<g >
<title>boost::graph_detail::find&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (12,331,808 samples, 0.18%)</title><rect x="341.4" y="293" width="2.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="344.37" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long const&amp;&gt; (748,235 samples, 0.01%)</title><rect x="529.6" y="149" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="532.61" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (9,347,977 samples, 0.13%)</title><rect x="1089.1" y="245" width="1.6" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1092.13" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (8,136,718 samples, 0.12%)</title><rect x="133.9" y="245" width="1.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="136.87" y="255.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (23,982,127 samples, 0.34%)</title><rect x="1044.0" y="165" width="4.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1047.01" y="175.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;float&gt;::operator++ (1,352,773 samples, 0.02%)</title><rect x="1131.6" y="293" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1134.65" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (70,635,900 samples, 1.01%)</title><rect x="962.1" y="293" width="11.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="965.07" y="303.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (32,362,342 samples, 0.46%)</title><rect x="486.2" y="149" width="5.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="489.21" y="159.5" ></text>
</g>
<g >
<title>boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::adjacency_list (4,647,369 samples, 0.07%)</title><rect x="1164.0" y="325" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1166.98" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_check_len (4,304,162 samples, 0.06%)</title><rect x="138.5" y="245" width="0.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="141.50" y="255.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (3,061,685,468 samples, 43.95%)</title><rect x="380.1" y="245" width="518.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="383.10" y="255.5" >boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back (1,244,761 samples, 0.02%)</title><rect x="882.1" y="213" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="885.06" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (916,967 samples, 0.01%)</title><rect x="1049.1" y="197" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1052.10" y="207.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (708,297 samples, 0.01%)</title><rect x="78.3" y="277" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="81.32" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (4,291,282 samples, 0.06%)</title><rect x="534.9" y="165" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="537.88" y="175.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (39,026,867 samples, 0.56%)</title><rect x="1069.1" y="229" width="6.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1072.15" y="239.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (9,701,052 samples, 0.14%)</title><rect x="101.7" y="197" width="1.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="104.74" y="207.5" ></text>
</g>
<g >
<title>boost::graph_detail::push&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (2,520,016 samples, 0.04%)</title><rect x="21.5" y="229" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="24.46" y="239.5" ></text>
</g>
<g >
<title>std::__pair_get&lt;0ul&gt;::__const_get&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (620,841 samples, 0.01%)</title><rect x="180.1" y="181" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="183.07" y="191.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (2,327,254 samples, 0.03%)</title><rect x="586.5" y="197" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="589.48" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (15,300,884 samples, 0.22%)</title><rect x="178.0" y="245" width="2.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="180.95" y="255.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (6,073,046 samples, 0.09%)</title><rect x="376.5" y="293" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="379.54" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (10,927,471 samples, 0.16%)</title><rect x="1088.9" y="261" width="1.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1091.86" y="271.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (67,368,192 samples, 0.97%)</title><rect x="574.1" y="197" width="11.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="577.10" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_allocate (7,535,758 samples, 0.11%)</title><rect x="1031.0" y="261" width="1.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1034.05" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (4,216,627 samples, 0.06%)</title><rect x="189.8" y="165" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="192.76" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; &gt; (1,787,611 samples, 0.03%)</title><rect x="1023.5" y="277" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1026.49" y="287.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1,591,945 samples, 0.02%)</title><rect x="1157.8" y="213" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1160.82" y="223.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (7,341,585 samples, 0.11%)</title><rect x="897.5" y="229" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="900.45" y="239.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (3,311,261 samples, 0.05%)</title><rect x="890.9" y="229" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="893.85" y="239.5" ></text>
</g>
<g >
<title>std::plus&lt;float&gt;::operator (40,237,846 samples, 0.58%)</title><rect x="854.3" y="197" width="6.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="857.35" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (687,588 samples, 0.01%)</title><rect x="1087.3" y="245" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1090.32" y="255.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (385,758,121 samples, 5.54%)</title><rect x="626.0" y="181" width="65.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="629.01" y="191.5" >boost::..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (2,292,990 samples, 0.03%)</title><rect x="100.0" y="181" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="102.95" y="191.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (1,223,467 samples, 0.02%)</title><rect x="466.9" y="165" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="469.87" y="175.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (1,223,618 samples, 0.02%)</title><rect x="543.2" y="133" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="546.16" y="143.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::out_edge_list (2,773,058 samples, 0.04%)</title><rect x="78.9" y="293" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="81.86" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;float, std::allocator&lt;float&gt; &gt;::push_back (5,583,758 samples, 0.08%)</title><rect x="1128.9" y="309" width="1.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1131.92" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (2,369,652 samples, 0.03%)</title><rect x="198.1" y="165" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="201.07" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_valptr (1,965,153 samples, 0.03%)</title><rect x="178.8" y="197" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="181.84" y="207.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (1,883,231 samples, 0.03%)</title><rect x="134.7" y="213" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="137.70" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (819,536 samples, 0.01%)</title><rect x="223.0" y="197" width="0.1" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="225.97" y="207.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms (1,715,768 samples, 0.02%)</title><rect x="180.9" y="213" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="183.91" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::max_size (5,114,530 samples, 0.07%)</title><rect x="1096.4" y="213" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1099.42" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (952,875 samples, 0.01%)</title><rect x="530.3" y="165" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="533.34" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::begin (3,576,212 samples, 0.05%)</title><rect x="1061.0" y="261" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1064.02" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, void&gt; (25,301,794 samples, 0.36%)</title><rect x="40.6" y="277" width="4.3" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="43.65" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (28,778,287 samples, 0.41%)</title><rect x="989.7" y="245" width="4.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="992.66" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (8,476,641 samples, 0.12%)</title><rect x="1160.2" y="197" width="1.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1163.23" y="207.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (2,966,763 samples, 0.04%)</title><rect x="373.4" y="277" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="376.44" y="287.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_not_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (3,983,520 samples, 0.06%)</title><rect x="101.0" y="197" width="0.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="103.96" y="207.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::clear (14,168,470 samples, 0.20%)</title><rect x="152.9" y="309" width="2.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="155.92" y="319.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_Head_base (1,128,307 samples, 0.02%)</title><rect x="192.6" y="245" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="195.56" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::vector (1,517,419 samples, 0.02%)</title><rect x="1142.1" y="309" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1145.07" y="319.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_not_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (5,751,483 samples, 0.08%)</title><rect x="883.0" y="229" width="1.0" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="886.02" y="239.5" ></text>
</g>
<g >
<title>std::addressof&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; (740,468 samples, 0.01%)</title><rect x="1158.2" y="213" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.19" y="223.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_initialize_map (2,501,066 samples, 0.04%)</title><rect x="1017.2" y="245" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1020.19" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (20,517,367 samples, 0.29%)</title><rect x="953.6" y="149" width="3.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="956.61" y="159.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (2,875,068 samples, 0.04%)</title><rect x="901.3" y="293" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="904.31" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (4,307,294 samples, 0.06%)</title><rect x="739.9" y="181" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="742.91" y="191.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (647,007 samples, 0.01%)</title><rect x="760.3" y="197" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="763.32" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::push_back (53,669,498 samples, 0.77%)</title><rect x="133.5" y="277" width="9.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="136.48" y="287.5" ></text>
</g>
<g >
<title>alloc_pages_vma (7,280,625 samples, 0.10%)</title><rect x="1176.7" y="245" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1179.68" y="255.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,739,097 samples, 0.04%)</title><rect x="1090.2" y="229" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1093.23" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (1,253,970 samples, 0.02%)</title><rect x="144.8" y="245" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="147.82" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (2,052,898 samples, 0.03%)</title><rect x="549.0" y="197" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="551.99" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,575,311 samples, 0.02%)</title><rect x="21.6" y="165" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="24.62" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (1,243,058 samples, 0.02%)</title><rect x="1155.0" y="325" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1157.98" y="335.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::vertex_set (2,017,335 samples, 0.03%)</title><rect x="996.5" y="277" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="999.49" y="287.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (2,375,570 samples, 0.03%)</title><rect x="1047.4" y="149" width="0.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1050.36" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (808,161 samples, 0.01%)</title><rect x="1108.1" y="261" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1111.09" y="271.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, false&gt;::operator mpl_::bool_&lt;false&gt; const&amp; (972,632 samples, 0.01%)</title><rect x="562.7" y="197" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="565.70" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (823,360 samples, 0.01%)</title><rect x="104.9" y="197" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="107.92" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (13,096,535 samples, 0.19%)</title><rect x="136.2" y="245" width="2.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="139.24" y="255.5" ></text>
</g>
<g >
<title>boost::num_vertices&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (3,516,847 samples, 0.05%)</title><rect x="996.2" y="293" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="999.23" y="303.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (10,781,317 samples, 0.15%)</title><rect x="579.7" y="181" width="1.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="582.69" y="191.5" ></text>
</g>
<g >
<title>operator new (788,366 samples, 0.01%)</title><rect x="1016.6" y="245" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1019.61" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (4,520,969 samples, 0.06%)</title><rect x="174.8" y="261" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="177.84" y="271.5" ></text>
</g>
<g >
<title>do_page_fault (16,432,816 samples, 0.24%)</title><rect x="1175.9" y="341" width="2.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1178.89" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (2,179,244 samples, 0.03%)</title><rect x="1090.7" y="261" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1093.71" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (100,226,403 samples, 1.44%)</title><rect x="1106.1" y="293" width="17.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1109.13" y="303.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (3,445,124 samples, 0.05%)</title><rect x="544.9" y="181" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="547.91" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (9,850,543 samples, 0.14%)</title><rect x="692.6" y="181" width="1.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="695.56" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (4,622,635 samples, 0.07%)</title><rect x="154.3" y="245" width="0.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="157.27" y="255.5" ></text>
</g>
<g >
<title>_int_free (628,371 samples, 0.01%)</title><rect x="151.6" y="213" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="154.64" y="223.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (54,522,236 samples, 0.78%)</title><rect x="795.9" y="181" width="9.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="798.91" y="191.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (5,387,247 samples, 0.08%)</title><rect x="1073.6" y="149" width="0.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1076.60" y="159.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1,284,700 samples, 0.02%)</title><rect x="1079.1" y="229" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1082.09" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1,934,992 samples, 0.03%)</title><rect x="1052.4" y="229" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1055.40" y="239.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (1,440,717 samples, 0.02%)</title><rect x="765.8" y="213" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="768.75" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (3,954,582 samples, 0.06%)</title><rect x="182.2" y="213" width="0.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="185.21" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (36,695,104 samples, 0.53%)</title><rect x="1069.5" y="213" width="6.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1072.54" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (13,551,959 samples, 0.19%)</title><rect x="178.0" y="229" width="2.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="181.02" y="239.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::operator== (1,421,120 samples, 0.02%)</title><rect x="342.8" y="197" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="345.85" y="207.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (4,856,553 samples, 0.07%)</title><rect x="544.1" y="165" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="547.09" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (735,201 samples, 0.01%)</title><rect x="138.2" y="197" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="141.16" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (716,185 samples, 0.01%)</title><rect x="152.0" y="309" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="154.98" y="319.5" ></text>
</g>
<g >
<title>boost::graph_detail::container_category&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; (4,772,076 samples, 0.07%)</title><rect x="341.5" y="277" width="0.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="344.45" y="287.5" ></text>
</g>
<g >
<title>do_anonymous_page (913,139 samples, 0.01%)</title><rect x="181.0" y="101" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="184.00" y="111.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (16,912,985 samples, 0.24%)</title><rect x="1116.4" y="213" width="2.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1119.37" y="223.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (2,504,070 samples, 0.04%)</title><rect x="1144.7" y="245" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1147.73" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (723,406 samples, 0.01%)</title><rect x="134.4" y="165" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="137.44" y="175.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::top (1,878,324 samples, 0.03%)</title><rect x="100.4" y="197" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="103.39" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::max_size (664,656 samples, 0.01%)</title><rect x="1112.3" y="197" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1115.35" y="207.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (1,979,251 samples, 0.03%)</title><rect x="131.7" y="277" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="134.73" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (611,165 samples, 0.01%)</title><rect x="211.8" y="181" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="214.76" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate (5,962,448 samples, 0.09%)</title><rect x="146.5" y="245" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="149.51" y="255.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::initialize_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (8,721,390 samples, 0.13%)</title><rect x="382.8" y="229" width="1.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="385.84" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back (945,239 samples, 0.01%)</title><rect x="98.8" y="181" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="101.80" y="191.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (1,729,859 samples, 0.02%)</title><rect x="1046.7" y="133" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1049.73" y="143.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (2,162,693 samples, 0.03%)</title><rect x="42.6" y="197" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="45.63" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::end (914,180 samples, 0.01%)</title><rect x="192.8" y="309" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="195.84" y="319.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; (2,571,732 samples, 0.04%)</title><rect x="1164.0" y="245" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1167.00" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator= (1,482,480 samples, 0.02%)</title><rect x="1143.6" y="309" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1146.56" y="319.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (719,331 samples, 0.01%)</title><rect x="194.7" y="261" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="197.68" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (2,781,501 samples, 0.04%)</title><rect x="209.9" y="261" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="212.86" y="271.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1,084,351 samples, 0.02%)</title><rect x="412.2" y="213" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="415.19" y="223.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (709,072 samples, 0.01%)</title><rect x="1045.8" y="117" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1048.84" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (1,833,223 samples, 0.03%)</title><rect x="153.3" y="277" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="156.30" y="287.5" ></text>
</g>
<g >
<title>boost::range_detail::integer_iterator&lt;unsigned long&gt;::increment (2,598,467 samples, 0.04%)</title><rect x="890.0" y="197" width="0.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="893.00" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (1,228,987 samples, 0.02%)</title><rect x="1163.6" y="325" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1166.64" y="335.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch2&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (3,068,007,612 samples, 44.04%)</title><rect x="379.9" y="261" width="519.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="382.86" y="271.5" >boost::detail::dijkstra_no_color_map_dispatch2&lt;boost::adjacency_list&lt;bo..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (936,530 samples, 0.01%)</title><rect x="22.2" y="309" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="25.15" y="319.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (6,659,666 samples, 0.10%)</title><rect x="616.1" y="197" width="1.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="619.13" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (1,260,403 samples, 0.02%)</title><rect x="1155.3" y="325" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1158.28" y="335.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (1,886,257 samples, 0.03%)</title><rect x="122.1" y="133" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="125.07" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_valptr (1,952,236 samples, 0.03%)</title><rect x="169.9" y="261" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="172.93" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (1,643,709 samples, 0.02%)</title><rect x="212.3" y="293" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="215.35" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (4,015,820 samples, 0.06%)</title><rect x="1010.8" y="277" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1013.77" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (4,881,027 samples, 0.07%)</title><rect x="499.6" y="165" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="502.55" y="175.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt;*&gt;::pointer_to (1,231,191 samples, 0.02%)</title><rect x="1158.1" y="229" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1161.11" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pair&lt;unsigned long const&amp;&gt; (15,629,537 samples, 0.22%)</title><rect x="188.0" y="229" width="2.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="191.00" y="239.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (688,657 samples, 0.01%)</title><rect x="340.0" y="293" width="0.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="343.05" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::select_on_container_copy_construction (665,525 samples, 0.01%)</title><rect x="1048.3" y="213" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1051.31" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (3,054,763 samples, 0.04%)</title><rect x="1145.3" y="309" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1148.31" y="319.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (1,459,588 samples, 0.02%)</title><rect x="1101.9" y="213" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1104.89" y="223.5" ></text>
</g>
<g >
<title>tick_sched_timer (1,375,211 samples, 0.02%)</title><rect x="338.7" y="245" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="341.66" y="255.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt; (17,690,122 samples, 0.25%)</title><rect x="1100.8" y="229" width="3.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1103.79" y="239.5" ></text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (4,573,154 samples, 0.07%)</title><rect x="554.8" y="197" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="557.81" y="207.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (49,740,666 samples, 0.71%)</title><rect x="756.9" y="213" width="8.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="759.91" y="223.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (2,059,997 samples, 0.03%)</title><rect x="469.0" y="149" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="471.97" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_ptr (1,132,871 samples, 0.02%)</title><rect x="165.8" y="245" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="168.75" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::size (1,364,987 samples, 0.02%)</title><rect x="139.0" y="229" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="142.00" y="239.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (617,751 samples, 0.01%)</title><rect x="39.1" y="245" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="42.10" y="255.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (764,450 samples, 0.01%)</title><rect x="13.2" y="325" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="16.21" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (1,198,464 samples, 0.02%)</title><rect x="442.4" y="165" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="445.37" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (1,032,378 samples, 0.01%)</title><rect x="33.9" y="277" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="36.86" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (12,426,280 samples, 0.18%)</title><rect x="159.9" y="229" width="2.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="162.91" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (1,193,228 samples, 0.02%)</title><rect x="1137.8" y="261" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1140.82" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (3,567,388 samples, 0.05%)</title><rect x="137.5" y="197" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="140.50" y="207.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~queue (1,804,295 samples, 0.03%)</title><rect x="1017.6" y="293" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1020.61" y="303.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::dummy_property_map, boost::detail::dummy_pmap_reference, unsigned long, unsigned long&gt; (4,156,116 samples, 0.06%)</title><rect x="893.1" y="229" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="896.12" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (3,142,049 samples, 0.05%)</title><rect x="969.7" y="261" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="972.72" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (615,650 samples, 0.01%)</title><rect x="76.7" y="245" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="79.72" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~vector (80,745,548 samples, 1.16%)</title><rect x="1066.6" y="293" width="13.7" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1069.59" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (3,627,579 samples, 0.05%)</title><rect x="1002.9" y="261" width="0.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1005.85" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (12,009,326 samples, 0.17%)</title><rect x="153.3" y="293" width="2.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="156.27" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (1,719,523 samples, 0.02%)</title><rect x="549.0" y="165" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="552.05" y="175.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (5,540,549 samples, 0.08%)</title><rect x="211.0" y="213" width="0.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="213.98" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (666,174 samples, 0.01%)</title><rect x="340.3" y="261" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="343.28" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (4,244,835 samples, 0.06%)</title><rect x="512.5" y="197" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="515.54" y="207.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (618,653 samples, 0.01%)</title><rect x="211.9" y="213" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="214.91" y="223.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (625,241 samples, 0.01%)</title><rect x="101.6" y="197" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="104.63" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (1,048,598 samples, 0.02%)</title><rect x="94.6" y="149" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="97.61" y="159.5" ></text>
</g>
<g >
<title>__GI_____strtof_l_internal (835,499 samples, 0.01%)</title><rect x="12.6" y="357" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="15.57" y="367.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (5,077,797 samples, 0.07%)</title><rect x="997.9" y="277" width="0.9" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1000.89" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data (2,054,742 samples, 0.03%)</title><rect x="221.6" y="261" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="224.60" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (707,412 samples, 0.01%)</title><rect x="1047.2" y="149" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1050.24" y="159.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (998,164 samples, 0.01%)</title><rect x="1010.1" y="293" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1013.13" y="303.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (976,335 samples, 0.01%)</title><rect x="507.0" y="149" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="510.02" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (712,930 samples, 0.01%)</title><rect x="178.6" y="213" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="181.56" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (13,368,709 samples, 0.19%)</title><rect x="204.8" y="261" width="2.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="207.84" y="271.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (1,017,196 samples, 0.01%)</title><rect x="548.2" y="149" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="551.24" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (1,363,881 samples, 0.02%)</title><rect x="508.2" y="181" width="0.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="511.22" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (667,849 samples, 0.01%)</title><rect x="1144.1" y="293" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1147.13" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (1,631,433 samples, 0.02%)</title><rect x="164.1" y="277" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="167.08" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size (17,710,708 samples, 0.25%)</title><rect x="1094.6" y="245" width="3.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1097.60" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (1,391,916 samples, 0.02%)</title><rect x="1114.5" y="277" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1117.46" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (11,127,171 samples, 0.16%)</title><rect x="181.3" y="229" width="1.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="184.26" y="239.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (6,990,426 samples, 0.10%)</title><rect x="130.5" y="277" width="1.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="133.55" y="287.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (24,454,636 samples, 0.35%)</title><rect x="1115.8" y="229" width="4.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1118.85" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (16,445,242 samples, 0.24%)</title><rect x="530.0" y="181" width="2.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="533.04" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (604,567 samples, 0.01%)</title><rect x="34.6" y="277" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="37.56" y="287.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (83,824,401 samples, 1.20%)</title><rect x="62.0" y="261" width="14.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="65.04" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (3,300,989 samples, 0.05%)</title><rect x="175.7" y="277" width="0.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="178.71" y="287.5" ></text>
</g>
<g >
<title>operator new (790,073 samples, 0.01%)</title><rect x="1032.2" y="229" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1035.19" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::__normal_iterator (749,869 samples, 0.01%)</title><rect x="1021.4" y="261" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1024.35" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (74,705,325 samples, 1.07%)</title><rect x="944.4" y="197" width="12.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="947.43" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt;::construct&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (2,849,979 samples, 0.04%)</title><rect x="1141.2" y="245" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1144.16" y="255.5" ></text>
</g>
<g >
<title>boost::tuples::tie&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (19,846,649 samples, 0.28%)</title><rect x="1004.6" y="293" width="3.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1007.61" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::max_size (773,488 samples, 0.01%)</title><rect x="1054.2" y="197" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1057.16" y="207.5" ></text>
</g>
<g >
<title>operator new (876,534 samples, 0.01%)</title><rect x="1088.7" y="229" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1091.71" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt;::_M_next (1,109,749 samples, 0.02%)</title><rect x="1158.8" y="261" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.75" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_ptr (814,245 samples, 0.01%)</title><rect x="191.9" y="245" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="194.88" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (2,174,023 samples, 0.03%)</title><rect x="982.8" y="277" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="985.79" y="287.5" ></text>
</g>
<g >
<title>operator new (812,031 samples, 0.01%)</title><rect x="1033.8" y="229" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1036.78" y="239.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (5,717,399 samples, 0.08%)</title><rect x="585.5" y="197" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="588.51" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (6,475,639 samples, 0.09%)</title><rect x="225.9" y="277" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="228.91" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;unsigned long const&gt; &gt; (1,848,304 samples, 0.03%)</title><rect x="1132.4" y="277" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1135.38" y="287.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (7,749,924 samples, 0.11%)</title><rect x="543.6" y="181" width="1.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="546.60" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (6,564,424 samples, 0.09%)</title><rect x="156.3" y="277" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="159.31" y="287.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (931,833 samples, 0.01%)</title><rect x="99.4" y="165" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="102.44" y="175.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_finish_vertex&gt; (770,479 samples, 0.01%)</title><rect x="605.4" y="213" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="608.42" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (854,270 samples, 0.01%)</title><rect x="412.2" y="181" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="415.21" y="191.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (978,969 samples, 0.01%)</title><rect x="412.2" y="197" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="415.21" y="207.5" ></text>
</g>
<g >
<title>std::__advance&lt;std::_List_iterator&lt;float&gt;, long&gt; (13,731,839 samples, 0.20%)</title><rect x="1133.0" y="277" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1136.04" y="287.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (3,717,929 samples, 0.05%)</title><rect x="542.7" y="149" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="545.74" y="159.5" ></text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (3,143,114 samples, 0.05%)</title><rect x="430.3" y="181" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="433.29" y="191.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (2,192,337 samples, 0.03%)</title><rect x="129.1" y="165" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="132.13" y="175.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (7,046,788 samples, 0.10%)</title><rect x="720.2" y="213" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="723.15" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pair&lt;unsigned long const&amp;, 0ul&gt; (12,954,888 samples, 0.19%)</title><rect x="188.4" y="213" width="2.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="191.42" y="223.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (1,580,703 samples, 0.02%)</title><rect x="1023.5" y="245" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1026.51" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (6,020,914 samples, 0.09%)</title><rect x="344.0" y="309" width="1.0" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="347.02" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,263,734 samples, 0.02%)</title><rect x="530.8" y="149" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="533.82" y="159.5" ></text>
</g>
<g >
<title>get_page_from_freelist (609,783 samples, 0.01%)</title><rect x="181.0" y="53" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="184.01" y="63.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (6,186,715 samples, 0.09%)</title><rect x="41.9" y="229" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="44.95" y="239.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (1,844,665 samples, 0.03%)</title><rect x="168.7" y="197" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="171.69" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back (685,179 samples, 0.01%)</title><rect x="1142.6" y="309" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1145.65" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (30,961,177 samples, 0.44%)</title><rect x="681.8" y="69" width="5.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="684.76" y="79.5" ></text>
</g>
<g >
<title>boost::detail::get_dispatch&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt;, boost::edge_weight_t&gt; (2,249,944 samples, 0.03%)</title><rect x="84.4" y="277" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="87.40" y="287.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;unsigned long*&gt; (688,343 samples, 0.01%)</title><rect x="1047.1" y="133" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1050.13" y="143.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (24,985,174 samples, 0.36%)</title><rect x="1043.8" y="181" width="4.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1046.84" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (3,967,932 samples, 0.06%)</title><rect x="1122.4" y="277" width="0.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1125.43" y="287.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms (1,134,868 samples, 0.02%)</title><rect x="153.1" y="293" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="156.07" y="303.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (780,564 samples, 0.01%)</title><rect x="846.4" y="165" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="849.43" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::select_on_container_copy_construction (3,699,154 samples, 0.05%)</title><rect x="1108.2" y="261" width="0.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1111.23" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::new_allocator (1,020,247 samples, 0.01%)</title><rect x="1113.2" y="245" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1116.19" y="255.5" ></text>
</g>
<g >
<title>NexullanceIT::step_2 (5,422,046,096 samples, 77.83%)</title><rect x="227.5" y="325" width="918.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="230.49" y="335.5" >NexullanceIT::step_2</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (3,662,428 samples, 0.05%)</title><rect x="112.9" y="149" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="115.91" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (1,248,164 samples, 0.02%)</title><rect x="134.4" y="197" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="137.35" y="207.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (926,646 samples, 0.01%)</title><rect x="218.2" y="229" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="221.24" y="239.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_relaxed&gt; (9,832,799 samples, 0.14%)</title><rect x="562.9" y="197" width="1.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="565.86" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (826,016 samples, 0.01%)</title><rect x="193.0" y="309" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="196.04" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back (901,213 samples, 0.01%)</title><rect x="882.5" y="213" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="885.54" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,209,267 samples, 0.05%)</title><rect x="1179.3" y="373" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1182.26" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (8,549,639 samples, 0.12%)</title><rect x="1040.1" y="181" width="1.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1043.06" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (7,523,224 samples, 0.11%)</title><rect x="1113.0" y="261" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1116.00" y="271.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (629,149 samples, 0.01%)</title><rect x="98.5" y="149" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="101.47" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (1,477,844 samples, 0.02%)</title><rect x="1126.5" y="229" width="0.3" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1129.54" y="239.5" ></text>
</g>
<g >
<title>[main.exe] (792,797 samples, 0.01%)</title><rect x="1040.7" y="149" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1043.69" y="159.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (1,026,345 samples, 0.01%)</title><rect x="70.4" y="197" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="73.41" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (771,299 samples, 0.01%)</title><rect x="1144.5" y="277" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1147.49" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (2,666,297 samples, 0.04%)</title><rect x="950.7" y="165" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="953.70" y="175.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (716,854 samples, 0.01%)</title><rect x="223.4" y="229" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="226.38" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt;::operator (1,646,398 samples, 0.02%)</title><rect x="64.2" y="229" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="67.19" y="239.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (41,400,588 samples, 0.59%)</title><rect x="647.1" y="165" width="7.0" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="650.14" y="175.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::d_ary_heap_indirect (1,241,469 samples, 0.02%)</title><rect x="434.0" y="213" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="436.96" y="223.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (2,470,918 samples, 0.04%)</title><rect x="50.6" y="197" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="53.64" y="207.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (723,127 samples, 0.01%)</title><rect x="523.1" y="149" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="526.10" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (2,617,514 samples, 0.04%)</title><rect x="94.3" y="165" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="97.34" y="175.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (19,397,095 samples, 0.28%)</title><rect x="687.5" y="165" width="3.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="690.53" y="175.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;&gt; (3,492,600 samples, 0.05%)</title><rect x="50.5" y="213" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="53.47" y="223.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_single_source (381,795,089 samples, 5.48%)</title><rect x="87.2" y="293" width="64.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="90.20" y="303.5" >compute..</text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::~allocator (1,928,647 samples, 0.03%)</title><rect x="1074.9" y="165" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1077.93" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (4,316,307 samples, 0.06%)</title><rect x="1062.4" y="261" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1065.38" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (1,269,171 samples, 0.02%)</title><rect x="1091.1" y="261" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1094.08" y="271.5" ></text>
</g>
<g >
<title>boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::adjacency_list (4,512,173 samples, 0.06%)</title><rect x="21.4" y="325" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="24.37" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (764,614 samples, 0.01%)</title><rect x="1136.2" y="261" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1139.24" y="271.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pop (29,174,088 samples, 0.42%)</title><rect x="94.1" y="197" width="5.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="97.14" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (3,156,070 samples, 0.05%)</title><rect x="659.9" y="149" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="662.92" y="159.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (446,875,189 samples, 6.41%)</title><rect x="618.5" y="197" width="75.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="621.53" y="207.5" >boost::i..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (3,842,521 samples, 0.06%)</title><rect x="710.2" y="181" width="0.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="713.21" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_valptr (1,645,136 samples, 0.02%)</title><rect x="160.6" y="197" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="163.64" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_node_allocator (619,906 samples, 0.01%)</title><rect x="186.4" y="261" width="0.1" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="189.43" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (1,252,724 samples, 0.02%)</title><rect x="150.7" y="261" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="153.67" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (1,345,162 samples, 0.02%)</title><rect x="210.0" y="245" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="212.97" y="255.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::verify_heap (953,068 samples, 0.01%)</title><rect x="548.8" y="213" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="551.81" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size (856,001 samples, 0.01%)</title><rect x="1094.5" y="245" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1097.46" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (54,862,441 samples, 0.79%)</title><rect x="710.9" y="181" width="9.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="713.86" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (685,413 samples, 0.01%)</title><rect x="1034.0" y="229" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1037.05" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (1,580,703 samples, 0.02%)</title><rect x="1023.5" y="229" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1026.51" y="239.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt;, boost::edge_weight_t, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, double&gt; (1,309,468 samples, 0.02%)</title><rect x="346.7" y="309" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="349.67" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (6,474,180 samples, 0.09%)</title><rect x="1097.6" y="245" width="1.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1100.60" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (5,848,995 samples, 0.08%)</title><rect x="1144.3" y="309" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1147.32" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (828,011 samples, 0.01%)</title><rect x="98.7" y="181" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="101.66" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (6,439,981 samples, 0.09%)</title><rect x="1021.5" y="277" width="1.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1024.48" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (1,259,924 samples, 0.02%)</title><rect x="144.1" y="245" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="147.13" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (7,633,493 samples, 0.11%)</title><rect x="1137.1" y="293" width="1.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1140.08" y="303.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (15,453,278 samples, 0.22%)</title><rect x="518.5" y="181" width="2.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="521.54" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (1,336,540 samples, 0.02%)</title><rect x="223.9" y="293" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="226.89" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::deallocate (615,200 samples, 0.01%)</title><rect x="1163.5" y="277" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1166.51" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (3,451,836 samples, 0.05%)</title><rect x="141.5" y="149" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="144.51" y="159.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (3,648,548 samples, 0.05%)</title><rect x="491.7" y="149" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="494.70" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (2,260,298 samples, 0.03%)</title><rect x="184.4" y="277" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="187.36" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (6,256,759 samples, 0.09%)</title><rect x="1139.4" y="261" width="1.0" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1142.38" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (4,183,033 samples, 0.06%)</title><rect x="141.4" y="165" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="144.44" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (1,469,085 samples, 0.02%)</title><rect x="137.0" y="181" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="140.04" y="191.5" ></text>
</g>
<g >
<title>[unknown] (4,302,080 samples, 0.06%)</title><rect x="19.3" y="341" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="22.28" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1,793,710 samples, 0.03%)</title><rect x="1032.5" y="261" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1035.47" y="271.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2,350,285 samples, 0.03%)</title><rect x="338.6" y="309" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="341.62" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (1,799,840 samples, 0.03%)</title><rect x="1030.0" y="261" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1032.95" y="271.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::queue&lt;std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, void&gt; (3,454,346 samples, 0.05%)</title><rect x="1017.0" y="293" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1020.03" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (732,093 samples, 0.01%)</title><rect x="99.0" y="181" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="101.96" y="191.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (93,393,246 samples, 1.34%)</title><rect x="476.5" y="181" width="15.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="479.49" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (30,277,052 samples, 0.43%)</title><rect x="1109.3" y="277" width="5.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1112.34" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (1,230,629 samples, 0.02%)</title><rect x="1020.4" y="261" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1023.41" y="271.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::~stored_edge_property (931,151 samples, 0.01%)</title><rect x="30.1" y="309" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="33.09" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (6,057,575 samples, 0.09%)</title><rect x="545.5" y="181" width="1.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="548.49" y="191.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (7,996,224 samples, 0.11%)</title><rect x="222.2" y="245" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="225.24" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (5,861,722 samples, 0.08%)</title><rect x="189.6" y="197" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="192.62" y="207.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (5,109,078 samples, 0.07%)</title><rect x="625.1" y="181" width="0.9" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="628.15" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (1,751,684 samples, 0.03%)</title><rect x="218.6" y="309" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="221.57" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_valptr (1,430,137 samples, 0.02%)</title><rect x="191.8" y="261" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="194.78" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (17,897,567 samples, 0.26%)</title><rect x="473.4" y="165" width="3.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="476.37" y="175.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,116,927 samples, 0.02%)</title><rect x="37.5" y="229" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="40.53" y="239.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,206,698 samples, 0.03%)</title><rect x="1162.9" y="181" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1165.91" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::__normal_iterator (965,036 samples, 0.01%)</title><rect x="1023.2" y="277" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1026.20" y="287.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (24,062,068 samples, 0.35%)</title><rect x="441.5" y="197" width="4.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="444.48" y="207.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt;, boost::edge_weight_t&gt; (627,117 samples, 0.01%)</title><rect x="346.7" y="293" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="349.69" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (5,138,170 samples, 0.07%)</title><rect x="203.0" y="213" width="0.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="206.00" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (28,911,410 samples, 0.42%)</title><rect x="1043.2" y="213" width="4.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1046.23" y="223.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (779,238 samples, 0.01%)</title><rect x="899.3" y="245" width="0.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="902.27" y="255.5" ></text>
</g>
<g >
<title>bash (5,892,206 samples, 0.08%)</title><rect x="10.0" y="389" width="1.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, unsigned long*, unsigned long*&gt; (1,612,083 samples, 0.02%)</title><rect x="1143.2" y="245" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1146.15" y="255.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;void, true&gt; (924,837 samples, 0.01%)</title><rect x="170.8" y="277" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="173.85" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (19,403,780 samples, 0.28%)</title><rect x="199.1" y="213" width="3.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="202.07" y="223.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (627,186 samples, 0.01%)</title><rect x="103.2" y="181" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="106.24" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;unsigned long const, float&gt;, false&gt;::_Node_iterator_base (817,994 samples, 0.01%)</title><rect x="163.6" y="245" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="166.56" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (1,207,692 samples, 0.02%)</title><rect x="499.3" y="165" width="0.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="502.35" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (6,876,140 samples, 0.10%)</title><rect x="1160.5" y="181" width="1.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1163.50" y="191.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::update (1,057,464 samples, 0.02%)</title><rect x="384.5" y="229" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="387.47" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::front (8,318,137 samples, 0.12%)</title><rect x="1011.7" y="277" width="1.4" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1014.68" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (3,020,947 samples, 0.04%)</title><rect x="129.0" y="181" width="0.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="131.99" y="191.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (35,050,877 samples, 0.50%)</title><rect x="951.1" y="165" width="6.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="954.15" y="175.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_Tuple_impl (1,129,446 samples, 0.02%)</title><rect x="44.5" y="229" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="47.50" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (916,304 samples, 0.01%)</title><rect x="1043.5" y="197" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1046.46" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1,373,134 samples, 0.02%)</title><rect x="1002.2" y="261" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1005.17" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned long const, float&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (16,131,391 samples, 0.23%)</title><rect x="166.7" y="261" width="2.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="169.67" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (1,019,968 samples, 0.01%)</title><rect x="1140.5" y="245" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1143.54" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (2,276,937 samples, 0.03%)</title><rect x="1136.5" y="261" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1139.53" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;unsigned long const*, unsigned long*, unsigned long&gt; (913,822 samples, 0.01%)</title><rect x="1120.8" y="261" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1123.76" y="271.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_discover_vertex&gt; (1,033,555 samples, 0.01%)</title><rect x="605.2" y="213" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="608.15" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::emplace_back&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,647,252 samples, 0.02%)</title><rect x="1164.1" y="181" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1167.13" y="191.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (818,920 samples, 0.01%)</title><rect x="45.2" y="277" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="48.21" y="287.5" ></text>
</g>
<g >
<title>std::forward&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (729,632 samples, 0.01%)</title><rect x="141.3" y="149" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="144.28" y="159.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,016,036 samples, 0.01%)</title><rect x="181.0" y="117" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="184.00" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config::stored_vertex, std::allocator&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config::stored_vertex&gt; &gt;::operator[] (1,646,755 samples, 0.02%)</title><rect x="79.1" y="277" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="82.05" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (2,272,181 samples, 0.03%)</title><rect x="224.9" y="293" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="227.86" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (10,982,755 samples, 0.16%)</title><rect x="210.4" y="277" width="1.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="213.37" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__stoa&lt;float, float, char&gt; (620,777 samples, 0.01%)</title><rect x="1165.0" y="309" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1167.96" y="319.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (616,427 samples, 0.01%)</title><rect x="38.5" y="197" width="0.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="41.50" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (19,031,563 samples, 0.27%)</title><rect x="1158.6" y="309" width="3.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1161.63" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (629,810 samples, 0.01%)</title><rect x="1142.8" y="309" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1145.78" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (4,197,151 samples, 0.06%)</title><rect x="220.7" y="261" width="0.7" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="223.71" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false, false&gt;::operator (2,038,973 samples, 0.03%)</title><rect x="191.7" y="277" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="194.67" y="287.5" ></text>
</g>
<g >
<title>page_fault (1,316,920 samples, 0.02%)</title><rect x="180.9" y="197" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="183.95" y="207.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (4,121,761 samples, 0.06%)</title><rect x="42.3" y="213" width="0.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="45.30" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt; (769,421 samples, 0.01%)</title><rect x="507.3" y="197" width="0.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="510.31" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (6,537,096 samples, 0.09%)</title><rect x="624.0" y="181" width="1.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="627.00" y="191.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (1,982,941 samples, 0.03%)</title><rect x="89.4" y="277" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="92.36" y="287.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_edge&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (8,030,517 samples, 0.12%)</title><rect x="92.4" y="197" width="1.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="95.41" y="207.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (27,489,763 samples, 0.39%)</title><rect x="106.3" y="165" width="4.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="109.25" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (1,097,289 samples, 0.02%)</title><rect x="1136.2" y="277" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1139.20" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (3,078,930 samples, 0.04%)</title><rect x="690.8" y="165" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="693.83" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (1,126,156 samples, 0.02%)</title><rect x="1081.8" y="277" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1084.82" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (753,965 samples, 0.01%)</title><rect x="1137.5" y="245" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1140.52" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::operator++ (919,224 samples, 0.01%)</title><rect x="28.3" y="309" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="31.34" y="319.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (153,063,844 samples, 2.20%)</title><rect x="694.2" y="213" width="26.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="697.23" y="223.5" >b..</text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::update (64,966,816 samples, 0.93%)</title><rect x="537.8" y="213" width="11.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="540.81" y="223.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_edge&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (6,623,642 samples, 0.10%)</title><rect x="381.5" y="229" width="1.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="384.53" y="239.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (11,902,488 samples, 0.17%)</title><rect x="377.6" y="293" width="2.0" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="380.57" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (33,483,911 samples, 0.48%)</title><rect x="1123.1" y="293" width="5.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1126.10" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (3,161,879 samples, 0.05%)</title><rect x="677.9" y="85" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="680.85" y="95.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::front (9,446,308 samples, 0.14%)</title><rect x="1011.5" y="293" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1014.49" y="303.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator* (725,796 samples, 0.01%)</title><rect x="1164.6" y="277" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1167.55" y="287.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (4,082,718 samples, 0.06%)</title><rect x="884.7" y="229" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="887.74" y="239.5" ></text>
</g>
<g >
<title>NexullanceIT::NexullanceIT (6,869,266 samples, 0.10%)</title><rect x="21.4" y="341" width="1.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="24.35" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (18,536,769 samples, 0.27%)</title><rect x="1158.7" y="277" width="3.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1161.71" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (6,419,573 samples, 0.09%)</title><rect x="444.4" y="165" width="1.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="447.45" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::~_Vector_impl (985,183 samples, 0.01%)</title><rect x="1161.4" y="165" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1164.42" y="175.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (5,226,213 samples, 0.08%)</title><rect x="149.5" y="245" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="152.54" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (109,195,695 samples, 1.57%)</title><rect x="668.5" y="117" width="18.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="671.51" y="127.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (50,089,270 samples, 0.72%)</title><rect x="1067.7" y="261" width="8.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1070.68" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (624,513 samples, 0.01%)</title><rect x="150.6" y="261" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="153.56" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (8,983,992 samples, 0.13%)</title><rect x="109.1" y="117" width="1.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="112.12" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (3,316,870 samples, 0.05%)</title><rect x="1142.9" y="293" width="0.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1145.94" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (1,580,703 samples, 0.02%)</title><rect x="1023.5" y="261" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1026.51" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data (4,300,826 samples, 0.06%)</title><rect x="1113.4" y="245" width="0.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1116.36" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (735,449 samples, 0.01%)</title><rect x="150.0" y="165" width="0.1" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="153.01" y="175.5" ></text>
</g>
<g >
<title>boost::graph_detail::push&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,854,193 samples, 0.03%)</title><rect x="19.4" y="261" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="22.44" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (611,223 samples, 0.01%)</title><rect x="1161.7" y="261" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1164.75" y="271.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (4,753,222 samples, 0.07%)</title><rect x="896.4" y="229" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="899.44" y="239.5" ></text>
</g>
<g >
<title>release_pages (1,486,446 samples, 0.02%)</title><rect x="1179.3" y="213" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1182.32" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::max_size (919,370 samples, 0.01%)</title><rect x="1097.1" y="197" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1100.13" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (96,007,734 samples, 1.38%)</title><rect x="740.6" y="181" width="16.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="743.64" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (1,014,171 samples, 0.01%)</title><rect x="1122.3" y="261" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1125.26" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (630,128 samples, 0.01%)</title><rect x="148.9" y="197" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="151.92" y="207.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1,610,653 samples, 0.02%)</title><rect x="1179.3" y="229" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1182.30" y="239.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::operator[] (93,733,066 samples, 1.35%)</title><rect x="155.3" y="309" width="15.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="158.32" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (614,139 samples, 0.01%)</title><rect x="1162.4" y="229" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1165.39" y="239.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (5,025,315 samples, 0.07%)</title><rect x="112.7" y="165" width="0.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="115.68" y="175.5" ></text>
</g>
<g >
<title>__do_page_fault (16,227,517 samples, 0.23%)</title><rect x="1175.9" y="325" width="2.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1178.90" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (3,541,052 samples, 0.05%)</title><rect x="140.6" y="101" width="0.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="143.62" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (3,455,136 samples, 0.05%)</title><rect x="115.6" y="149" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="118.64" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (1,075,855 samples, 0.02%)</title><rect x="1114.1" y="245" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1117.09" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_allocate (1,741,978 samples, 0.03%)</title><rect x="193.9" y="261" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="196.93" y="271.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (3,344,672 samples, 0.05%)</title><rect x="97.0" y="149" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="99.98" y="159.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (628,817 samples, 0.01%)</title><rect x="121.0" y="165" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="123.95" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (3,470,984 samples, 0.05%)</title><rect x="1063.2" y="277" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1066.23" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (8,934,941 samples, 0.13%)</title><rect x="215.4" y="277" width="1.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="218.43" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;float&gt; &gt; &gt;::allocate (1,411,420 samples, 0.02%)</title><rect x="1129.2" y="245" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1132.21" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (812,624 samples, 0.01%)</title><rect x="1138.4" y="229" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1141.43" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (1,079,040 samples, 0.02%)</title><rect x="534.7" y="165" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="537.70" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (608,201 samples, 0.01%)</title><rect x="180.4" y="229" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="183.44" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::push_back (1,647,252 samples, 0.02%)</title><rect x="1164.1" y="197" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1167.13" y="207.5" ></text>
</g>
<g >
<title>exit_mmap (3,086,288 samples, 0.04%)</title><rect x="1179.3" y="277" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1182.28" y="287.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (2,576,090 samples, 0.04%)</title><rect x="526.2" y="165" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="529.22" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_do_relocate (1,244,202 samples, 0.02%)</title><rect x="1056.2" y="261" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1059.17" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::~allocator (616,946 samples, 0.01%)</title><rect x="206.8" y="181" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="209.83" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (703,508 samples, 0.01%)</title><rect x="997.8" y="277" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1000.77" y="287.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_not_relaxed&gt; (32,776,468 samples, 0.47%)</title><rect x="556.2" y="197" width="5.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="559.19" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::stof (724,807 samples, 0.01%)</title><rect x="1164.9" y="325" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1167.94" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (4,671,714 samples, 0.07%)</title><rect x="1022.6" y="293" width="0.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1025.57" y="303.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (131,913,531 samples, 1.89%)</title><rect x="818.4" y="181" width="22.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="821.35" y="191.5" >b..</text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (4,431,916 samples, 0.06%)</title><rect x="1030.3" y="261" width="0.7" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="1033.28" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (1,000,829 samples, 0.01%)</title><rect x="1138.6" y="245" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1141.57" y="255.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long*&gt; (630,268 samples, 0.01%)</title><rect x="147.2" y="197" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="150.21" y="207.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, false&gt;::operator mpl_::bool_&lt;false&gt; const&amp; (3,506,175 samples, 0.05%)</title><rect x="561.1" y="181" width="0.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="564.15" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (712,369 samples, 0.01%)</title><rect x="198.8" y="181" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="201.82" y="191.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt;*&gt;::pointer_to (714,550 samples, 0.01%)</title><rect x="154.9" y="229" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="157.94" y="239.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_deleter (5,865,957 samples, 0.08%)</title><rect x="50.1" y="245" width="1.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="53.07" y="255.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (8,395,627 samples, 0.12%)</title><rect x="803.7" y="165" width="1.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="806.73" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::size (819,519 samples, 0.01%)</title><rect x="193.2" y="309" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="196.18" y="319.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::operator[] (17,957,772 samples, 0.26%)</title><rect x="1138.8" y="309" width="3.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1141.76" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pair&lt;unsigned long const&amp;&gt; (1,616,220 samples, 0.02%)</title><rect x="1141.3" y="229" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1144.29" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (3,308,518 samples, 0.05%)</title><rect x="1162.7" y="213" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1165.75" y="223.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple (3,289,294 samples, 0.05%)</title><rect x="190.6" y="229" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="193.65" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (823,657 samples, 0.01%)</title><rect x="33.3" y="293" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.25" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_Tuple_impl (2,377,421 samples, 0.03%)</title><rect x="44.1" y="213" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="47.09" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_create_storage (2,862,696 samples, 0.04%)</title><rect x="193.8" y="277" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="196.76" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (1,947,671 samples, 0.03%)</title><rect x="437.2" y="165" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="440.19" y="175.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (1,032,392 samples, 0.01%)</title><rect x="189.4" y="149" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="192.44" y="159.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (13,103,633 samples, 0.19%)</title><rect x="1058.1" y="229" width="2.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1061.10" y="239.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::vec_adj_list_impl (4,512,173 samples, 0.06%)</title><rect x="21.4" y="309" width="0.7" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="24.37" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_base (664,321 samples, 0.01%)</title><rect x="1009.3" y="293" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1012.33" y="303.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (2,512,425 samples, 0.04%)</title><rect x="149.8" y="197" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="152.77" y="207.5" ></text>
</g>
<g >
<title>std::forward&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (1,306,086 samples, 0.02%)</title><rect x="1034.4" y="229" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1037.43" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, void&gt; (617,850 samples, 0.01%)</title><rect x="81.8" y="293" width="0.1" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="84.79" y="303.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, unsigned long const*, unsigned long*&gt; (703,060 samples, 0.01%)</title><rect x="1120.8" y="197" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1123.79" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (684,513 samples, 0.01%)</title><rect x="435.3" y="181" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="438.34" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (849,335 samples, 0.01%)</title><rect x="1032.3" y="261" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1035.32" y="271.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch1&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (3,075,504,473 samples, 44.15%)</title><rect x="379.7" y="277" width="520.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="382.68" y="287.5" >boost::detail::dijkstra_no_color_map_dispatch1&lt;boost::adjacency_list&lt;bo..</text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (9,064,411 samples, 0.13%)</title><rect x="965.6" y="277" width="1.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="968.58" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~allocator (912,530 samples, 0.01%)</title><rect x="1079.9" y="261" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1082.92" y="271.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (627,672 samples, 0.01%)</title><rect x="122.8" y="181" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="125.85" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (614,200 samples, 0.01%)</title><rect x="185.9" y="229" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="188.89" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (2,248,404 samples, 0.03%)</title><rect x="1138.4" y="277" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1141.38" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned long&gt;, unsigned long&gt;::_S_select_on_copy (945,445 samples, 0.01%)</title><rect x="134.1" y="213" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="137.10" y="223.5" ></text>
</g>
<g >
<title>clear_page_rep (4,540,827 samples, 0.07%)</title><rect x="1176.9" y="197" width="0.7" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1179.85" y="207.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (1,428,919 samples, 0.02%)</title><rect x="86.3" y="245" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="89.33" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (1,244,882 samples, 0.02%)</title><rect x="67.4" y="213" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="70.36" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (40,124,075 samples, 0.58%)</title><rect x="184.8" y="277" width="6.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="187.82" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (4,308,869 samples, 0.06%)</title><rect x="1123.9" y="277" width="0.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1126.87" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (18,306,676 samples, 0.26%)</title><rect x="147.9" y="277" width="3.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="150.87" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::~allocator (1,082,994 samples, 0.02%)</title><rect x="1048.1" y="213" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1051.13" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~pair (9,217,400 samples, 0.13%)</title><rect x="1160.1" y="213" width="1.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1163.10" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, float&gt;::pair&lt;unsigned long const&amp;&gt; (5,438,221 samples, 0.08%)</title><rect x="167.4" y="229" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="170.37" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (32,762,450 samples, 0.47%)</title><rect x="714.6" y="165" width="5.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="717.56" y="175.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; (3,077,662,163 samples, 44.18%)</title><rect x="379.6" y="293" width="521.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="382.59" y="303.5" >boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost..</text>
</g>
<g >
<title>std::forward&lt;unsigned long const&amp;&gt; (1,518,610 samples, 0.02%)</title><rect x="1016.3" y="229" width="0.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1019.35" y="239.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (18,053,903 samples, 0.26%)</title><rect x="36.1" y="293" width="3.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="39.14" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (4,043,685 samples, 0.06%)</title><rect x="1121.7" y="277" width="0.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1124.75" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (2,676,738 samples, 0.04%)</title><rect x="1105.7" y="277" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1108.67" y="287.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::stored_edge_property (3,208,362 samples, 0.05%)</title><rect x="340.4" y="293" width="0.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="343.39" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (8,714,863 samples, 0.13%)</title><rect x="222.1" y="261" width="1.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="225.12" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (626,821 samples, 0.01%)</title><rect x="115.0" y="165" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="117.97" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (6,075,712 samples, 0.09%)</title><rect x="148.4" y="261" width="1.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="151.42" y="271.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (196,519,817 samples, 2.82%)</title><rect x="807.4" y="197" width="33.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="810.41" y="207.5" >bo..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (716,462 samples, 0.01%)</title><rect x="61.9" y="261" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="64.86" y="271.5" ></text>
</g>
<g >
<title>std::equal&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (706,963 samples, 0.01%)</title><rect x="1132.8" y="277" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1135.76" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (895,413 samples, 0.01%)</title><rect x="1076.5" y="277" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1079.53" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (14,286,979 samples, 0.21%)</title><rect x="204.8" y="293" width="2.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="207.76" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (626,364 samples, 0.01%)</title><rect x="125.5" y="213" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="128.45" y="223.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (2,728,103 samples, 0.04%)</title><rect x="137.6" y="149" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="140.64" y="159.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator++ (843,162 samples, 0.01%)</title><rect x="29.4" y="309" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="32.41" y="319.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (622,268 samples, 0.01%)</title><rect x="1164.6" y="245" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1167.57" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (138,050,274 samples, 1.98%)</title><rect x="1082.1" y="277" width="23.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1085.13" y="287.5" >s..</text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, void&gt; (2,626,149 samples, 0.04%)</title><rect x="340.5" y="277" width="0.4" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="343.49" y="287.5" ></text>
</g>
<g >
<title>_int_free (1,442,535 samples, 0.02%)</title><rect x="47.1" y="261" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="50.14" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (79,654,125 samples, 1.14%)</title><rect x="1165.4" y="373" width="13.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1168.45" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (3,356,000 samples, 0.05%)</title><rect x="107.0" y="149" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="110.03" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (770,759 samples, 0.01%)</title><rect x="1108.9" y="277" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1111.86" y="287.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (3,297,765 samples, 0.05%)</title><rect x="35.5" y="277" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="38.55" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (615,177 samples, 0.01%)</title><rect x="188.9" y="197" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="191.87" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1,652,683 samples, 0.02%)</title><rect x="1137.8" y="277" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1140.80" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (729,330 samples, 0.01%)</title><rect x="141.1" y="85" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="144.07" y="95.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Deque_impl::_Deque_impl (601,209 samples, 0.01%)</title><rect x="1017.1" y="245" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1020.07" y="255.5" ></text>
</g>
<g >
<title>__ieee754_pow_sse2 (42,159,789 samples, 0.61%)</title><rect x="1146.1" y="325" width="7.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1149.14" y="335.5" ></text>
</g>
<g >
<title>std::__fill_a&lt;unsigned long*, unsigned long&gt; (2,338,463 samples, 0.03%)</title><rect x="550.4" y="165" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="553.44" y="175.5" ></text>
</g>
<g >
<title>page_fault (16,827,335 samples, 0.24%)</title><rect x="1175.8" y="357" width="2.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1178.82" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (721,585 samples, 0.01%)</title><rect x="152.3" y="309" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="155.27" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (1,671,946 samples, 0.02%)</title><rect x="173.2" y="165" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="176.16" y="175.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (2,282,518 samples, 0.03%)</title><rect x="953.2" y="149" width="0.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="956.22" y="159.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (12,385,661 samples, 0.18%)</title><rect x="932.7" y="229" width="2.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="935.71" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_S_check_init_len (1,635,582 samples, 0.02%)</title><rect x="900.1" y="245" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="903.09" y="255.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::end (1,114,720 samples, 0.02%)</title><rect x="1136.0" y="309" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1139.00" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::deallocate (1,358,909 samples, 0.02%)</title><rect x="171.9" y="229" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="174.90" y="239.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (944,878 samples, 0.01%)</title><rect x="106.1" y="165" width="0.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="109.09" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (29,387,152 samples, 0.42%)</title><rect x="142.8" y="261" width="5.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="145.82" y="271.5" ></text>
</g>
<g >
<title>boost::range_detail::integer_iterator&lt;unsigned long&gt;::dereference (1,365,988 samples, 0.02%)</title><rect x="888.7" y="197" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="891.68" y="207.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (808,815 samples, 0.01%)</title><rect x="1145.0" y="197" width="0.1" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1147.98" y="207.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (3,448,133 samples, 0.05%)</title><rect x="549.4" y="213" width="0.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="552.42" y="223.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_all_s_d (384,401,578 samples, 5.52%)</title><rect x="86.9" y="309" width="65.1" height="15.0" fill="rgb(230,117,27)" rx="2" ry="2" />
<text  x="89.85" y="319.5" >compute..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (19,818,798 samples, 0.28%)</title><rect x="180.6" y="261" width="3.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="183.58" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (686,157 samples, 0.01%)</title><rect x="882.8" y="213" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="885.75" y="223.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (1,134,249 samples, 0.02%)</title><rect x="1048.4" y="213" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1051.42" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (3,188,006 samples, 0.05%)</title><rect x="206.1" y="197" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="209.11" y="207.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (2,777,540 samples, 0.04%)</title><rect x="38.6" y="197" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="41.61" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (131,460,417 samples, 1.89%)</title><rect x="734.6" y="197" width="22.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="737.64" y="207.5" >b..</text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (309,706,585 samples, 4.45%)</title><rect x="909.6" y="277" width="52.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="912.61" y="287.5" >boost..</text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::end (7,798,277 samples, 0.11%)</title><rect x="82.0" y="293" width="1.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="84.98" y="303.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_examine_edge&gt; (5,003,413 samples, 0.07%)</title><rect x="92.9" y="181" width="0.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="95.92" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (920,530 samples, 0.01%)</title><rect x="156.6" y="245" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="159.55" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (33,182,836 samples, 0.48%)</title><rect x="527.3" y="197" width="5.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="530.30" y="207.5" ></text>
</g>
<g >
<title>operator new (1,165,629 samples, 0.02%)</title><rect x="1092.2" y="245" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1095.22" y="255.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (3,743,828 samples, 0.05%)</title><rect x="928.6" y="245" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="931.57" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_deallocate_buckets (1,332,130 samples, 0.02%)</title><rect x="1155.8" y="261" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1158.80" y="271.5" ></text>
</g>
<g >
<title>boost::tuples::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type&gt;::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (688,044 samples, 0.01%)</title><rect x="1007.4" y="245" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1010.42" y="255.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::dummy_property_map, boost::detail::dummy_pmap_reference, unsigned long, unsigned long&gt; (950,070 samples, 0.01%)</title><rect x="765.3" y="213" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="768.33" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (6,163,717 samples, 0.09%)</title><rect x="967.1" y="277" width="1.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="970.11" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (2,061,702 samples, 0.03%)</title><rect x="75.3" y="197" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="78.26" y="207.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (48,168,172 samples, 0.69%)</title><rect x="538.4" y="197" width="8.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="541.36" y="207.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (262,108,355 samples, 3.76%)</title><rect x="915.5" y="261" width="44.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="918.47" y="271.5" >boos..</text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_max_size (803,883 samples, 0.01%)</title><rect x="1051.9" y="245" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1054.94" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (3,597,851 samples, 0.05%)</title><rect x="1070.6" y="197" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1073.59" y="207.5" ></text>
</g>
<g >
<title>unmap_vmas (1,352,210 samples, 0.02%)</title><rect x="1179.6" y="261" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1182.57" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (8,165,128 samples, 0.12%)</title><rect x="975.5" y="293" width="1.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="978.49" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (10,141,868 samples, 0.15%)</title><rect x="1064.5" y="261" width="1.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1067.52" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::__uniq_ptr_impl (21,812,213 samples, 0.31%)</title><rect x="41.0" y="261" width="3.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="43.99" y="271.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (2,838,828 samples, 0.04%)</title><rect x="1143.0" y="277" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1146.02" y="287.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1,662,885 samples, 0.02%)</title><rect x="13.2" y="357" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="16.21" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (1,648,298 samples, 0.02%)</title><rect x="202.7" y="213" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="205.72" y="223.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (1,468,522 samples, 0.02%)</title><rect x="134.8" y="197" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="137.77" y="207.5" ></text>
</g>
<g >
<title>boost::detail::dummy_pmap_reference::operator=&lt;unsigned long&gt; (1,264,303 samples, 0.02%)</title><rect x="788.4" y="197" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="791.43" y="207.5" ></text>
</g>
<g >
<title>boost::iterator_range&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt;::iterator_range&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt; (665,325 samples, 0.01%)</title><rect x="996.6" y="245" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="999.58" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (6,348,787 samples, 0.09%)</title><rect x="886.9" y="229" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="889.93" y="239.5" ></text>
</g>
<g >
<title>boost::tuples::tuple&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type&gt;::tuple (733,627 samples, 0.01%)</title><rect x="132.2" y="261" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="135.23" y="271.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_examine_vertex&gt; (3,173,711 samples, 0.05%)</title><rect x="432.0" y="197" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="435.02" y="207.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&gt; (719,520 samples, 0.01%)</title><rect x="80.2" y="277" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="83.17" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,232,668 samples, 0.02%)</title><rect x="49.5" y="261" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="52.48" y="271.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (943,295 samples, 0.01%)</title><rect x="119.7" y="149" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="122.70" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (2,091,352 samples, 0.03%)</title><rect x="500.4" y="165" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="503.38" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (14,119,838 samples, 0.20%)</title><rect x="1014.6" y="277" width="2.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1017.64" y="287.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::front (943,016 samples, 0.01%)</title><rect x="132.6" y="277" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="135.56" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (7,724,990 samples, 0.11%)</title><rect x="1162.1" y="261" width="1.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1165.08" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned long&gt;, unsigned long&gt;::_S_select_on_copy (3,690,495 samples, 0.05%)</title><rect x="196.4" y="213" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="199.37" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_brk (1,095,563 samples, 0.02%)</title><rect x="12.8" y="309" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="15.80" y="319.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (1,336,591 samples, 0.02%)</title><rect x="74.1" y="181" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="77.11" y="191.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;unsigned long, unsigned long&amp;, unsigned long*&gt;::operator* (1,022,167 samples, 0.01%)</title><rect x="1011.9" y="261" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1014.95" y="271.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (184,404,919 samples, 2.65%)</title><rect x="656.3" y="165" width="31.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="659.30" y="175.5" >bo..</text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (6,134,092 samples, 0.09%)</title><rect x="471.8" y="133" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="474.83" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (718,843 samples, 0.01%)</title><rect x="220.2" y="277" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="223.23" y="287.5" ></text>
</g>
<g >
<title>boost::graph_detail::random_access_container_tag::random_access_container_tag (12,127,026 samples, 0.17%)</title><rect x="57.0" y="245" width="2.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="60.04" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long const&amp;&gt; (817,985 samples, 0.01%)</title><rect x="169.0" y="197" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="172.00" y="207.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::discover_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (1,487,205 samples, 0.02%)</title><rect x="381.3" y="229" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="384.28" y="239.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (9,292,489 samples, 0.13%)</title><rect x="490.1" y="133" width="1.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="493.12" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::_S_select_on_copy (720,146 samples, 0.01%)</title><rect x="193.5" y="293" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="196.50" y="303.5" ></text>
</g>
<g >
<title>[unknown] (58,303,063 samples, 0.84%)</title><rect x="11.0" y="373" width="9.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.02" y="383.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (16,290,549 samples, 0.23%)</title><rect x="139.5" y="213" width="2.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="142.49" y="223.5" ></text>
</g>
<g >
<title>_int_free (3,264,694 samples, 0.05%)</title><rect x="1089.7" y="229" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1092.66" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::end (1,229,579 samples, 0.02%)</title><rect x="343.2" y="261" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="346.25" y="271.5" ></text>
</g>
<g >
<title>do_group_exit (3,209,267 samples, 0.05%)</title><rect x="1179.3" y="325" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1182.26" y="335.5" ></text>
</g>
<g >
<title>boost::detail::vertex_property_map_generator_helper&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, true&gt;::build (3,975,143 samples, 0.06%)</title><rect x="550.2" y="197" width="0.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="553.18" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (9,570,941 samples, 0.14%)</title><rect x="901.8" y="293" width="1.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="904.82" y="303.5" ></text>
</g>
<g >
<title>boost::source&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (4,113,404 samples, 0.06%)</title><rect x="861.3" y="213" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="864.27" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::~_Vector_impl (1,129,270 samples, 0.02%)</title><rect x="227.0" y="277" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="230.01" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (688,859 samples, 0.01%)</title><rect x="1109.7" y="261" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1112.66" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~vector (723,540 samples, 0.01%)</title><rect x="1154.5" y="325" width="0.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1157.45" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (5,810,732 samples, 0.08%)</title><rect x="1040.5" y="165" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1043.53" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate (3,560,170 samples, 0.05%)</title><rect x="532.0" y="165" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="535.00" y="175.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (1,015,849 samples, 0.01%)</title><rect x="168.8" y="181" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="171.83" y="191.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::finish_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (8,280,117 samples, 0.12%)</title><rect x="432.6" y="213" width="1.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="435.56" y="223.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::stored_edge_property (33,833,555 samples, 0.49%)</title><rect x="39.2" y="293" width="5.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="42.20" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (1,208,071 samples, 0.02%)</title><rect x="535.4" y="149" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="538.41" y="159.5" ></text>
</g>
<g >
<title>std::tuple&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::tuple&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, true&gt; (9,774,517 samples, 0.14%)</title><rect x="43.0" y="245" width="1.7" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="46.03" y="255.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (5,371,981 samples, 0.08%)</title><rect x="602.2" y="181" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="605.18" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (8,031,973 samples, 0.12%)</title><rect x="133.9" y="229" width="1.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="136.89" y="239.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (4,769,442 samples, 0.07%)</title><rect x="1189.2" y="373" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1192.19" y="383.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_single_s_d (4,613,671,929 samples, 66.23%)</title><rect x="347.3" y="309" width="781.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="350.30" y="319.5" >compute_all_shortest_paths_single_s_d</text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::stored_edge (1,434,146 samples, 0.02%)</title><rect x="40.2" y="277" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="43.25" y="287.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (1,670,485 samples, 0.02%)</title><rect x="96.3" y="149" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="99.29" y="159.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (2,566,995 samples, 0.04%)</title><rect x="48.8" y="213" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="51.78" y="223.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (620,971 samples, 0.01%)</title><rect x="99.6" y="165" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="102.62" y="175.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; (217,269,093 samples, 3.12%)</title><rect x="89.8" y="277" width="36.8" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="92.81" y="287.5" >boo..</text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate_map (762,506 samples, 0.01%)</title><rect x="1017.3" y="229" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1020.34" y="239.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator* (2,105,058 samples, 0.03%)</title><rect x="29.1" y="309" width="0.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="32.05" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (3,855,234 samples, 0.06%)</title><rect x="140.6" y="117" width="0.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="143.59" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (3,300,527 samples, 0.05%)</title><rect x="537.2" y="197" width="0.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="540.25" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_ptr (825,420 samples, 0.01%)</title><rect x="179.0" y="181" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="182.03" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (859,682 samples, 0.01%)</title><rect x="1137.8" y="245" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1140.84" y="255.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::parent (1,242,291 samples, 0.02%)</title><rect x="518.3" y="181" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="521.29" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (725,796 samples, 0.01%)</title><rect x="1164.6" y="261" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1167.55" y="271.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (3,448,355 samples, 0.05%)</title><rect x="107.7" y="149" width="0.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="110.69" y="159.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_down (338,281,293 samples, 4.86%)</title><rect x="445.6" y="197" width="57.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="448.65" y="207.5" >boost:..</text>
</g>
<g >
<title>std::operator!= (1,436,235 samples, 0.02%)</title><rect x="1131.9" y="293" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1134.94" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator- (2,700,455 samples, 0.04%)</title><rect x="508.5" y="181" width="0.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="511.54" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::push_back (235,795,137 samples, 3.38%)</title><rect x="1023.9" y="293" width="39.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1026.87" y="303.5" >std..</text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (1,328,986 samples, 0.02%)</title><rect x="64.5" y="229" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="67.47" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::~allocator (1,456,911 samples, 0.02%)</title><rect x="1120.1" y="277" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1123.12" y="287.5" ></text>
</g>
<g >
<title>boost::dummy_property_map::operator[]&lt;unsigned long&gt; (864,885 samples, 0.01%)</title><rect x="884.1" y="229" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="887.10" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_v (1,452,712 samples, 0.02%)</title><rect x="181.9" y="213" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="184.87" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (1,356,105 samples, 0.02%)</title><rect x="111.1" y="165" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="114.07" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (3,533,310 samples, 0.05%)</title><rect x="1139.8" y="245" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1142.84" y="255.5" ></text>
</g>
<g >
<title>_int_free (33,162,882 samples, 0.48%)</title><rect x="13.5" y="357" width="5.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="16.49" y="367.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (13,496,055 samples, 0.19%)</title><rect x="606.3" y="213" width="2.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="609.31" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (683,703 samples, 0.01%)</title><rect x="1076.2" y="261" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1079.16" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (1,956,083 samples, 0.03%)</title><rect x="179.8" y="213" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="182.85" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_do_relocate (16,918,307 samples, 0.24%)</title><rect x="139.4" y="229" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="142.39" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (3,656,617 samples, 0.05%)</title><rect x="172.9" y="181" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="175.91" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (2,276,937 samples, 0.03%)</title><rect x="1136.5" y="277" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1139.53" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (724,769 samples, 0.01%)</title><rect x="197.0" y="213" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="200.03" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (3,241,040 samples, 0.05%)</title><rect x="171.8" y="245" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="174.76" y="255.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (8,470,505 samples, 0.12%)</title><rect x="118.8" y="181" width="1.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="121.83" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data (2,264,410 samples, 0.03%)</title><rect x="189.9" y="149" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="192.90" y="159.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (4,551,120 samples, 0.07%)</title><rect x="1046.0" y="117" width="0.7" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1048.96" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::max_size (2,205,066 samples, 0.03%)</title><rect x="138.6" y="229" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="141.62" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_relocate (17,756,380 samples, 0.25%)</title><rect x="139.2" y="245" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="142.24" y="255.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (215,695,660 samples, 3.10%)</title><rect x="89.8" y="229" width="36.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="92.84" y="239.5" >boo..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_node_allocator (1,094,769 samples, 0.02%)</title><rect x="1159.2" y="229" width="0.2" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="1162.17" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,026,892 samples, 0.01%)</title><rect x="227.3" y="277" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="230.32" y="287.5" ></text>
</g>
<g >
<title>NexullanceIT::optimize (6,688,867,806 samples, 96.02%)</title><rect x="22.5" y="341" width="1133.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="25.52" y="351.5" >NexullanceIT::optimize</text>
</g>
<g >
<title>std::__niter_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (3,525,811 samples, 0.05%)</title><rect x="1059.3" y="213" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1062.32" y="223.5" ></text>
</g>
<g >
<title>main.exe (6,960,560,794 samples, 99.92%)</title><rect x="11.0" y="389" width="1179.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="14.00" y="399.5" >main.exe</text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (26,303,037 samples, 0.38%)</title><rect x="434.2" y="213" width="4.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="437.17" y="223.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,160,869 samples, 0.03%)</title><rect x="1127.2" y="229" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1130.25" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::~new_allocator (669,141 samples, 0.01%)</title><rect x="1128.0" y="245" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1131.02" y="255.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (14,377,091 samples, 0.21%)</title><rect x="801.3" y="165" width="2.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="804.29" y="175.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, false, false&gt;::derived (2,571,080 samples, 0.04%)</title><rect x="889.4" y="213" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="892.37" y="223.5" ></text>
</g>
<g >
<title>operator delete (724,064 samples, 0.01%)</title><rect x="47.6" y="261" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="50.63" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (7,544,099 samples, 0.11%)</title><rect x="378.3" y="277" width="1.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="381.31" y="287.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (3,641,972 samples, 0.05%)</title><rect x="99.2" y="181" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="102.17" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (4,794,820 samples, 0.07%)</title><rect x="443.6" y="165" width="0.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="446.63" y="175.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;void, true&gt; (711,208 samples, 0.01%)</title><rect x="171.1" y="293" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="174.07" y="303.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (2,832,746 samples, 0.04%)</title><rect x="803.2" y="149" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="806.25" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (1,119,689 samples, 0.02%)</title><rect x="526.7" y="197" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="529.73" y="207.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (2,925,971 samples, 0.04%)</title><rect x="472.9" y="133" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="475.87" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_clear (617,258 samples, 0.01%)</title><rect x="1129.9" y="277" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1132.87" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (2,380,047 samples, 0.03%)</title><rect x="1144.7" y="229" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1147.73" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate (28,856,424 samples, 0.41%)</title><rect x="1099.0" y="261" width="4.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1101.96" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (788,032 samples, 0.01%)</title><rect x="1141.4" y="197" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1144.39" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::__uniq_ptr_impl (928,354 samples, 0.01%)</title><rect x="40.5" y="277" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="43.49" y="287.5" ></text>
</g>
<g >
<title>unmap_page_range (1,352,210 samples, 0.02%)</title><rect x="1179.6" y="229" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1182.57" y="239.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (1,420,485 samples, 0.02%)</title><rect x="1001.3" y="245" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1004.32" y="255.5" ></text>
</g>
<g >
<title>boost::edge&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (24,171,891 samples, 0.35%)</title><rect x="339.8" y="309" width="4.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="342.80" y="319.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::operator== (22,148,264 samples, 0.32%)</title><rect x="70.6" y="197" width="3.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="73.58" y="207.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*&gt; (619,980 samples, 0.01%)</title><rect x="1164.3" y="101" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1167.26" y="111.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (828,438 samples, 0.01%)</title><rect x="134.4" y="181" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="137.42" y="191.5" ></text>
</g>
<g >
<title>std::move&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*&amp;&gt; (1,132,130 samples, 0.02%)</title><rect x="49.7" y="261" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="52.69" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (53,399,986 samples, 0.77%)</title><rect x="948.0" y="181" width="9.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="951.04" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt; (4,728,190 samples, 0.07%)</title><rect x="892.2" y="213" width="0.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="895.19" y="223.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const, float&gt; (925,249 samples, 0.01%)</title><rect x="161.8" y="197" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="164.79" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (614,210 samples, 0.01%)</title><rect x="1163.7" y="293" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1166.70" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (9,344,347 samples, 0.13%)</title><rect x="210.6" y="245" width="1.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="213.61" y="255.5" ></text>
</g>
<g >
<title>boost::graph_detail::back_insertion_sequence_tag::back_insertion_sequence_tag (12,036,624 samples, 0.17%)</title><rect x="54.5" y="245" width="2.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="57.53" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (10,573,315 samples, 0.15%)</title><rect x="1159.9" y="245" width="1.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1162.94" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::__normal_iterator (2,565,803 samples, 0.04%)</title><rect x="1018.4" y="277" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1021.42" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~deque (1,681,070 samples, 0.02%)</title><rect x="1017.6" y="277" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1020.64" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (13,194,123 samples, 0.19%)</title><rect x="111.3" y="197" width="2.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="114.30" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (1,163,509 samples, 0.02%)</title><rect x="340.6" y="245" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="343.62" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt;::_M_next (1,249,423 samples, 0.02%)</title><rect x="1130.0" y="277" width="0.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1133.03" y="287.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (768,208 samples, 0.01%)</title><rect x="521.0" y="149" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="524.02" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (783,730 samples, 0.01%)</title><rect x="1066.5" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1069.46" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (859,682 samples, 0.01%)</title><rect x="1137.8" y="229" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1140.84" y="239.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (4,929,617 samples, 0.07%)</title><rect x="525.9" y="181" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="528.90" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (972,416 samples, 0.01%)</title><rect x="1009.7" y="293" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1012.71" y="303.5" ></text>
</g>
<g >
<title>do_brk_flags (723,122 samples, 0.01%)</title><rect x="12.8" y="293" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="15.80" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_nothrow_relocate (790,765 samples, 0.01%)</title><rect x="1098.8" y="261" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1101.83" y="271.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (613,641 samples, 0.01%)</title><rect x="1178.1" y="245" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1181.06" y="255.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (6,075,073 samples, 0.09%)</title><rect x="520.0" y="149" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="522.99" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (4,759,901 samples, 0.07%)</title><rect x="1015.8" y="245" width="0.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1018.80" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (14,610,751 samples, 0.21%)</title><rect x="171.2" y="293" width="2.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="174.21" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (46,563,089 samples, 0.67%)</title><rect x="638.1" y="165" width="7.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="641.15" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (12,721,345 samples, 0.18%)</title><rect x="37.0" y="261" width="2.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="40.05" y="271.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (1,604,008 samples, 0.02%)</title><rect x="346.9" y="309" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="349.89" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (2,089,460 samples, 0.03%)</title><rect x="110.2" y="53" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="113.18" y="63.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (25,450,544 samples, 0.37%)</title><rect x="493.6" y="181" width="4.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="496.58" y="191.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (12,673,559 samples, 0.18%)</title><rect x="654.1" y="165" width="2.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="657.15" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (11,303,142 samples, 0.16%)</title><rect x="225.6" y="293" width="1.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="228.58" y="303.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (719,744 samples, 0.01%)</title><rect x="1165.2" y="373" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1168.17" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (3,034,681 samples, 0.04%)</title><rect x="137.0" y="197" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="139.97" y="207.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (2,188,861 samples, 0.03%)</title><rect x="128.1" y="229" width="0.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="131.14" y="239.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (2,395,976 samples, 0.03%)</title><rect x="123.2" y="181" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="126.19" y="191.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (4,171,223 samples, 0.06%)</title><rect x="673.8" y="101" width="0.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="676.75" y="111.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (99,467,343 samples, 1.43%)</title><rect x="864.1" y="213" width="16.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="867.09" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, false, false&gt;::operator++ (626,409 samples, 0.01%)</title><rect x="125.7" y="213" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="128.72" y="223.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (117,935,969 samples, 1.69%)</title><rect x="513.4" y="213" width="20.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="516.44" y="223.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (628,318 samples, 0.01%)</title><rect x="110.5" y="101" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="113.54" y="111.5" ></text>
</g>
<g >
<title>std::_List_node&lt;float&gt;::_M_valptr (2,367,603 samples, 0.03%)</title><rect x="1131.2" y="277" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1134.25" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (4,122,040 samples, 0.06%)</title><rect x="941.7" y="213" width="0.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="944.73" y="223.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (6,987,164 samples, 0.10%)</title><rect x="48.0" y="245" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="51.03" y="255.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (23,882,537 samples, 0.34%)</title><rect x="469.3" y="149" width="4.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="472.32" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::allocate (1,995,987 samples, 0.03%)</title><rect x="1031.7" y="229" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1034.71" y="239.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (3,109,033 samples, 0.04%)</title><rect x="687.0" y="117" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="690.00" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (18,536,769 samples, 0.27%)</title><rect x="1158.7" y="293" width="3.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1161.71" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::allocate (5,538,843 samples, 0.08%)</title><rect x="1031.4" y="245" width="0.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1034.38" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::vector (66,478,006 samples, 0.95%)</title><rect x="193.3" y="309" width="11.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="196.32" y="319.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::~stored_edge_property (36,196,677 samples, 0.52%)</title><rect x="44.9" y="293" width="6.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="47.93" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt; &gt; (4,021,330 samples, 0.06%)</title><rect x="342.5" y="229" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="345.53" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (11,583,157 samples, 0.17%)</title><rect x="171.6" y="261" width="2.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="174.64" y="271.5" ></text>
</g>
<g >
<title>[unknown] (8,430,338 samples, 0.12%)</title><rect x="11.1" y="357" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.12" y="367.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (5,342,483 samples, 0.08%)</title><rect x="847.6" y="197" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="850.61" y="207.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (5,445,642 samples, 0.08%)</title><rect x="601.3" y="165" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="604.25" y="175.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (1,568,662 samples, 0.02%)</title><rect x="130.2" y="261" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="133.17" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (615,458 samples, 0.01%)</title><rect x="152.8" y="309" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="155.76" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get_deleter (6,994,844 samples, 0.10%)</title><rect x="49.9" y="261" width="1.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="52.88" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (3,408,833 samples, 0.05%)</title><rect x="1141.1" y="277" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1144.06" y="287.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long&gt; (9,791,821 samples, 0.14%)</title><rect x="546.8" y="197" width="1.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="549.77" y="207.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (11,577,911 samples, 0.17%)</title><rect x="862.0" y="213" width="1.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="864.96" y="223.5" ></text>
</g>
<g >
<title>_int_free (2,142,148 samples, 0.03%)</title><rect x="1073.2" y="149" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1076.23" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (1,372,682 samples, 0.02%)</title><rect x="1095.2" y="229" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1098.17" y="239.5" ></text>
</g>
<g >
<title>boost::integer_range&lt;unsigned long&gt;::integer_range (706,085 samples, 0.01%)</title><rect x="550.3" y="149" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="553.28" y="159.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,279,523 samples, 0.02%)</title><rect x="1143.2" y="229" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1146.17" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::select_on_container_copy_construction (662,792 samples, 0.01%)</title><rect x="1120.4" y="277" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1123.37" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,108,691 samples, 0.02%)</title><rect x="1128.6" y="261" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1131.59" y="271.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (2,858,032 samples, 0.04%)</title><rect x="1144.7" y="277" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1147.67" y="287.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator++ (631,843 samples, 0.01%)</title><rect x="29.4" y="293" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="32.45" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const&amp;&gt; (3,087,735 samples, 0.04%)</title><rect x="189.1" y="197" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="192.09" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (27,800,849 samples, 0.40%)</title><rect x="923.8" y="245" width="4.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="926.84" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (839,058 samples, 0.01%)</title><rect x="134.8" y="149" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="137.81" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (17,785,603 samples, 0.26%)</title><rect x="1038.6" y="197" width="3.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1041.57" y="207.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (3,193,309 samples, 0.05%)</title><rect x="547.9" y="165" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="550.87" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (923,241 samples, 0.01%)</title><rect x="36.4" y="277" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="39.42" y="287.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (3,707,369 samples, 0.05%)</title><rect x="375.2" y="261" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="378.16" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (927,290 samples, 0.01%)</title><rect x="81.4" y="261" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="84.39" y="271.5" ></text>
</g>
<g >
<title>malloc (858,955 samples, 0.01%)</title><rect x="1112.6" y="213" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1115.55" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1,701,959 samples, 0.02%)</title><rect x="1155.8" y="277" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1158.78" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::select_on_container_copy_construction (726,824 samples, 0.01%)</title><rect x="148.2" y="245" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="151.24" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (1,287,608 samples, 0.02%)</title><rect x="762.3" y="165" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="765.30" y="175.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (2,275,334 samples, 0.03%)</title><rect x="1143.1" y="261" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1146.08" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (7,432,945 samples, 0.11%)</title><rect x="617.3" y="197" width="1.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="620.27" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash_aux (19,298,085 samples, 0.28%)</title><rect x="180.6" y="245" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="183.58" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*&gt; (1,581,959 samples, 0.02%)</title><rect x="1124.2" y="261" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1127.24" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (1,107,993 samples, 0.02%)</title><rect x="1043.0" y="213" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1046.04" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (7,215,672 samples, 0.10%)</title><rect x="109.3" y="101" width="1.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="112.31" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::allocate (2,360,331 samples, 0.03%)</title><rect x="166.3" y="261" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="169.27" y="271.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::first_child (5,749,718 samples, 0.08%)</title><rect x="461.8" y="181" width="1.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="464.81" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;float, std::allocator&lt;float&gt; &gt;::~list (617,258 samples, 0.01%)</title><rect x="1129.9" y="309" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1132.87" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::deallocate (895,357 samples, 0.01%)</title><rect x="1078.6" y="229" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1081.64" y="239.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (3,253,492 samples, 0.05%)</title><rect x="21.4" y="277" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="24.37" y="287.5" ></text>
</g>
<g >
<title>boost::num_vertices&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (1,058,468 samples, 0.02%)</title><rect x="550.2" y="181" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="553.24" y="191.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (9,756,835 samples, 0.14%)</title><rect x="200.0" y="117" width="1.7" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="203.01" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt;, true&gt;::_S_get (726,300 samples, 0.01%)</title><rect x="1159.2" y="213" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1162.23" y="223.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (721,046 samples, 0.01%)</title><rect x="86.1" y="261" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="89.09" y="271.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (731,978 samples, 0.01%)</title><rect x="172.0" y="213" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="175.01" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::push_back (1,654,468 samples, 0.02%)</title><rect x="19.5" y="229" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="22.47" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_deallocate_node (6,674,459 samples, 0.10%)</title><rect x="154.1" y="261" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="157.07" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (914,540 samples, 0.01%)</title><rect x="1139.2" y="277" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1142.16" y="287.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (1,748,205 samples, 0.03%)</title><rect x="1119.3" y="213" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1122.31" y="223.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_Tuple_impl (925,722 samples, 0.01%)</title><rect x="41.5" y="245" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="44.46" y="255.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (8,329,478 samples, 0.12%)</title><rect x="34.7" y="293" width="1.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="37.70" y="303.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (5,699,693 samples, 0.08%)</title><rect x="584.5" y="181" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="587.55" y="191.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (612,812 samples, 0.01%)</title><rect x="1178.0" y="213" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1180.96" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::max_size (15,962,706 samples, 0.23%)</title><rect x="1052.1" y="245" width="2.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1055.08" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (7,500,417 samples, 0.11%)</title><rect x="885.7" y="229" width="1.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="888.66" y="239.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (817,755 samples, 0.01%)</title><rect x="211.3" y="181" width="0.1" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="214.31" y="191.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1,853,503 samples, 0.03%)</title><rect x="1097.3" y="213" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1100.29" y="223.5" ></text>
</g>
<g >
<title>malloc (1,023,427 samples, 0.01%)</title><rect x="1041.3" y="149" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1044.27" y="159.5" ></text>
</g>
<g >
<title>boost::tuples::detail::cnull (3,119,151 samples, 0.04%)</title><rect x="1004.8" y="277" width="0.6" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1007.84" y="287.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt; (686,635 samples, 0.01%)</title><rect x="1099.7" y="245" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1102.73" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_get_node (1,411,420 samples, 0.02%)</title><rect x="1129.2" y="261" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1132.21" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (9,744,895 samples, 0.14%)</title><rect x="1117.0" y="197" width="1.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1120.00" y="207.5" ></text>
</g>
<g >
<title>std::copy&lt;unsigned long const*, unsigned long*&gt; (808,403 samples, 0.01%)</title><rect x="1120.8" y="213" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1123.77" y="223.5" ></text>
</g>
<g >
<title>operator new (620,221 samples, 0.01%)</title><rect x="1129.3" y="229" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1132.35" y="239.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::swap_heap_elements (3,975,852 samples, 0.06%)</title><rect x="96.0" y="165" width="0.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="98.99" y="175.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::verify_heap (1,258,682 samples, 0.02%)</title><rect x="503.3" y="197" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="506.34" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (2,870,290 samples, 0.04%)</title><rect x="63.7" y="229" width="0.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="66.71" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (12,781,504 samples, 0.18%)</title><rect x="136.3" y="229" width="2.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="139.28" y="239.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (2,906,699 samples, 0.04%)</title><rect x="1054.3" y="213" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1057.29" y="223.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::stored_edge_property (622,447 samples, 0.01%)</title><rect x="1164.2" y="133" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1167.15" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (5,582,195 samples, 0.08%)</title><rect x="435.5" y="181" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="438.46" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (733,415 samples, 0.01%)</title><rect x="151.1" y="261" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="154.08" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;std::piecewise_construct_t const&amp;&gt; (619,110 samples, 0.01%)</title><rect x="169.2" y="245" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="172.16" y="255.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (1,337,097 samples, 0.02%)</title><rect x="168.1" y="149" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="171.06" y="159.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (207,950,498 samples, 2.99%)</title><rect x="90.1" y="213" width="35.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="93.14" y="223.5" >bo..</text>
</g>
<g >
<title>boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::basic_ptree (1,226,382 samples, 0.02%)</title><rect x="11.3" y="325" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="14.31" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (1,021,033 samples, 0.01%)</title><rect x="1076.4" y="277" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1079.36" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (3,501,664 samples, 0.05%)</title><rect x="209.7" y="277" width="0.6" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="212.74" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (5,406,163 samples, 0.08%)</title><rect x="985.6" y="261" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="988.55" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (4,381,949 samples, 0.06%)</title><rect x="128.8" y="213" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="131.78" y="223.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (15,211,306 samples, 0.22%)</title><rect x="844.0" y="197" width="2.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="846.99" y="207.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (1,039,940 samples, 0.01%)</title><rect x="97.3" y="133" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="100.32" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::size (1,892,939 samples, 0.03%)</title><rect x="1061.8" y="261" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1064.81" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (6,353,168 samples, 0.09%)</title><rect x="764.3" y="181" width="1.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="767.26" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (17,441,524 samples, 0.25%)</title><rect x="199.3" y="181" width="3.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="202.35" y="191.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (3,523,670 samples, 0.05%)</title><rect x="908.1" y="277" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="911.08" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (1,136,659 samples, 0.02%)</title><rect x="208.9" y="293" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="211.87" y="303.5" ></text>
</g>
<g >
<title>std::operator==&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; (1,122,748 samples, 0.02%)</title><rect x="1132.7" y="293" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1135.71" y="303.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::out_edge_list (7,858,826 samples, 0.11%)</title><rect x="759.0" y="197" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="761.99" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_ptr (718,574 samples, 0.01%)</title><rect x="186.3" y="245" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="189.31" y="255.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (8,410,681 samples, 0.12%)</title><rect x="583.1" y="165" width="1.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="586.12" y="175.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (1,463,744 samples, 0.02%)</title><rect x="97.6" y="165" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="100.64" y="175.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (839,578 samples, 0.01%)</title><rect x="137.8" y="117" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="140.80" y="127.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (628,971 samples, 0.01%)</title><rect x="22.0" y="261" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="24.96" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (4,835,018 samples, 0.07%)</title><rect x="535.6" y="165" width="0.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="538.61" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (1,248,152 samples, 0.02%)</title><rect x="1136.7" y="229" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1139.70" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::destroy&lt;unsigned long&gt; (869,172 samples, 0.01%)</title><rect x="512.0" y="181" width="0.2" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="515.02" y="191.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;unsigned long const&gt; &gt; (2,429,239 samples, 0.03%)</title><rect x="1132.3" y="293" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1135.28" y="303.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::copy_impl (4,512,173 samples, 0.06%)</title><rect x="21.4" y="293" width="0.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="24.37" y="303.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (34,433,366 samples, 0.49%)</title><rect x="848.5" y="197" width="5.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="851.52" y="207.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (1,551,158 samples, 0.02%)</title><rect x="80.3" y="277" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="83.29" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::__uniq_ptr_impl (2,166,958 samples, 0.03%)</title><rect x="340.5" y="261" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="343.49" y="271.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (9,652,644 samples, 0.14%)</title><rect x="805.1" y="181" width="1.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="808.15" y="191.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (7,423,298 samples, 0.11%)</title><rect x="103.4" y="197" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="106.38" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (911,508 samples, 0.01%)</title><rect x="1137.6" y="245" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1140.65" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (3,120,159 samples, 0.04%)</title><rect x="1111.9" y="213" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1114.93" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_ptr (917,900 samples, 0.01%)</title><rect x="170.1" y="245" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="173.10" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (1,466,966 samples, 0.02%)</title><rect x="100.1" y="165" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="103.09" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (106,770,837 samples, 1.53%)</title><rect x="939.5" y="229" width="18.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="942.54" y="239.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long*&gt; (2,625,668 samples, 0.04%)</title><rect x="1100.3" y="229" width="0.5" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1103.35" y="239.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (95,697,218 samples, 1.37%)</title><rect x="586.9" y="213" width="16.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="589.88" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (929,219 samples, 0.01%)</title><rect x="1038.4" y="197" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1041.42" y="207.5" ></text>
</g>
<g >
<title>boost::mutate_graph_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::~mutate_graph_impl (4,302,080 samples, 0.06%)</title><rect x="19.3" y="357" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="22.28" y="367.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (1,043,419 samples, 0.01%)</title><rect x="108.3" y="149" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="111.27" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1,973,167 samples, 0.03%)</title><rect x="140.7" y="85" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="143.73" y="95.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt; (2,219,686 samples, 0.03%)</title><rect x="512.2" y="181" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="515.17" y="191.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt; (1,856,570 samples, 0.03%)</title><rect x="218.1" y="245" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="221.13" y="255.5" ></text>
</g>
<g >
<title>std::addressof&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; (611,713 samples, 0.01%)</title><rect x="1159.8" y="213" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1162.77" y="223.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;float&gt;::operator-- (13,068,458 samples, 0.19%)</title><rect x="1133.2" y="261" width="2.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1136.16" y="271.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (20,687,890 samples, 0.30%)</title><rect x="533.7" y="197" width="3.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="536.67" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (1,934,529 samples, 0.03%)</title><rect x="158.0" y="277" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="160.96" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (5,216,044 samples, 0.07%)</title><rect x="913.8" y="261" width="0.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="916.83" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (812,020 samples, 0.01%)</title><rect x="338.8" y="197" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="341.75" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_v (889,890 samples, 0.01%)</title><rect x="1139.9" y="213" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1142.88" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::max_size (920,451 samples, 0.01%)</title><rect x="1095.4" y="229" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1098.40" y="239.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_finish_vertex&gt; (5,611,797 samples, 0.08%)</title><rect x="433.0" y="197" width="1.0" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="436.01" y="207.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (29,635,014 samples, 0.43%)</title><rect x="1115.1" y="261" width="5.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1118.11" y="271.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (2,941,273,119 samples, 42.22%)</title><rect x="384.8" y="229" width="498.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="387.82" y="239.5" >boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (1,479,208 samples, 0.02%)</title><rect x="1088.3" y="229" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1091.34" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::~allocator (686,015 samples, 0.01%)</title><rect x="1034.3" y="229" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1037.32" y="239.5" ></text>
</g>
<g >
<title>operator new (618,584 samples, 0.01%)</title><rect x="79.5" y="293" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="82.54" y="303.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (1,718,689 samples, 0.02%)</title><rect x="846.1" y="149" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="849.14" y="159.5" ></text>
</g>
<g >
<title>boost::multi_index::detail::sequenced_index&lt;boost::multi_index::detail::nth_layer&lt;1, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, boost::multi_index::indexed_by&lt;boost::multi_index::sequenced&lt;boost::multi_index::tag&lt;mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na&gt; &gt;, boost::multi_index::ordered_non_unique&lt;boost::multi_index::tag&lt;boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::subs::by_name, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na&gt;, boost::multi_index::member&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, &amp;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::first&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::vector0&lt;mpl_::na&gt; &gt;::insert (656,476 samples, 0.01%)</title><rect x="12.0" y="341" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="14.98" y="351.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (5,514,349 samples, 0.08%)</title><rect x="908.7" y="277" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="911.67" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (915,163 samples, 0.01%)</title><rect x="1024.5" y="277" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1027.48" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::select_on_container_copy_construction (1,434,197 samples, 0.02%)</title><rect x="196.7" y="197" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="199.75" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (1,644,184 samples, 0.02%)</title><rect x="1105.2" y="261" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1108.24" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_deallocate_node (7,246,347 samples, 0.10%)</title><rect x="1157.3" y="261" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1160.28" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (615,127 samples, 0.01%)</title><rect x="197.4" y="197" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="200.36" y="207.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (609,783 samples, 0.01%)</title><rect x="181.0" y="69" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="184.01" y="79.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (910,728 samples, 0.01%)</title><rect x="895.7" y="181" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="898.71" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned long&gt;, unsigned long&gt;::_S_select_on_copy (1,041,059 samples, 0.01%)</title><rect x="148.2" y="261" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="151.19" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (613,356 samples, 0.01%)</title><rect x="160.5" y="213" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="163.46" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, bool&gt;::pair&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, bool, true&gt; (722,983 samples, 0.01%)</title><rect x="81.5" y="293" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="84.54" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (4,289,335 samples, 0.06%)</title><rect x="1160.7" y="165" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1163.69" y="175.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;unsigned long*&gt; (825,657 samples, 0.01%)</title><rect x="225.1" y="277" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="228.11" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_valptr (928,723 samples, 0.01%)</title><rect x="182.0" y="197" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="184.96" y="207.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (4,496,782 samples, 0.06%)</title><rect x="121.6" y="149" width="0.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="124.63" y="159.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (3,864,626 samples, 0.06%)</title><rect x="895.2" y="197" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="898.21" y="207.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (7,007,257 samples, 0.10%)</title><rect x="1176.7" y="229" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1179.70" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (2,962,471 samples, 0.04%)</title><rect x="1144.7" y="293" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1147.66" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (505,557,785 samples, 7.26%)</title><rect x="608.6" y="213" width="85.6" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="611.59" y="223.5" >boost::ite..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt;::construct&lt;std::pair&lt;unsigned long const, float&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (13,348,435 samples, 0.19%)</title><rect x="166.9" y="245" width="2.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="169.88" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (5,326,902 samples, 0.08%)</title><rect x="156.5" y="261" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="159.47" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (964,838 samples, 0.01%)</title><rect x="1010.0" y="293" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1012.97" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (978,014 samples, 0.01%)</title><rect x="445.4" y="149" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="448.37" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,199,658 samples, 0.02%)</title><rect x="12.8" y="325" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="15.80" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (2,558,947 samples, 0.04%)</title><rect x="67.6" y="213" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="70.57" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (47,047,636 samples, 0.68%)</title><rect x="195.9" y="229" width="8.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="198.90" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1,029,898 samples, 0.01%)</title><rect x="32.7" y="293" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="35.75" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (1,472,123 samples, 0.02%)</title><rect x="1145.6" y="293" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1148.58" y="303.5" ></text>
</g>
<g >
<title>std::prev&lt;std::_List_iterator&lt;float&gt; &gt; (13,940,633 samples, 0.20%)</title><rect x="1133.0" y="309" width="2.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1136.01" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::operator (1,542,976 samples, 0.02%)</title><rect x="49.2" y="261" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="52.22" y="271.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (4,176,727 samples, 0.06%)</title><rect x="149.7" y="213" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="152.68" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_do_relocate (2,270,015 samples, 0.03%)</title><rect x="218.1" y="261" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="221.10" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (4,102,495 samples, 0.06%)</title><rect x="168.4" y="213" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="171.45" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (47,137,652 samples, 0.68%)</title><rect x="176.3" y="277" width="8.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="179.30" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1,049,382 samples, 0.02%)</title><rect x="149.2" y="229" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="152.16" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt; (3,801,342 samples, 0.05%)</title><rect x="62.3" y="245" width="0.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="65.35" y="255.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, false&gt;::operator mpl_::bool_&lt;false&gt; const&amp; (6,766,915 samples, 0.10%)</title><rect x="419.8" y="197" width="1.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="422.78" y="207.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_down (20,284,398 samples, 0.29%)</title><rect x="94.8" y="181" width="3.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="97.80" y="191.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (916,011 samples, 0.01%)</title><rect x="201.7" y="117" width="0.1" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="204.66" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned long&gt;, unsigned long&gt;::_S_select_on_copy (5,820,568 samples, 0.08%)</title><rect x="1036.5" y="213" width="1.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1039.47" y="223.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (833,662 samples, 0.01%)</title><rect x="173.3" y="133" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="176.28" y="143.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (5,332,125 samples, 0.08%)</title><rect x="109.6" y="85" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="112.63" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (110,278,093 samples, 1.58%)</title><rect x="174.1" y="293" width="18.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="177.07" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data (4,881,537 samples, 0.07%)</title><rect x="1041.8" y="181" width="0.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1044.84" y="191.5" ></text>
</g>
<g >
<title>boost::scoped_array&lt;unsigned long&gt;::~scoped_array (603,796 samples, 0.01%)</title><rect x="861.2" y="213" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="864.17" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_do_relocate (19,163,481 samples, 0.28%)</title><rect x="1057.3" y="245" width="3.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1060.25" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (708,723 samples, 0.01%)</title><rect x="1081.7" y="277" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1084.70" y="287.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::~unordered_map (19,031,563 samples, 0.27%)</title><rect x="1158.6" y="325" width="3.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1161.63" y="335.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_Head_base (925,345 samples, 0.01%)</title><rect x="43.8" y="213" width="0.2" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="46.80" y="223.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt;, boost::edge_weight_t, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, double&gt; (19,407,612 samples, 0.28%)</title><rect x="83.5" y="309" width="3.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="86.51" y="319.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (2,045,716 samples, 0.03%)</title><rect x="222.8" y="213" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="225.76" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (3,189,128 samples, 0.05%)</title><rect x="157.4" y="277" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="160.42" y="287.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (1,016,961 samples, 0.01%)</title><rect x="202.0" y="149" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="204.97" y="159.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,140,382 samples, 0.03%)</title><rect x="338.7" y="277" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="341.66" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (683,510 samples, 0.01%)</title><rect x="1094.0" y="245" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1097.01" y="255.5" ></text>
</g>
<g >
<title>std::plus&lt;float&gt;::operator (2,615,094 samples, 0.04%)</title><rect x="123.6" y="181" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="126.59" y="191.5" ></text>
</g>
<g >
<title>boost::source&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (730,606 samples, 0.01%)</title><rect x="123.0" y="181" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="125.96" y="191.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long const&amp;&gt; (726,696 samples, 0.01%)</title><rect x="1092.1" y="229" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1095.09" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (629,712 samples, 0.01%)</title><rect x="94.5" y="149" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="97.50" y="159.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (628,971 samples, 0.01%)</title><rect x="22.0" y="245" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="24.96" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_Hash_node_value_base (824,566 samples, 0.01%)</title><rect x="165.4" y="245" width="0.1" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="168.37" y="255.5" ></text>
</g>
<g >
<title>_int_free (600,397 samples, 0.01%)</title><rect x="530.8" y="133" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="533.84" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (2,926,080 samples, 0.04%)</title><rect x="141.6" y="133" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="144.60" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (716,583 samples, 0.01%)</title><rect x="160.2" y="213" width="0.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="163.22" y="223.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (16,456,784 samples, 0.24%)</title><rect x="561.7" y="213" width="2.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="564.74" y="223.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (6,284,019 samples, 0.09%)</title><rect x="646.1" y="165" width="1.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="649.07" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (14,610,751 samples, 0.21%)</title><rect x="171.2" y="277" width="2.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="174.21" y="287.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,995,972 samples, 0.03%)</title><rect x="947.7" y="181" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="950.70" y="191.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;unsigned long*&gt; (662,951 samples, 0.01%)</title><rect x="1119.1" y="197" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1122.12" y="207.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (623,352 samples, 0.01%)</title><rect x="884.0" y="229" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="886.99" y="239.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (2,411,994 samples, 0.03%)</title><rect x="1059.9" y="213" width="0.4" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1062.91" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::begin (4,904,846 samples, 0.07%)</title><rect x="1018.0" y="293" width="0.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1021.02" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (2,363,847 samples, 0.03%)</title><rect x="206.3" y="181" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="209.25" y="191.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (8,647,479 samples, 0.12%)</title><rect x="1045.3" y="133" width="1.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1048.26" y="143.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (1,986,184 samples, 0.03%)</title><rect x="986.5" y="261" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="989.47" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (14,183,389 samples, 0.20%)</title><rect x="204.8" y="277" width="2.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="207.76" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,199,658 samples, 0.02%)</title><rect x="12.8" y="341" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="15.80" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (1,563,323 samples, 0.02%)</title><rect x="1081.4" y="277" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1084.44" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (839,675 samples, 0.01%)</title><rect x="144.2" y="229" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="147.20" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::begin (3,488,186 samples, 0.05%)</title><rect x="76.2" y="261" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="79.23" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (5,716,001 samples, 0.08%)</title><rect x="1012.1" y="261" width="1.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1015.12" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (622,635 samples, 0.01%)</title><rect x="126.7" y="277" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="129.69" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (2,304,495 samples, 0.03%)</title><rect x="144.3" y="245" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="147.34" y="255.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::erase (2,248,404 samples, 0.03%)</title><rect x="1138.4" y="309" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1141.38" y="319.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (3,253,492 samples, 0.05%)</title><rect x="21.4" y="261" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="24.37" y="271.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;unsigned long, unsigned long&gt; (943,462 samples, 0.01%)</title><rect x="147.3" y="197" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="150.32" y="207.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (1,574,413 samples, 0.02%)</title><rect x="108.0" y="133" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="111.00" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (4,478,759 samples, 0.06%)</title><rect x="378.8" y="261" width="0.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="381.83" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt;::allocate (1,436,685 samples, 0.02%)</title><rect x="186.7" y="245" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="189.69" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::deallocate (928,677 samples, 0.01%)</title><rect x="207.5" y="261" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="210.47" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (12,622,080 samples, 0.18%)</title><rect x="1176.3" y="277" width="2.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1179.27" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (984,630 samples, 0.01%)</title><rect x="1106.0" y="261" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1108.96" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (897,896 samples, 0.01%)</title><rect x="367.5" y="293" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="370.53" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;std::tuple&lt;&gt; &gt; (1,023,207 samples, 0.01%)</title><rect x="169.5" y="261" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="172.46" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt;::_M_next (1,986,068 samples, 0.03%)</title><rect x="171.3" y="261" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="174.30" y="271.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (2,681,557 samples, 0.04%)</title><rect x="19.4" y="293" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="22.37" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt; (3,738,483 samples, 0.05%)</title><rect x="889.8" y="213" width="0.6" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="892.80" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::max_size (626,391 samples, 0.01%)</title><rect x="145.9" y="197" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="148.87" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator= (3,027,296 samples, 0.04%)</title><rect x="1023.4" y="293" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1026.36" y="303.5" ></text>
</g>
<g >
<title>boost::tuples::detail::cnull (2,221,589 samples, 0.03%)</title><rect x="1007.6" y="261" width="0.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1010.59" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (1,175,788 samples, 0.02%)</title><rect x="1019.7" y="277" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1022.72" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt; (1,782,724 samples, 0.03%)</title><rect x="890.5" y="229" width="0.4" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="893.55" y="239.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (3,683,686 samples, 0.05%)</title><rect x="787.8" y="197" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="790.80" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (4,052,183 samples, 0.06%)</title><rect x="536.4" y="165" width="0.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="539.43" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (2,267,026 samples, 0.03%)</title><rect x="1040.8" y="149" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1043.82" y="159.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (2,953,650 samples, 0.04%)</title><rect x="412.4" y="213" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="415.38" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (11,724,181 samples, 0.17%)</title><rect x="114.6" y="181" width="1.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="117.56" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (826,822 samples, 0.01%)</title><rect x="1124.9" y="277" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1127.87" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (924,202 samples, 0.01%)</title><rect x="184.5" y="261" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="187.53" y="271.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (684,771 samples, 0.01%)</title><rect x="543.5" y="181" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="546.48" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (4,275,809 samples, 0.06%)</title><rect x="1049.3" y="213" width="0.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1052.25" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (7,499,435 samples, 0.11%)</title><rect x="993.2" y="229" width="1.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="996.25" y="239.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;unsigned long, unsigned long&gt; (5,993,531 samples, 0.09%)</title><rect x="1102.8" y="213" width="1.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1105.78" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (16,815,204 samples, 0.24%)</title><rect x="1139.0" y="293" width="2.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1141.95" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (2,502,025 samples, 0.04%)</title><rect x="760.9" y="181" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="763.89" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::max_size (1,124,161 samples, 0.02%)</title><rect x="1061.6" y="261" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1064.62" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt;::_Iter_equals_val (1,026,994 samples, 0.01%)</title><rect x="62.8" y="229" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="65.82" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (2,464,515 samples, 0.04%)</title><rect x="157.5" y="261" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="160.54" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (1,333,854 samples, 0.02%)</title><rect x="1109.1" y="277" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1112.11" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (7,119,602 samples, 0.10%)</title><rect x="1162.2" y="245" width="1.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1165.18" y="255.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (7,705,381 samples, 0.11%)</title><rect x="431.3" y="213" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="434.25" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (4,145,630 samples, 0.06%)</title><rect x="1121.0" y="277" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1124.04" y="287.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (719,164 samples, 0.01%)</title><rect x="206.5" y="165" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="209.53" y="175.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (1,102,621 samples, 0.02%)</title><rect x="340.2" y="293" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="343.20" y="303.5" ></text>
</g>
<g >
<title>dl_main (1,597,974 samples, 0.02%)</title><rect x="13.2" y="341" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="16.21" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (24,163,715 samples, 0.35%)</title><rect x="1071.7" y="197" width="4.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1074.66" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (8,103,166 samples, 0.12%)</title><rect x="1015.5" y="261" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1018.47" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt;, true&gt;::_S_get (616,480 samples, 0.01%)</title><rect x="166.1" y="245" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="169.08" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (1,323,736 samples, 0.02%)</title><rect x="1108.6" y="245" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1111.63" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (6,629,303 samples, 0.10%)</title><rect x="1139.3" y="277" width="1.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1142.32" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (1,759,327 samples, 0.03%)</title><rect x="530.7" y="165" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="533.74" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (916,392 samples, 0.01%)</title><rect x="28.8" y="293" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="31.81" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_check_len (31,696,810 samples, 0.45%)</title><rect x="1050.8" y="261" width="5.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1053.80" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (218,139,451 samples, 3.13%)</title><rect x="1025.2" y="277" width="36.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1028.19" y="287.5" >std..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (1,782,579 samples, 0.03%)</title><rect x="93.8" y="181" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="96.84" y="191.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_not_relaxed&gt; (2,412,825 samples, 0.03%)</title><rect x="101.2" y="181" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="104.22" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (34,697,352 samples, 0.50%)</title><rect x="1092.8" y="261" width="5.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1095.82" y="271.5" ></text>
</g>
<g >
<title>boost::graph_detail::push&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (2,052,887 samples, 0.03%)</title><rect x="1164.1" y="229" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1167.07" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;float, std::allocator&lt;float&gt; &gt;::_M_insert&lt;float const&amp;&gt; (3,796,064 samples, 0.05%)</title><rect x="1129.0" y="293" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1132.00" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned long&gt;, unsigned long&gt;::_S_select_on_copy (2,670,907 samples, 0.04%)</title><rect x="219.4" y="293" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="222.44" y="303.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (1,820,791 samples, 0.03%)</title><rect x="339.4" y="309" width="0.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="342.37" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (1,136,956 samples, 0.02%)</title><rect x="434.0" y="197" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="436.98" y="207.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::parent (748,494 samples, 0.01%)</title><rect x="541.1" y="181" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="544.06" y="191.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (1,255,400 samples, 0.02%)</title><rect x="126.1" y="213" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="129.06" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (5,646,076 samples, 0.08%)</title><rect x="149.5" y="261" width="0.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="152.47" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (36,805,658 samples, 0.53%)</title><rect x="105.1" y="197" width="6.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="108.06" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_ptr (719,837 samples, 0.01%)</title><rect x="182.0" y="181" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="185.00" y="191.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;float&gt;::operator* (3,172,209 samples, 0.05%)</title><rect x="1131.1" y="293" width="0.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1134.11" y="303.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (55,704,759 samples, 0.80%)</title><rect x="194.5" y="277" width="9.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="197.52" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (2,189,619 samples, 0.03%)</title><rect x="763.2" y="181" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="766.23" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (11,107,313 samples, 0.16%)</title><rect x="197.1" y="213" width="1.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="200.15" y="223.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (50,850,576 samples, 0.73%)</title><rect x="678.4" y="85" width="8.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="681.39" y="95.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Deque_base (772,757 samples, 0.01%)</title><rect x="1017.7" y="261" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1020.71" y="271.5" ></text>
</g>
<g >
<title>do_exit (3,209,267 samples, 0.05%)</title><rect x="1179.3" y="309" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1182.26" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (9,320,876 samples, 0.13%)</title><rect x="1161.9" y="277" width="1.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1164.85" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (8,660,848 samples, 0.12%)</title><rect x="133.8" y="261" width="1.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="136.80" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned long const, float&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (646,281 samples, 0.01%)</title><rect x="1138.2" y="261" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1141.21" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (2,572,996 samples, 0.04%)</title><rect x="161.5" y="213" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="164.51" y="223.5" ></text>
</g>
<g >
<title>boost::graph_detail::find_dispatch&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (99,951,230 samples, 1.43%)</title><rect x="61.3" y="277" width="17.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="64.32" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (2,408,906 samples, 0.03%)</title><rect x="148.7" y="229" width="0.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="151.68" y="239.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (16,327,350 samples, 0.23%)</title><rect x="113.8" y="197" width="2.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="116.78" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (11,178,668 samples, 0.16%)</title><rect x="722.1" y="213" width="1.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="725.09" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (3,092,159 samples, 0.04%)</title><rect x="198.0" y="181" width="0.5" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="200.95" y="191.5" ></text>
</g>
<g >
<title>std::make_pair&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, bool&gt; (10,194,143 samples, 0.15%)</title><rect x="79.8" y="293" width="1.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="82.82" y="303.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (5,814,511 samples, 0.08%)</title><rect x="603.1" y="213" width="1.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="606.14" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_front (6,675,157 samples, 0.10%)</title><rect x="1013.3" y="277" width="1.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1016.29" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (8,057,179 samples, 0.12%)</title><rect x="145.1" y="245" width="1.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="148.07" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (6,078,770 samples, 0.09%)</title><rect x="437.5" y="181" width="1.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="440.52" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (1,677,193 samples, 0.02%)</title><rect x="974.0" y="293" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="977.03" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (114,084,627 samples, 1.64%)</title><rect x="976.9" y="293" width="19.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="979.87" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (4,492,345 samples, 0.06%)</title><rect x="149.6" y="229" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="152.63" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (18,353,630 samples, 0.26%)</title><rect x="534.0" y="181" width="3.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="537.01" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (13,535,541 samples, 0.19%)</title><rect x="1072.3" y="181" width="2.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1075.31" y="191.5" ></text>
</g>
<g >
<title>boost::relax_target&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::plus&lt;float&gt;, std::less&lt;float&gt; &gt; (2,803,690 samples, 0.04%)</title><rect x="895.9" y="229" width="0.5" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="898.94" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::deallocate (724,502 samples, 0.01%)</title><rect x="1078.3" y="245" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1081.27" y="255.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (10,366,985 samples, 0.15%)</title><rect x="210.5" y="261" width="1.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="213.47" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_relocate (23,626,919 samples, 0.34%)</title><rect x="1056.5" y="261" width="4.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1059.50" y="271.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long*&gt; (645,089 samples, 0.01%)</title><rect x="1119.0" y="197" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1122.01" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate (618,759 samples, 0.01%)</title><rect x="1105.5" y="277" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1108.51" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_range_initialize&lt;unsigned long const*&gt; (2,262,168 samples, 0.03%)</title><rect x="1120.6" y="277" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1123.64" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (806,233 samples, 0.01%)</title><rect x="1115.0" y="261" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1117.97" y="271.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (18,908,758 samples, 0.27%)</title><rect x="504.1" y="197" width="3.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="507.11" y="207.5" ></text>
</g>
<g >
<title>_int_free (619,106 samples, 0.01%)</title><rect x="1160.9" y="133" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1163.88" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (7,157,944 samples, 0.10%)</title><rect x="1091.3" y="261" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1094.29" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (22,235,272 samples, 0.32%)</title><rect x="441.8" y="181" width="3.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="444.77" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (102,336,292 samples, 1.47%)</title><rect x="1033.1" y="245" width="17.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1036.10" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (1,257,770 samples, 0.02%)</title><rect x="116.0" y="133" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="119.01" y="143.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (10,165,841 samples, 0.15%)</title><rect x="505.6" y="181" width="1.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="508.57" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt;::_Hash_node (2,573,619 samples, 0.04%)</title><rect x="185.6" y="261" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="188.56" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size (11,297,673 samples, 0.16%)</title><rect x="1095.7" y="229" width="1.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1098.69" y="239.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (876,739 samples, 0.01%)</title><rect x="1144.8" y="197" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1147.83" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (822,533 samples, 0.01%)</title><rect x="211.4" y="181" width="0.2" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="214.45" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (3,763,822 samples, 0.05%)</title><rect x="1048.6" y="213" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1051.61" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (4,404,356 samples, 0.06%)</title><rect x="721.3" y="213" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="724.35" y="223.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*&gt; (619,980 samples, 0.01%)</title><rect x="1164.3" y="117" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1167.26" y="127.5" ></text>
</g>
<g >
<title>_int_free (1,575,706 samples, 0.02%)</title><rect x="1078.8" y="229" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1081.79" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (11,143,245 samples, 0.16%)</title><rect x="752.5" y="149" width="1.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="755.45" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (1,464,390 samples, 0.02%)</title><rect x="1037.2" y="181" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1040.21" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (2,411,475 samples, 0.03%)</title><rect x="111.7" y="181" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="114.72" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::empty (21,944,808 samples, 0.32%)</title><rect x="1018.9" y="293" width="3.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1021.85" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (7,209,344 samples, 0.10%)</title><rect x="217.3" y="293" width="1.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="220.33" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (918,607 samples, 0.01%)</title><rect x="1137.2" y="277" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1140.16" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (92,155,005 samples, 1.32%)</title><rect x="1034.8" y="229" width="15.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1037.82" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back (8,146,219 samples, 0.12%)</title><rect x="508.0" y="197" width="1.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="511.00" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (19,005,565 samples, 0.27%)</title><rect x="1109.8" y="261" width="3.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1112.78" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::allocate (614,321 samples, 0.01%)</title><rect x="194.0" y="229" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="197.00" y="239.5" ></text>
</g>
<g >
<title>boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~basic_ptree (790,733 samples, 0.01%)</title><rect x="20.0" y="357" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="23.05" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (718,584 samples, 0.01%)</title><rect x="178.4" y="213" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="181.44" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;unsigned long const, float&gt;, false, false&gt;::operator++ (1,249,423 samples, 0.02%)</title><rect x="1130.0" y="309" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1133.03" y="319.5" ></text>
</g>
<g >
<title>__libc_start_main (6,752,853,553 samples, 96.93%)</title><rect x="21.4" y="373" width="1143.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="24.35" y="383.5" >__libc_start_main</text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (8,119,884 samples, 0.12%)</title><rect x="542.1" y="165" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="545.10" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (3,180,621 samples, 0.05%)</title><rect x="221.4" y="277" width="0.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="224.42" y="287.5" ></text>
</g>
<g >
<title>std::make_pair&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, bool&gt; (1,103,330 samples, 0.02%)</title><rect x="343.5" y="293" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="346.53" y="303.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (4,831,218 samples, 0.07%)</title><rect x="48.4" y="229" width="0.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="51.40" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_nothrow_relocate (723,188 samples, 0.01%)</title><rect x="1060.9" y="245" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1063.90" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (6,352,170 samples, 0.09%)</title><rect x="220.3" y="277" width="1.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="223.35" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (8,205,774 samples, 0.12%)</title><rect x="368.3" y="293" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="371.28" y="303.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (839,380 samples, 0.01%)</title><rect x="122.4" y="149" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="125.39" y="159.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (943,240 samples, 0.01%)</title><rect x="98.4" y="165" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="101.41" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::begin (923,324 samples, 0.01%)</title><rect x="204.1" y="293" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="207.06" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::push_back (810,095 samples, 0.01%)</title><rect x="1141.9" y="309" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1144.93" y="319.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (3,665,347 samples, 0.05%)</title><rect x="1118.0" y="181" width="0.7" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1121.03" y="191.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_Tuple_impl (6,491,282 samples, 0.09%)</title><rect x="43.4" y="229" width="1.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="46.40" y="239.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,562,881 samples, 0.04%)</title><rect x="1161.0" y="133" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1163.98" y="143.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch2&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (216,432,373 samples, 3.11%)</title><rect x="89.8" y="245" width="36.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="92.82" y="255.5" >boo..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,671,946 samples, 0.02%)</title><rect x="173.2" y="149" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="176.16" y="159.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_initialize_vertex&gt; (5,700,117 samples, 0.08%)</title><rect x="383.3" y="213" width="1.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="386.35" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (666,174 samples, 0.01%)</title><rect x="340.3" y="245" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="343.28" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (824,747 samples, 0.01%)</title><rect x="38.0" y="213" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="40.98" y="223.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1,610,653 samples, 0.02%)</title><rect x="1179.3" y="261" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1182.30" y="271.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1,960,869 samples, 0.03%)</title><rect x="1094.1" y="245" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1097.12" y="255.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_relaxed&gt; (663,949 samples, 0.01%)</title><rect x="604.5" y="213" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="607.54" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (868,626 samples, 0.01%)</title><rect x="531.9" y="149" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="534.85" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (6,468,963 samples, 0.09%)</title><rect x="140.3" y="165" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.34" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (613,811 samples, 0.01%)</title><rect x="163.0" y="229" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="166.00" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_S_max_size (721,674 samples, 0.01%)</title><rect x="900.2" y="229" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="903.24" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (2,733,659 samples, 0.04%)</title><rect x="1144.7" y="261" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1147.69" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (1,719,523 samples, 0.02%)</title><rect x="549.0" y="181" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="552.05" y="191.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_filebuf (917,750 samples, 0.01%)</title><rect x="20.6" y="357" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="23.63" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt;::destroy&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (6,883,153 samples, 0.10%)</title><rect x="172.4" y="229" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="175.42" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::max_size (2,901,243 samples, 0.04%)</title><rect x="1053.8" y="213" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1056.80" y="223.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (716,658 samples, 0.01%)</title><rect x="202.1" y="149" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="205.14" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (615,811 samples, 0.01%)</title><rect x="194.2" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="197.24" y="287.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (807,355 samples, 0.01%)</title><rect x="1178.2" y="245" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1181.17" y="255.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, true&gt;::_Head_base (828,043 samples, 0.01%)</title><rect x="44.0" y="213" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="46.95" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (3,215,382 samples, 0.05%)</title><rect x="899.8" y="261" width="0.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="902.82" y="271.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (2,983,965 samples, 0.04%)</title><rect x="1164.0" y="261" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1167.00" y="271.5" ></text>
</g>
<g >
<title>__brk (1,302,995 samples, 0.02%)</title><rect x="12.8" y="357" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="15.80" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (837,517 samples, 0.01%)</title><rect x="144.9" y="229" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="147.87" y="239.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (1,886,845 samples, 0.03%)</title><rect x="116.2" y="149" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="119.23" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (3,085,390 samples, 0.04%)</title><rect x="68.0" y="213" width="0.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="71.01" y="223.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (1,353,076 samples, 0.02%)</title><rect x="119.9" y="149" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="122.86" y="159.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (3,119,874 samples, 0.04%)</title><rect x="734.1" y="197" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="737.11" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (1,142,575 samples, 0.02%)</title><rect x="499.2" y="165" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="502.16" y="175.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (1,886,846 samples, 0.03%)</title><rect x="104.3" y="165" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="107.28" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (2,992,163 samples, 0.04%)</title><rect x="175.8" y="261" width="0.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="178.76" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_node_allocator (1,433,012 samples, 0.02%)</title><rect x="165.9" y="261" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="168.94" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt;::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, true&gt; (5,355,163 samples, 0.08%)</title><rect x="1000.7" y="261" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1003.65" y="271.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt; (3,464,285 samples, 0.05%)</title><rect x="146.9" y="213" width="0.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="149.89" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (1,152,127 samples, 0.02%)</title><rect x="130.2" y="245" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="133.24" y="255.5" ></text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (6,495,519 samples, 0.09%)</title><rect x="418.7" y="197" width="1.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="421.68" y="207.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (684,713 samples, 0.01%)</title><rect x="434.1" y="181" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="437.06" y="191.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (4,492,168 samples, 0.06%)</title><rect x="119.3" y="165" width="0.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="122.32" y="175.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (10,943,701 samples, 0.16%)</title><rect x="373.9" y="277" width="1.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="376.94" y="287.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::swap_heap_elements (80,356,990 samples, 1.15%)</title><rect x="462.8" y="181" width="13.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="465.79" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (7,092,006 samples, 0.10%)</title><rect x="172.4" y="245" width="1.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="175.40" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (939,713 samples, 0.01%)</title><rect x="438.4" y="165" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="441.39" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (2,495,202 samples, 0.04%)</title><rect x="134.3" y="213" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="137.28" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::allocate (2,972,660 samples, 0.04%)</title><rect x="186.6" y="261" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="189.60" y="271.5" ></text>
</g>
<g >
<title>[unknown] (2,278,461 samples, 0.03%)</title><rect x="10.0" y="373" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.03" y="383.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (49,519,267 samples, 0.71%)</title><rect x="195.5" y="245" width="8.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="198.48" y="255.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, double&gt; (11,909,441 samples, 0.17%)</title><rect x="84.8" y="293" width="2.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="87.78" y="303.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_not_relaxed&gt; (2,450,307 samples, 0.04%)</title><rect x="604.1" y="213" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="607.13" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned long&gt;, unsigned long&gt;::_S_select_on_copy (1,045,144 samples, 0.02%)</title><rect x="136.8" y="197" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="139.78" y="207.5" ></text>
</g>
<g >
<title>do_anonymous_page (10,818,466 samples, 0.16%)</title><rect x="1176.5" y="261" width="1.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1179.50" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::~_Vector_impl (628,492 samples, 0.01%)</title><rect x="142.0" y="101" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="144.99" y="111.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (1,568,336 samples, 0.02%)</title><rect x="149.1" y="245" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="152.13" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (7,896,027 samples, 0.11%)</title><rect x="1041.6" y="197" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1044.59" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (1,476,857 samples, 0.02%)</title><rect x="1136.7" y="245" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1139.66" y="255.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::initialize_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (733,233 samples, 0.01%)</title><rect x="90.0" y="213" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="92.98" y="223.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (5,648,635 samples, 0.08%)</title><rect x="38.1" y="213" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="41.12" y="223.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (855,643 samples, 0.01%)</title><rect x="548.5" y="197" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="551.54" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (48,420,994 samples, 0.70%)</title><rect x="746.2" y="165" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="749.16" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (1,956,394 samples, 0.03%)</title><rect x="32.9" y="293" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="35.92" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (16,867,735 samples, 0.24%)</title><rect x="224.6" y="309" width="2.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="227.64" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (7,886,049 samples, 0.11%)</title><rect x="1078.1" y="261" width="1.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1081.05" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (8,987,427 samples, 0.13%)</title><rect x="1126.1" y="245" width="1.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1129.12" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (53,957,637 samples, 0.77%)</title><rect x="194.8" y="261" width="9.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="197.82" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (20,538,975 samples, 0.29%)</title><rect x="177.1" y="261" width="3.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="180.10" y="271.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (18,888,322 samples, 0.27%)</title><rect x="199.2" y="197" width="3.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="202.15" y="207.5" ></text>
</g>
<g >
<title>all (6,966,478,841 samples, 100%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt;::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, true&gt; (7,161,695 samples, 0.10%)</title><rect x="761.3" y="181" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="764.31" y="191.5" ></text>
</g>
<g >
<title>std::plus&lt;float&gt;::operator (5,913,854 samples, 0.08%)</title><rect x="880.9" y="213" width="1.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="883.94" y="223.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (4,436,030 samples, 0.06%)</title><rect x="605.6" y="213" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="608.56" y="223.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (720,671 samples, 0.01%)</title><rect x="223.1" y="213" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="226.11" y="223.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (3,357,711 samples, 0.05%)</title><rect x="137.5" y="181" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="140.54" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt;::construct&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (22,121,369 samples, 0.32%)</title><rect x="187.5" y="245" width="3.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="190.46" y="255.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch1&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (216,954,733 samples, 3.11%)</title><rect x="89.8" y="261" width="36.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="92.82" y="271.5" >boo..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (772,191 samples, 0.01%)</title><rect x="1140.5" y="229" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1143.54" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;unsigned long, unsigned long&amp;, unsigned long*&gt;::_Deque_iterator (4,354,425 samples, 0.06%)</title><rect x="1012.3" y="245" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1015.35" y="255.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (945,823 samples, 0.01%)</title><rect x="102.9" y="165" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="105.85" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (2,947,300 samples, 0.04%)</title><rect x="1162.8" y="197" width="0.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1165.81" y="207.5" ></text>
</g>
<g >
<title>std::make_pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (12,336,949 samples, 0.18%)</title><rect x="760.4" y="197" width="2.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="763.43" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (1,139,044 samples, 0.02%)</title><rect x="1037.7" y="213" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1040.70" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_do_relocate (773,671 samples, 0.01%)</title><rect x="1098.7" y="261" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1101.70" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (17,058,509 samples, 0.24%)</title><rect x="209.5" y="293" width="2.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="212.46" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (3,681,553 samples, 0.05%)</title><rect x="179.2" y="213" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="182.22" y="223.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (912,001 samples, 0.01%)</title><rect x="546.6" y="197" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="549.61" y="207.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt; &gt; (4,954,561 samples, 0.07%)</title><rect x="342.4" y="245" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="345.37" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (5,019,514 samples, 0.07%)</title><rect x="1159.0" y="245" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1162.03" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_max_size (688,511 samples, 0.01%)</title><rect x="1062.8" y="213" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1065.80" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,375,211 samples, 0.02%)</title><rect x="338.7" y="261" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="341.66" y="271.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (7,706,079 samples, 0.11%)</title><rect x="99.1" y="197" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="102.09" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (1,443,535 samples, 0.02%)</title><rect x="1154.7" y="325" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1157.74" y="335.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (782,994 samples, 0.01%)</title><rect x="1177.9" y="245" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1180.93" y="255.5" ></text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (2,595,912 samples, 0.04%)</title><rect x="560.7" y="181" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="563.71" y="191.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_edge&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (101,664,527 samples, 1.46%)</title><rect x="414.0" y="213" width="17.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="417.03" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::~allocator (1,228,901 samples, 0.02%)</title><rect x="223.6" y="293" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="226.59" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::operator-&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long&gt; (819,522 samples, 0.01%)</title><rect x="996.3" y="261" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="999.31" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (15,021,231 samples, 0.22%)</title><rect x="754.4" y="165" width="2.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="757.36" y="175.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (10,921,484 samples, 0.16%)</title><rect x="957.6" y="245" width="1.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="960.63" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (1,268,465 samples, 0.02%)</title><rect x="1073.0" y="149" width="0.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1076.02" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (888,052 samples, 0.01%)</title><rect x="442.6" y="165" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="445.57" y="175.5" ></text>
</g>
<g >
<title>boost::detail::dummy_pmap_reference::operator=&lt;unsigned long&gt; (1,195,875 samples, 0.02%)</title><rect x="843.7" y="181" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="846.69" y="191.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (126,345,124 samples, 1.81%)</title><rect x="936.2" y="245" width="21.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="939.23" y="255.5" >b..</text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, true&gt;::_M_head (821,942 samples, 0.01%)</title><rect x="50.9" y="181" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="53.92" y="191.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long&gt; (2,659,160 samples, 0.04%)</title><rect x="1132.2" y="309" width="0.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1135.24" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,016,036 samples, 0.01%)</title><rect x="181.0" y="149" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="184.00" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (724,266 samples, 0.01%)</title><rect x="209.2" y="293" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="212.23" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (2,603,458 samples, 0.04%)</title><rect x="1137.4" y="261" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1140.36" y="271.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (874,075 samples, 0.01%)</title><rect x="1051.8" y="245" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1054.79" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (3,140,448 samples, 0.05%)</title><rect x="1079.4" y="261" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1082.39" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (7,302,954 samples, 0.10%)</title><rect x="960.8" y="261" width="1.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="963.83" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (1,044,564 samples, 0.01%)</title><rect x="97.9" y="165" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="100.90" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_valptr (2,066,034 samples, 0.03%)</title><rect x="165.6" y="261" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="168.59" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (2,939,421 samples, 0.04%)</title><rect x="532.9" y="197" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="535.92" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (1,046,196 samples, 0.02%)</title><rect x="113.6" y="197" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="116.60" y="207.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (2,833,234 samples, 0.04%)</title><rect x="137.6" y="165" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="140.63" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_v (621,702 samples, 0.01%)</title><rect x="180.3" y="229" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="183.34" y="239.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long const&amp;&gt; (617,691 samples, 0.01%)</title><rect x="216.8" y="261" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="219.84" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (1,024,917 samples, 0.01%)</title><rect x="226.2" y="245" width="0.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="229.24" y="255.5" ></text>
</g>
<g >
<title>boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;::property (1,338,825 samples, 0.02%)</title><rect x="78.6" y="293" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="81.63" y="303.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (2,257,019 samples, 0.03%)</title><rect x="167.9" y="181" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="170.91" y="191.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::vertex_set (953,565 samples, 0.01%)</title><rect x="550.3" y="165" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="553.26" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (722,308 samples, 0.01%)</title><rect x="134.6" y="197" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="137.56" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (1,342,401 samples, 0.02%)</title><rect x="195.2" y="245" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="198.20" y="255.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (2,681,557 samples, 0.04%)</title><rect x="19.4" y="309" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="22.37" y="319.5" ></text>
</g>
<g >
<title>std::equal_to&lt;unsigned long&gt;::operator (1,079,540 samples, 0.02%)</title><rect x="1140.1" y="213" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1143.12" y="223.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (2,640,296 samples, 0.04%)</title><rect x="681.3" y="69" width="0.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="684.31" y="79.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1,820,639 samples, 0.03%)</title><rect x="1063.5" y="261" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1066.51" y="271.5" ></text>
</g>
<g >
<title>std::operator==&lt;unsigned long, unsigned long&amp;, unsigned long*&gt; (2,556,710 samples, 0.04%)</title><rect x="1011.0" y="261" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1014.01" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (1,020,394 samples, 0.01%)</title><rect x="163.1" y="229" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="166.11" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (2,727,693 samples, 0.04%)</title><rect x="1137.3" y="277" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1140.34" y="287.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (13,552,979 samples, 0.19%)</title><rect x="840.7" y="197" width="2.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="843.70" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::deque (3,349,105 samples, 0.05%)</title><rect x="1017.0" y="277" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1020.05" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (2,075,883 samples, 0.03%)</title><rect x="1140.4" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1143.44" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::allocate (1,639,031 samples, 0.02%)</title><rect x="193.9" y="245" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="196.95" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_valptr (2,056,995 samples, 0.03%)</title><rect x="186.1" y="261" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="189.08" y="271.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::erase (1,202,140 samples, 0.02%)</title><rect x="1136.2" y="309" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1139.19" y="319.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (2,952,330 samples, 0.04%)</title><rect x="345.0" y="309" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="348.04" y="319.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (1,775,131 samples, 0.03%)</title><rect x="98.3" y="181" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="101.27" y="191.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (8,682,902 samples, 0.12%)</title><rect x="121.1" y="165" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="124.06" y="175.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (5,784,209 samples, 0.08%)</title><rect x="345.5" y="309" width="1.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="348.54" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (1,210,478 samples, 0.02%)</title><rect x="338.3" y="309" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="341.32" y="319.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (12,344,174 samples, 0.18%)</title><rect x="703.8" y="197" width="2.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="706.77" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::emplace_back&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,680,302 samples, 0.02%)</title><rect x="21.6" y="181" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="24.60" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size (620,448 samples, 0.01%)</title><rect x="218.0" y="261" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="220.96" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (859,664 samples, 0.01%)</title><rect x="1163.7" y="309" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1166.70" y="319.5" ></text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (600,784 samples, 0.01%)</title><rect x="431.8" y="197" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="434.83" y="207.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (855,270 samples, 0.01%)</title><rect x="513.3" y="213" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="516.30" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,719,523 samples, 0.02%)</title><rect x="549.0" y="149" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="552.05" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (11,538,878 samples, 0.17%)</title><rect x="1072.7" y="165" width="1.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1075.65" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (3,893,423 samples, 0.06%)</title><rect x="156.7" y="245" width="0.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="159.71" y="255.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (3,973,102 samples, 0.06%)</title><rect x="109.9" y="69" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="112.86" y="79.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long*&gt; (619,762 samples, 0.01%)</title><rect x="1047.0" y="133" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1050.02" y="143.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (8,479,978 samples, 0.12%)</title><rect x="115.1" y="165" width="1.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="118.11" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (26,786,322 samples, 0.38%)</title><rect x="1115.5" y="245" width="4.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1118.45" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (22,305,295 samples, 0.32%)</title><rect x="970.3" y="261" width="3.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="973.25" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::begin (5,178,193 samples, 0.07%)</title><rect x="762.7" y="197" width="0.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="765.73" y="207.5" ></text>
</g>
<g >
<title>boost::graph_detail::forward_container_tag::forward_container_tag (721,837 samples, 0.01%)</title><rect x="52.0" y="261" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="55.02" y="271.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::copy_impl (4,647,369 samples, 0.07%)</title><rect x="1164.0" y="293" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1166.98" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (346,134,775 samples, 4.97%)</title><rect x="903.4" y="293" width="58.7" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="906.44" y="303.5" >boost:..</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1,446,267 samples, 0.02%)</title><rect x="47.4" y="261" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="50.39" y="271.5" ></text>
</g>
<g >
<title>free_unref_page_list (867,944 samples, 0.01%)</title><rect x="1179.4" y="197" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1182.36" y="207.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple (5,031,521 samples, 0.07%)</title><rect x="168.3" y="229" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="171.29" y="239.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (2,624,124 samples, 0.04%)</title><rect x="503.6" y="197" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="506.55" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (1,568,963 samples, 0.02%)</title><rect x="131.4" y="229" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="134.38" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::deallocate (2,573,429 samples, 0.04%)</title><rect x="1157.7" y="229" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1160.67" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (669,276 samples, 0.01%)</title><rect x="1071.5" y="197" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1074.49" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (722,107 samples, 0.01%)</title><rect x="198.2" y="149" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="201.25" y="159.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (12,212,807 samples, 0.18%)</title><rect x="140.1" y="181" width="2.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="143.09" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::~allocator (1,226,505 samples, 0.02%)</title><rect x="1075.3" y="181" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1078.25" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,989,827 samples, 0.03%)</title><rect x="144.4" y="229" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="147.40" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size (1,265,182 samples, 0.02%)</title><rect x="1105.0" y="261" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1108.02" y="271.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::discover_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (6,835,714 samples, 0.10%)</title><rect x="412.9" y="213" width="1.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="415.88" y="223.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_examine_edge&gt; (2,941,765 samples, 0.04%)</title><rect x="604.7" y="213" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="607.65" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (1,132,970 samples, 0.02%)</title><rect x="40.8" y="261" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="43.80" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (812,624 samples, 0.01%)</title><rect x="1138.4" y="245" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1141.43" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (105,288,853 samples, 1.51%)</title><rect x="1032.9" y="261" width="17.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1035.85" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (1,680,141 samples, 0.02%)</title><rect x="527.0" y="197" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="530.02" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_use_relocate (3,076,075 samples, 0.04%)</title><rect x="1060.5" y="261" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1063.50" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;unsigned long const, float&gt;, false&gt;::_M_incr (1,249,423 samples, 0.02%)</title><rect x="1130.0" y="293" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1133.03" y="303.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (3,013,271 samples, 0.04%)</title><rect x="691.4" y="181" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="694.36" y="191.5" ></text>
</g>
<g >
<title>std::make_pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (8,485,311 samples, 0.12%)</title><rect x="1000.1" y="277" width="1.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1003.12" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (4,009,529 samples, 0.06%)</title><rect x="1091.5" y="245" width="0.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1094.54" y="255.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;void, true&gt; (2,154,556 samples, 0.03%)</title><rect x="192.4" y="277" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="195.38" y="287.5" ></text>
</g>
<g >
<title>boost::graph_detail::push_dispatch&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,654,468 samples, 0.02%)</title><rect x="19.5" y="245" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="22.47" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (807,046 samples, 0.01%)</title><rect x="1137.6" y="229" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1140.65" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size (3,454,446 samples, 0.05%)</title><rect x="145.6" y="213" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="148.60" y="223.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::top (25,903,215 samples, 0.37%)</title><rect x="533.4" y="213" width="4.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="536.42" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (629,981 samples, 0.01%)</title><rect x="125.6" y="213" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="128.56" y="223.5" ></text>
</g>
<g >
<title>boost::graph_detail::find_dispatch&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (7,062,569 samples, 0.10%)</title><rect x="342.3" y="277" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="345.26" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt;::_M_next (1,956,644 samples, 0.03%)</title><rect x="153.7" y="261" width="0.4" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="156.73" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (5,734,972 samples, 0.08%)</title><rect x="172.6" y="197" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="175.56" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (1,491,771 samples, 0.02%)</title><rect x="1081.0" y="277" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1084.02" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (5,030,731 samples, 0.07%)</title><rect x="1157.5" y="245" width="0.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1160.46" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (735,265 samples, 0.01%)</title><rect x="137.1" y="165" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="140.15" y="175.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (2,810,428 samples, 0.04%)</title><rect x="1117.6" y="181" width="0.4" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1120.56" y="191.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (1,054,131 samples, 0.02%)</title><rect x="29.2" y="261" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="32.16" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::~allocator (712,698 samples, 0.01%)</title><rect x="227.2" y="277" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="230.20" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1,330,989 samples, 0.02%)</title><rect x="83.1" y="277" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="86.08" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::empty (2,503,232 samples, 0.04%)</title><rect x="133.0" y="277" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="136.00" y="287.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pop (440,632,330 samples, 6.33%)</title><rect x="438.6" y="213" width="74.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="441.63" y="223.5" >boost::d..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (3,266,721 samples, 0.05%)</title><rect x="500.7" y="165" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="503.73" y="175.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (32,929,830 samples, 0.47%)</title><rect x="105.7" y="181" width="5.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="108.72" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~vector (10,551,423 samples, 0.15%)</title><rect x="1161.9" y="325" width="1.7" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1164.85" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (1,028,859 samples, 0.01%)</title><rect x="219.7" y="261" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="222.72" y="271.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::operator[] (7,633,493 samples, 0.11%)</title><rect x="1137.1" y="309" width="1.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1140.08" y="319.5" ></text>
</g>
<g >
<title>boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;::property (615,690 samples, 0.01%)</title><rect x="83.3" y="309" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="86.34" y="319.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1,260,463 samples, 0.02%)</title><rect x="146.0" y="197" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="148.97" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::select_on_container_copy_construction (1,541,188 samples, 0.02%)</title><rect x="219.6" y="277" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="222.63" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (1,016,036 samples, 0.01%)</title><rect x="181.0" y="181" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="184.00" y="191.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (667,449 samples, 0.01%)</title><rect x="543.4" y="149" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="546.37" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (1,668,731 samples, 0.02%)</title><rect x="127.8" y="229" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="130.81" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (628,542 samples, 0.01%)</title><rect x="134.8" y="133" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="137.83" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (34,071,049 samples, 0.49%)</title><rect x="218.9" y="309" width="5.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="221.87" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (3,797,389 samples, 0.05%)</title><rect x="1160.8" y="149" width="0.6" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1163.77" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (1,371,173 samples, 0.02%)</title><rect x="1140.5" y="261" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1143.48" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (2,586,024 samples, 0.04%)</title><rect x="1050.0" y="213" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1052.98" y="223.5" ></text>
</g>
<g >
<title>__do_page_fault (1,016,036 samples, 0.01%)</title><rect x="181.0" y="165" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="184.00" y="175.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (5,622,447 samples, 0.08%)</title><rect x="342.3" y="261" width="0.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="345.30" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (4,932,542 samples, 0.07%)</title><rect x="189.7" y="181" width="0.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="192.72" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back (9,153,877 samples, 0.13%)</title><rect x="511.0" y="197" width="1.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="513.99" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (624,712 samples, 0.01%)</title><rect x="181.6" y="213" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="184.64" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~_Vector_base (1,545,547 samples, 0.02%)</title><rect x="1009.4" y="293" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1012.44" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (723,084 samples, 0.01%)</title><rect x="160.3" y="213" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="163.34" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (10,149,437 samples, 0.15%)</title><rect x="1125.9" y="261" width="1.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1128.93" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::allocator (3,315,659 samples, 0.05%)</title><rect x="1065.7" y="245" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1068.68" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (9,812,503 samples, 0.14%)</title><rect x="994.5" y="245" width="1.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="997.53" y="255.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (7,849,665 samples, 0.11%)</title><rect x="817.0" y="181" width="1.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="820.02" y="191.5" ></text>
</g>
<g >
<title>mmput (3,086,288 samples, 0.04%)</title><rect x="1179.3" y="293" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1182.28" y="303.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (39,182,997 samples, 0.56%)</title><rect x="996.8" y="293" width="6.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="999.83" y="303.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt;*&gt;::pointer_to (1,107,831 samples, 0.02%)</title><rect x="1159.7" y="229" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1162.69" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,736,254 samples, 0.02%)</title><rect x="1075.5" y="181" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1078.46" y="191.5" ></text>
</g>
<g >
<title>get_page_from_freelist (6,194,243 samples, 0.09%)</title><rect x="1176.8" y="213" width="1.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1179.82" y="223.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (12,499,550 samples, 0.18%)</title><rect x="893.8" y="229" width="2.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="896.83" y="239.5" ></text>
</g>
<g >
<title>boost::detail::vertex_property_map_generator&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long&gt;::build (4,639,754 samples, 0.07%)</title><rect x="550.1" y="213" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="553.14" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (1,142,869 samples, 0.02%)</title><rect x="129.5" y="229" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="132.52" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt;::_M_next (5,387,470 samples, 0.08%)</title><rect x="1156.4" y="261" width="0.9" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1159.36" y="271.5" ></text>
</g>
<g >
<title>std::fill&lt;unsigned long*, unsigned long&gt; (2,461,936 samples, 0.04%)</title><rect x="550.4" y="181" width="0.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="553.44" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (3,978,252 samples, 0.06%)</title><rect x="1136.4" y="293" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1139.39" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (701,697 samples, 0.01%)</title><rect x="22.4" y="325" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="25.40" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,348,710 samples, 0.02%)</title><rect x="19.5" y="197" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="22.52" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_node_allocator (613,766 samples, 0.01%)</title><rect x="154.5" y="229" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="157.48" y="239.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::verify_heap (809,983 samples, 0.01%)</title><rect x="525.0" y="197" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="528.04" y="207.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (69,575,630 samples, 1.00%)</title><rect x="827.4" y="165" width="11.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="830.38" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;float&gt;::_M_ptr (1,122,518 samples, 0.02%)</title><rect x="1131.5" y="261" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1134.46" y="271.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (1,464,153 samples, 0.02%)</title><rect x="1047.8" y="149" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1050.77" y="159.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long&gt; (9,532,270 samples, 0.14%)</title><rect x="891.4" y="229" width="1.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="894.41" y="239.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (1,045,126 samples, 0.02%)</title><rect x="100.5" y="181" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="103.46" y="191.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (2,983,965 samples, 0.04%)</title><rect x="1164.0" y="277" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1167.00" y="287.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (1,475,768 samples, 0.02%)</title><rect x="541.9" y="165" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="544.85" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (8,272,469 samples, 0.12%)</title><rect x="1087.5" y="261" width="1.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1090.46" y="271.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (5,942,874 samples, 0.09%)</title><rect x="522.2" y="165" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="525.21" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_nothrow_relocate (685,639 samples, 0.01%)</title><rect x="1056.4" y="261" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1059.38" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (25,520,583 samples, 0.37%)</title><rect x="187.1" y="261" width="4.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="190.11" y="271.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::vec_adj_list_impl (4,647,369 samples, 0.07%)</title><rect x="1164.0" y="309" width="0.8" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1166.98" y="319.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (1,352,210 samples, 0.02%)</title><rect x="1179.6" y="213" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1182.57" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (2,193,965 samples, 0.03%)</title><rect x="151.4" y="245" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="154.45" y="255.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (628,519 samples, 0.01%)</title><rect x="504.0" y="197" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="507.00" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (5,340,516 samples, 0.08%)</title><rect x="226.1" y="261" width="0.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="229.10" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Hash_node_value_base (1,233,206 samples, 0.02%)</title><rect x="185.8" y="245" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="188.78" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (1,144,777 samples, 0.02%)</title><rect x="882.4" y="213" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="885.35" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (2,029,418 samples, 0.03%)</title><rect x="1144.8" y="213" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1147.77" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (813,331 samples, 0.01%)</title><rect x="1137.2" y="261" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1140.16" y="271.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (13,202,125 samples, 0.19%)</title><rect x="541.2" y="181" width="2.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="544.24" y="191.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_discover_vertex&gt; (2,859,931 samples, 0.04%)</title><rect x="413.5" y="197" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="416.55" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (5,110,372 samples, 0.07%)</title><rect x="664.0" y="133" width="0.8" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="666.98" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::operator++ (2,687,096 samples, 0.04%)</title><rect x="367.8" y="293" width="0.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="370.82" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (2,568,241 samples, 0.04%)</title><rect x="1143.8" y="309" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1146.83" y="319.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, false, false&gt;::operator* (4,415,211 samples, 0.06%)</title><rect x="888.2" y="229" width="0.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="891.22" y="239.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (916,958 samples, 0.01%)</title><rect x="1135.6" y="309" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1138.57" y="319.5" ></text>
</g>
<g >
<title>boost::range_detail::integer_iterator&lt;unsigned long&gt;::equal (3,505,417 samples, 0.05%)</title><rect x="892.4" y="197" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="895.39" y="207.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (2,160,050 samples, 0.03%)</title><rect x="189.3" y="181" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="192.25" y="191.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (15,604,974 samples, 0.22%)</title><rect x="1044.6" y="149" width="2.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1047.60" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_max_size (11,797,749 samples, 0.17%)</title><rect x="1052.8" y="229" width="2.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1055.78" y="239.5" ></text>
</g>
<g >
<title>boost::dummy_property_map::operator[]&lt;unsigned long&gt; (1,017,361 samples, 0.01%)</title><rect x="788.6" y="197" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="791.64" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,041,640 samples, 0.01%)</title><rect x="1092.5" y="261" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1095.51" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (678,667 samples, 0.01%)</title><rect x="1120.6" y="261" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1123.64" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (4,498,341 samples, 0.06%)</title><rect x="131.0" y="261" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="133.97" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::vector (16,383,069 samples, 0.24%)</title><rect x="1063.8" y="293" width="2.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1066.81" y="303.5" ></text>
</g>
<g >
<title>read_graphml (5,683,034 samples, 0.08%)</title><rect x="1164.0" y="341" width="0.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1166.96" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1,337,394 samples, 0.02%)</title><rect x="198.6" y="181" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="201.60" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_check_len (767,206 samples, 0.01%)</title><rect x="1025.1" y="277" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1028.06" y="287.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator* (628,971 samples, 0.01%)</title><rect x="22.0" y="277" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="24.96" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_store_code (619,487 samples, 0.01%)</title><rect x="183.9" y="261" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="186.94" y="271.5" ></text>
</g>
<g >
<title>boost::graph_detail::sequence_tag::sequence_tag (794,303 samples, 0.01%)</title><rect x="342.1" y="245" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="345.13" y="255.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (1,577,363 samples, 0.02%)</title><rect x="1119.6" y="213" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1122.60" y="223.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (724,007 samples, 0.01%)</title><rect x="84.0" y="293" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="86.98" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate (2,270,015 samples, 0.03%)</title><rect x="218.1" y="277" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="221.10" y="287.5" ></text>
</g>
<g >
<title>std::forward&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (1,068,151 samples, 0.02%)</title><rect x="1050.5" y="245" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1053.45" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt; (2,755,440 samples, 0.04%)</title><rect x="888.4" y="213" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="891.44" y="223.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::swap_heap_elements (2,337,454 samples, 0.03%)</title><rect x="502.9" y="197" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="505.95" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (1,238,604 samples, 0.02%)</title><rect x="1071.3" y="197" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1074.28" y="207.5" ></text>
</g>
<g >
<title>boost::graph_detail::forward_container_tag::forward_container_tag (2,777,034 samples, 0.04%)</title><rect x="56.6" y="245" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="59.57" y="255.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (1,726,946 samples, 0.02%)</title><rect x="901.0" y="293" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="904.02" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::~_Vector_impl (5,319,709 samples, 0.08%)</title><rect x="1127.6" y="261" width="0.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1130.65" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt;::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, true&gt; (667,358 samples, 0.01%)</title><rect x="762.5" y="197" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="765.52" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned long&gt;, unsigned long&gt;::_S_select_on_copy (5,841,141 samples, 0.08%)</title><rect x="1107.9" y="277" width="1.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1110.87" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (1,539,690 samples, 0.02%)</title><rect x="224.4" y="293" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="227.38" y="303.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::stored_edge_property (923,186 samples, 0.01%)</title><rect x="29.9" y="309" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="32.94" y="319.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (1,247,522 samples, 0.02%)</title><rect x="998.5" y="261" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1001.54" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (32,025,829 samples, 0.46%)</title><rect x="1114.7" y="277" width="5.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1117.70" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (52,106,348 samples, 0.75%)</title><rect x="1067.5" y="277" width="8.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1070.45" y="287.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_not_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (63,822,640 samples, 0.92%)</title><rect x="550.9" y="213" width="10.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="553.93" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (1,041,945 samples, 0.01%)</title><rect x="1076.0" y="229" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1078.97" y="239.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (1,782,579 samples, 0.03%)</title><rect x="93.8" y="197" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="96.84" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (1,350,647 samples, 0.02%)</title><rect x="110.6" y="149" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="113.64" y="159.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (4,586,082 samples, 0.07%)</title><rect x="102.5" y="181" width="0.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="105.46" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (33,578,993 samples, 0.48%)</title><rect x="158.3" y="277" width="5.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="161.29" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (1,020,188 samples, 0.01%)</title><rect x="1124.7" y="277" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1127.70" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::emplace_back&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,549,367 samples, 0.02%)</title><rect x="19.5" y="213" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="22.49" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~_Vector_base (2,162,358 samples, 0.03%)</title><rect x="207.4" y="293" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="210.35" y="303.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (1,959,968 samples, 0.03%)</title><rect x="544.5" y="149" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="547.50" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::new_allocator (616,162 samples, 0.01%)</title><rect x="221.5" y="261" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="224.49" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (10,655,822 samples, 0.15%)</title><rect x="108.8" y="133" width="1.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="111.84" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_valptr (771,674 samples, 0.01%)</title><rect x="1139.9" y="197" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1142.90" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (3,912,655 samples, 0.06%)</title><rect x="1104.4" y="261" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1107.36" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (772,780 samples, 0.01%)</title><rect x="1112.9" y="245" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1115.87" y="255.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (5,436,452 samples, 0.08%)</title><rect x="85.7" y="277" width="0.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="88.68" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::~allocator (2,425,543 samples, 0.03%)</title><rect x="1128.1" y="245" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1131.14" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt;::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, true&gt; (763,006 samples, 0.01%)</title><rect x="1001.6" y="277" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1004.56" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (836,030 samples, 0.01%)</title><rect x="100.5" y="165" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="103.50" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt;::_Hash_node (2,056,175 samples, 0.03%)</title><rect x="165.2" y="261" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="168.16" y="271.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (724,681 samples, 0.01%)</title><rect x="212.0" y="213" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="215.02" y="223.5" ></text>
</g>
<g >
<title>malloc (39,655,063 samples, 0.57%)</title><rect x="1179.8" y="373" width="6.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1182.80" y="383.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (1,146,072 samples, 0.02%)</title><rect x="128.3" y="213" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="131.32" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (1,369,745 samples, 0.02%)</title><rect x="29.1" y="293" width="0.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="32.11" y="303.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,468,273 samples, 0.02%)</title><rect x="129.3" y="149" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="132.25" y="159.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::out_edge_list (660,741 samples, 0.01%)</title><rect x="863.9" y="213" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="866.93" y="223.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (5,681,476 samples, 0.08%)</title><rect x="592.2" y="197" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="595.21" y="207.5" ></text>
</g>
<g >
<title>[main.exe] (689,310 samples, 0.01%)</title><rect x="1088.2" y="229" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1091.23" y="239.5" ></text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (1,197,222 samples, 0.02%)</title><rect x="562.5" y="197" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="565.49" y="207.5" ></text>
</g>
<g >
<title>boost::graph_detail::back_insertion_sequence_tag::back_insertion_sequence_tag (687,642 samples, 0.01%)</title><rect x="341.7" y="245" width="0.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="344.66" y="255.5" ></text>
</g>
<g >
<title>boost::any_cast&lt;unsigned long&gt; (928,992 samples, 0.01%)</title><rect x="19.9" y="309" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="22.86" y="319.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pop (7,888,214 samples, 0.11%)</title><rect x="1013.1" y="293" width="1.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1016.09" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (9,320,876 samples, 0.13%)</title><rect x="1161.9" y="293" width="1.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1164.85" y="303.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (714,791 samples, 0.01%)</title><rect x="201.8" y="133" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="204.82" y="143.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (684,072 samples, 0.01%)</title><rect x="1178.8" y="341" width="0.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1181.79" y="351.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2,140,382 samples, 0.03%)</title><rect x="338.7" y="293" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="341.66" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (739,180 samples, 0.01%)</title><rect x="1163.5" y="293" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1166.49" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (1,446,966 samples, 0.02%)</title><rect x="217.8" y="277" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="220.84" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*&gt; (1,030,764 samples, 0.01%)</title><rect x="224.9" y="277" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="227.93" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (76,989,829 samples, 1.11%)</title><rect x="983.2" y="277" width="13.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="986.16" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::begin (5,079,610 samples, 0.07%)</title><rect x="1020.6" y="277" width="0.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1023.62" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (22,390,837 samples, 0.32%)</title><rect x="434.8" y="197" width="3.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="437.76" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (18,139,328 samples, 0.26%)</title><rect x="126.8" y="277" width="3.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="129.80" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (2,665,052 samples, 0.04%)</title><rect x="198.5" y="197" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="201.49" y="207.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::begin (692,179 samples, 0.01%)</title><rect x="1135.9" y="309" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1138.88" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::~_Vector_impl (3,823,888 samples, 0.05%)</title><rect x="1074.6" y="181" width="0.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1077.61" y="191.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;unsigned long const*, unsigned long*&gt; (913,822 samples, 0.01%)</title><rect x="1120.8" y="245" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1123.76" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (4,927,647 samples, 0.07%)</title><rect x="528.9" y="165" width="0.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="531.90" y="175.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (1,537,304 samples, 0.02%)</title><rect x="765.5" y="213" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="768.49" y="223.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (4,071,496 samples, 0.06%)</title><rect x="375.8" y="277" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="378.79" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (3,621,498 samples, 0.05%)</title><rect x="1086.8" y="261" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1089.83" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (627,092 samples, 0.01%)</title><rect x="130.3" y="229" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="133.33" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size (2,385,341 samples, 0.03%)</title><rect x="531.4" y="149" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="534.45" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::end (10,194,042 samples, 0.15%)</title><rect x="763.6" y="197" width="1.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="766.60" y="207.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,107,278 samples, 0.02%)</title><rect x="1045.6" y="117" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1048.65" y="127.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (1,541,306 samples, 0.02%)</title><rect x="168.0" y="165" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="171.03" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::deallocate (1,852,905 samples, 0.03%)</title><rect x="154.6" y="229" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="157.62" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt; (1,172,283 samples, 0.02%)</title><rect x="1014.1" y="261" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1017.13" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (1,264,177 samples, 0.02%)</title><rect x="29.1" y="277" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="32.12" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::operator* (810,014 samples, 0.01%)</title><rect x="367.7" y="293" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="370.68" y="303.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (1,041,903 samples, 0.01%)</title><rect x="1060.3" y="229" width="0.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1063.32" y="239.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (55,434,693 samples, 0.80%)</title><rect x="986.8" y="261" width="9.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="989.81" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (4,244,071 samples, 0.06%)</title><rect x="974.3" y="293" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="977.32" y="303.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (818,492 samples, 0.01%)</title><rect x="222.8" y="197" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="225.83" y="207.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (1,252,513 samples, 0.02%)</title><rect x="1075.8" y="229" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1078.76" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1,017,789 samples, 0.01%)</title><rect x="378.1" y="277" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="381.14" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_ptr (823,629 samples, 0.01%)</title><rect x="160.8" y="181" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="163.78" y="191.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::out_edge_list (6,505,131 samples, 0.09%)</title><rect x="998.9" y="277" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1001.91" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (11,523,983 samples, 0.17%)</title><rect x="136.5" y="213" width="1.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="139.49" y="223.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (1,293,597 samples, 0.02%)</title><rect x="844.9" y="181" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="847.89" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1,950,030 samples, 0.03%)</title><rect x="1155.7" y="293" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1158.74" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (769,768 samples, 0.01%)</title><rect x="1086.7" y="261" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1089.66" y="271.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, false&gt;::operator mpl_::bool_&lt;false&gt; const&amp; (1,319,837 samples, 0.02%)</title><rect x="413.3" y="197" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="416.33" y="207.5" ></text>
</g>
<g >
<title>boost::edge&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (313,209,150 samples, 4.50%)</title><rect x="30.3" y="309" width="53.0" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="33.25" y="319.5" >boost..</text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long*&gt; (597,851 samples, 0.01%)</title><rect x="532.4" y="117" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="535.38" y="127.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,266,491 samples, 0.03%)</title><rect x="226.6" y="245" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="229.61" y="255.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (3,295,705 samples, 0.05%)</title><rect x="800.7" y="165" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="803.73" y="175.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (16,056,977 samples, 0.23%)</title><rect x="127.2" y="261" width="2.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="130.15" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (1,468,522 samples, 0.02%)</title><rect x="134.8" y="181" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="137.77" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::end (6,278,237 samples, 0.09%)</title><rect x="1002.4" y="277" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1005.40" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (1,128,280 samples, 0.02%)</title><rect x="190.3" y="149" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="193.28" y="159.5" ></text>
</g>
<g >
<title>unmap_single_vma (1,352,210 samples, 0.02%)</title><rect x="1179.6" y="245" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1182.57" y="255.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::operator== (3,189,647 samples, 0.05%)</title><rect x="75.6" y="213" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="78.61" y="223.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (4,648,126 samples, 0.07%)</title><rect x="845.6" y="165" width="0.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="848.64" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_do_relocate (23,617,389 samples, 0.34%)</title><rect x="1099.8" y="245" width="4.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1102.85" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (151,611,325 samples, 2.18%)</title><rect x="1080.4" y="293" width="25.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1083.45" y="303.5" >s..</text>
</g>
<g >
<title>std::forward&lt;std::tuple&lt;&gt; &gt; (723,956 samples, 0.01%)</title><rect x="191.3" y="245" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="194.27" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (1,237,464 samples, 0.02%)</title><rect x="205.5" y="213" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="208.47" y="223.5" ></text>
</g>
<g >
<title>NexullanceIT::step_1 (1,210,140,605 samples, 17.37%)</title><rect x="22.5" y="325" width="205.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="25.52" y="335.5" >NexullanceIT::step_1</text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_v (2,888,338 samples, 0.04%)</title><rect x="178.7" y="213" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="181.68" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (966,970 samples, 0.01%)</title><rect x="436.2" y="165" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="439.24" y="175.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (2,139,178 samples, 0.03%)</title><rect x="86.2" y="261" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="89.21" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (8,724,818 samples, 0.13%)</title><rect x="509.5" y="197" width="1.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="512.51" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (19,605,046 samples, 0.28%)</title><rect x="498.0" y="181" width="3.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="500.97" y="191.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::~unordered_map (17,397,675 samples, 0.25%)</title><rect x="1155.7" y="325" width="2.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1158.68" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (15,204,337 samples, 0.22%)</title><rect x="1176.0" y="309" width="2.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1178.97" y="319.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (5,485,368 samples, 0.08%)</title><rect x="492.3" y="181" width="0.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="495.31" y="191.5" ></text>
</g>
<g >
<title>boost::tuples::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type&gt; &gt;::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const&gt; (629,080 samples, 0.01%)</title><rect x="132.2" y="245" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="135.24" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,209,267 samples, 0.05%)</title><rect x="1179.3" y="357" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1182.26" y="367.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (9,320,876 samples, 0.13%)</title><rect x="1161.9" y="309" width="1.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1164.85" y="319.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (1,631,541 samples, 0.02%)</title><rect x="211.6" y="197" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="214.58" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::allocator (790,443 samples, 0.01%)</title><rect x="1066.3" y="261" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1069.32" y="271.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (4,290,238 samples, 0.06%)</title><rect x="103.9" y="181" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="106.91" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (5,455,049 samples, 0.08%)</title><rect x="988.7" y="245" width="1.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="991.74" y="255.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (6,451,182 samples, 0.09%)</title><rect x="506.1" y="165" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="509.09" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (7,919,347 samples, 0.11%)</title><rect x="1111.5" y="229" width="1.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1114.53" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (1,046,827 samples, 0.02%)</title><rect x="133.3" y="261" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="136.25" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~_Vector_base (20,590,809 samples, 0.30%)</title><rect x="1076.8" y="277" width="3.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1079.78" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (2,248,404 samples, 0.03%)</title><rect x="1138.4" y="293" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1141.38" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (2,166,983 samples, 0.03%)</title><rect x="70.0" y="197" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="73.04" y="207.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (59,051,384 samples, 0.85%)</title><rect x="482.3" y="165" width="10.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="485.31" y="175.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (3,250,622 samples, 0.05%)</title><rect x="131.2" y="245" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="134.18" y="255.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~d_ary_heap_indirect (2,177,478 samples, 0.03%)</title><rect x="549.0" y="213" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="551.97" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (620,035 samples, 0.01%)</title><rect x="127.0" y="261" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="130.05" y="271.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (840,287 samples, 0.01%)</title><rect x="126.1" y="197" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="129.13" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (15,495,704 samples, 0.22%)</title><rect x="36.6" y="277" width="2.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="39.58" y="287.5" ></text>
</g>
<g >
<title>boost::graph_detail::random_access_container_tag::random_access_container_tag (917,017 samples, 0.01%)</title><rect x="341.9" y="245" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="344.87" y="255.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (829,804 samples, 0.01%)</title><rect x="550.0" y="213" width="0.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="553.00" y="223.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::out_edge_list (941,675 samples, 0.01%)</title><rect x="116.7" y="181" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="119.70" y="191.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (1,643,846 samples, 0.02%)</title><rect x="29.7" y="309" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="32.66" y="319.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, false&gt;::operator mpl_::bool_&lt;false&gt; const&amp; (3,560,500 samples, 0.05%)</title><rect x="555.6" y="197" width="0.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="558.58" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1,302,428 samples, 0.02%)</title><rect x="1022.3" y="261" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1025.35" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (2,849,979 samples, 0.04%)</title><rect x="1141.2" y="261" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1144.16" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (1,332,804 samples, 0.02%)</title><rect x="192.5" y="261" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="195.52" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~vector (1,898,127 samples, 0.03%)</title><rect x="1142.3" y="309" width="0.3" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1145.33" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (725,384 samples, 0.01%)</title><rect x="81.7" y="293" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="84.67" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (3,346,847 samples, 0.05%)</title><rect x="151.3" y="261" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="154.31" y="271.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (17,904,936 samples, 0.26%)</title><rect x="581.5" y="181" width="3.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="584.51" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (23,048,138 samples, 0.33%)</title><rect x="699.9" y="197" width="3.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="702.86" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (5,448,586 samples, 0.08%)</title><rect x="174.8" y="277" width="0.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="177.75" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::__normal_iterator (2,214,611 samples, 0.03%)</title><rect x="1061.2" y="245" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1064.25" y="255.5" ></text>
</g>
<g >
<title>NexullanceIT::~NexullanceIT (49,311,357 samples, 0.71%)</title><rect x="1155.5" y="341" width="8.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1158.49" y="351.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (5,840,899 samples, 0.08%)</title><rect x="128.5" y="229" width="1.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="131.53" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (5,398,140 samples, 0.08%)</title><rect x="442.7" y="165" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="445.72" y="175.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (849,823 samples, 0.01%)</title><rect x="520.9" y="133" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="523.88" y="143.5" ></text>
</g>
<g >
<title>boost::relax_target&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::plus&lt;float&gt;, std::less&lt;float&gt; &gt; (561,855,896 samples, 8.07%)</title><rect x="766.0" y="213" width="95.2" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="769.00" y="223.5" >boost::rela..</text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (62,224,512 samples, 0.89%)</title><rect x="514.5" y="197" width="10.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="517.50" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (931,425 samples, 0.01%)</title><rect x="1023.6" y="197" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1026.62" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (838,045 samples, 0.01%)</title><rect x="132.6" y="245" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="135.58" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_allocate_buckets (1,715,768 samples, 0.02%)</title><rect x="180.9" y="229" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="183.91" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (13,994,845 samples, 0.20%)</title><rect x="971.7" y="245" width="2.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="974.66" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (133,950,068 samples, 1.92%)</title><rect x="664.8" y="133" width="22.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="667.84" y="143.5" >s..</text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (9,026,404 samples, 0.13%)</title><rect x="839.2" y="165" width="1.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="842.17" y="175.5" ></text>
</g>
<g >
<title>handle_mm_fault (13,332,777 samples, 0.19%)</title><rect x="1176.2" y="293" width="2.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1179.19" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (3,693,713 samples, 0.05%)</title><rect x="34.0" y="293" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="37.04" y="303.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (17,902,702 samples, 0.26%)</title><rect x="836.1" y="149" width="3.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="839.13" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (793,593 samples, 0.01%)</title><rect x="1009.2" y="293" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1012.20" y="303.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (618,771 samples, 0.01%)</title><rect x="191.0" y="181" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="194.05" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (1,531,990 samples, 0.02%)</title><rect x="443.4" y="149" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="446.37" y="159.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (766,235 samples, 0.01%)</title><rect x="1095.6" y="229" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1098.56" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (4,085,950 samples, 0.06%)</title><rect x="148.4" y="245" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="151.44" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::begin (731,250 samples, 0.01%)</title><rect x="133.1" y="261" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="136.13" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (6,618,430 samples, 0.10%)</title><rect x="436.4" y="181" width="1.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="439.40" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (916,935 samples, 0.01%)</title><rect x="1114.3" y="261" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1117.31" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (753,393 samples, 0.01%)</title><rect x="1024.8" y="277" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1027.78" y="287.5" ></text>
</g>
<g >
<title>boost::iterator_range_detail::iterator_range_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::iterators::random_access_traversal_tag&gt;::size (1,066,787 samples, 0.02%)</title><rect x="996.3" y="277" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="999.27" y="287.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (2,071,820 samples, 0.03%)</title><rect x="959.9" y="261" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="962.86" y="271.5" ></text>
</g>
<g >
<title>__GI_____strtof_l_internal (2,316,437 samples, 0.03%)</title><rect x="20.9" y="373" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="23.90" y="383.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (2,932,510 samples, 0.04%)</title><rect x="94.3" y="181" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="97.29" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::select_on_container_copy_construction (3,166,863 samples, 0.05%)</title><rect x="1036.9" y="197" width="0.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1039.92" y="207.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (613,940 samples, 0.01%)</title><rect x="170.9" y="261" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="173.90" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (1,133,755 samples, 0.02%)</title><rect x="212.8" y="293" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="215.77" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (720,764 samples, 0.01%)</title><rect x="178.3" y="213" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="181.32" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,021,982 samples, 0.01%)</title><rect x="338.7" y="229" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="341.72" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::end (904,888 samples, 0.01%)</title><rect x="1136.0" y="293" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1139.03" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (686,197 samples, 0.01%)</title><rect x="1062.5" y="245" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1065.49" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size (1,159,966 samples, 0.02%)</title><rect x="531.7" y="133" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="534.65" y="143.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (646,173 samples, 0.01%)</title><rect x="507.2" y="165" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="510.18" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_check_len (1,463,514 samples, 0.02%)</title><rect x="1062.7" y="245" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1065.68" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (6,588,718 samples, 0.09%)</title><rect x="205.9" y="213" width="1.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="208.85" y="223.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (2,124,417 samples, 0.03%)</title><rect x="1118.7" y="197" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1121.65" y="207.5" ></text>
</g>
<g >
<title>std::_Construct&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&amp;&gt; (619,980 samples, 0.01%)</title><rect x="1164.3" y="85" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1167.26" y="95.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_base (4,502,815 samples, 0.06%)</title><rect x="193.7" y="293" width="0.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="196.65" y="303.5" ></text>
</g>
<g >
<title>boost::relax_target&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::plus&lt;float&gt;, std::less&lt;float&gt; &gt; (40,985,135 samples, 0.59%)</title><rect x="117.1" y="197" width="6.9" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="120.09" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*&gt; (815,895 samples, 0.01%)</title><rect x="225.2" y="293" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="228.25" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (3,752,439 samples, 0.05%)</title><rect x="128.9" y="197" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="131.88" y="207.5" ></text>
</g>
<g >
<title>pow@@GLIBC_2.29 (3,129,008 samples, 0.04%)</title><rect x="1153.3" y="325" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1156.32" y="335.5" ></text>
</g>
</g>
</svg>
