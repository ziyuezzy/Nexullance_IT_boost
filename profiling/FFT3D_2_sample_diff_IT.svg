<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1078.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1061" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1061" > </text>
<g id="frames">
<g >
<title>PyObject_GetItem (25,260,870 samples, 0.09%)</title><rect x="72.0" y="453" width="1.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="75.02" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (141,320,807 samples, 0.48%)</title><rect x="122.8" y="597" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.82" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="367.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (24,789,767 samples, 0.08%)</title><rect x="78.9" y="373" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="81.94" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (59,468,639 samples, 0.20%)</title><rect x="211.2" y="373" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="214.20" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (103,161,649 samples, 0.35%)</title><rect x="78.9" y="421" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.94" y="431.5" ></text>
</g>
<g >
<title>change_pte_range (33,987,773 samples, 0.12%)</title><rect x="1028.5" y="357" width="1.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1031.46" y="367.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (239,485,097 samples, 0.82%)</title><rect x="1003.6" y="485" width="9.7" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1006.62" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (46,750,554 samples, 0.16%)</title><rect x="224.9" y="949" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.92" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (86,042,816 samples, 0.29%)</title><rect x="188.2" y="485" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.17" y="495.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,018,355 samples, 0.09%)</title><rect x="67.8" y="341" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="70.78" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (189,478,031 samples, 0.65%)</title><rect x="76.5" y="645" width="7.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.51" y="655.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;*&gt; (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="405" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1163.87" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_check_len (136,933,367 samples, 0.47%)</title><rect x="1104.3" y="581" width="5.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1107.30" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (29,925,438 samples, 0.10%)</title><rect x="193.8" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.82" y="271.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,120,135 samples, 0.12%)</title><rect x="213.6" y="565" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="216.60" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (52,345,047 samples, 0.18%)</title><rect x="207.7" y="373" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.70" y="383.5" ></text>
</g>
<g >
<title>_PyObject_GC_NewVar (34,178,020 samples, 0.12%)</title><rect x="862.9" y="373" width="1.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="865.85" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="533" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="543.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,243 samples, 0.09%)</title><rect x="170.3" y="517" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="173.34" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (156,416,788 samples, 0.54%)</title><rect x="67.8" y="741" width="6.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="70.78" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (125,826,532 samples, 0.43%)</title><rect x="180.7" y="837" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="847.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (74,372,820 samples, 0.25%)</title><rect x="219.8" y="517" width="3.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="222.79" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (24,789,767 samples, 0.08%)</title><rect x="78.9" y="277" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.94" y="287.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (102,344,064 samples, 0.35%)</title><rect x="128.5" y="373" width="4.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="131.53" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="245" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,692 samples, 0.09%)</title><rect x="108.2" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.21" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (120,163,633 samples, 0.41%)</title><rect x="186.8" y="741" width="4.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="189.79" y="751.5" ></text>
</g>
<g >
<title>__memset_erms (24,747,959 samples, 0.08%)</title><rect x="141.7" y="917" width="1.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="144.70" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (24,041,190 samples, 0.08%)</title><rect x="152.7" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.66" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="565" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.77" y="575.5" ></text>
</g>
<g >
<title>_int_malloc (163,155,457 samples, 0.56%)</title><rect x="609.7" y="389" width="6.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="612.72" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,139,888 samples, 0.12%)</title><rect x="215.0" y="341" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.98" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (104,785,052 samples, 0.36%)</title><rect x="106.1" y="693" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.09" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,527,697 samples, 0.09%)</title><rect x="68.8" y="485" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="71.83" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (104,785,052 samples, 0.36%)</title><rect x="106.1" y="645" width="4.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="109.09" y="655.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (34,256,975 samples, 0.12%)</title><rect x="596.3" y="533" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="599.30" y="543.5" ></text>
</g>
<g >
<title>__pyx_pymod_exec__model (49,522,514 samples, 0.17%)</title><rect x="148.6" y="341" width="2.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="151.59" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="431.5" ></text>
</g>
<g >
<title>std::string::append (25,833,299 samples, 0.09%)</title><rect x="105.1" y="389" width="1.0" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="108.05" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (433,229,890 samples, 1.48%)</title><rect x="196.1" y="885" width="17.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.09" y="895.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (171,003,931 samples, 0.59%)</title><rect x="689.5" y="437" width="7.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="692.55" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (141,320,807 samples, 0.48%)</title><rect x="122.8" y="613" width="5.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="125.82" y="623.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (34,101,693 samples, 0.12%)</title><rect x="95.8" y="293" width="1.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="98.78" y="303.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (25,086,030 samples, 0.09%)</title><rect x="185.8" y="645" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="188.77" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (27,896,301 samples, 0.10%)</title><rect x="94.7" y="453" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="97.66" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (174,253,697 samples, 0.60%)</title><rect x="121.5" y="741" width="7.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="124.49" y="751.5" ></text>
</g>
<g >
<title>page_fault (34,194,760 samples, 0.12%)</title><rect x="607.0" y="453" width="1.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="609.96" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (102,344,064 samples, 0.35%)</title><rect x="128.5" y="581" width="4.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="131.53" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (86,042,816 samples, 0.29%)</title><rect x="188.2" y="661" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.17" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (133,144,064 samples, 0.46%)</title><rect x="218.5" y="741" width="5.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="221.48" y="751.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,250 samples, 0.09%)</title><rect x="153.6" y="517" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="156.63" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="597" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.77" y="607.5" ></text>
</g>
<g >
<title>copy_page_to_iter (34,285,084 samples, 0.12%)</title><rect x="688.2" y="149" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="691.16" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,180,018 samples, 0.09%)</title><rect x="111.4" y="229" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="114.39" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,668 samples, 0.09%)</title><rect x="139.3" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.30" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (25,914,139 samples, 0.09%)</title><rect x="138.3" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.25" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (59,468,639 samples, 0.20%)</title><rect x="211.2" y="549" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="214.20" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (68,494,951 samples, 0.23%)</title><rect x="594.9" y="629" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="597.92" y="639.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,464,634 samples, 0.11%)</title><rect x="100.0" y="453" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.00" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (24,363,856 samples, 0.08%)</title><rect x="116.0" y="437" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="118.96" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,764 samples, 0.09%)</title><rect x="223.9" y="469" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="226.86" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (86,042,816 samples, 0.29%)</title><rect x="188.2" y="629" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.17" y="639.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_down (444,204,212 samples, 1.52%)</title><rect x="940.1" y="517" width="17.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="943.07" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,559,354 samples, 0.11%)</title><rect x="218.5" y="357" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="221.48" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (18,140,811 samples, 0.06%)</title><rect x="97.2" y="517" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.16" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (57,799,046 samples, 0.20%)</title><rect x="180.7" y="373" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,552 samples, 0.09%)</title><rect x="61.3" y="581" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="64.34" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (32,559,354 samples, 0.11%)</title><rect x="218.5" y="469" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="221.48" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (25,771,593 samples, 0.09%)</title><rect x="147.6" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.55" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (135,321,245 samples, 0.46%)</title><rect x="205.7" y="453" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="208.73" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,126 samples, 0.09%)</title><rect x="109.3" y="309" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="112.27" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (133,144,064 samples, 0.46%)</title><rect x="218.5" y="869" width="5.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="221.48" y="879.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (28,290,192 samples, 0.10%)</title><rect x="63.5" y="197" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="66.46" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (25,914,139 samples, 0.09%)</title><rect x="138.3" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.25" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (52,345,047 samples, 0.18%)</title><rect x="207.7" y="325" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.70" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (86,042,816 samples, 0.29%)</title><rect x="188.2" y="645" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.17" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,134,229 samples, 0.09%)</title><rect x="118.3" y="517" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.33" y="527.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (34,160,844 samples, 0.12%)</title><rect x="37.7" y="981" width="1.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="40.71" y="991.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (26,212,636 samples, 0.09%)</title><rect x="58.2" y="293" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="61.17" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (141,320,807 samples, 0.48%)</title><rect x="122.8" y="581" width="5.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="125.82" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (174,253,697 samples, 0.60%)</title><rect x="121.5" y="773" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.49" y="783.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (12,884,328 samples, 0.04%)</title><rect x="554.2" y="949" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="557.19" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,162,148 samples, 0.11%)</title><rect x="140.4" y="357" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.36" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,960 samples, 0.09%)</title><rect x="133.7" y="309" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="136.70" y="319.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,149,751 samples, 0.09%)</title><rect x="137.2" y="517" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="140.20" y="527.5" ></text>
</g>
<g >
<title>do_filp_open (25,918,556 samples, 0.09%)</title><rect x="77.9" y="197" width="1.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="80.89" y="207.5" ></text>
</g>
<g >
<title>native_write_msr (4,706,099 samples, 0.02%)</title><rect x="235.0" y="869" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="238.01" y="879.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (61,635,632 samples, 0.21%)</title><rect x="142.7" y="437" width="2.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="145.70" y="447.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (34,180,988 samples, 0.12%)</title><rect x="915.2" y="581" width="1.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="918.20" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (57,799,046 samples, 0.20%)</title><rect x="180.7" y="341" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,888 samples, 0.09%)</title><rect x="150.6" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.60" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,207,239 samples, 0.11%)</title><rect x="145.2" y="341" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="148.19" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (59,468,639 samples, 0.20%)</title><rect x="211.2" y="645" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.20" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,374,349 samples, 0.09%)</title><rect x="134.8" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.76" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (61,635,632 samples, 0.21%)</title><rect x="142.7" y="357" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (52,424,216 samples, 0.18%)</title><rect x="107.2" y="437" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="447.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (230,135,233 samples, 0.79%)</title><rect x="186.8" y="757" width="9.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="189.79" y="767.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,120,135 samples, 0.12%)</title><rect x="213.6" y="165" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="216.60" y="175.5" ></text>
</g>
<g >
<title>__fdget_pos (34,137,131 samples, 0.12%)</title><rect x="142.7" y="133" width="1.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="145.70" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,712 samples, 0.09%)</title><rect x="587.3" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="590.27" y="367.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (34,151,016 samples, 0.12%)</title><rect x="91.2" y="85" width="1.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="94.19" y="95.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (51,689,355 samples, 0.18%)</title><rect x="154.7" y="437" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="157.69" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,120,135 samples, 0.12%)</title><rect x="213.6" y="261" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="216.60" y="271.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visit (34,084,795 samples, 0.12%)</title><rect x="226.8" y="933" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="229.81" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,120,135 samples, 0.12%)</title><rect x="213.6" y="517" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="216.60" y="527.5" ></text>
</g>
<g >
<title>handle_mm_fault (25,826,519 samples, 0.09%)</title><rect x="119.4" y="261" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="122.38" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (306,786,088 samples, 1.05%)</title><rect x="1091.9" y="565" width="12.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1094.90" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (32,878,788 samples, 0.11%)</title><rect x="179.4" y="581" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.36" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,552 samples, 0.09%)</title><rect x="61.3" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (107,350,355 samples, 0.37%)</title><rect x="122.8" y="501" width="4.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="125.82" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (32,857,115 samples, 0.11%)</title><rect x="196.1" y="357" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.09" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="837" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="847.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (139,612,646 samples, 0.48%)</title><rect x="84.2" y="485" width="5.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="87.17" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,285,084 samples, 0.12%)</title><rect x="688.2" y="373" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="691.16" y="383.5" ></text>
</g>
<g >
<title>[conversion.cpython-312-x86_64-linux-gnu.so] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="901" width="1.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="188.77" y="911.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (136,696,363 samples, 0.47%)</title><rect x="1024.3" y="501" width="5.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1027.31" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (59,468,639 samples, 0.20%)</title><rect x="211.2" y="357" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="214.20" y="367.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,243 samples, 0.09%)</title><rect x="170.3" y="613" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="173.34" y="623.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (31,760,523 samples, 0.11%)</title><rect x="88.5" y="373" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="91.52" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,207,764 samples, 0.09%)</title><rect x="176.3" y="293" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="179.27" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (52,113,807 samples, 0.18%)</title><rect x="138.3" y="805" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.25" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (25,918,556 samples, 0.09%)</title><rect x="77.9" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.89" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,212,636 samples, 0.09%)</title><rect x="58.2" y="389" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="61.17" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (230,135,233 samples, 0.79%)</title><rect x="186.8" y="885" width="9.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.79" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (32,559,354 samples, 0.11%)</title><rect x="218.5" y="565" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="221.48" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (836,816,200 samples, 2.87%)</title><rect x="76.5" y="981" width="33.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="79.51" y="991.5" >Py..</text>
</g>
<g >
<title>[python3.12] (104,881,679 samples, 0.36%)</title><rect x="199.5" y="453" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.53" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (125,826,532 samples, 0.43%)</title><rect x="180.7" y="629" width="5.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="183.69" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (52,326,266 samples, 0.18%)</title><rect x="586.2" y="533" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="589.22" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (52,416,674 samples, 0.18%)</title><rect x="122.8" y="421" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.82" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,668 samples, 0.09%)</title><rect x="139.3" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.30" y="575.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, diff_Nexullance_IT_interface, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (6,212,989,464 samples, 21.28%)</title><rect x="911.1" y="773" width="251.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="914.13" y="783.5" >pybind11::cpp_function::initializ..</text>
</g>
<g >
<title>[python3.12] (57,799,046 samples, 0.20%)</title><rect x="180.7" y="357" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="367.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,208,821 samples, 0.09%)</title><rect x="97.9" y="629" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="100.90" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,307 samples, 0.09%)</title><rect x="65.7" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.66" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,260,870 samples, 0.09%)</title><rect x="72.0" y="421" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="75.02" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,464,634 samples, 0.11%)</title><rect x="100.0" y="533" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.00" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (51,689,355 samples, 0.18%)</title><rect x="154.7" y="485" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (413,439,208 samples, 1.42%)</title><rect x="154.7" y="789" width="16.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="157.69" y="799.5" ></text>
</g>
<g >
<title>put_pipe_info (19,219,567 samples, 0.07%)</title><rect x="1167.0" y="869" width="0.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1169.98" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="277" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,817 samples, 0.12%)</title><rect x="186.8" y="661" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.79" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (477,711,505 samples, 1.64%)</title><rect x="1091.9" y="597" width="19.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1094.90" y="607.5" ></text>
</g>
<g >
<title>page_fault (26,136,258 samples, 0.09%)</title><rect x="198.5" y="309" width="1.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="201.48" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,675,816 samples, 0.27%)</title><rect x="199.5" y="373" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="202.53" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="309" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (25,826,519 samples, 0.09%)</title><rect x="119.4" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.38" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (139,612,646 samples, 0.48%)</title><rect x="84.2" y="501" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,460,519 samples, 0.09%)</title><rect x="101.4" y="437" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="104.36" y="447.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (7,992,475 samples, 0.03%)</title><rect x="1177.3" y="917" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1180.33" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,524 samples, 0.09%)</title><rect x="107.2" y="277" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,149,751 samples, 0.09%)</title><rect x="137.2" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.20" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (614,807,537 samples, 2.11%)</title><rect x="76.5" y="869" width="24.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="79.51" y="879.5" >P..</text>
</g>
<g >
<title>[python3.12] (34,137,131 samples, 0.12%)</title><rect x="142.7" y="245" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (34,173,093 samples, 0.12%)</title><rect x="172.8" y="309" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.78" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,138,992 samples, 0.12%)</title><rect x="116.9" y="197" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="119.95" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (52,419,493 samples, 0.18%)</title><rect x="189.5" y="373" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.52" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,932,890 samples, 0.11%)</title><rect x="121.5" y="453" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="124.49" y="463.5" ></text>
</g>
<g >
<title>__GI___sbrk (94,637,922 samples, 0.32%)</title><rect x="611.1" y="341" width="3.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="614.10" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (33,623,323 samples, 0.12%)</title><rect x="188.2" y="245" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="191.17" y="255.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,061,992 samples, 0.09%)</title><rect x="60.3" y="325" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="63.29" y="335.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,834,731 samples, 0.12%)</title><rect x="135.8" y="405" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="138.83" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,162,148 samples, 0.11%)</title><rect x="140.4" y="837" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.36" y="847.5" ></text>
</g>
<g >
<title>__Pyx_CreateStringTabAndInitStrings (46,750,554 samples, 0.16%)</title><rect x="224.9" y="981" width="1.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="227.92" y="991.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,061,992 samples, 0.09%)</title><rect x="60.3" y="453" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="63.29" y="463.5" ></text>
</g>
<g >
<title>do_page_fault (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="981" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1191.64" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,697 samples, 0.09%)</title><rect x="64.6" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.60" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,498 samples, 0.09%)</title><rect x="62.4" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.40" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (22,160,344 samples, 0.08%)</title><rect x="204.8" y="229" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="207.83" y="239.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="725" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1165.25" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (154,194,036 samples, 0.53%)</title><rect x="128.5" y="725" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.53" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,162,148 samples, 0.11%)</title><rect x="140.4" y="661" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.36" y="671.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (34,223,013 samples, 0.12%)</title><rect x="1076.7" y="581" width="1.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1079.71" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,139,888 samples, 0.12%)</title><rect x="215.0" y="597" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="217.98" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; &gt; (34,271,849 samples, 0.12%)</title><rect x="1089.1" y="597" width="1.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1092.13" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,857,115 samples, 0.11%)</title><rect x="196.1" y="565" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="199.09" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,209,247 samples, 0.09%)</title><rect x="175.2" y="277" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="178.21" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (78,675,816 samples, 0.27%)</title><rect x="199.5" y="357" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.53" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (34,101,693 samples, 0.12%)</title><rect x="95.8" y="645" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.78" y="655.5" ></text>
</g>
<g >
<title>elf_dynamic_do_Rela (26,209,701 samples, 0.09%)</title><rect x="195.0" y="277" width="1.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="198.03" y="287.5" ></text>
</g>
<g >
<title>_PyObject_Call (111,425,706 samples, 0.38%)</title><rect x="137.2" y="933" width="4.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="140.20" y="943.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (19,219,567 samples, 0.07%)</title><rect x="1167.0" y="949" width="0.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1169.98" y="959.5" ></text>
</g>
<g >
<title>[vectorized.cpython-312-x86_64-linux-gnu.so] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="309" width="1.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="104.36" y="319.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::collectRequiredAndUsedAnalyses (34,070,937 samples, 0.12%)</title><rect x="12.9" y="981" width="1.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="15.94" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (57,799,046 samples, 0.20%)</title><rect x="180.7" y="485" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="495.5" ></text>
</g>
<g >
<title>do_user_addr_fault (26,210,416 samples, 0.09%)</title><rect x="166.9" y="229" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="169.88" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (33,822,668 samples, 0.12%)</title><rect x="1111.2" y="533" width="1.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1114.21" y="543.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,208,888 samples, 0.09%)</title><rect x="150.6" y="373" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="153.60" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,397,003 samples, 0.18%)</title><rect x="69.9" y="389" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="72.91" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,764 samples, 0.09%)</title><rect x="223.9" y="789" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="226.86" y="799.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="373" width="1.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1163.87" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (25,640,012 samples, 0.09%)</title><rect x="132.7" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.67" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (30,882,219 samples, 0.11%)</title><rect x="81.9" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.86" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (34,194,704 samples, 0.12%)</title><rect x="1038.1" y="469" width="1.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1041.14" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,857,115 samples, 0.11%)</title><rect x="196.1" y="341" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.09" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,086,030 samples, 0.09%)</title><rect x="185.8" y="725" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="188.77" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (139,612,646 samples, 0.48%)</title><rect x="84.2" y="565" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (119,943,099 samples, 0.41%)</title><rect x="89.8" y="421" width="4.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="92.81" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="287.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (24,789,767 samples, 0.08%)</title><rect x="78.9" y="325" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="81.94" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,018,355 samples, 0.09%)</title><rect x="67.8" y="549" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.78" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="293" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (176,737,333 samples, 0.61%)</title><rect x="1170.5" y="981" width="7.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1173.51" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="933" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="943.5" ></text>
</g>
<g >
<title>unmap_single_vma (48,375,272 samples, 0.17%)</title><rect x="235.3" y="853" width="2.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="238.30" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="293" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,162,148 samples, 0.11%)</title><rect x="140.4" y="869" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="143.36" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,477,215 samples, 0.27%)</title><rect x="58.2" y="757" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="61.17" y="767.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_not_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (136,731,501 samples, 0.47%)</title><rect x="981.5" y="533" width="5.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="984.51" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (34,279,463 samples, 0.12%)</title><rect x="15.7" y="981" width="1.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="18.70" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (48,369,314 samples, 0.17%)</title><rect x="203.8" y="485" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (296,586,853 samples, 1.02%)</title><rect x="142.7" y="949" width="12.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.70" y="959.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,149,751 samples, 0.09%)</title><rect x="137.2" y="565" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="140.20" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,476,690 samples, 0.09%)</title><rect x="93.6" y="293" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.63" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (190,070,692 samples, 0.65%)</title><rect x="196.1" y="853" width="7.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="199.09" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (18,140,811 samples, 0.06%)</title><rect x="97.2" y="309" width="0.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="100.16" y="319.5" ></text>
</g>
<g >
<title>rcu_all_qs (34,137,131 samples, 0.12%)</title><rect x="142.7" y="101" width="1.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="145.70" y="111.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="213" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="223.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (28,290,192 samples, 0.10%)</title><rect x="63.5" y="373" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="66.46" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (30,882,219 samples, 0.11%)</title><rect x="81.9" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.86" y="335.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,179,925 samples, 0.09%)</title><rect x="156.8" y="501" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="159.78" y="511.5" ></text>
</g>
<g >
<title>native_flush_tlb (3,848,355 samples, 0.01%)</title><rect x="1189.8" y="597" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1192.84" y="607.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (34,120,135 samples, 0.12%)</title><rect x="213.6" y="373" width="1.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="216.60" y="383.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::child (34,159,553 samples, 0.12%)</title><rect x="940.1" y="501" width="1.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="943.07" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (77,869,280 samples, 0.27%)</title><rect x="154.7" y="597" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="157.69" y="607.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (410,630,443 samples, 1.41%)</title><rect x="960.8" y="533" width="16.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="963.76" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (59,468,639 samples, 0.20%)</title><rect x="211.2" y="517" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="214.20" y="527.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (68,264,248 samples, 0.23%)</title><rect x="850.8" y="293" width="2.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="853.81" y="303.5" ></text>
</g>
<g >
<title>unmap_page_range (48,375,272 samples, 0.17%)</title><rect x="235.3" y="837" width="2.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="238.30" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,120,135 samples, 0.12%)</title><rect x="213.6" y="581" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="216.60" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (25,356,172 samples, 0.09%)</title><rect x="154.7" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,342 samples, 0.12%)</title><rect x="103.7" y="389" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.67" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (24,747,959 samples, 0.08%)</title><rect x="141.7" y="933" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.70" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,828 samples, 0.09%)</title><rect x="126.1" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.10" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (25,260,870 samples, 0.09%)</title><rect x="72.0" y="261" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.02" y="271.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,247 samples, 0.09%)</title><rect x="175.2" y="357" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="178.21" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (74,372,820 samples, 0.25%)</title><rect x="219.8" y="405" width="3.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="222.79" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (133,144,064 samples, 0.46%)</title><rect x="218.5" y="789" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="221.48" y="799.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (34,194,760 samples, 0.12%)</title><rect x="607.0" y="485" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="609.96" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,558 samples, 0.09%)</title><rect x="66.7" y="757" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="69.72" y="767.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT_interface::add_next_matrix (6,180,761,554 samples, 21.17%)</title><rect x="912.4" y="677" width="249.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="915.43" y="687.5" >diff_Nexullance_IT_interface::add..</text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="581" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (156,416,788 samples, 0.54%)</title><rect x="67.8" y="757" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.78" y="767.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,464,634 samples, 0.11%)</title><rect x="100.0" y="373" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="103.00" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,382 samples, 0.09%)</title><rect x="189.5" y="261" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.52" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_initialize_map (67,885,180 samples, 0.23%)</title><rect x="1083.6" y="565" width="2.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1086.63" y="575.5" ></text>
</g>
<g >
<title>__do_page_fault (102,514,763 samples, 0.35%)</title><rect x="692.3" y="389" width="4.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="695.32" y="399.5" ></text>
</g>
<g >
<title>nfs_file_read (34,285,084 samples, 0.12%)</title><rect x="688.2" y="197" width="1.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="691.16" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (26,017,147 samples, 0.09%)</title><rect x="221.7" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="224.75" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_check_len (34,173,959 samples, 0.12%)</title><rect x="1090.5" y="597" width="1.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1093.52" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~vector (239,170,409 samples, 0.82%)</title><rect x="1118.1" y="613" width="9.6" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1121.07" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,211,890 samples, 0.09%)</title><rect x="222.8" y="517" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="225.80" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt; &gt;::deallocate (34,222,172 samples, 0.12%)</title><rect x="1154.0" y="501" width="1.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1156.96" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (104,785,052 samples, 0.36%)</title><rect x="106.1" y="613" width="4.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.09" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,817 samples, 0.12%)</title><rect x="186.8" y="325" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.79" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (230,135,233 samples, 0.79%)</title><rect x="186.8" y="869" width="9.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="189.79" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (34,140,509 samples, 0.12%)</title><rect x="582.3" y="869" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="585.33" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,888 samples, 0.09%)</title><rect x="150.6" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.60" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (189,478,031 samples, 0.65%)</title><rect x="76.5" y="789" width="7.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="79.51" y="799.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,211,764 samples, 0.09%)</title><rect x="223.9" y="533" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="226.86" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,018,355 samples, 0.09%)</title><rect x="67.8" y="357" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="70.78" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,180,018 samples, 0.09%)</title><rect x="111.4" y="613" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.39" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (219,699,154 samples, 0.75%)</title><rect x="215.0" y="917" width="8.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.98" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (33,623,323 samples, 0.12%)</title><rect x="188.2" y="421" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.17" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (52,415,202 samples, 0.18%)</title><rect x="216.4" y="565" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.36" y="575.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (25,640,012 samples, 0.09%)</title><rect x="132.7" y="357" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="135.67" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,209,080 samples, 0.21%)</title><rect x="134.8" y="837" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="137.76" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (34,178,020 samples, 0.12%)</title><rect x="862.9" y="437" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="865.85" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (306,786,088 samples, 1.05%)</title><rect x="1091.9" y="581" width="12.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1094.90" y="591.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*&gt; (34,177,262 samples, 0.12%)</title><rect x="1158.1" y="533" width="1.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1161.11" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (24,545,339 samples, 0.08%)</title><rect x="192.8" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.83" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator= (34,271,849 samples, 0.12%)</title><rect x="1089.1" y="613" width="1.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1092.13" y="623.5" ></text>
</g>
<g >
<title>__dlopen (33,571,412 samples, 0.11%)</title><rect x="169.0" y="325" width="1.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="171.98" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (18,140,811 samples, 0.06%)</title><rect x="97.2" y="421" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.16" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (68,207,985 samples, 0.23%)</title><rect x="557.5" y="869" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="560.47" y="879.5" ></text>
</g>
<g >
<title>path_openat (27,498,501 samples, 0.09%)</title><rect x="144.1" y="197" width="1.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="147.08" y="207.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,208,821 samples, 0.09%)</title><rect x="97.9" y="773" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="100.90" y="783.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,212,863 samples, 0.09%)</title><rect x="73.0" y="341" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="76.04" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (86,555,090 samples, 0.30%)</title><rect x="215.0" y="869" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (120,056,685 samples, 0.41%)</title><rect x="142.7" y="581" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (33,882,874 samples, 0.12%)</title><rect x="87.2" y="245" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.16" y="255.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,397,003 samples, 0.18%)</title><rect x="69.9" y="453" width="2.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="72.91" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (60,209,080 samples, 0.21%)</title><rect x="134.8" y="933" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.76" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (34,294,883 samples, 0.12%)</title><rect x="1149.8" y="581" width="1.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1152.83" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,112,554 samples, 0.09%)</title><rect x="586.2" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="589.22" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,179,925 samples, 0.09%)</title><rect x="156.8" y="357" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="159.78" y="367.5" ></text>
</g>
<g >
<title>_dlerror_run (26,209,701 samples, 0.09%)</title><rect x="195.0" y="405" width="1.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="198.03" y="415.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (33,221,132 samples, 0.11%)</title><rect x="1075.4" y="565" width="1.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1078.37" y="575.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (94,306,222 samples, 0.32%)</title><rect x="903.2" y="629" width="3.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="906.18" y="639.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (204,995,797 samples, 0.70%)</title><rect x="1021.6" y="517" width="8.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1024.55" y="527.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::cpp_function&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, diff_Nexullance_IT_interface, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (6,212,989,464 samples, 21.28%)</title><rect x="911.1" y="709" width="251.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="914.13" y="719.5" >pybind11::cpp_function::cpp_funct..</text>
</g>
<g >
<title>__lru_cache_add (34,151,016 samples, 0.12%)</title><rect x="91.2" y="101" width="1.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="94.19" y="111.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (25,918,556 samples, 0.09%)</title><rect x="77.9" y="133" width="1.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="80.89" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (34,101,693 samples, 0.12%)</title><rect x="95.8" y="405" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.78" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="421" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (32,932,890 samples, 0.11%)</title><rect x="121.5" y="389" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="124.49" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,464,634 samples, 0.11%)</title><rect x="100.0" y="789" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.00" y="799.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (25,721,139 samples, 0.09%)</title><rect x="167.9" y="373" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="170.94" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,243 samples, 0.09%)</title><rect x="170.3" y="261" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.34" y="271.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (68,520,786 samples, 0.23%)</title><rect x="942.8" y="469" width="2.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="945.83" y="479.5" ></text>
</g>
<g >
<title>_PyLong_AsInt (34,128,450 samples, 0.12%)</title><rect x="233.4" y="981" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="236.38" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (34,080,610 samples, 0.12%)</title><rect x="209.8" y="261" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.82" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (33,834,731 samples, 0.12%)</title><rect x="135.8" y="229" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.83" y="239.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (335,569,928 samples, 1.15%)</title><rect x="157.8" y="645" width="13.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="160.84" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (25,826,519 samples, 0.09%)</title><rect x="119.4" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.38" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (211,594,461 samples, 0.72%)</title><rect x="58.2" y="981" width="8.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="61.17" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (52,416,674 samples, 0.18%)</title><rect x="122.8" y="357" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.82" y="367.5" ></text>
</g>
<g >
<title>PyContextVar_Get (34,090,815 samples, 0.12%)</title><rect x="908.4" y="597" width="1.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="911.37" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (77,869,280 samples, 0.27%)</title><rect x="154.7" y="565" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="575.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_single_source (32,227,910 samples, 0.11%)</title><rect x="911.1" y="613" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="914.13" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (174,253,697 samples, 0.60%)</title><rect x="121.5" y="805" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.49" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (104,185,570 samples, 0.36%)</title><rect x="68.8" y="613" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.83" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,186,177 samples, 0.12%)</title><rect x="76.5" y="389" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.51" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (18,140,811 samples, 0.06%)</title><rect x="97.2" y="565" width="0.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="100.16" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,126 samples, 0.09%)</title><rect x="109.3" y="293" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.27" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (24,545,339 samples, 0.08%)</title><rect x="192.8" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.83" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (24,545,339 samples, 0.08%)</title><rect x="192.8" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.83" y="383.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,960 samples, 0.09%)</title><rect x="133.7" y="341" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="136.70" y="351.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (7,952,093,388 samples, 27.24%)</title><rect x="589.7" y="757" width="321.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="592.71" y="767.5" >PyObject_Vectorcall</text>
</g>
<g >
<title>[python3.12] (29,291,122 samples, 0.10%)</title><rect x="191.6" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.64" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (86,555,090 samples, 0.30%)</title><rect x="215.0" y="677" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,209,080 samples, 0.21%)</title><rect x="134.8" y="469" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.76" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (219,699,154 samples, 0.75%)</title><rect x="215.0" y="981" width="8.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="217.98" y="991.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (17,813,920 samples, 0.06%)</title><rect x="84.2" y="357" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="87.17" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (24,041,190 samples, 0.08%)</title><rect x="152.7" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.66" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (48,895,588 samples, 0.17%)</title><rect x="205.7" y="389" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="208.73" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (34,294,175 samples, 0.12%)</title><rect x="1134.6" y="565" width="1.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1137.65" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_base (34,217,192 samples, 0.12%)</title><rect x="1116.7" y="597" width="1.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1119.69" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (250,063,134 samples, 0.86%)</title><rect x="157.8" y="309" width="10.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.84" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (86,555,090 samples, 0.30%)</title><rect x="215.0" y="709" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.98" y="719.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (136,670,961 samples, 0.47%)</title><rect x="116.0" y="757" width="5.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="118.96" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,878,788 samples, 0.11%)</title><rect x="179.4" y="293" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="182.36" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (26,136,258 samples, 0.09%)</title><rect x="198.5" y="325" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="201.48" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (59,468,639 samples, 0.20%)</title><rect x="211.2" y="485" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="214.20" y="495.5" ></text>
</g>
<g >
<title>_PyObject_GC_NewVar (34,120,135 samples, 0.12%)</title><rect x="213.6" y="229" width="1.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="216.60" y="239.5" ></text>
</g>
<g >
<title>_PyObject_Call (91,763,092 samples, 0.31%)</title><rect x="102.4" y="629" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="105.39" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,168,113 samples, 0.27%)</title><rect x="118.3" y="725" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="121.33" y="735.5" ></text>
</g>
<g >
<title>task_numa_fault (25,826,519 samples, 0.09%)</title><rect x="119.4" y="213" width="1.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="122.38" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="309" width="1.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1163.87" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,498 samples, 0.09%)</title><rect x="62.4" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.40" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,180,018 samples, 0.09%)</title><rect x="111.4" y="309" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.39" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,821 samples, 0.09%)</title><rect x="97.9" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.90" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (18,140,811 samples, 0.06%)</title><rect x="97.2" y="261" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.16" y="271.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,415,202 samples, 0.18%)</title><rect x="216.4" y="469" width="2.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="219.36" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,464,634 samples, 0.11%)</title><rect x="100.0" y="693" width="1.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="103.00" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,149,751 samples, 0.09%)</title><rect x="137.2" y="501" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="140.20" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,149,751 samples, 0.09%)</title><rect x="137.2" y="837" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="140.20" y="847.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,640,012 samples, 0.09%)</title><rect x="132.7" y="389" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="135.67" y="399.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,326,266 samples, 0.18%)</title><rect x="586.2" y="645" width="2.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="589.22" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,764 samples, 0.09%)</title><rect x="223.9" y="645" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="226.86" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (296,586,853 samples, 1.02%)</title><rect x="142.7" y="917" width="12.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.70" y="927.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (33,464,634 samples, 0.11%)</title><rect x="100.0" y="325" width="1.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="103.00" y="335.5" ></text>
</g>
<g >
<title>PyBuffer_ToContiguous (18,140,811 samples, 0.06%)</title><rect x="97.2" y="229" width="0.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="100.16" y="239.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4,706,099 samples, 0.02%)</title><rect x="235.0" y="917" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="238.01" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,882,219 samples, 0.11%)</title><rect x="81.9" y="341" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="84.86" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,932,890 samples, 0.11%)</title><rect x="121.5" y="309" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="124.49" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,817 samples, 0.12%)</title><rect x="186.8" y="485" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.79" y="495.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,834,731 samples, 0.12%)</title><rect x="135.8" y="453" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="138.83" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="613" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="623.5" ></text>
</g>
<g >
<title>handle_mm_fault (22,160,344 samples, 0.08%)</title><rect x="204.8" y="245" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="207.83" y="255.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,649 samples, 0.09%)</title><rect x="83.1" y="501" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="86.11" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,821 samples, 0.09%)</title><rect x="97.9" y="693" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="100.90" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,207,365 samples, 0.09%)</title><rect x="120.4" y="421" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="123.43" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (29,925,438 samples, 0.10%)</title><rect x="193.8" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.82" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,113,807 samples, 0.18%)</title><rect x="138.3" y="709" width="2.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="141.25" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,018,355 samples, 0.09%)</title><rect x="67.8" y="581" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="70.78" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (335,569,928 samples, 1.15%)</title><rect x="157.8" y="773" width="13.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.84" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="197" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="207.5" ></text>
</g>
<g >
<title>PyNumber_Remainder (26,149,751 samples, 0.09%)</title><rect x="137.2" y="373" width="1.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="140.20" y="383.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (133,117,246 samples, 0.46%)</title><rect x="61.3" y="773" width="5.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="64.34" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (196,548,144 samples, 0.67%)</title><rect x="102.4" y="773" width="7.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.39" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,095,135 samples, 0.09%)</title><rect x="174.2" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.16" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (139,612,646 samples, 0.48%)</title><rect x="84.2" y="645" width="5.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="87.17" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (33,571,412 samples, 0.11%)</title><rect x="169.0" y="405" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.98" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="613" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1165.25" y="623.5" ></text>
</g>
<g >
<title>__do_page_fault (34,164,226 samples, 0.12%)</title><rect x="909.7" y="549" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="912.75" y="559.5" ></text>
</g>
<g >
<title>__sched_text_start (7,411,120 samples, 0.03%)</title><rect x="1177.4" y="885" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1180.36" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,365 samples, 0.09%)</title><rect x="120.4" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.43" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (190,070,692 samples, 0.65%)</title><rect x="196.1" y="821" width="7.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="199.09" y="831.5" ></text>
</g>
<g >
<title>PyList_Append (26,061,636 samples, 0.09%)</title><rect x="74.1" y="981" width="1.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="77.10" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="181" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (136,670,961 samples, 0.47%)</title><rect x="116.0" y="821" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,326,266 samples, 0.18%)</title><rect x="586.2" y="581" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="589.22" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,558 samples, 0.09%)</title><rect x="66.7" y="613" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.72" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (196,548,144 samples, 0.67%)</title><rect x="102.4" y="837" width="7.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.39" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (18,140,811 samples, 0.06%)</title><rect x="97.2" y="373" width="0.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="100.16" y="383.5" ></text>
</g>
<g >
<title>rmqueue (64,992,416 samples, 0.22%)</title><rect x="847.1" y="245" width="2.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="850.14" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (24,776,733 samples, 0.08%)</title><rect x="151.7" y="309" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="154.66" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (28,290,192 samples, 0.10%)</title><rect x="63.5" y="485" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="66.46" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,209,250 samples, 0.09%)</title><rect x="153.6" y="469" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="156.63" y="479.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long*&gt; (34,202,141 samples, 0.12%)</title><rect x="1101.5" y="453" width="1.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1104.54" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (60,209,080 samples, 0.21%)</title><rect x="134.8" y="693" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.76" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,194,413 samples, 0.09%)</title><rect x="84.9" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.89" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (170,907,632 samples, 0.59%)</title><rect x="575.4" y="837" width="6.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="578.42" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (52,033,884 samples, 0.18%)</title><rect x="119.4" y="565" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.38" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (25,356,172 samples, 0.09%)</title><rect x="154.7" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="399.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5,018,746 samples, 0.02%)</title><rect x="554.3" y="853" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="557.29" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (7,523,769,120 samples, 25.77%)</title><rect x="597.7" y="613" width="304.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="600.69" y="623.5" >[python3.12]</text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,464,634 samples, 0.11%)</title><rect x="100.0" y="309" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="103.00" y="319.5" ></text>
</g>
<g >
<title>PyType_Ready (33,464,634 samples, 0.11%)</title><rect x="100.0" y="181" width="1.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="103.00" y="191.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,101,693 samples, 0.12%)</title><rect x="95.8" y="261" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.78" y="271.5" ></text>
</g>
<g >
<title>_PyObject_Call (135,321,245 samples, 0.46%)</title><rect x="205.7" y="485" width="5.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="208.73" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,126 samples, 0.09%)</title><rect x="109.3" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.27" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (86,555,090 samples, 0.30%)</title><rect x="215.0" y="773" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="783.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (34,278,120 samples, 0.12%)</title><rect x="1082.2" y="597" width="1.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1085.24" y="607.5" ></text>
</g>
<g >
<title>PyObject_GenericGetAttr (27,896,301 samples, 0.10%)</title><rect x="94.7" y="309" width="1.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="97.66" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,162,148 samples, 0.11%)</title><rect x="140.4" y="757" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="143.36" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (86,555,090 samples, 0.30%)</title><rect x="215.0" y="725" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="217.98" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (182,625,346 samples, 0.63%)</title><rect x="66.7" y="949" width="7.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="69.72" y="959.5" ></text>
</g>
<g >
<title>do_syscall_64 (34,137,131 samples, 0.12%)</title><rect x="142.7" y="181" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="145.70" y="191.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,932,890 samples, 0.11%)</title><rect x="121.5" y="469" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="124.49" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (104,785,052 samples, 0.36%)</title><rect x="106.1" y="581" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.09" y="591.5" ></text>
</g>
<g >
<title>do_sys_open (25,918,556 samples, 0.09%)</title><rect x="77.9" y="213" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="80.89" y="223.5" ></text>
</g>
<g >
<title>llvm::X86TargetLowering::LowerReturn (34,084,795 samples, 0.12%)</title><rect x="226.8" y="901" width="1.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="229.81" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (119,943,099 samples, 0.41%)</title><rect x="89.8" y="469" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.81" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (68,275,847 samples, 0.23%)</title><rect x="171.4" y="453" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="174.40" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,498 samples, 0.09%)</title><rect x="62.4" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.40" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,649 samples, 0.09%)</title><rect x="83.1" y="229" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.11" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (128,626,150 samples, 0.44%)</title><rect x="174.2" y="517" width="5.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.16" y="527.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,417,011 samples, 0.18%)</title><rect x="175.2" y="421" width="2.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="178.21" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,834,731 samples, 0.12%)</title><rect x="135.8" y="373" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="138.83" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,307 samples, 0.09%)</title><rect x="65.7" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.66" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (33,517,476 samples, 0.11%)</title><rect x="1074.0" y="533" width="1.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1077.01" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,914,139 samples, 0.09%)</title><rect x="138.3" y="533" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="141.25" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,149,751 samples, 0.09%)</title><rect x="137.2" y="693" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.20" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,186,177 samples, 0.12%)</title><rect x="76.5" y="501" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="79.51" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (31,809,451 samples, 0.11%)</title><rect x="102.4" y="405" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.39" y="415.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (34,138,992 samples, 0.12%)</title><rect x="116.9" y="261" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="119.95" y="271.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="645" width="4.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1165.25" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,559,354 samples, 0.11%)</title><rect x="218.5" y="549" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="221.48" y="559.5" ></text>
</g>
<g >
<title>call_function_interrupt (7,158,787 samples, 0.02%)</title><rect x="1189.7" y="693" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1192.71" y="703.5" ></text>
</g>
<g >
<title>_PyObject_Call (183,690,559 samples, 0.63%)</title><rect x="203.8" y="613" width="7.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="206.77" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,828 samples, 0.09%)</title><rect x="126.1" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.10" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,552 samples, 0.09%)</title><rect x="61.3" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (28,290,192 samples, 0.10%)</title><rect x="63.5" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.46" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,209,080 samples, 0.21%)</title><rect x="134.8" y="821" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.76" y="831.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (409,535,248 samples, 1.40%)</title><rect x="1002.2" y="533" width="16.6" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1005.23" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (102,344,064 samples, 0.35%)</title><rect x="128.5" y="309" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="319.5" ></text>
</g>
<g >
<title>__lseek64 (34,137,131 samples, 0.12%)</title><rect x="142.7" y="213" width="1.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="145.70" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (78,477,215 samples, 0.27%)</title><rect x="58.2" y="645" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.17" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (444,262,897 samples, 1.52%)</title><rect x="564.4" y="869" width="17.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="567.37" y="879.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,113,807 samples, 0.18%)</title><rect x="138.3" y="757" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="141.25" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (34,140,509 samples, 0.12%)</title><rect x="582.3" y="837" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="585.33" y="847.5" ></text>
</g>
<g >
<title>get_page_from_freelist (34,164,226 samples, 0.12%)</title><rect x="909.7" y="437" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="912.75" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,307 samples, 0.09%)</title><rect x="65.7" y="261" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.66" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,914,139 samples, 0.09%)</title><rect x="138.3" y="341" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.25" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,464,634 samples, 0.11%)</title><rect x="100.0" y="405" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="103.00" y="415.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,649 samples, 0.09%)</title><rect x="83.1" y="389" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="86.11" y="399.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (102,731,578 samples, 0.35%)</title><rect x="941.4" y="485" width="4.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="944.45" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (133,117,246 samples, 0.46%)</title><rect x="61.3" y="853" width="5.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.34" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (34,226,143 samples, 0.12%)</title><rect x="593.5" y="629" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="596.54" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (29,925,438 samples, 0.10%)</title><rect x="193.8" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.82" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,017,147 samples, 0.09%)</title><rect x="221.7" y="261" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="224.75" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (33,834,731 samples, 0.12%)</title><rect x="135.8" y="357" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.83" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (59,468,639 samples, 0.20%)</title><rect x="211.2" y="405" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.20" y="415.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,244,163 samples, 0.12%)</title><rect x="977.4" y="485" width="1.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="980.36" y="495.5" ></text>
</g>
<g >
<title>filename_lookup (28,290,192 samples, 0.10%)</title><rect x="63.5" y="213" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="66.46" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (48,817,923 samples, 0.17%)</title><rect x="151.7" y="437" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.66" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,961,501 samples, 0.09%)</title><rect x="99.0" y="501" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="101.95" y="511.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,206,552 samples, 0.09%)</title><rect x="61.3" y="325" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="64.34" y="335.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,080,610 samples, 0.12%)</title><rect x="209.8" y="405" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="212.82" y="415.5" ></text>
</g>
<g >
<title>add_and_return_legacy_wrapping_ufunc_loop (47,489,663 samples, 0.16%)</title><rect x="79.9" y="341" width="2.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="82.94" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,095,135 samples, 0.09%)</title><rect x="174.2" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.16" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (125,826,532 samples, 0.43%)</title><rect x="180.7" y="661" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,206,552 samples, 0.09%)</title><rect x="61.3" y="629" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="64.34" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (52,331,898 samples, 0.18%)</title><rect x="197.4" y="485" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.42" y="495.5" ></text>
</g>
<g >
<title>do_user_addr_fault (604,114,541 samples, 2.07%)</title><rect x="830.5" y="357" width="24.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="833.54" y="367.5" >d..</text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,149,751 samples, 0.09%)</title><rect x="137.2" y="389" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.20" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,882,874 samples, 0.12%)</title><rect x="87.2" y="229" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.16" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="693" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (58,421,053 samples, 0.20%)</title><rect x="145.2" y="357" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="148.19" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_read (34,285,084 samples, 0.12%)</title><rect x="688.2" y="277" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="691.16" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (52,419,493 samples, 0.18%)</title><rect x="189.5" y="341" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.52" y="351.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,199,668 samples, 0.09%)</title><rect x="139.3" y="389" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="142.30" y="399.5" ></text>
</g>
<g >
<title>PyObject_Str (26,211,764 samples, 0.09%)</title><rect x="223.9" y="277" width="1.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="226.86" y="287.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,250 samples, 0.09%)</title><rect x="153.6" y="613" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="156.63" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="181" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="191.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (68,533,720 samples, 0.23%)</title><rect x="1061.6" y="517" width="2.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1064.59" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (335,569,928 samples, 1.15%)</title><rect x="157.8" y="677" width="13.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.84" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (34,174,163 samples, 0.12%)</title><rect x="980.1" y="485" width="1.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="983.13" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="245" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (33,970,452 samples, 0.12%)</title><rect x="127.2" y="501" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.16" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,134,229 samples, 0.09%)</title><rect x="118.3" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.33" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (125,826,532 samples, 0.43%)</title><rect x="180.7" y="805" width="5.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="183.69" y="815.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,326,266 samples, 0.18%)</title><rect x="586.2" y="501" width="2.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="589.22" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,477,215 samples, 0.27%)</title><rect x="58.2" y="501" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="61.17" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,857,115 samples, 0.11%)</title><rect x="196.1" y="405" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="199.09" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (32,857,115 samples, 0.11%)</title><rect x="196.1" y="421" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.09" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (48,375,272 samples, 0.17%)</title><rect x="235.3" y="901" width="2.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="238.30" y="911.5" ></text>
</g>
<g >
<title>clear_page_erms (34,120,135 samples, 0.12%)</title><rect x="213.6" y="53" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="216.60" y="63.5" ></text>
</g>
<g >
<title>_PyObject_Call (339,694,550 samples, 1.16%)</title><rect x="84.2" y="741" width="13.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.17" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,194,413 samples, 0.09%)</title><rect x="84.9" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.89" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,120,342 samples, 0.12%)</title><rect x="103.7" y="373" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.67" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (119,943,099 samples, 0.41%)</title><rect x="89.8" y="405" width="4.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="92.81" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.77" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (102,344,064 samples, 0.35%)</title><rect x="128.5" y="501" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="511.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (59,468,639 samples, 0.20%)</title><rect x="211.2" y="277" width="2.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="214.20" y="287.5" ></text>
</g>
<g >
<title>pybind11::class_&lt;PyFT2Font&gt;::def&lt;long  (25,833,299 samples, 0.09%)</title><rect x="105.1" y="421" width="1.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="108.05" y="431.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator* (34,167,112 samples, 0.12%)</title><rect x="913.8" y="629" width="1.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="916.82" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (86,555,090 samples, 0.30%)</title><rect x="215.0" y="757" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="217.98" y="767.5" ></text>
</g>
<g >
<title>PyFloat_FromDouble (33,225,900 samples, 0.11%)</title><rect x="47.3" y="981" width="1.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="50.33" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,777 samples, 0.09%)</title><rect x="56.1" y="997" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,692 samples, 0.09%)</title><rect x="108.2" y="277" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="111.21" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (100,584,710 samples, 0.34%)</title><rect x="219.8" y="645" width="4.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="222.79" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (91,763,092 samples, 0.31%)</title><rect x="102.4" y="661" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="105.39" y="671.5" ></text>
</g>
<g >
<title>try_charge (33,257,301 samples, 0.11%)</title><rect x="900.4" y="357" width="1.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="903.45" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,692 samples, 0.09%)</title><rect x="108.2" y="229" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.21" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,120,135 samples, 0.12%)</title><rect x="213.6" y="757" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="216.60" y="767.5" ></text>
</g>
<g >
<title>do_anonymous_page (34,164,226 samples, 0.12%)</title><rect x="909.7" y="485" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="912.75" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,086,030 samples, 0.09%)</title><rect x="185.8" y="501" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="188.77" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,243 samples, 0.09%)</title><rect x="170.3" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.34" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,527,697 samples, 0.09%)</title><rect x="68.8" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.83" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (229,780,785 samples, 0.79%)</title><rect x="171.4" y="613" width="9.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="174.40" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (33,517,476 samples, 0.11%)</title><rect x="1074.0" y="549" width="1.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1077.01" y="559.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (26,527,697 samples, 0.09%)</title><rect x="68.8" y="293" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="71.83" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call (100,584,710 samples, 0.34%)</title><rect x="219.8" y="629" width="4.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="222.79" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,527,697 samples, 0.09%)</title><rect x="68.8" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.83" y="351.5" ></text>
</g>
<g >
<title>____fput (19,219,567 samples, 0.07%)</title><rect x="1167.0" y="917" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1169.98" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="485" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="495.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,345,047 samples, 0.18%)</title><rect x="207.7" y="357" width="2.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="210.70" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (34,101,693 samples, 0.12%)</title><rect x="95.8" y="517" width="1.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="98.78" y="527.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (33,571,412 samples, 0.11%)</title><rect x="169.0" y="277" width="1.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="171.98" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,095,135 samples, 0.09%)</title><rect x="174.2" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.16" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,527,697 samples, 0.09%)</title><rect x="68.8" y="421" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="71.83" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,199,668 samples, 0.09%)</title><rect x="139.3" y="597" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="142.30" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (154,194,036 samples, 0.53%)</title><rect x="128.5" y="789" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (29,960,916 samples, 0.10%)</title><rect x="85.9" y="389" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.94" y="399.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,208,382 samples, 0.09%)</title><rect x="189.5" y="309" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="192.52" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (467,350,025 samples, 1.60%)</title><rect x="196.1" y="965" width="18.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.09" y="975.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (25,460,519 samples, 0.09%)</title><rect x="101.4" y="501" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="104.36" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (24,776,733 samples, 0.08%)</title><rect x="151.7" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.66" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (34,080,610 samples, 0.12%)</title><rect x="209.8" y="373" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.82" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (91,763,092 samples, 0.31%)</title><rect x="102.4" y="469" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.39" y="479.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (68,514,062 samples, 0.23%)</title><rect x="966.3" y="485" width="2.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="969.29" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (33,834,731 samples, 0.12%)</title><rect x="135.8" y="245" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.83" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,460,519 samples, 0.09%)</title><rect x="101.4" y="485" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="104.36" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (27,896,301 samples, 0.10%)</title><rect x="94.7" y="581" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="97.66" y="591.5" ></text>
</g>
<g >
<title>do_exit (168,744,858 samples, 0.58%)</title><rect x="1170.5" y="933" width="6.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1173.51" y="943.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,764 samples, 0.09%)</title><rect x="223.9" y="821" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="226.86" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,863 samples, 0.09%)</title><rect x="73.0" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.04" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,180,018 samples, 0.09%)</title><rect x="111.4" y="709" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="114.39" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="277" width="1.4" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1163.87" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,464,634 samples, 0.11%)</title><rect x="100.0" y="709" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.00" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="415.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (26,209,701 samples, 0.09%)</title><rect x="195.0" y="325" width="1.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="198.03" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,460,519 samples, 0.09%)</title><rect x="101.4" y="373" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="104.36" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,890 samples, 0.09%)</title><rect x="222.8" y="469" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="225.80" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (163,266,382 samples, 0.56%)</title><rect x="76.5" y="549" width="6.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="79.51" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (59,468,639 samples, 0.20%)</title><rect x="211.2" y="501" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.20" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (18,140,811 samples, 0.06%)</title><rect x="97.2" y="469" width="0.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="100.16" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (125,826,532 samples, 0.43%)</title><rect x="180.7" y="549" width="5.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="183.69" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (34,120,135 samples, 0.12%)</title><rect x="213.6" y="741" width="1.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="216.60" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (34,139,888 samples, 0.12%)</title><rect x="215.0" y="325" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="335.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,206,552 samples, 0.09%)</title><rect x="61.3" y="421" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="64.34" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate_map (33,688,686 samples, 0.12%)</title><rect x="1085.0" y="549" width="1.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1088.01" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (109,971,600 samples, 0.38%)</title><rect x="191.6" y="645" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.64" y="655.5" ></text>
</g>
<g >
<title>do_page_fault (24,747,959 samples, 0.08%)</title><rect x="141.7" y="885" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="144.70" y="895.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,202,587 samples, 0.09%)</title><rect x="59.2" y="485" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="62.23" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,139,888 samples, 0.12%)</title><rect x="215.0" y="373" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="383.5" ></text>
</g>
<g >
<title>[offsets.cpython-312-x86_64-linux-gnu.so] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="661" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="188.77" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (7,952,093,388 samples, 27.24%)</title><rect x="589.7" y="741" width="321.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.71" y="751.5" >[python3.12]</text>
</g>
<g >
<title>zap_page_range (48,375,272 samples, 0.17%)</title><rect x="235.3" y="869" width="2.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="238.30" y="879.5" ></text>
</g>
<g >
<title>[[heap]] (174,969,605 samples, 0.60%)</title><rect x="10.0" y="997" width="7.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.01" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (24,363,856 samples, 0.08%)</title><rect x="116.0" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (120,056,685 samples, 0.41%)</title><rect x="142.7" y="629" width="4.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.70" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (78,477,215 samples, 0.27%)</title><rect x="58.2" y="725" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.17" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (339,694,550 samples, 1.16%)</title><rect x="84.2" y="821" width="13.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="165" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,382 samples, 0.09%)</title><rect x="189.5" y="245" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.52" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (52,397,003 samples, 0.18%)</title><rect x="69.9" y="325" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.91" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (190,070,692 samples, 0.65%)</title><rect x="196.1" y="693" width="7.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="199.09" y="703.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,084,795 samples, 0.12%)</title><rect x="226.8" y="741" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="229.81" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (24,789,767 samples, 0.08%)</title><rect x="78.9" y="405" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="81.94" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="277" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="287.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (68,266,745 samples, 0.23%)</title><rect x="89.8" y="309" width="2.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="92.81" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,623,323 samples, 0.12%)</title><rect x="188.2" y="373" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="191.17" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (32,207,239 samples, 0.11%)</title><rect x="145.2" y="261" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="148.19" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (183,690,559 samples, 0.63%)</title><rect x="203.8" y="629" width="7.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="206.77" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (835,437,683 samples, 2.86%)</title><rect x="866.7" y="437" width="33.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="869.68" y="447.5" >[p..</text>
</g>
<g >
<title>__do_page_fault (33,571,412 samples, 0.11%)</title><rect x="169.0" y="117" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="171.98" y="127.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (80,680,478 samples, 0.28%)</title><rect x="192.8" y="549" width="3.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="195.83" y="559.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (25,460,519 samples, 0.09%)</title><rect x="101.4" y="869" width="1.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="104.36" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,150,710 samples, 0.09%)</title><rect x="106.1" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.09" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (78,675,816 samples, 0.27%)</title><rect x="199.5" y="405" width="3.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="202.53" y="415.5" ></text>
</g>
<g >
<title>_Py_read (85,833,913 samples, 0.29%)</title><rect x="163.4" y="277" width="3.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="166.41" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (150,320,918 samples, 0.51%)</title><rect x="147.6" y="565" width="6.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.55" y="575.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (22,160,344 samples, 0.08%)</title><rect x="204.8" y="181" width="0.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="207.83" y="191.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (296,586,853 samples, 1.02%)</title><rect x="142.7" y="821" width="12.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.70" y="831.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (34,193,868 samples, 0.12%)</title><rect x="590.8" y="677" width="1.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="593.77" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="229" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="239.5" ></text>
</g>
<g >
<title>clear_page_erms (316,791,670 samples, 1.09%)</title><rect x="834.3" y="245" width="12.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="837.34" y="255.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (65,643,397 samples, 0.22%)</title><rect x="87.2" y="405" width="2.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="90.16" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (23,918,012 samples, 0.08%)</title><rect x="178.4" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.39" y="399.5" ></text>
</g>
<g >
<title>lookup_fast (25,918,556 samples, 0.09%)</title><rect x="77.9" y="149" width="1.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="80.89" y="159.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (28,290,192 samples, 0.10%)</title><rect x="63.5" y="421" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="66.46" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,134,229 samples, 0.09%)</title><rect x="118.3" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.33" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (34,140,509 samples, 0.12%)</title><rect x="582.3" y="853" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="585.33" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,640,012 samples, 0.09%)</title><rect x="132.7" y="293" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="135.67" y="303.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (106,910,694 samples, 0.37%)</title><rect x="62.4" y="597" width="4.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="65.40" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,415,202 samples, 0.18%)</title><rect x="216.4" y="581" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="219.36" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (25,721,139 samples, 0.09%)</title><rect x="167.9" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.94" y="415.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (33,927,518 samples, 0.12%)</title><rect x="1096.1" y="517" width="1.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1099.06" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,326,266 samples, 0.18%)</title><rect x="586.2" y="773" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="589.22" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (25,771,593 samples, 0.09%)</title><rect x="147.6" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.55" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (275,784,273 samples, 0.94%)</title><rect x="157.8" y="565" width="11.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.84" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (29,960,916 samples, 0.10%)</title><rect x="85.9" y="357" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.94" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (59,468,639 samples, 0.20%)</title><rect x="211.2" y="453" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="214.20" y="463.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (11,777,230 samples, 0.04%)</title><rect x="554.2" y="933" width="0.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="557.19" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (136,670,961 samples, 0.47%)</title><rect x="116.0" y="853" width="5.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.96" y="863.5" ></text>
</g>
<g >
<title>change_pte_range (33,693,608 samples, 0.12%)</title><rect x="858.7" y="277" width="1.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="861.74" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (34,271,849 samples, 0.12%)</title><rect x="1089.1" y="549" width="1.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1092.13" y="559.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (34,167,112 samples, 0.12%)</title><rect x="913.8" y="581" width="1.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="916.82" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (196,548,144 samples, 0.67%)</title><rect x="102.4" y="821" width="7.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="105.39" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="261" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="325" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (25,721,139 samples, 0.09%)</title><rect x="167.9" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.94" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (174,253,697 samples, 0.60%)</title><rect x="121.5" y="933" width="7.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="124.49" y="943.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,272,580 samples, 0.12%)</title><rect x="614.9" y="293" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="617.93" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,162,148 samples, 0.11%)</title><rect x="140.4" y="549" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.36" y="559.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,149,751 samples, 0.09%)</title><rect x="137.2" y="421" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="140.20" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (77,869,280 samples, 0.27%)</title><rect x="154.7" y="581" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="157.69" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,932,890 samples, 0.11%)</title><rect x="121.5" y="437" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="124.49" y="447.5" ></text>
</g>
<g >
<title>__do_munmap (34,179,984 samples, 0.12%)</title><rect x="560.2" y="789" width="1.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="563.23" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="133" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (78,477,215 samples, 0.27%)</title><rect x="58.2" y="837" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.17" y="847.5" ></text>
</g>
<g >
<title>_PyObject_Call (59,468,639 samples, 0.20%)</title><rect x="211.2" y="597" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="214.20" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,149,751 samples, 0.09%)</title><rect x="137.2" y="581" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.20" y="591.5" ></text>
</g>
<g >
<title>__handle_mm_fault (25,826,519 samples, 0.09%)</title><rect x="119.4" y="245" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="122.38" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="645" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (29,960,916 samples, 0.10%)</title><rect x="85.9" y="325" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.94" y="335.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,890 samples, 0.09%)</title><rect x="222.8" y="501" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="225.80" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (836,816,200 samples, 2.87%)</title><rect x="76.5" y="917" width="33.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.51" y="927.5" >_P..</text>
</g>
<g >
<title>[python3.12] (26,207,307 samples, 0.09%)</title><rect x="65.7" y="245" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.66" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (27,896,301 samples, 0.10%)</title><rect x="94.7" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.66" y="527.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,211,890 samples, 0.09%)</title><rect x="222.8" y="325" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="225.80" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (23,918,012 samples, 0.08%)</title><rect x="178.4" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.39" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (59,468,639 samples, 0.20%)</title><rect x="211.2" y="533" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="214.20" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (183,690,559 samples, 0.63%)</title><rect x="203.8" y="501" width="7.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="206.77" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (65,643,397 samples, 0.22%)</title><rect x="87.2" y="437" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.16" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,961,501 samples, 0.09%)</title><rect x="99.0" y="341" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.95" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (78,477,215 samples, 0.27%)</title><rect x="58.2" y="549" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.17" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (467,350,025 samples, 1.60%)</title><rect x="196.1" y="949" width="18.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="199.09" y="959.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (100,584,710 samples, 0.34%)</title><rect x="219.8" y="581" width="4.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="222.79" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,697 samples, 0.09%)</title><rect x="64.6" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.60" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,668 samples, 0.09%)</title><rect x="139.3" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.30" y="287.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (34,179,984 samples, 0.12%)</title><rect x="560.2" y="741" width="1.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="563.23" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (34,178,020 samples, 0.12%)</title><rect x="862.9" y="421" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="865.85" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="229" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="239.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (25,086,030 samples, 0.09%)</title><rect x="185.8" y="885" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="188.77" y="895.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="261" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1163.87" y="271.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,162,148 samples, 0.11%)</title><rect x="140.4" y="677" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.36" y="687.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (34,120,135 samples, 0.12%)</title><rect x="213.6" y="85" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="216.60" y="95.5" ></text>
</g>
<g >
<title>[python3.12] (78,168,113 samples, 0.27%)</title><rect x="118.3" y="645" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.33" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,960 samples, 0.09%)</title><rect x="133.7" y="261" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="136.70" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (7,952,093,388 samples, 27.24%)</title><rect x="589.7" y="725" width="321.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.71" y="735.5" >[python3.12]</text>
</g>
<g >
<title>_PyFunction_Vectorcall (86,042,816 samples, 0.29%)</title><rect x="188.2" y="581" width="3.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="191.17" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (51,849,972 samples, 0.18%)</title><rect x="132.7" y="613" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.67" y="623.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,960 samples, 0.09%)</title><rect x="133.7" y="453" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="136.70" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,210,126 samples, 0.09%)</title><rect x="109.3" y="469" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="112.27" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,764 samples, 0.09%)</title><rect x="223.9" y="613" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="226.86" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,623,323 samples, 0.12%)</title><rect x="188.2" y="437" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="191.17" y="447.5" ></text>
</g>
<g >
<title>alloc_pages_vma (34,026,587 samples, 0.12%)</title><rect x="692.3" y="309" width="1.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="695.32" y="319.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,126 samples, 0.09%)</title><rect x="109.3" y="421" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="112.27" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,668 samples, 0.09%)</title><rect x="139.3" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.30" y="303.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (68,500,824 samples, 0.23%)</title><rect x="951.1" y="453" width="2.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="954.11" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (29,291,122 samples, 0.10%)</title><rect x="191.6" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.64" y="559.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (170,035,707 samples, 0.58%)</title><rect x="1054.7" y="501" width="6.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1057.72" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (78,477,215 samples, 0.27%)</title><rect x="58.2" y="853" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.17" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,623,323 samples, 0.12%)</title><rect x="188.2" y="325" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="191.17" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (49,522,514 samples, 0.17%)</title><rect x="148.6" y="277" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.59" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (24,747,959 samples, 0.08%)</title><rect x="141.7" y="965" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.70" y="975.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (68,275,847 samples, 0.23%)</title><rect x="171.4" y="421" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.40" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (120,056,685 samples, 0.41%)</title><rect x="142.7" y="597" width="4.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="145.70" y="607.5" ></text>
</g>
<g >
<title>handle_mm_fault (26,136,258 samples, 0.09%)</title><rect x="198.5" y="245" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="201.48" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (52,345,047 samples, 0.18%)</title><rect x="207.7" y="309" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.70" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,214,243 samples, 0.09%)</title><rect x="170.3" y="325" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="173.34" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (25,961,501 samples, 0.09%)</title><rect x="99.0" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.95" y="655.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,419,493 samples, 0.18%)</title><rect x="189.5" y="421" width="2.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="192.52" y="431.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (25,917,198 samples, 0.09%)</title><rect x="849.8" y="293" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="852.77" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,209,080 samples, 0.21%)</title><rect x="134.8" y="645" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.76" y="655.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (26,195,640 samples, 0.09%)</title><rect x="197.4" y="325" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="200.42" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,397,003 samples, 0.18%)</title><rect x="69.9" y="373" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.91" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (29,291,122 samples, 0.10%)</title><rect x="191.6" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.64" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;float const, unsigned long&gt; &gt;::_M_valptr (34,188,707 samples, 0.12%)</title><rect x="1151.2" y="597" width="1.4" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1154.22" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (33,822,668 samples, 0.12%)</title><rect x="1111.2" y="565" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1114.21" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (18,140,811 samples, 0.06%)</title><rect x="97.2" y="613" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="100.16" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_do_relocate (33,992,050 samples, 0.12%)</title><rect x="1109.8" y="565" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1112.84" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (25,961,501 samples, 0.09%)</title><rect x="99.0" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.95" y="415.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,196,494 samples, 0.12%)</title><rect x="1083.6" y="549" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1086.63" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (136,670,961 samples, 0.47%)</title><rect x="116.0" y="885" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,275,847 samples, 0.23%)</title><rect x="171.4" y="405" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="174.40" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,777 samples, 0.09%)</title><rect x="56.1" y="981" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="991.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (67,903,104 samples, 0.23%)</title><rect x="1014.7" y="421" width="2.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1017.68" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::begin (34,166,695 samples, 0.12%)</title><rect x="1086.4" y="613" width="1.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1089.37" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,149,751 samples, 0.09%)</title><rect x="137.2" y="645" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="140.20" y="655.5" ></text>
</g>
<g >
<title>calculate_sigpending (2,749,626 samples, 0.01%)</title><rect x="234.8" y="949" width="0.1" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="237.80" y="959.5" ></text>
</g>
<g >
<title>llvm::FoldingSet&lt;llvm::SDNode&gt;::NodeEquals (34,084,795 samples, 0.12%)</title><rect x="226.8" y="853" width="1.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="229.81" y="863.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (182,625,346 samples, 0.63%)</title><rect x="66.7" y="981" width="7.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="69.72" y="991.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,101,693 samples, 0.12%)</title><rect x="95.8" y="421" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.78" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (78,477,215 samples, 0.27%)</title><rect x="58.2" y="709" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.17" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_erase (34,222,172 samples, 0.12%)</title><rect x="1154.0" y="549" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1156.96" y="559.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (19,219,567 samples, 0.07%)</title><rect x="1167.0" y="789" width="0.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1169.98" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (80,680,478 samples, 0.28%)</title><rect x="192.8" y="517" width="3.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="195.83" y="527.5" ></text>
</g>
<g >
<title>std::operator!=&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; (34,250,855 samples, 0.12%)</title><rect x="1155.3" y="629" width="1.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1158.34" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (77,869,280 samples, 0.27%)</title><rect x="154.7" y="677" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,668 samples, 0.09%)</title><rect x="139.3" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.30" y="559.5" ></text>
</g>
<g >
<title>do_user_addr_fault (47,489,663 samples, 0.16%)</title><rect x="79.9" y="245" width="2.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="82.94" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (52,415,202 samples, 0.18%)</title><rect x="216.4" y="485" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.36" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (413,439,208 samples, 1.42%)</title><rect x="154.7" y="885" width="16.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="157.69" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,817 samples, 0.12%)</title><rect x="186.8" y="565" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.79" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (34,117,120 samples, 0.12%)</title><rect x="969.1" y="501" width="1.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="972.06" y="511.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (68,488,176 samples, 0.23%)</title><rect x="693.7" y="309" width="2.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="696.69" y="319.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_examine_vertex&gt; (34,057,968 samples, 0.12%)</title><rect x="934.5" y="517" width="1.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="937.55" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (18,140,811 samples, 0.06%)</title><rect x="97.2" y="581" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.16" y="591.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,202,587 samples, 0.09%)</title><rect x="59.2" y="437" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="62.23" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (243,159,198 samples, 0.83%)</title><rect x="203.8" y="725" width="9.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="206.77" y="735.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,113,807 samples, 0.18%)</title><rect x="138.3" y="677" width="2.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="141.25" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (67,699,708 samples, 0.23%)</title><rect x="1114.0" y="597" width="2.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1116.95" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,208,558 samples, 0.09%)</title><rect x="66.7" y="661" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="69.72" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (102,344,064 samples, 0.35%)</title><rect x="128.5" y="453" width="4.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="131.53" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (190,070,692 samples, 0.65%)</title><rect x="196.1" y="645" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.09" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,821 samples, 0.09%)</title><rect x="97.9" y="821" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.90" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,120,135 samples, 0.12%)</title><rect x="213.6" y="853" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="216.60" y="863.5" ></text>
</g>
<g >
<title>change_protection_range (33,693,608 samples, 0.12%)</title><rect x="858.7" y="293" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="861.74" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call (610,828,580 samples, 2.09%)</title><rect x="171.4" y="965" width="24.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="174.40" y="975.5" >_..</text>
</g>
<g >
<title>PyEval_EvalCode (68,275,847 samples, 0.23%)</title><rect x="171.4" y="341" width="2.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="174.40" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (22,160,344 samples, 0.08%)</title><rect x="204.8" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.83" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (32,878,788 samples, 0.11%)</title><rect x="179.4" y="261" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.36" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (296,586,853 samples, 1.02%)</title><rect x="142.7" y="805" width="12.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="815.5" ></text>
</g>
<g >
<title>change_protection (33,693,608 samples, 0.12%)</title><rect x="858.7" y="309" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="861.74" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,992 samples, 0.12%)</title><rect x="116.9" y="453" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.95" y="463.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; (32,227,910 samples, 0.11%)</title><rect x="911.1" y="597" width="1.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="914.13" y="607.5" ></text>
</g>
<g >
<title>PyArg_ParseTupleAndKeywords (26,213,712 samples, 0.09%)</title><rect x="587.3" y="341" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="590.27" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (24,363,856 samples, 0.08%)</title><rect x="116.0" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="335.5" ></text>
</g>
<g >
<title>all (29,194,175,900 samples, 100%)</title><rect x="10.0" y="1029" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (24,776,733 samples, 0.08%)</title><rect x="151.7" y="245" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="154.66" y="255.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="677" width="4.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1165.25" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,571,412 samples, 0.11%)</title><rect x="169.0" y="469" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="171.98" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_destroy_node (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="501" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1163.87" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (104,185,570 samples, 0.36%)</title><rect x="68.8" y="565" width="4.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="71.83" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (86,042,816 samples, 0.29%)</title><rect x="188.2" y="565" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.17" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (163,155,457 samples, 0.56%)</title><rect x="609.7" y="405" width="6.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="612.72" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,527,697 samples, 0.09%)</title><rect x="68.8" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.83" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,863 samples, 0.09%)</title><rect x="73.0" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.04" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,120,817 samples, 0.12%)</title><rect x="186.8" y="453" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="189.79" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (34,179,669 samples, 0.12%)</title><rect x="1069.9" y="565" width="1.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1072.90" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (75,294,107 samples, 0.26%)</title><rect x="147.6" y="421" width="3.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="150.55" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (52,424,216 samples, 0.18%)</title><rect x="107.2" y="501" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,149,751 samples, 0.09%)</title><rect x="137.2" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.20" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,559,354 samples, 0.11%)</title><rect x="218.5" y="533" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="221.48" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (52,397,003 samples, 0.18%)</title><rect x="69.9" y="437" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.91" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,587 samples, 0.09%)</title><rect x="59.2" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.23" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (74,372,820 samples, 0.25%)</title><rect x="219.8" y="533" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="222.79" y="543.5" ></text>
</g>
<g >
<title>do_lookup_x (33,970,452 samples, 0.12%)</title><rect x="127.2" y="293" width="1.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="130.16" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (512,581,457 samples, 1.76%)</title><rect x="561.6" y="885" width="20.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="564.61" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (34,211,298 samples, 0.12%)</title><rect x="1102.9" y="533" width="1.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1105.92" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,209,080 samples, 0.21%)</title><rect x="134.8" y="901" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.76" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (24,545,339 samples, 0.08%)</title><rect x="192.8" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.83" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (190,070,692 samples, 0.65%)</title><rect x="196.1" y="629" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.09" y="639.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5,018,746 samples, 0.02%)</title><rect x="554.3" y="805" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="557.29" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (77,869,280 samples, 0.27%)</title><rect x="154.7" y="613" width="3.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="157.69" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (229,780,785 samples, 0.79%)</title><rect x="171.4" y="645" width="9.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="655.5" ></text>
</g>
<g >
<title>_PyObject_GC_NewVar (26,208,970 samples, 0.09%)</title><rect x="203.8" y="341" width="1.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="206.77" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (136,670,961 samples, 0.47%)</title><rect x="116.0" y="917" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="927.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (25,917,198 samples, 0.09%)</title><rect x="849.8" y="261" width="1.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="852.77" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (85,833,913 samples, 0.29%)</title><rect x="163.4" y="229" width="3.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="166.41" y="239.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,211,764 samples, 0.09%)</title><rect x="223.9" y="709" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="226.86" y="719.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (125,826,532 samples, 0.43%)</title><rect x="180.7" y="709" width="5.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="183.69" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (106,910,694 samples, 0.37%)</title><rect x="62.4" y="757" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.40" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (413,439,208 samples, 1.42%)</title><rect x="154.7" y="869" width="16.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="157.69" y="879.5" ></text>
</g>
<g >
<title>_PyObject_Call (49,522,514 samples, 0.17%)</title><rect x="148.6" y="405" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="151.59" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,194,413 samples, 0.09%)</title><rect x="84.9" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.89" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="581" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,863 samples, 0.09%)</title><rect x="202.7" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.71" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,207,365 samples, 0.09%)</title><rect x="120.4" y="373" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="123.43" y="383.5" ></text>
</g>
<g >
<title>sync_regs (26,212,636 samples, 0.09%)</title><rect x="58.2" y="277" width="1.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="61.17" y="287.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,120,135 samples, 0.12%)</title><rect x="213.6" y="645" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="216.60" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (196,548,144 samples, 0.67%)</title><rect x="102.4" y="805" width="7.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.39" y="815.5" ></text>
</g>
<g >
<title>_PyRuntime (68,304,791 samples, 0.23%)</title><rect x="232.0" y="997" width="2.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="235.00" y="1007.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,151,016 samples, 0.12%)</title><rect x="91.2" y="181" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="94.19" y="191.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (190,070,692 samples, 0.65%)</title><rect x="196.1" y="725" width="7.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="199.09" y="735.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT_interface::_initialize (32,227,910 samples, 0.11%)</title><rect x="911.1" y="677" width="1.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="914.13" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="277" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (157,213,577 samples, 0.54%)</title><rect x="197.4" y="517" width="6.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="200.42" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (34,281,636 samples, 0.12%)</title><rect x="1126.4" y="581" width="1.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1129.35" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (196,548,144 samples, 0.67%)</title><rect x="102.4" y="741" width="7.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="105.39" y="751.5" ></text>
</g>
<g >
<title>free_unref_page_list (33,757,594 samples, 0.12%)</title><rect x="1176.0" y="773" width="1.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1178.97" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.77" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (29,925,438 samples, 0.10%)</title><rect x="193.8" y="197" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.82" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,171,141 samples, 0.12%)</title><rect x="907.0" y="661" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="909.99" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,211,764 samples, 0.09%)</title><rect x="223.9" y="565" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="226.86" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,721,139 samples, 0.09%)</title><rect x="167.9" y="389" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="170.94" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (61,635,632 samples, 0.21%)</title><rect x="142.7" y="389" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (32,932,890 samples, 0.11%)</title><rect x="121.5" y="549" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.49" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,464,634 samples, 0.11%)</title><rect x="100.0" y="549" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="103.00" y="559.5" ></text>
</g>
<g >
<title>__libc_open64 (25,918,556 samples, 0.09%)</title><rect x="77.9" y="277" width="1.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="80.89" y="287.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (23,918,012 samples, 0.08%)</title><rect x="178.4" y="261" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="181.39" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,194,760 samples, 0.12%)</title><rect x="607.0" y="373" width="1.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="609.96" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (133,117,246 samples, 0.46%)</title><rect x="61.3" y="821" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (7,294,475,978 samples, 24.99%)</title><rect x="607.0" y="565" width="294.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="609.96" y="575.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (33,834,731 samples, 0.12%)</title><rect x="135.8" y="437" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.83" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (335,569,928 samples, 1.15%)</title><rect x="157.8" y="757" width="13.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="160.84" y="767.5" ></text>
</g>
<g >
<title>PyArray_DiscoverDTypeAndShape_Recursive (26,084,157 samples, 0.09%)</title><rect x="57.1" y="981" width="1.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="60.12" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,527,697 samples, 0.09%)</title><rect x="68.8" y="501" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="71.83" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,120,135 samples, 0.12%)</title><rect x="213.6" y="773" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="216.60" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (129,080,205 samples, 0.44%)</title><rect x="77.9" y="533" width="5.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.89" y="543.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (34,086,907 samples, 0.12%)</title><rect x="1159.5" y="613" width="1.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1162.49" y="623.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (24,747,959 samples, 0.08%)</title><rect x="141.7" y="949" width="1.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="144.70" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (196,548,144 samples, 0.67%)</title><rect x="102.4" y="725" width="7.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.39" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (80,703,196 samples, 0.28%)</title><rect x="63.5" y="517" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="66.46" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,477,215 samples, 0.27%)</title><rect x="58.2" y="677" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="61.17" y="687.5" ></text>
</g>
<g >
<title>page_fault (24,747,959 samples, 0.08%)</title><rect x="141.7" y="901" width="1.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="144.70" y="911.5" ></text>
</g>
<g >
<title>handle_mm_fault (33,257,301 samples, 0.11%)</title><rect x="900.4" y="437" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="903.45" y="447.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,150,710 samples, 0.09%)</title><rect x="106.1" y="533" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="109.09" y="543.5" ></text>
</g>
<g >
<title>clear_page_erms (34,026,587 samples, 0.12%)</title><rect x="692.3" y="261" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="695.32" y="271.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (182,625,346 samples, 0.63%)</title><rect x="66.7" y="917" width="7.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="69.72" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (25,914,139 samples, 0.09%)</title><rect x="138.3" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.25" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (150,320,918 samples, 0.51%)</title><rect x="147.6" y="581" width="6.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="150.55" y="591.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (24,747,959 samples, 0.08%)</title><rect x="141.7" y="773" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="144.70" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="453" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="463.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_discover_vertex&gt; (34,263,420 samples, 0.12%)</title><rect x="927.7" y="517" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="930.65" y="527.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,415,202 samples, 0.18%)</title><rect x="216.4" y="325" width="2.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="219.36" y="335.5" ></text>
</g>
<g >
<title>__fsnotify_parent (26,198,614 samples, 0.09%)</title><rect x="165.8" y="117" width="1.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="168.82" y="127.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,559,354 samples, 0.11%)</title><rect x="218.5" y="309" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="221.48" y="319.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (24,363,856 samples, 0.08%)</title><rect x="116.0" y="469" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="118.96" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (59,468,639 samples, 0.20%)</title><rect x="211.2" y="613" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="214.20" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (17,813,920 samples, 0.06%)</title><rect x="84.2" y="229" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,961,501 samples, 0.09%)</title><rect x="99.0" y="805" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.95" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (229,780,785 samples, 0.79%)</title><rect x="171.4" y="853" width="9.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (29,960,916 samples, 0.10%)</title><rect x="85.9" y="405" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.94" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (32,857,115 samples, 0.11%)</title><rect x="196.1" y="469" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.09" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (46,750,554 samples, 0.16%)</title><rect x="224.9" y="965" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.92" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (176,737,333 samples, 0.61%)</title><rect x="1170.5" y="997" width="7.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1173.51" y="1007.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,209,250 samples, 0.09%)</title><rect x="153.6" y="389" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="156.63" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (17,813,920 samples, 0.06%)</title><rect x="84.2" y="309" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,668 samples, 0.09%)</title><rect x="139.3" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.30" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (78,675,816 samples, 0.27%)</title><rect x="199.5" y="389" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.53" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,168,113 samples, 0.27%)</title><rect x="118.3" y="693" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="121.33" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,112,554 samples, 0.09%)</title><rect x="586.2" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="589.22" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (34,221,616 samples, 0.12%)</title><rect x="956.6" y="469" width="1.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="959.64" y="479.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;*&gt; (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="389" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1163.87" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,017,147 samples, 0.09%)</title><rect x="221.7" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="224.75" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,186,177 samples, 0.12%)</title><rect x="76.5" y="485" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.51" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="325" width="1.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1163.87" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (28,723,853 samples, 0.10%)</title><rect x="124.9" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.94" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (119,943,099 samples, 0.41%)</title><rect x="89.8" y="645" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.81" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (125,826,532 samples, 0.43%)</title><rect x="180.7" y="853" width="5.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="183.69" y="863.5" ></text>
</g>
<g >
<title>do_numa_page (25,826,519 samples, 0.09%)</title><rect x="119.4" y="229" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="122.38" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (102,344,064 samples, 0.35%)</title><rect x="128.5" y="277" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="287.5" ></text>
</g>
<g >
<title>try_to_unmap_one (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="805" width="1.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1191.64" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (27,896,301 samples, 0.10%)</title><rect x="94.7" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.66" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,209,080 samples, 0.21%)</title><rect x="134.8" y="533" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="137.76" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,764 samples, 0.09%)</title><rect x="223.9" y="901" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="226.86" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (57,799,046 samples, 0.20%)</title><rect x="180.7" y="453" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="183.69" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (29,960,916 samples, 0.10%)</title><rect x="85.9" y="309" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.94" y="319.5" ></text>
</g>
<g >
<title>page_fault (102,514,763 samples, 0.35%)</title><rect x="692.3" y="421" width="4.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="695.32" y="431.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (25,086,030 samples, 0.09%)</title><rect x="185.8" y="917" width="1.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="188.77" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="277" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="287.5" ></text>
</g>
<g >
<title>alloc_pages_vma (24,747,959 samples, 0.08%)</title><rect x="141.7" y="789" width="1.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="144.70" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,207,498 samples, 0.09%)</title><rect x="62.4" y="517" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="65.40" y="527.5" ></text>
</g>
<g >
<title>PySequence_Tuple (23,918,012 samples, 0.08%)</title><rect x="178.4" y="373" width="1.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="181.39" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,326,266 samples, 0.18%)</title><rect x="586.2" y="549" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="589.22" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,211,649 samples, 0.09%)</title><rect x="83.1" y="277" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="86.11" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (58,421,053 samples, 0.20%)</title><rect x="145.2" y="453" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="148.19" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="485" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,149,751 samples, 0.09%)</title><rect x="137.2" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.20" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (7,227,023,917 samples, 24.76%)</title><rect x="608.3" y="517" width="292.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="611.34" y="527.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="357" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="367.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (61,635,632 samples, 0.21%)</title><rect x="142.7" y="341" width="2.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="145.70" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="431.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,424,216 samples, 0.18%)</title><rect x="107.2" y="421" width="2.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="110.15" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (189,478,031 samples, 0.65%)</title><rect x="76.5" y="821" width="7.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="79.51" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,126 samples, 0.09%)</title><rect x="109.3" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.27" y="415.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (168,495,394 samples, 0.58%)</title><rect x="1069.9" y="581" width="6.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1072.90" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,139,888 samples, 0.12%)</title><rect x="215.0" y="533" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="217.98" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="949" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="959.5" ></text>
</g>
<g >
<title>__memset_erms (26,179,925 samples, 0.09%)</title><rect x="156.8" y="85" width="1.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="159.78" y="95.5" ></text>
</g>
<g >
<title>PyLong_FromLong (33,393,156 samples, 0.11%)</title><rect x="75.2" y="981" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="78.16" y="991.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,212,863 samples, 0.09%)</title><rect x="73.0" y="293" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="76.04" y="303.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5,151,388 samples, 0.02%)</title><rect x="235.0" y="933" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="238.01" y="943.5" ></text>
</g>
<g >
<title>array_assign_subscript (68,027,486 samples, 0.23%)</title><rect x="183.0" y="533" width="2.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="186.02" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (18,140,811 samples, 0.06%)</title><rect x="97.2" y="389" width="0.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="100.16" y="399.5" ></text>
</g>
<g >
<title>pybind11::detail::argument_loader&lt;diff_Nexullance_IT_interface*, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int&gt;::call_impl&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, pybind11::cpp_function::cpp_function&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, diff_Nexullance_IT_interface, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (6,212,989,464 samples, 21.28%)</title><rect x="911.1" y="725" width="251.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="914.13" y="735.5" >pybind11::detail::argument_loader..</text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="757" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="767.5" ></text>
</g>
<g >
<title>__handle_mm_fault (604,114,541 samples, 2.07%)</title><rect x="830.5" y="325" width="24.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="833.54" y="335.5" >_..</text>
</g>
<g >
<title>PyBytes_FromStringAndSize (34,194,760 samples, 0.12%)</title><rect x="607.0" y="517" width="1.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="609.96" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (65,643,397 samples, 0.22%)</title><rect x="87.2" y="453" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="90.16" y="463.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (433,229,890 samples, 1.48%)</title><rect x="196.1" y="869" width="17.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="199.09" y="879.5" ></text>
</g>
<g >
<title>generic_wrapped_legacy_loop (68,136,851 samples, 0.23%)</title><rect x="228.2" y="949" width="2.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="231.18" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,961,501 samples, 0.09%)</title><rect x="99.0" y="325" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.95" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (25,961,501 samples, 0.09%)</title><rect x="99.0" y="837" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.95" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,365 samples, 0.09%)</title><rect x="120.4" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.43" y="479.5" ></text>
</g>
<g >
<title>do_anonymous_page (24,747,959 samples, 0.08%)</title><rect x="141.7" y="805" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="144.70" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,320,854,641 samples, 4.52%)</title><rect x="142.7" y="981" width="53.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.70" y="991.5" >_PyEv..</text>
</g>
<g >
<title>copy_page (33,571,412 samples, 0.11%)</title><rect x="169.0" y="53" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="171.98" y="63.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,180,018 samples, 0.09%)</title><rect x="111.4" y="853" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="114.39" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,764 samples, 0.09%)</title><rect x="176.3" y="277" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.27" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="213" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="917" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="927.5" ></text>
</g>
<g >
<title>unmap_page_range (168,744,858 samples, 0.58%)</title><rect x="1170.5" y="853" width="6.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1173.51" y="863.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (34,271,849 samples, 0.12%)</title><rect x="1089.1" y="533" width="1.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1092.13" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,138,992 samples, 0.12%)</title><rect x="116.9" y="293" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="119.95" y="303.5" ></text>
</g>
<g >
<title>copy_page_to_iter (33,523,256 samples, 0.11%)</title><rect x="163.4" y="69" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="166.41" y="79.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="293" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (467,350,025 samples, 1.60%)</title><rect x="196.1" y="981" width="18.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="199.09" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (91,763,092 samples, 0.31%)</title><rect x="102.4" y="677" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.39" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="431.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (407,992,892 samples, 1.40%)</title><rect x="833.3" y="277" width="16.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="836.28" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="629" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (34,171,141 samples, 0.12%)</title><rect x="907.0" y="629" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="909.99" y="639.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,162,148 samples, 0.11%)</title><rect x="140.4" y="805" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="143.36" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (467,350,025 samples, 1.60%)</title><rect x="196.1" y="917" width="18.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.09" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (28,723,853 samples, 0.10%)</title><rect x="124.9" y="437" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="127.94" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,018,355 samples, 0.09%)</title><rect x="67.8" y="293" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="70.78" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (59,468,639 samples, 0.20%)</title><rect x="211.2" y="245" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.20" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,415,202 samples, 0.18%)</title><rect x="216.4" y="533" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="219.36" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,397,003 samples, 0.18%)</title><rect x="69.9" y="357" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.91" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,080,610 samples, 0.12%)</title><rect x="209.8" y="341" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="212.82" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="597" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="607.5" ></text>
</g>
<g >
<title>__do_page_fault (34,084,795 samples, 0.12%)</title><rect x="226.8" y="773" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="229.81" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_erase (67,858,510 samples, 0.23%)</title><rect x="1152.6" y="565" width="2.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1155.60" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (102,344,064 samples, 0.35%)</title><rect x="128.5" y="421" width="4.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="131.53" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,180,018 samples, 0.09%)</title><rect x="111.4" y="325" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="114.39" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,809,451 samples, 0.11%)</title><rect x="102.4" y="357" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="105.39" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long*&gt; &gt;::allocate (33,688,686 samples, 0.12%)</title><rect x="1085.0" y="533" width="1.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1088.01" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (14,313,598,062 samples, 49.03%)</title><rect x="583.7" y="901" width="578.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="586.71" y="911.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (77,657,873 samples, 0.27%)</title><rect x="69.9" y="517" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.91" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (24,363,856 samples, 0.08%)</title><rect x="116.0" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="319.5" ></text>
</g>
<g >
<title>do_page_fault (34,084,795 samples, 0.12%)</title><rect x="226.8" y="789" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="229.81" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,527,697 samples, 0.09%)</title><rect x="68.8" y="405" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="71.83" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (174,253,697 samples, 0.60%)</title><rect x="121.5" y="965" width="7.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="124.49" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (141,320,807 samples, 0.48%)</title><rect x="122.8" y="517" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.82" y="527.5" ></text>
</g>
<g >
<title>PyDescr_NewMethod (25,460,519 samples, 0.09%)</title><rect x="101.4" y="245" width="1.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="104.36" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (32,878,788 samples, 0.11%)</title><rect x="179.4" y="325" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.36" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (614,807,537 samples, 2.11%)</title><rect x="76.5" y="853" width="24.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.51" y="863.5" >_..</text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (136,860,004 samples, 0.47%)</title><rect x="948.3" y="485" width="5.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="951.34" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (28,723,853 samples, 0.10%)</title><rect x="124.9" y="373" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="127.94" y="383.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,205,863 samples, 0.09%)</title><rect x="202.7" y="357" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="205.71" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (48,817,923 samples, 0.17%)</title><rect x="151.7" y="389" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="154.66" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (91,763,092 samples, 0.31%)</title><rect x="102.4" y="533" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="105.39" y="543.5" ></text>
</g>
<g >
<title>task_numa_work (33,987,773 samples, 0.12%)</title><rect x="1028.5" y="421" width="1.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1031.46" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,211,764 samples, 0.09%)</title><rect x="223.9" y="389" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="226.86" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (214,403,116 samples, 0.73%)</title><rect x="128.5" y="965" width="8.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="975.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,208,821 samples, 0.09%)</title><rect x="97.9" y="837" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="100.90" y="847.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,171,141 samples, 0.12%)</title><rect x="907.0" y="597" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="909.99" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,162,148 samples, 0.11%)</title><rect x="140.4" y="405" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="143.36" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,397,003 samples, 0.18%)</title><rect x="69.9" y="309" width="2.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="72.91" y="319.5" ></text>
</g>
<g >
<title>[_json.cpython-312-x86_64-linux-gnu.so] (26,195,992 samples, 0.09%)</title><rect x="177.3" y="357" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="180.33" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="773" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="783.5" ></text>
</g>
<g >
<title>llvm::SmallVectorTemplateBase&lt;unsigned int, true&gt;::push_back (34,084,795 samples, 0.12%)</title><rect x="226.8" y="821" width="1.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="229.81" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (33,834,731 samples, 0.12%)</title><rect x="135.8" y="341" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.83" y="351.5" ></text>
</g>
<g >
<title>_int_free (34,222,172 samples, 0.12%)</title><rect x="1154.0" y="469" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1156.96" y="479.5" ></text>
</g>
<g >
<title>mutex_lock (34,137,131 samples, 0.12%)</title><rect x="142.7" y="117" width="1.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="145.70" y="127.5" ></text>
</g>
<g >
<title>[python3.12] (102,344,064 samples, 0.35%)</title><rect x="128.5" y="261" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (275,784,273 samples, 0.94%)</title><rect x="157.8" y="533" width="11.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="160.84" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (243,159,198 samples, 0.83%)</title><rect x="203.8" y="741" width="9.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (7,523,769,120 samples, 25.77%)</title><rect x="597.7" y="645" width="304.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="600.69" y="655.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,149,751 samples, 0.09%)</title><rect x="137.2" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.20" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (59,468,639 samples, 0.20%)</title><rect x="211.2" y="309" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.20" y="319.5" ></text>
</g>
<g >
<title>PyObject_Dir (26,179,925 samples, 0.09%)</title><rect x="156.8" y="293" width="1.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="159.78" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (17,813,920 samples, 0.06%)</title><rect x="84.2" y="277" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="287.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,527,697 samples, 0.09%)</title><rect x="68.8" y="517" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="71.83" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,207,307 samples, 0.09%)</title><rect x="65.7" y="437" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="68.66" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (58,502,848 samples, 0.20%)</title><rect x="116.0" y="693" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.96" y="703.5" ></text>
</g>
<g >
<title>__lru_cache_add (25,917,198 samples, 0.09%)</title><rect x="849.8" y="277" width="1.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="852.77" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (413,439,208 samples, 1.42%)</title><rect x="154.7" y="933" width="16.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="157.69" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (183,690,559 samples, 0.63%)</title><rect x="203.8" y="581" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="591.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (409,535,248 samples, 1.40%)</title><rect x="1002.2" y="517" width="16.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1005.23" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (33,623,323 samples, 0.12%)</title><rect x="188.2" y="229" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="191.17" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (34,285,084 samples, 0.12%)</title><rect x="688.2" y="293" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="691.16" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,061,992 samples, 0.09%)</title><rect x="60.3" y="341" width="1.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="63.29" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,149,751 samples, 0.09%)</title><rect x="137.2" y="261" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.20" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (102,514,763 samples, 0.35%)</title><rect x="692.3" y="373" width="4.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="695.32" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (136,444,596 samples, 0.47%)</title><rect x="554.7" y="885" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="557.72" y="895.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,814 samples, 0.09%)</title><rect x="146.5" y="341" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="149.49" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (68,400,819 samples, 0.23%)</title><rect x="1100.2" y="469" width="2.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1103.15" y="479.5" ></text>
</g>
<g >
<title>__do_page_fault (34,193,868 samples, 0.12%)</title><rect x="590.8" y="581" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="593.77" y="591.5" ></text>
</g>
<g >
<title>PyNumber_Remainder (26,211,890 samples, 0.09%)</title><rect x="222.8" y="357" width="1.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="225.80" y="367.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (48,817,923 samples, 0.17%)</title><rect x="151.7" y="501" width="1.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="154.66" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,888 samples, 0.09%)</title><rect x="150.6" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.60" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,243 samples, 0.09%)</title><rect x="170.3" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.34" y="351.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,138,992 samples, 0.12%)</title><rect x="116.9" y="229" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="119.95" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (54,495,889 samples, 0.19%)</title><rect x="63.5" y="501" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.46" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (78,168,113 samples, 0.27%)</title><rect x="118.3" y="709" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.33" y="719.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (4,116,698,714 samples, 14.10%)</title><rect x="696.5" y="421" width="166.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="699.46" y="431.5" >[libz.so.1.2.11]</text>
</g>
<g >
<title>[python3.12] (24,545,339 samples, 0.08%)</title><rect x="192.8" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.83" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,878,788 samples, 0.11%)</title><rect x="179.4" y="549" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="182.36" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,374,349 samples, 0.09%)</title><rect x="134.8" y="309" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="137.76" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="757" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (133,144,064 samples, 0.46%)</title><rect x="218.5" y="805" width="5.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="221.48" y="815.5" ></text>
</g>
<g >
<title>PyUnicode_FromFormatV (27,896,301 samples, 0.10%)</title><rect x="94.7" y="277" width="1.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="97.66" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (836,816,200 samples, 2.87%)</title><rect x="76.5" y="933" width="33.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.51" y="943.5" >_P..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (106,910,694 samples, 0.37%)</title><rect x="62.4" y="741" width="4.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="65.40" y="751.5" ></text>
</g>
<g >
<title>unmap_vmas (168,744,858 samples, 0.58%)</title><rect x="1170.5" y="885" width="6.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1173.51" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (136,743,855 samples, 0.47%)</title><rect x="576.8" y="821" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="579.80" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,200,643 samples, 0.09%)</title><rect x="230.9" y="997" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="233.94" y="1007.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (275,784,273 samples, 0.94%)</title><rect x="157.8" y="469" width="11.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="160.84" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (133,117,246 samples, 0.46%)</title><rect x="61.3" y="869" width="5.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="64.34" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (34,221,616 samples, 0.12%)</title><rect x="956.6" y="485" width="1.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="959.64" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (103,161,649 samples, 0.35%)</title><rect x="78.9" y="437" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.94" y="447.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5,018,746 samples, 0.02%)</title><rect x="554.3" y="821" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="557.29" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,250 samples, 0.09%)</title><rect x="153.6" y="533" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="156.63" y="543.5" ></text>
</g>
<g >
<title>_PyImport_GetModuleAttrString (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="869" width="4.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1165.25" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (56,135,139 samples, 0.19%)</title><rect x="193.8" y="453" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.82" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (339,694,550 samples, 1.16%)</title><rect x="84.2" y="773" width="13.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="87.17" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (56,155,329 samples, 0.19%)</title><rect x="84.9" y="437" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.89" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (30,882,219 samples, 0.11%)</title><rect x="81.9" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.86" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (196,548,144 samples, 0.67%)</title><rect x="102.4" y="853" width="7.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="105.39" y="863.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (25,086,030 samples, 0.09%)</title><rect x="185.8" y="437" width="1.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="188.77" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,552 samples, 0.09%)</title><rect x="61.3" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (229,780,785 samples, 0.79%)</title><rect x="171.4" y="757" width="9.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="767.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (34,173,093 samples, 0.12%)</title><rect x="172.8" y="293" width="1.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="175.78" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (25,721,139 samples, 0.09%)</title><rect x="167.9" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.94" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (120,056,685 samples, 0.41%)</title><rect x="142.7" y="501" width="4.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.70" y="511.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (34,112,881 samples, 0.12%)</title><rect x="1147.1" y="517" width="1.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1150.10" y="527.5" ></text>
</g>
<g >
<title>__do_page_fault (34,272,580 samples, 0.12%)</title><rect x="614.9" y="325" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="617.93" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (154,194,036 samples, 0.53%)</title><rect x="128.5" y="853" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.53" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="671.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (250,063,134 samples, 0.86%)</title><rect x="157.8" y="437" width="10.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="160.84" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,326,266 samples, 0.18%)</title><rect x="586.2" y="613" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="589.22" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,668 samples, 0.09%)</title><rect x="139.3" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.30" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (80,680,478 samples, 0.28%)</title><rect x="192.8" y="533" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.83" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (57,799,046 samples, 0.20%)</title><rect x="180.7" y="533" width="2.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="183.69" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,250 samples, 0.09%)</title><rect x="153.6" y="229" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="156.63" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,194,760 samples, 0.12%)</title><rect x="607.0" y="389" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="609.96" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (48,355,673 samples, 0.17%)</title><rect x="219.8" y="357" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="222.79" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,208,558 samples, 0.09%)</title><rect x="66.7" y="597" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.72" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (48,895,588 samples, 0.17%)</title><rect x="205.7" y="341" width="2.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="208.73" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (174,253,697 samples, 0.60%)</title><rect x="121.5" y="853" width="7.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="124.49" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (34,101,693 samples, 0.12%)</title><rect x="95.8" y="629" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.78" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,342 samples, 0.12%)</title><rect x="103.7" y="405" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.67" y="415.5" ></text>
</g>
<g >
<title>arch_vma_name (26,211,349 samples, 0.09%)</title><rect x="612.5" y="229" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="615.49" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,150,710 samples, 0.09%)</title><rect x="106.1" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.09" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (174,253,697 samples, 0.60%)</title><rect x="121.5" y="693" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.49" y="703.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (68,394,172 samples, 0.23%)</title><rect x="987.0" y="533" width="2.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="990.04" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (80,680,478 samples, 0.28%)</title><rect x="192.8" y="565" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.83" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,558 samples, 0.09%)</title><rect x="66.7" y="741" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.72" y="751.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,424,216 samples, 0.18%)</title><rect x="107.2" y="533" width="2.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="110.15" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,961,501 samples, 0.09%)</title><rect x="99.0" y="725" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.95" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="261" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="271.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (154,194,036 samples, 0.53%)</title><rect x="128.5" y="773" width="6.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="131.53" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,212,863 samples, 0.09%)</title><rect x="73.0" y="373" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="76.04" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,764 samples, 0.09%)</title><rect x="223.9" y="229" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="226.86" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,180,018 samples, 0.09%)</title><rect x="111.4" y="405" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.39" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~_Vector_base (68,121,963 samples, 0.23%)</title><rect x="1125.0" y="597" width="2.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1127.99" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,101,693 samples, 0.12%)</title><rect x="95.8" y="533" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.78" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,139,888 samples, 0.12%)</title><rect x="215.0" y="581" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (34,186,177 samples, 0.12%)</title><rect x="76.5" y="517" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.51" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (68,478,094 samples, 0.23%)</title><rect x="1138.8" y="597" width="2.8" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1141.80" y="607.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (171,048,446 samples, 0.59%)</title><rect x="1118.1" y="565" width="6.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1121.07" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (26,136,258 samples, 0.09%)</title><rect x="198.5" y="341" width="1.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="201.48" y="351.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (51,689,355 samples, 0.18%)</title><rect x="154.7" y="501" width="2.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="157.69" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="821" width="4.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1165.25" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (86,555,090 samples, 0.30%)</title><rect x="215.0" y="853" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="217.98" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,180,018 samples, 0.09%)</title><rect x="111.4" y="693" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.39" y="703.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,415,202 samples, 0.18%)</title><rect x="216.4" y="437" width="2.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="219.36" y="447.5" ></text>
</g>
<g >
<title>PyGC_Collect (136,444,596 samples, 0.47%)</title><rect x="554.7" y="917" width="5.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="557.72" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (243,159,198 samples, 0.83%)</title><rect x="203.8" y="853" width="9.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="863.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (202,735,315 samples, 0.69%)</title><rect x="1068.5" y="613" width="8.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1071.52" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (136,670,961 samples, 0.47%)</title><rect x="116.0" y="869" width="5.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="118.96" y="879.5" ></text>
</g>
<g >
<title>pybind11::detail::argument_loader&lt;diff_Nexullance_IT_interface*, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int&gt;::call&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, diff_Nexullance_IT_interface, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (6,212,989,464 samples, 21.28%)</title><rect x="911.1" y="741" width="251.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="914.13" y="751.5" >pybind11::detail::argument_loader..</text>
</g>
<g >
<title>PyEval_EvalCode (26,212,636 samples, 0.09%)</title><rect x="58.2" y="341" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="61.17" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (68,275,847 samples, 0.23%)</title><rect x="171.4" y="373" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="383.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (34,285,472 samples, 0.12%)</title><rect x="1000.8" y="485" width="1.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1003.85" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (154,194,036 samples, 0.53%)</title><rect x="128.5" y="645" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.53" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,888 samples, 0.09%)</title><rect x="150.6" y="389" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="153.60" y="399.5" ></text>
</g>
<g >
<title>finish_task_switch (7,392,076 samples, 0.03%)</title><rect x="234.9" y="949" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="237.92" y="959.5" ></text>
</g>
<g >
<title>page_fault (34,193,868 samples, 0.12%)</title><rect x="590.8" y="613" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="593.77" y="623.5" ></text>
</g>
<g >
<title>ksys_read (34,285,084 samples, 0.12%)</title><rect x="688.2" y="261" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="691.16" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,150,710 samples, 0.09%)</title><rect x="106.1" y="373" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="109.09" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (104,785,052 samples, 0.36%)</title><rect x="106.1" y="661" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.09" y="671.5" ></text>
</g>
<g >
<title>do_user_addr_fault (25,826,519 samples, 0.09%)</title><rect x="119.4" y="277" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="122.38" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_max_size (68,465,549 samples, 0.23%)</title><rect x="1104.3" y="549" width="2.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1107.30" y="559.5" ></text>
</g>
<g >
<title>rmqueue (26,136,258 samples, 0.09%)</title><rect x="198.5" y="149" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="201.48" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (34,129,032 samples, 0.12%)</title><rect x="935.9" y="501" width="1.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="938.92" y="511.5" ></text>
</g>
<g >
<title>_PyObject_GC_NewVar (26,195,640 samples, 0.09%)</title><rect x="197.4" y="341" width="1.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="200.42" y="351.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_all_s_d (32,227,910 samples, 0.11%)</title><rect x="911.1" y="629" width="1.3" height="15.0" fill="rgb(230,117,27)" rx="2" ry="2" />
<text  x="914.13" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (183,690,559 samples, 0.63%)</title><rect x="203.8" y="661" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="671.5" ></text>
</g>
<g >
<title>pybind11_init_ft2font (25,833,299 samples, 0.09%)</title><rect x="105.1" y="437" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="108.05" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (174,253,697 samples, 0.60%)</title><rect x="121.5" y="901" width="7.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="124.49" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (25,356,172 samples, 0.09%)</title><rect x="154.7" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="367.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (26,527,697 samples, 0.09%)</title><rect x="68.8" y="373" width="1.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="71.83" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (32,932,890 samples, 0.11%)</title><rect x="121.5" y="341" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.49" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (52,416,674 samples, 0.18%)</title><rect x="122.8" y="453" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.82" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (77,869,280 samples, 0.27%)</title><rect x="154.7" y="741" width="3.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="157.69" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="549" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1165.25" y="559.5" ></text>
</g>
<g >
<title>change_prot_numa (33,987,773 samples, 0.12%)</title><rect x="1028.5" y="405" width="1.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1031.46" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,150,710 samples, 0.09%)</title><rect x="106.1" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.09" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (25,961,501 samples, 0.09%)</title><rect x="99.0" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.95" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (102,344,064 samples, 0.35%)</title><rect x="128.5" y="549" width="4.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="131.53" y="559.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,164,226 samples, 0.12%)</title><rect x="909.7" y="517" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="912.75" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (182,625,346 samples, 0.63%)</title><rect x="66.7" y="965" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="975.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,211,764 samples, 0.09%)</title><rect x="223.9" y="885" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="226.86" y="895.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,559,354 samples, 0.11%)</title><rect x="218.5" y="325" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="221.48" y="335.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (34,198,505 samples, 0.12%)</title><rect x="1013.3" y="485" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1016.30" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,186,177 samples, 0.12%)</title><rect x="76.5" y="533" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="79.51" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::~_Rb_tree (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="629" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1163.87" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (25,721,139 samples, 0.09%)</title><rect x="167.9" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.94" y="351.5" ></text>
</g>
<g >
<title>new_sync_read (59,635,299 samples, 0.20%)</title><rect x="163.4" y="133" width="2.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="166.41" y="143.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,211,764 samples, 0.09%)</title><rect x="223.9" y="677" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="226.86" y="687.5" ></text>
</g>
<g >
<title>PyOS_FSPath (24,776,733 samples, 0.08%)</title><rect x="151.7" y="357" width="1.0" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="154.66" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,139,888 samples, 0.12%)</title><rect x="215.0" y="421" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.98" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (32,559,354 samples, 0.11%)</title><rect x="218.5" y="485" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="221.48" y="495.5" ></text>
</g>
<g >
<title>blas_thread_server (7,854,152,827 samples, 26.90%)</title><rect x="237.3" y="965" width="317.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="240.26" y="975.5" >blas_thread_server</text>
</g>
<g >
<title>_PyObject_Call (32,878,788 samples, 0.11%)</title><rect x="179.4" y="533" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="182.36" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (24,363,856 samples, 0.08%)</title><rect x="116.0" y="389" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.96" y="399.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,960 samples, 0.09%)</title><rect x="133.7" y="389" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="136.70" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (133,144,064 samples, 0.46%)</title><rect x="218.5" y="773" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="221.48" y="783.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch2&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (32,227,910 samples, 0.11%)</title><rect x="911.1" y="565" width="1.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="914.13" y="575.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (26,095,135 samples, 0.09%)</title><rect x="174.2" y="357" width="1.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="177.16" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (58,502,848 samples, 0.20%)</title><rect x="116.0" y="629" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="639.5" ></text>
</g>
<g >
<title>PySequence_Tuple (25,914,139 samples, 0.09%)</title><rect x="138.3" y="325" width="1.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="141.25" y="335.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (68,278,988 samples, 0.23%)</title><rect x="1167.8" y="981" width="2.7" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1170.75" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,992 samples, 0.12%)</title><rect x="116.9" y="373" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.95" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (895,924,766 samples, 3.07%)</title><rect x="864.2" y="501" width="36.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="867.23" y="511.5" >[py..</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (127,324,878 samples, 0.44%)</title><rect x="855.0" y="405" width="5.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="857.96" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (28,290,192 samples, 0.10%)</title><rect x="63.5" y="293" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="66.46" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,162,148 samples, 0.11%)</title><rect x="140.4" y="533" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.36" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,112,554 samples, 0.09%)</title><rect x="586.2" y="469" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="589.22" y="479.5" ></text>
</g>
<g >
<title>do_anonymous_page (47,489,663 samples, 0.16%)</title><rect x="79.9" y="197" width="2.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="82.94" y="207.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pop (546,204,583 samples, 1.87%)</title><rect x="938.7" y="533" width="22.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="941.69" y="543.5" >b..</text>
</g>
<g >
<title>PyEval_EvalCode (133,144,064 samples, 0.46%)</title><rect x="218.5" y="757" width="5.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="221.48" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,018,355 samples, 0.09%)</title><rect x="67.8" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.78" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,243 samples, 0.09%)</title><rect x="170.3" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.34" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="645" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (250,063,134 samples, 0.86%)</title><rect x="157.8" y="373" width="10.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="160.84" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (34,198,678 samples, 0.12%)</title><rect x="1100.2" y="437" width="1.3" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1103.15" y="447.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (26,165,241 samples, 0.09%)</title><rect x="182.0" y="309" width="1.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="184.97" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (229,780,785 samples, 0.79%)</title><rect x="171.4" y="821" width="9.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="174.40" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="277" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="287.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,206,552 samples, 0.09%)</title><rect x="61.3" y="565" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.34" y="575.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt;::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, true&gt; (68,328,664 samples, 0.23%)</title><rect x="1039.5" y="501" width="2.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1042.52" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (25,460,519 samples, 0.09%)</title><rect x="101.4" y="837" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="104.36" y="847.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::deque (67,885,180 samples, 0.23%)</title><rect x="1083.6" y="597" width="2.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1086.63" y="607.5" ></text>
</g>
<g >
<title>do_anonymous_page (26,136,258 samples, 0.09%)</title><rect x="198.5" y="213" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="201.48" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (27,896,301 samples, 0.10%)</title><rect x="94.7" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.66" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,764 samples, 0.09%)</title><rect x="223.9" y="293" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="226.86" y="303.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (26,180,018 samples, 0.09%)</title><rect x="111.4" y="949" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="114.39" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (77,657,873 samples, 0.27%)</title><rect x="69.9" y="469" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.91" y="479.5" ></text>
</g>
<g >
<title>do_numa_page (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="901" width="1.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1191.64" y="911.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (25,086,030 samples, 0.09%)</title><rect x="185.8" y="373" width="1.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="188.77" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (26,210,416 samples, 0.09%)</title><rect x="166.9" y="261" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="169.88" y="271.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,764 samples, 0.09%)</title><rect x="223.9" y="437" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="226.86" y="447.5" ></text>
</g>
<g >
<title>start_thread (7,902,528,099 samples, 27.07%)</title><rect x="235.3" y="981" width="319.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="238.30" y="991.5" >start_thread</text>
</g>
<g >
<title>[python3.12] (26,134,229 samples, 0.09%)</title><rect x="118.3" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.33" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (189,478,031 samples, 0.65%)</title><rect x="76.5" y="693" width="7.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="79.51" y="703.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,281,636 samples, 0.12%)</title><rect x="1126.4" y="549" width="1.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1129.35" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (68,475,509 samples, 0.23%)</title><rect x="1133.3" y="581" width="2.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1136.26" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (102,344,064 samples, 0.35%)</title><rect x="128.5" y="485" width="4.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="131.53" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,164,226 samples, 0.12%)</title><rect x="909.7" y="597" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="912.75" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,207,307 samples, 0.09%)</title><rect x="65.7" y="357" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="68.66" y="367.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (1,709,080,696 samples, 5.85%)</title><rect x="617.7" y="437" width="69.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="620.70" y="447.5" >[libz.s..</text>
</g>
<g >
<title>[python3.12] (136,444,596 samples, 0.47%)</title><rect x="554.7" y="901" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="557.72" y="911.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,120,817 samples, 0.12%)</title><rect x="186.8" y="389" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="189.79" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,382 samples, 0.09%)</title><rect x="189.5" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.52" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (229,780,785 samples, 0.79%)</title><rect x="171.4" y="789" width="9.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (125,826,532 samples, 0.43%)</title><rect x="180.7" y="645" width="5.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="183.69" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (27,896,301 samples, 0.10%)</title><rect x="94.7" y="437" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="97.66" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (25,640,012 samples, 0.09%)</title><rect x="132.7" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.67" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,925,438 samples, 0.10%)</title><rect x="193.8" y="421" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="196.82" y="431.5" ></text>
</g>
<g >
<title>sync_regs (68,068,733 samples, 0.23%)</title><rect x="860.1" y="405" width="2.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="863.10" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,333,183 samples, 0.09%)</title><rect x="155.7" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.71" y="335.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (101,246,105 samples, 0.35%)</title><rect x="1173.2" y="805" width="4.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1176.24" y="815.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,464,634 samples, 0.11%)</title><rect x="100.0" y="837" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="103.00" y="847.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (74,372,820 samples, 0.25%)</title><rect x="219.8" y="549" width="3.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="222.79" y="559.5" ></text>
</g>
<g >
<title>perf_iterate_sb (34,170,040 samples, 0.12%)</title><rect x="613.5" y="213" width="1.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="616.55" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (32,878,788 samples, 0.11%)</title><rect x="179.4" y="501" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.36" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (34,183,360 samples, 0.12%)</title><rect x="976.0" y="517" width="1.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="978.98" y="527.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,212,863 samples, 0.09%)</title><rect x="73.0" y="213" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="76.04" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (60,209,080 samples, 0.21%)</title><rect x="134.8" y="613" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.76" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,636 samples, 0.09%)</title><rect x="58.2" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.17" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,195,992 samples, 0.09%)</title><rect x="177.3" y="325" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="180.33" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="773" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (56,135,139 samples, 0.19%)</title><rect x="193.8" y="469" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.82" y="479.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (34,179,984 samples, 0.12%)</title><rect x="560.2" y="725" width="1.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="563.23" y="735.5" ></text>
</g>
<g >
<title>std::make_pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (68,328,664 samples, 0.23%)</title><rect x="1039.5" y="517" width="2.8" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1042.52" y="527.5" ></text>
</g>
<g >
<title>release_pages (34,179,984 samples, 0.12%)</title><rect x="560.2" y="709" width="1.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="563.23" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (120,056,685 samples, 0.41%)</title><rect x="142.7" y="661" width="4.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.70" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (7,857,627,031 samples, 26.92%)</title><rect x="590.8" y="693" width="317.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="593.77" y="703.5" >[python3.12]</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (119,943,099 samples, 0.41%)</title><rect x="89.8" y="325" width="4.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="92.81" y="335.5" ></text>
</g>
<g >
<title>Py_RunMain (26,180,018 samples, 0.09%)</title><rect x="111.4" y="981" width="1.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="114.39" y="991.5" ></text>
</g>
<g >
<title>_PyStructSequence_NewType (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="469" width="4.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1165.25" y="479.5" ></text>
</g>
<g >
<title>path_openat (25,918,556 samples, 0.09%)</title><rect x="77.9" y="181" width="1.0" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="80.89" y="191.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,017,147 samples, 0.09%)</title><rect x="221.7" y="309" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="224.75" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (32,559,354 samples, 0.11%)</title><rect x="218.5" y="693" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="221.48" y="703.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (34,112,881 samples, 0.12%)</title><rect x="1147.1" y="501" width="1.4" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1150.10" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (129,080,205 samples, 0.44%)</title><rect x="77.9" y="485" width="5.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="80.89" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,207,307 samples, 0.09%)</title><rect x="65.7" y="293" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="68.66" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (68,275,847 samples, 0.23%)</title><rect x="171.4" y="437" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (60,209,080 samples, 0.21%)</title><rect x="134.8" y="757" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.76" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,120,135 samples, 0.12%)</title><rect x="213.6" y="661" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="216.60" y="671.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (25,914,139 samples, 0.09%)</title><rect x="138.3" y="389" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="141.25" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,863 samples, 0.09%)</title><rect x="73.0" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.04" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_relocate (33,992,050 samples, 0.12%)</title><rect x="1109.8" y="581" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1112.84" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (25,721,139 samples, 0.09%)</title><rect x="167.9" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.94" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="533" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (25,961,501 samples, 0.09%)</title><rect x="99.0" y="693" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="101.95" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,914,139 samples, 0.09%)</title><rect x="138.3" y="501" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="141.25" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (25,961,501 samples, 0.09%)</title><rect x="99.0" y="773" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.95" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (250,063,134 samples, 0.86%)</title><rect x="157.8" y="421" width="10.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.84" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,863 samples, 0.09%)</title><rect x="202.7" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.71" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,571,412 samples, 0.11%)</title><rect x="169.0" y="533" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="171.98" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,078,197 samples, 0.12%)</title><rect x="558.9" y="837" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="561.85" y="847.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="501" width="4.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1165.25" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="181" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (229,780,785 samples, 0.79%)</title><rect x="171.4" y="773" width="9.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="783.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (75,294,107 samples, 0.26%)</title><rect x="147.6" y="501" width="3.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="150.55" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,649 samples, 0.09%)</title><rect x="83.1" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.11" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (78,477,215 samples, 0.27%)</title><rect x="58.2" y="613" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.17" y="623.5" ></text>
</g>
<g >
<title>alloc_pages_vma (22,160,344 samples, 0.08%)</title><rect x="204.8" y="197" width="0.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="207.83" y="207.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,208,821 samples, 0.09%)</title><rect x="97.9" y="677" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="100.90" y="687.5" ></text>
</g>
<g >
<title>boost::num_vertices&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (68,348,330 samples, 0.23%)</title><rect x="1078.1" y="613" width="2.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1081.09" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (33,822,668 samples, 0.12%)</title><rect x="1111.2" y="501" width="1.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1114.21" y="511.5" ></text>
</g>
<g >
<title>page_fault (34,244,955 samples, 0.12%)</title><rect x="609.7" y="373" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="612.72" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (467,350,025 samples, 1.60%)</title><rect x="196.1" y="933" width="18.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.09" y="943.5" ></text>
</g>
<g >
<title>do_anonymous_page (102,514,763 samples, 0.35%)</title><rect x="692.3" y="325" width="4.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="695.32" y="335.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,179,925 samples, 0.09%)</title><rect x="156.8" y="453" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="159.78" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,033,884 samples, 0.18%)</title><rect x="119.4" y="549" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="122.38" y="559.5" ></text>
</g>
<g >
<title>do_filp_open (27,498,501 samples, 0.09%)</title><rect x="144.1" y="213" width="1.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="147.08" y="223.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,080,610 samples, 0.12%)</title><rect x="209.8" y="357" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="212.82" y="367.5" ></text>
</g>
<g >
<title>__do_page_fault (24,747,959 samples, 0.08%)</title><rect x="141.7" y="869" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="144.70" y="879.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,333,183 samples, 0.09%)</title><rect x="155.7" y="405" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="158.71" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,272,580 samples, 0.12%)</title><rect x="614.9" y="309" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="617.93" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (34,256,975 samples, 0.12%)</title><rect x="596.3" y="581" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="599.30" y="591.5" ></text>
</g>
<g >
<title>do_last (27,498,501 samples, 0.09%)</title><rect x="144.1" y="181" width="1.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="147.08" y="191.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,932,890 samples, 0.11%)</title><rect x="121.5" y="373" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="124.49" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (136,743,855 samples, 0.47%)</title><rect x="576.8" y="805" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="579.80" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (154,194,036 samples, 0.53%)</title><rect x="128.5" y="933" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.53" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,914,139 samples, 0.09%)</title><rect x="138.3" y="405" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.25" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (125,826,532 samples, 0.43%)</title><rect x="180.7" y="773" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (182,625,346 samples, 0.63%)</title><rect x="66.7" y="933" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="943.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5,018,746 samples, 0.02%)</title><rect x="554.3" y="917" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="557.29" y="927.5" ></text>
</g>
<g >
<title>PyUnicode_New (26,136,258 samples, 0.09%)</title><rect x="198.5" y="357" width="1.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="201.48" y="367.5" ></text>
</g>
<g >
<title>free_unref_page_commit (33,757,594 samples, 0.12%)</title><rect x="1176.0" y="757" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1178.97" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (52,331,898 samples, 0.18%)</title><rect x="197.4" y="389" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.42" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="901" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="911.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (51,849,972 samples, 0.18%)</title><rect x="132.7" y="597" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="135.67" y="607.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (25,961,501 samples, 0.09%)</title><rect x="99.0" y="517" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="101.95" y="527.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (102,764,265 samples, 0.35%)</title><rect x="971.8" y="485" width="4.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="974.82" y="495.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,206,552 samples, 0.09%)</title><rect x="61.3" y="373" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="64.34" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,126 samples, 0.09%)</title><rect x="109.3" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.27" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (91,763,092 samples, 0.31%)</title><rect x="102.4" y="645" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.39" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (51,689,355 samples, 0.18%)</title><rect x="154.7" y="469" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="157.69" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="133" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (26,149,751 samples, 0.09%)</title><rect x="137.2" y="629" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.20" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,464,634 samples, 0.11%)</title><rect x="100.0" y="389" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.00" y="399.5" ></text>
</g>
<g >
<title>__GI_madvise (48,375,272 samples, 0.17%)</title><rect x="235.3" y="949" width="2.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="238.30" y="959.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,120,342 samples, 0.12%)</title><rect x="103.7" y="357" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.67" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,424,216 samples, 0.18%)</title><rect x="107.2" y="373" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.15" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;::~pair (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="453" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1163.87" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="901" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="911.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (25,826,519 samples, 0.09%)</title><rect x="119.4" y="341" width="1.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="122.38" y="351.5" ></text>
</g>
<g >
<title>PyIter_Next (23,918,012 samples, 0.08%)</title><rect x="178.4" y="341" width="1.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="181.39" y="351.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (48,375,272 samples, 0.17%)</title><rect x="235.3" y="789" width="2.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="238.30" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (23,918,012 samples, 0.08%)</title><rect x="178.4" y="213" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="181.39" y="223.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (102,698,217 samples, 0.35%)</title><rect x="949.7" y="469" width="4.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="952.73" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,209,080 samples, 0.21%)</title><rect x="134.8" y="709" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="137.76" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (49,522,514 samples, 0.17%)</title><rect x="148.6" y="389" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.59" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,149,751 samples, 0.09%)</title><rect x="137.2" y="805" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="140.20" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (119,943,099 samples, 0.41%)</title><rect x="89.8" y="613" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.81" y="623.5" ></text>
</g>
<g >
<title>page_fault (47,489,663 samples, 0.16%)</title><rect x="79.9" y="293" width="2.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="82.94" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (296,586,853 samples, 1.02%)</title><rect x="142.7" y="837" width="12.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="847.5" ></text>
</g>
<g >
<title>__GI_munmap (34,179,984 samples, 0.12%)</title><rect x="560.2" y="869" width="1.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="563.23" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (230,135,233 samples, 0.79%)</title><rect x="186.8" y="853" width="9.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="189.79" y="863.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (102,531,015 samples, 0.35%)</title><rect x="175.2" y="453" width="4.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="178.21" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="597" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (34,145,840 samples, 0.12%)</title><rect x="588.3" y="821" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="591.33" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (250,063,134 samples, 0.86%)</title><rect x="157.8" y="389" width="10.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.84" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,018,355 samples, 0.09%)</title><rect x="67.8" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.78" y="415.5" ></text>
</g>
<g >
<title>ptep_clear_flush (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="789" width="1.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1191.64" y="799.5" ></text>
</g>
<g >
<title>do_group_exit (168,744,858 samples, 0.58%)</title><rect x="1170.5" y="949" width="6.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1173.51" y="959.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (171,048,446 samples, 0.59%)</title><rect x="1118.1" y="581" width="6.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1121.07" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (125,826,532 samples, 0.43%)</title><rect x="180.7" y="725" width="5.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="183.69" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (32,857,115 samples, 0.11%)</title><rect x="196.1" y="549" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.09" y="559.5" ></text>
</g>
<g >
<title>try_trivial_single_output_loop (68,136,851 samples, 0.23%)</title><rect x="228.2" y="965" width="2.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="231.18" y="975.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,250 samples, 0.09%)</title><rect x="153.6" y="357" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="156.63" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (78,168,113 samples, 0.27%)</title><rect x="118.3" y="741" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.33" y="751.5" ></text>
</g>
<g >
<title>_Py_read (34,285,084 samples, 0.12%)</title><rect x="688.2" y="357" width="1.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="691.16" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (59,468,639 samples, 0.20%)</title><rect x="211.2" y="421" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="214.20" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (60,209,080 samples, 0.21%)</title><rect x="134.8" y="677" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.76" y="687.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (58,421,053 samples, 0.20%)</title><rect x="145.2" y="389" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="148.19" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="351.5" ></text>
</g>
<g >
<title>_int_malloc (34,256,975 samples, 0.12%)</title><rect x="596.3" y="517" width="1.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="599.30" y="527.5" ></text>
</g>
<g >
<title>ksys_lseek (34,137,131 samples, 0.12%)</title><rect x="142.7" y="149" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="145.70" y="159.5" ></text>
</g>
<g >
<title>[python3.12] (104,185,570 samples, 0.36%)</title><rect x="68.8" y="581" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.83" y="591.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (2,747,910 samples, 0.01%)</title><rect x="1177.4" y="805" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1180.45" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (34,145,840 samples, 0.12%)</title><rect x="588.3" y="789" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="591.33" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (321,553,739 samples, 1.10%)</title><rect x="84.2" y="677" width="13.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="87.17" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (229,780,785 samples, 0.79%)</title><rect x="171.4" y="661" width="9.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="671.5" ></text>
</g>
<g >
<title>user_path_at_empty (28,290,192 samples, 0.10%)</title><rect x="63.5" y="229" width="1.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="66.46" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (154,194,036 samples, 0.53%)</title><rect x="128.5" y="677" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (28,290,192 samples, 0.10%)</title><rect x="63.5" y="389" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="66.46" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (27,498,501 samples, 0.09%)</title><rect x="144.1" y="261" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="147.08" y="271.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::queue&lt;std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, void&gt; (67,885,180 samples, 0.23%)</title><rect x="1083.6" y="613" width="2.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1086.63" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (68,275,847 samples, 0.23%)</title><rect x="171.4" y="485" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,460,519 samples, 0.09%)</title><rect x="101.4" y="405" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="104.36" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (34,080,610 samples, 0.12%)</title><rect x="209.8" y="389" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.82" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,139,888 samples, 0.12%)</title><rect x="215.0" y="549" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.98" y="559.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (24,789,767 samples, 0.08%)</title><rect x="78.9" y="309" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="81.94" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::size (68,467,818 samples, 0.23%)</title><rect x="1107.1" y="565" width="2.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1110.07" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (59,468,639 samples, 0.20%)</title><rect x="211.2" y="629" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="214.20" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (52,331,898 samples, 0.18%)</title><rect x="197.4" y="437" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.42" y="447.5" ></text>
</g>
<g >
<title>__do_sys_newstat (28,290,192 samples, 0.10%)</title><rect x="63.5" y="261" width="1.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="66.46" y="271.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (211,594,461 samples, 0.72%)</title><rect x="58.2" y="949" width="8.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="61.17" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (29,925,438 samples, 0.10%)</title><rect x="193.8" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.82" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="261" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,664 samples, 0.09%)</title><rect x="92.6" y="245" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.57" y="255.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (433,229,890 samples, 1.48%)</title><rect x="196.1" y="901" width="17.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="199.09" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (18,140,811 samples, 0.06%)</title><rect x="97.2" y="453" width="0.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="100.16" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="805" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.77" y="815.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (26,211,890 samples, 0.09%)</title><rect x="222.8" y="197" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="225.80" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (26,374,349 samples, 0.09%)</title><rect x="134.8" y="325" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.76" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (32,932,890 samples, 0.11%)</title><rect x="121.5" y="517" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.49" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,932,890 samples, 0.11%)</title><rect x="121.5" y="597" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="124.49" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,199,668 samples, 0.09%)</title><rect x="139.3" y="613" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="142.30" y="623.5" ></text>
</g>
<g >
<title>do_anonymous_page (34,151,016 samples, 0.12%)</title><rect x="91.2" y="133" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="94.19" y="143.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,834,731 samples, 0.12%)</title><rect x="135.8" y="389" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="138.83" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,126 samples, 0.09%)</title><rect x="109.3" y="453" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="112.27" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,992 samples, 0.12%)</title><rect x="116.9" y="245" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.95" y="255.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (48,355,673 samples, 0.17%)</title><rect x="219.8" y="373" width="1.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="222.79" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (29,291,122 samples, 0.10%)</title><rect x="191.6" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.64" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,828 samples, 0.09%)</title><rect x="126.1" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.10" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (18,140,811 samples, 0.06%)</title><rect x="97.2" y="277" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.16" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,888 samples, 0.09%)</title><rect x="150.6" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.60" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (7,294,475,978 samples, 24.99%)</title><rect x="607.0" y="549" width="294.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="609.96" y="559.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>[python3.12] (52,424,216 samples, 0.18%)</title><rect x="107.2" y="405" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (229,780,785 samples, 0.79%)</title><rect x="171.4" y="869" width="9.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="174.40" y="879.5" ></text>
</g>
<g >
<title>PyList_Sort (26,208,821 samples, 0.09%)</title><rect x="97.9" y="565" width="1.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="100.90" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,101,693 samples, 0.12%)</title><rect x="95.8" y="437" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.78" y="447.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (861,652,275 samples, 2.95%)</title><rect x="865.6" y="485" width="34.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="868.62" y="495.5" >Py..</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (182,625,346 samples, 0.63%)</title><rect x="66.7" y="805" width="7.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="69.72" y="815.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,126 samples, 0.09%)</title><rect x="109.3" y="357" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="112.27" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,992 samples, 0.12%)</title><rect x="116.9" y="213" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.95" y="223.5" ></text>
</g>
<g >
<title>__do_page_fault (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="965" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1191.64" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (106,910,694 samples, 0.37%)</title><rect x="62.4" y="613" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="65.40" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,828 samples, 0.09%)</title><rect x="126.1" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.10" y="399.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (34,285,084 samples, 0.12%)</title><rect x="688.2" y="133" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="691.16" y="143.5" ></text>
</g>
<g >
<title>_PyObject_Call (125,826,532 samples, 0.43%)</title><rect x="180.7" y="789" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="183.69" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="485" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,263,558 samples, 0.27%)</title><rect x="137.2" y="885" width="3.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="140.20" y="895.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,120,135 samples, 0.12%)</title><rect x="213.6" y="501" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="216.60" y="511.5" ></text>
</g>
<g >
<title>PyInit__multiarray_umath (47,489,663 samples, 0.16%)</title><rect x="79.9" y="405" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.94" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="319.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,828 samples, 0.09%)</title><rect x="126.1" y="405" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="129.10" y="415.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (33,517,476 samples, 0.11%)</title><rect x="1074.0" y="565" width="1.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1077.01" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (154,194,036 samples, 0.53%)</title><rect x="128.5" y="741" width="6.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="131.53" y="751.5" ></text>
</g>
<g >
<title>do_user_addr_fault (22,160,344 samples, 0.08%)</title><rect x="204.8" y="261" width="0.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="207.83" y="271.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,477,215 samples, 0.27%)</title><rect x="58.2" y="629" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="61.17" y="639.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,180,018 samples, 0.09%)</title><rect x="111.4" y="421" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="114.39" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (29,925,438 samples, 0.10%)</title><rect x="193.8" y="229" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.82" y="239.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (51,849,972 samples, 0.18%)</title><rect x="132.7" y="565" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="135.67" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,120,817 samples, 0.12%)</title><rect x="186.8" y="549" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="189.79" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::deallocate (34,281,636 samples, 0.12%)</title><rect x="1126.4" y="565" width="1.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1129.35" y="575.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,205,863 samples, 0.09%)</title><rect x="202.7" y="293" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="205.71" y="303.5" ></text>
</g>
<g >
<title>PyDict_SetItem (34,140,509 samples, 0.12%)</title><rect x="582.3" y="885" width="1.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="585.33" y="895.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (154,194,036 samples, 0.53%)</title><rect x="128.5" y="901" width="6.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="131.53" y="911.5" ></text>
</g>
<g >
<title>filemap_map_pages (34,084,795 samples, 0.12%)</title><rect x="226.8" y="693" width="1.4" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="229.81" y="703.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long&gt; (34,180,988 samples, 0.12%)</title><rect x="915.2" y="597" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="918.20" y="607.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (28,290,192 samples, 0.10%)</title><rect x="63.5" y="453" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="66.46" y="463.5" ></text>
</g>
<g >
<title>__lseek64 (17,813,920 samples, 0.06%)</title><rect x="84.2" y="197" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="87.17" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,177,262 samples, 0.12%)</title><rect x="1158.1" y="565" width="1.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1161.11" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::~new_allocator (34,296,691 samples, 0.12%)</title><rect x="1094.7" y="533" width="1.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1097.67" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,207,307 samples, 0.09%)</title><rect x="65.7" y="453" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="68.66" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,374,349 samples, 0.09%)</title><rect x="134.8" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.76" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,890 samples, 0.09%)</title><rect x="222.8" y="229" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="225.80" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (230,135,233 samples, 0.79%)</title><rect x="186.8" y="917" width="9.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.79" y="927.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (100,584,710 samples, 0.34%)</title><rect x="219.8" y="661" width="4.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="222.79" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (18,140,811 samples, 0.06%)</title><rect x="97.2" y="501" width="0.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="100.16" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (75,294,107 samples, 0.26%)</title><rect x="147.6" y="437" width="3.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="150.55" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="805" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,527,697 samples, 0.09%)</title><rect x="68.8" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.83" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::emplace_back&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (67,904,390 samples, 0.23%)</title><rect x="1111.2" y="597" width="2.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1114.21" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (49,522,514 samples, 0.17%)</title><rect x="148.6" y="245" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.59" y="255.5" ></text>
</g>
<g >
<title>std::plus&lt;float&gt;::operator (68,543,902 samples, 0.23%)</title><rect x="1064.4" y="517" width="2.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1067.36" y="527.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (3,848,355 samples, 0.01%)</title><rect x="1189.8" y="645" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.84" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,424,216 samples, 0.18%)</title><rect x="107.2" y="341" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.15" y="351.5" ></text>
</g>
<g >
<title>PyInit_ft2font (25,833,299 samples, 0.09%)</title><rect x="105.1" y="453" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="108.05" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (68,338,208 samples, 0.23%)</title><rect x="1122.2" y="533" width="2.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1125.22" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (32,932,890 samples, 0.11%)</title><rect x="121.5" y="613" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.49" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,857,115 samples, 0.11%)</title><rect x="196.1" y="533" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="199.09" y="543.5" ></text>
</g>
<g >
<title>do_user_addr_fault (26,136,258 samples, 0.09%)</title><rect x="198.5" y="261" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="201.48" y="271.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (34,244,177 samples, 0.12%)</title><rect x="1156.7" y="629" width="1.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1159.73" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="821" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.77" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (335,569,928 samples, 1.15%)</title><rect x="157.8" y="709" width="13.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="160.84" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (23,918,012 samples, 0.08%)</title><rect x="178.4" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.39" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (91,763,092 samples, 0.31%)</title><rect x="102.4" y="581" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.39" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (34,283,429 samples, 0.12%)</title><rect x="1080.9" y="597" width="1.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1083.86" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (34,179,984 samples, 0.12%)</title><rect x="560.2" y="837" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="563.23" y="847.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,199,668 samples, 0.09%)</title><rect x="139.3" y="373" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="142.30" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (26,210,416 samples, 0.09%)</title><rect x="166.9" y="245" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="169.88" y="255.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_single_s_d (5,770,954,787 samples, 19.77%)</title><rect x="916.6" y="629" width="233.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="919.58" y="639.5" >compute_all_shortest_paths_sin..</text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="197" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (24,363,856 samples, 0.08%)</title><rect x="116.0" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,149,751 samples, 0.09%)</title><rect x="137.2" y="741" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.20" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (25,961,501 samples, 0.09%)</title><rect x="99.0" y="677" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.95" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,086,030 samples, 0.09%)</title><rect x="185.8" y="277" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="188.77" y="287.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (443,065,772 samples, 1.52%)</title><rect x="866.7" y="421" width="17.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="869.68" y="431.5" ></text>
</g>
<g >
<title>__inc_numa_state (22,160,344 samples, 0.08%)</title><rect x="204.8" y="149" width="0.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="207.83" y="159.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,211,764 samples, 0.09%)</title><rect x="223.9" y="741" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="226.86" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (141,320,807 samples, 0.48%)</title><rect x="122.8" y="533" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.82" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (18,140,811 samples, 0.06%)</title><rect x="97.2" y="341" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.16" y="351.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (32,559,354 samples, 0.11%)</title><rect x="218.5" y="373" width="1.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="221.48" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (102,344,064 samples, 0.35%)</title><rect x="128.5" y="437" width="4.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.53" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,460,519 samples, 0.09%)</title><rect x="101.4" y="389" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="104.36" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="693" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (102,344,064 samples, 0.35%)</title><rect x="128.5" y="357" width="4.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.53" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (24,776,733 samples, 0.08%)</title><rect x="151.7" y="197" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.66" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,260,870 samples, 0.09%)</title><rect x="72.0" y="293" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="75.02" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="575.5" ></text>
</g>
<g >
<title>PyUnicode_RPartition (26,191,454 samples, 0.09%)</title><rect x="110.3" y="981" width="1.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="113.33" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,460,519 samples, 0.09%)</title><rect x="101.4" y="741" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="104.36" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (17,813,920 samples, 0.06%)</title><rect x="84.2" y="405" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="415.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (34,151,016 samples, 0.12%)</title><rect x="91.2" y="117" width="1.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="94.19" y="127.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (32,878,788 samples, 0.11%)</title><rect x="179.4" y="421" width="1.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="182.36" y="431.5" ></text>
</g>
<g >
<title>PyObject_IsTrue (26,209,247 samples, 0.09%)</title><rect x="175.2" y="245" width="1.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="178.21" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,888 samples, 0.09%)</title><rect x="150.6" y="469" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="153.60" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (141,320,807 samples, 0.48%)</title><rect x="122.8" y="549" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="125.82" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,527,697 samples, 0.09%)</title><rect x="68.8" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.83" y="335.5" ></text>
</g>
<g >
<title>free_perturb (34,222,172 samples, 0.12%)</title><rect x="1154.0" y="453" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1156.96" y="463.5" ></text>
</g>
<g >
<title>__do_page_fault (25,460,519 samples, 0.09%)</title><rect x="101.4" y="165" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="104.36" y="175.5" ></text>
</g>
<g >
<title>PyImport_Import (25,086,030 samples, 0.09%)</title><rect x="185.8" y="389" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="188.77" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,126 samples, 0.09%)</title><rect x="109.3" y="517" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.27" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (133,144,064 samples, 0.46%)</title><rect x="218.5" y="725" width="5.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="221.48" y="735.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (78,477,215 samples, 0.27%)</title><rect x="58.2" y="661" width="3.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="61.17" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,134,229 samples, 0.09%)</title><rect x="118.3" y="533" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="121.33" y="543.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (3,519,477,164 samples, 12.06%)</title><rect x="924.9" y="549" width="142.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="927.88" y="559.5" >boost::dijkstra_sh..</text>
</g>
<g >
<title>Py_InitializeFromConfig (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="917" width="4.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1165.25" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,061,992 samples, 0.09%)</title><rect x="60.3" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.29" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,932,890 samples, 0.11%)</title><rect x="121.5" y="629" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="124.49" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (65,643,397 samples, 0.22%)</title><rect x="87.2" y="421" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.16" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,260,870 samples, 0.09%)</title><rect x="72.0" y="357" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="75.02" y="367.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (204,598,320 samples, 0.70%)</title><rect x="1141.6" y="597" width="8.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1144.56" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,260,870 samples, 0.09%)</title><rect x="72.0" y="405" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="75.02" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,821 samples, 0.09%)</title><rect x="97.9" y="741" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.90" y="751.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.0 (3,848,355 samples, 0.01%)</title><rect x="1189.8" y="613" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1192.84" y="623.5" ></text>
</g>
<g >
<title>alloc_pages_vma (34,120,135 samples, 0.12%)</title><rect x="213.6" y="101" width="1.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="216.60" y="111.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (86,555,090 samples, 0.30%)</title><rect x="215.0" y="645" width="3.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="217.98" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (133,117,246 samples, 0.46%)</title><rect x="61.3" y="805" width="5.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="64.34" y="815.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (48,895,588 samples, 0.17%)</title><rect x="205.7" y="405" width="2.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="208.73" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="757" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1165.25" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,149,751 samples, 0.09%)</title><rect x="137.2" y="773" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="140.20" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,712 samples, 0.09%)</title><rect x="587.3" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="590.27" y="447.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,086,907 samples, 0.12%)</title><rect x="1159.5" y="597" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1162.49" y="607.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,164,226 samples, 0.12%)</title><rect x="909.7" y="533" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="912.75" y="543.5" ></text>
</g>
<g >
<title>PyOS_FSPath (26,211,764 samples, 0.09%)</title><rect x="223.9" y="341" width="1.0" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="226.86" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,150,710 samples, 0.09%)</title><rect x="106.1" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.09" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,552 samples, 0.09%)</title><rect x="61.3" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (119,943,099 samples, 0.41%)</title><rect x="89.8" y="437" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.81" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (25,918,556 samples, 0.09%)</title><rect x="77.9" y="293" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.89" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (52,326,266 samples, 0.18%)</title><rect x="586.2" y="693" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="589.22" y="703.5" ></text>
</g>
<g >
<title>PyImport_Import (25,460,519 samples, 0.09%)</title><rect x="101.4" y="821" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="104.36" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,464,634 samples, 0.11%)</title><rect x="100.0" y="661" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="103.00" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="229" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (125,826,532 samples, 0.43%)</title><rect x="180.7" y="693" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,460,519 samples, 0.09%)</title><rect x="101.4" y="565" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="104.36" y="575.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;unsigned long const*&gt; (34,296,635 samples, 0.12%)</title><rect x="39.1" y="981" width="1.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="42.09" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (156,416,788 samples, 0.54%)</title><rect x="67.8" y="693" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.78" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (24,363,856 samples, 0.08%)</title><rect x="116.0" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,095,135 samples, 0.09%)</title><rect x="174.2" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.16" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,243 samples, 0.09%)</title><rect x="170.3" y="565" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="173.34" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (58,421,053 samples, 0.20%)</title><rect x="145.2" y="405" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="148.19" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (34,193,868 samples, 0.12%)</title><rect x="590.8" y="629" width="1.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="593.77" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (67,903,104 samples, 0.23%)</title><rect x="1014.7" y="469" width="2.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1017.68" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,120,135 samples, 0.12%)</title><rect x="213.6" y="453" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="216.60" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,207,365 samples, 0.09%)</title><rect x="120.4" y="437" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="123.43" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (34,139,888 samples, 0.12%)</title><rect x="215.0" y="485" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (34,138,964 samples, 0.12%)</title><rect x="18.4" y="981" width="1.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="21.37" y="991.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,179,925 samples, 0.09%)</title><rect x="156.8" y="341" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="159.78" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (77,869,280 samples, 0.27%)</title><rect x="154.7" y="757" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="767.5" ></text>
</g>
<g >
<title>__libc_start_main (15,147,881,971 samples, 51.89%)</title><rect x="554.7" y="981" width="612.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="557.72" y="991.5" >__libc_start_main</text>
</g>
<g >
<title>__alloc_pages_nodemask (34,272,580 samples, 0.12%)</title><rect x="614.9" y="229" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="617.93" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (339,694,550 samples, 1.16%)</title><rect x="84.2" y="725" width="13.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="735.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,207,307 samples, 0.09%)</title><rect x="65.7" y="309" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="68.66" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,863 samples, 0.09%)</title><rect x="73.0" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.04" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,415,202 samples, 0.18%)</title><rect x="216.4" y="549" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="219.36" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="885" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="895.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (26,208,821 samples, 0.09%)</title><rect x="97.9" y="517" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="100.90" y="527.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, diff_Nexullance_IT_interface, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (6,212,989,464 samples, 21.28%)</title><rect x="911.1" y="757" width="251.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="914.13" y="767.5" >pybind11::cpp_function::initializ..</text>
</g>
<g >
<title>[python3.12] (26,211,890 samples, 0.09%)</title><rect x="222.8" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.80" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,207,498 samples, 0.09%)</title><rect x="62.4" y="405" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="65.40" y="415.5" ></text>
</g>
<g >
<title>__brk (94,637,922 samples, 0.32%)</title><rect x="611.1" y="309" width="3.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="614.10" y="319.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,692 samples, 0.09%)</title><rect x="108.2" y="325" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="111.21" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,992 samples, 0.12%)</title><rect x="116.9" y="437" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.95" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="741" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (58,502,848 samples, 0.20%)</title><rect x="116.0" y="501" width="2.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="118.96" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (7,952,093,388 samples, 27.24%)</title><rect x="589.7" y="773" width="321.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="592.71" y="783.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>_dl_lookup_symbol_x (33,970,452 samples, 0.12%)</title><rect x="127.2" y="309" width="1.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="130.16" y="319.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_edge&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (136,342,899 samples, 0.47%)</title><rect x="929.0" y="533" width="5.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="932.04" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,785,052 samples, 0.36%)</title><rect x="106.1" y="549" width="4.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="109.09" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (86,555,090 samples, 0.30%)</title><rect x="215.0" y="661" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="671.5" ></text>
</g>
<g >
<title>page_fault (33,571,412 samples, 0.11%)</title><rect x="169.0" y="149" width="1.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="171.98" y="159.5" ></text>
</g>
<g >
<title>_dl_open (33,970,452 samples, 0.12%)</title><rect x="127.2" y="405" width="1.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="130.16" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,640,012 samples, 0.09%)</title><rect x="132.7" y="373" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="135.67" y="383.5" ></text>
</g>
<g >
<title>lockref_put_return (26,198,614 samples, 0.09%)</title><rect x="165.8" y="101" width="1.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="168.82" y="111.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="741" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="751.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (100,584,710 samples, 0.34%)</title><rect x="219.8" y="693" width="4.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="222.79" y="703.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (409,535,248 samples, 1.40%)</title><rect x="1002.2" y="501" width="16.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1005.23" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,061,992 samples, 0.09%)</title><rect x="60.3" y="405" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="63.29" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (106,910,694 samples, 0.37%)</title><rect x="62.4" y="645" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.40" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (104,785,052 samples, 0.36%)</title><rect x="106.1" y="677" width="4.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="109.09" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,149,751 samples, 0.09%)</title><rect x="137.2" y="245" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.20" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="447.5" ></text>
</g>
<g >
<title>boost::optional&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::operator (34,276,735 samples, 0.12%)</title><rect x="30.8" y="981" width="1.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="33.80" y="991.5" ></text>
</g>
<g >
<title>generic_file_read_iter (34,285,084 samples, 0.12%)</title><rect x="688.2" y="181" width="1.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="691.16" y="191.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,863 samples, 0.09%)</title><rect x="73.0" y="437" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="76.04" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; (34,250,855 samples, 0.12%)</title><rect x="1155.3" y="613" width="1.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1158.34" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,961,501 samples, 0.09%)</title><rect x="99.0" y="613" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.95" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,307 samples, 0.09%)</title><rect x="65.7" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.66" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (119,943,099 samples, 0.41%)</title><rect x="89.8" y="341" width="4.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="92.81" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,697 samples, 0.09%)</title><rect x="64.6" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.60" y="447.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,212,636 samples, 0.09%)</title><rect x="58.2" y="485" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="61.17" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::deallocate (34,249,597 samples, 0.12%)</title><rect x="43.2" y="981" width="1.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="46.24" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,086,030 samples, 0.09%)</title><rect x="185.8" y="485" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="188.77" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="325" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (34,101,693 samples, 0.12%)</title><rect x="95.8" y="565" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.78" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="341" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,018,355 samples, 0.09%)</title><rect x="67.8" y="373" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="70.78" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,212,863 samples, 0.09%)</title><rect x="73.0" y="389" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="76.04" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (230,135,233 samples, 0.79%)</title><rect x="186.8" y="837" width="9.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="189.79" y="847.5" ></text>
</g>
<g >
<title>_PyObject_Call (190,070,692 samples, 0.65%)</title><rect x="196.1" y="789" width="7.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="199.09" y="799.5" ></text>
</g>
<g >
<title>dlopen_doit (33,571,412 samples, 0.11%)</title><rect x="169.0" y="261" width="1.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="171.98" y="271.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,210,692 samples, 0.09%)</title><rect x="108.2" y="261" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="111.21" y="271.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (25,086,030 samples, 0.09%)</title><rect x="185.8" y="405" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="188.77" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (28,723,853 samples, 0.10%)</title><rect x="124.9" y="421" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="127.94" y="431.5" ></text>
</g>
<g >
<title>std::multimap&lt;float, unsigned long, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::~multimap (67,858,510 samples, 0.23%)</title><rect x="1152.6" y="629" width="2.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1155.60" y="639.5" ></text>
</g>
<g >
<title>__handle_mm_fault (26,136,258 samples, 0.09%)</title><rect x="198.5" y="229" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="201.48" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,194,413 samples, 0.09%)</title><rect x="84.9" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.89" y="415.5" ></text>
</g>
<g >
<title>inflate (4,116,698,714 samples, 14.10%)</title><rect x="696.5" y="437" width="166.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="699.46" y="447.5" >inflate</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (106,910,694 samples, 0.37%)</title><rect x="62.4" y="693" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="65.40" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (23,918,012 samples, 0.08%)</title><rect x="178.4" y="325" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.39" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,890 samples, 0.09%)</title><rect x="222.8" y="373" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="225.80" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (31,760,523 samples, 0.11%)</title><rect x="88.5" y="341" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.52" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (27,896,301 samples, 0.10%)</title><rect x="94.7" y="645" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.66" y="655.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (33,922,540 samples, 0.12%)</title><rect x="28.1" y="981" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="31.05" y="991.5" ></text>
</g>
<g >
<title>page_fault (33,257,301 samples, 0.11%)</title><rect x="900.4" y="501" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="903.45" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,888 samples, 0.09%)</title><rect x="150.6" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.60" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (24,776,733 samples, 0.08%)</title><rect x="151.7" y="325" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.66" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (546,761,441 samples, 1.87%)</title><rect x="560.2" y="901" width="22.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="563.23" y="911.5" >[..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (34,271,849 samples, 0.12%)</title><rect x="1089.1" y="517" width="1.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1092.13" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,120,135 samples, 0.12%)</title><rect x="213.6" y="677" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="216.60" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,086,030 samples, 0.09%)</title><rect x="185.8" y="741" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="188.77" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (109,971,600 samples, 0.38%)</title><rect x="191.6" y="629" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.64" y="639.5" ></text>
</g>
<g >
<title>__do_page_fault (34,120,135 samples, 0.12%)</title><rect x="213.6" y="181" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="216.60" y="191.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,134,229 samples, 0.09%)</title><rect x="118.3" y="501" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="121.33" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (91,763,092 samples, 0.31%)</title><rect x="102.4" y="485" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.39" y="495.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,208,821 samples, 0.09%)</title><rect x="97.9" y="789" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="100.90" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (7,523,769,120 samples, 25.77%)</title><rect x="597.7" y="629" width="304.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="600.69" y="639.5" >[python3.12]</text>
</g>
<g >
<title>_PyObject_Call (189,478,031 samples, 0.65%)</title><rect x="76.5" y="629" width="7.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.51" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,149,751 samples, 0.09%)</title><rect x="137.2" y="661" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.20" y="671.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (32,878,788 samples, 0.11%)</title><rect x="179.4" y="597" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="182.36" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,576 samples, 0.09%)</title><rect x="216.4" y="261" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.36" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,365 samples, 0.09%)</title><rect x="120.4" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.43" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (335,569,928 samples, 1.15%)</title><rect x="157.8" y="629" width="13.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="160.84" y="639.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,194,760 samples, 0.12%)</title><rect x="607.0" y="405" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="609.96" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,552 samples, 0.09%)</title><rect x="61.3" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (59,468,639 samples, 0.20%)</title><rect x="211.2" y="661" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="214.20" y="671.5" ></text>
</g>
<g >
<title>__fput (19,219,567 samples, 0.07%)</title><rect x="1167.0" y="901" width="0.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1169.98" y="911.5" ></text>
</g>
<g >
<title>[_ctypes.cpython-312-x86_64-linux-gnu.so] (33,571,412 samples, 0.11%)</title><rect x="169.0" y="341" width="1.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="171.98" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,149,751 samples, 0.09%)</title><rect x="137.2" y="277" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="140.20" y="287.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,168,113 samples, 0.27%)</title><rect x="118.3" y="613" width="3.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="121.33" y="623.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,244,955 samples, 0.12%)</title><rect x="609.7" y="293" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="612.72" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (68,275,847 samples, 0.23%)</title><rect x="171.4" y="357" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="367.5" ></text>
</g>
<g >
<title>PyDict_SetItem (26,179,925 samples, 0.09%)</title><rect x="156.8" y="117" width="1.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="159.78" y="127.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (32,878,788 samples, 0.11%)</title><rect x="179.4" y="405" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="182.36" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (52,419,493 samples, 0.18%)</title><rect x="189.5" y="437" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.52" y="447.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch1&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (32,227,910 samples, 0.11%)</title><rect x="911.1" y="581" width="1.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="914.13" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (58,421,053 samples, 0.20%)</title><rect x="145.2" y="469" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="148.19" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,345,047 samples, 0.18%)</title><rect x="207.7" y="293" width="2.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="210.70" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,559,354 samples, 0.11%)</title><rect x="218.5" y="389" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="221.48" y="399.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (102,723,698 samples, 0.35%)</title><rect x="1035.4" y="517" width="4.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1038.37" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,464,634 samples, 0.11%)</title><rect x="100.0" y="245" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.00" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (413,439,208 samples, 1.42%)</title><rect x="154.7" y="917" width="16.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="927.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (183,690,559 samples, 0.63%)</title><rect x="203.8" y="645" width="7.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="206.77" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="517" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (48,817,923 samples, 0.17%)</title><rect x="151.7" y="469" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.66" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (128,588,755 samples, 0.44%)</title><rect x="901.8" y="645" width="5.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="904.79" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,111 samples, 0.09%)</title><rect x="190.6" y="293" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.58" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (104,785,052 samples, 0.36%)</title><rect x="106.1" y="597" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.09" y="607.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (25,096,462 samples, 0.09%)</title><rect x="205.7" y="309" width="1.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="208.73" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (68,505,227 samples, 0.23%)</title><rect x="19.8" y="981" width="2.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="22.75" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (52,415,202 samples, 0.18%)</title><rect x="216.4" y="357" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.36" y="367.5" ></text>
</g>
<g >
<title>[_json.cpython-312-x86_64-linux-gnu.so] (26,195,992 samples, 0.09%)</title><rect x="177.3" y="389" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="180.33" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="629" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (32,878,788 samples, 0.11%)</title><rect x="179.4" y="245" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.36" y="255.5" ></text>
</g>
<g >
<title>elf_dynamic_do_Rela (33,970,452 samples, 0.12%)</title><rect x="127.2" y="341" width="1.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="130.16" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (52,331,898 samples, 0.18%)</title><rect x="197.4" y="469" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.42" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (31,760,523 samples, 0.11%)</title><rect x="88.5" y="357" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.52" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (111,425,706 samples, 0.38%)</title><rect x="137.2" y="917" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.20" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="479.5" ></text>
</g>
<g >
<title>inflate (392,371,911 samples, 1.34%)</title><rect x="884.6" y="421" width="15.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="887.59" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (25,086,030 samples, 0.09%)</title><rect x="185.8" y="853" width="1.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="188.77" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,890 samples, 0.09%)</title><rect x="222.8" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.80" y="319.5" ></text>
</g>
<g >
<title>__libc_open64 (27,498,501 samples, 0.09%)</title><rect x="144.1" y="293" width="1.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="147.08" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="469" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="479.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (17,813,920 samples, 0.06%)</title><rect x="84.2" y="245" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="87.17" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (23,918,012 samples, 0.08%)</title><rect x="178.4" y="293" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.39" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (119,943,099 samples, 0.41%)</title><rect x="89.8" y="373" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.81" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,018,355 samples, 0.09%)</title><rect x="67.8" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.78" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,209,080 samples, 0.21%)</title><rect x="134.8" y="773" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="137.76" y="783.5" ></text>
</g>
<g >
<title>do_page_fault (34,272,580 samples, 0.12%)</title><rect x="614.9" y="341" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="617.93" y="351.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (68,060,979 samples, 0.23%)</title><rect x="35.0" y="981" width="2.7" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="37.95" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,061,992 samples, 0.09%)</title><rect x="60.3" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.29" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="501" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="511.5" ></text>
</g>
<g >
<title>PyTuple_Pack (47,489,663 samples, 0.16%)</title><rect x="79.9" y="325" width="2.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="82.94" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (119,943,099 samples, 0.41%)</title><rect x="89.8" y="581" width="4.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="92.81" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,247 samples, 0.09%)</title><rect x="175.2" y="373" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.21" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,857,115 samples, 0.11%)</title><rect x="196.1" y="501" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="199.09" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (150,320,918 samples, 0.51%)</title><rect x="147.6" y="517" width="6.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="150.55" y="527.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (68,514,062 samples, 0.23%)</title><rect x="966.3" y="501" width="2.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="969.29" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (33,822,668 samples, 0.12%)</title><rect x="1111.2" y="517" width="1.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1114.21" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="213" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="223.5" ></text>
</g>
<g >
<title>array__reconstruct (68,255,041 samples, 0.23%)</title><rect x="908.4" y="661" width="2.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="911.37" y="671.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (26,211,764 samples, 0.09%)</title><rect x="223.9" y="981" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="226.86" y="991.5" ></text>
</g>
<g >
<title>inode_permission (27,498,501 samples, 0.09%)</title><rect x="144.1" y="149" width="1.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="147.08" y="159.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (23,918,012 samples, 0.08%)</title><rect x="178.4" y="309" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="181.39" y="319.5" ></text>
</g>
<g >
<title>PyObject_Malloc (163,155,457 samples, 0.56%)</title><rect x="609.7" y="421" width="6.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="612.72" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (275,784,273 samples, 0.94%)</title><rect x="157.8" y="581" width="11.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="160.84" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (174,253,697 samples, 0.60%)</title><rect x="121.5" y="725" width="7.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="124.49" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (133,144,064 samples, 0.46%)</title><rect x="218.5" y="837" width="5.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="221.48" y="847.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,149,751 samples, 0.09%)</title><rect x="137.2" y="341" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="140.20" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (25,961,501 samples, 0.09%)</title><rect x="99.0" y="741" width="1.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="101.95" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (174,253,697 samples, 0.60%)</title><rect x="121.5" y="869" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.49" y="879.5" ></text>
</g>
<g >
<title>handle_mm_fault (24,747,959 samples, 0.08%)</title><rect x="141.7" y="837" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="144.70" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (77,657,873 samples, 0.27%)</title><rect x="69.9" y="501" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.91" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (355,607,317 samples, 1.22%)</title><rect x="171.4" y="917" width="14.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="174.40" y="927.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,120,135 samples, 0.12%)</title><rect x="213.6" y="133" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="216.60" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="399.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,202,587 samples, 0.09%)</title><rect x="59.2" y="373" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="62.23" y="383.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (68,381,808 samples, 0.23%)</title><rect x="953.9" y="501" width="2.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="956.88" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (7,294,475,978 samples, 24.99%)</title><rect x="607.0" y="533" width="294.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="609.96" y="543.5" >[python3.12]</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,571,412 samples, 0.11%)</title><rect x="169.0" y="389" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="171.98" y="399.5" ></text>
</g>
<g >
<title>[anon] (215,989,372 samples, 0.74%)</title><rect x="47.3" y="997" width="8.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="50.33" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (25,826,519 samples, 0.09%)</title><rect x="119.4" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.38" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (107,350,355 samples, 0.37%)</title><rect x="122.8" y="485" width="4.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="125.82" y="495.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,571,412 samples, 0.11%)</title><rect x="169.0" y="437" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="171.98" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (86,042,816 samples, 0.29%)</title><rect x="188.2" y="613" width="3.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="191.17" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,061,992 samples, 0.09%)</title><rect x="60.3" y="309" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="63.29" y="319.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,111 samples, 0.09%)</title><rect x="190.6" y="309" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="193.58" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,212,863 samples, 0.09%)</title><rect x="73.0" y="229" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="76.04" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_vma (26,136,258 samples, 0.09%)</title><rect x="198.5" y="197" width="1.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="201.48" y="207.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,139,888 samples, 0.12%)</title><rect x="215.0" y="405" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="217.98" y="415.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (33,571,412 samples, 0.11%)</title><rect x="169.0" y="229" width="1.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="171.98" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (139,612,646 samples, 0.48%)</title><rect x="84.2" y="597" width="5.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="87.17" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (109,971,600 samples, 0.38%)</title><rect x="191.6" y="677" width="4.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.64" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,018,355 samples, 0.09%)</title><rect x="67.8" y="533" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.78" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,186,177 samples, 0.12%)</title><rect x="76.5" y="469" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.51" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (34,120,817 samples, 0.12%)</title><rect x="186.8" y="517" width="1.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="189.79" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (34,271,849 samples, 0.12%)</title><rect x="1089.1" y="485" width="1.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1092.13" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,498 samples, 0.09%)</title><rect x="62.4" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.40" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (49,522,514 samples, 0.17%)</title><rect x="148.6" y="261" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.59" y="271.5" ></text>
</g>
<g >
<title>[timestamps.cpython-312-x86_64-linux-gnu.so] (24,747,959 samples, 0.08%)</title><rect x="141.7" y="981" width="1.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="144.70" y="991.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,086,030 samples, 0.09%)</title><rect x="185.8" y="517" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="188.77" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="533" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="543.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (26,209,701 samples, 0.09%)</title><rect x="195.0" y="373" width="1.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="198.03" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (28,723,853 samples, 0.10%)</title><rect x="124.9" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.94" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,374,349 samples, 0.09%)</title><rect x="134.8" y="389" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="137.76" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::vector (34,217,192 samples, 0.12%)</title><rect x="1116.7" y="613" width="1.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1119.69" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="965" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (51,849,972 samples, 0.18%)</title><rect x="132.7" y="501" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.67" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (120,056,685 samples, 0.41%)</title><rect x="142.7" y="565" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (25,918,556 samples, 0.09%)</title><rect x="77.9" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.89" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (219,699,154 samples, 0.75%)</title><rect x="215.0" y="949" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (60,209,080 samples, 0.21%)</title><rect x="134.8" y="581" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.76" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (29,291,122 samples, 0.10%)</title><rect x="191.6" y="405" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="194.64" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,333,183 samples, 0.09%)</title><rect x="155.7" y="341" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="158.71" y="351.5" ></text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (34,209,137 samples, 0.12%)</title><rect x="985.7" y="501" width="1.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="988.66" y="511.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,424,216 samples, 0.18%)</title><rect x="107.2" y="469" width="2.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="110.15" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (59,468,639 samples, 0.20%)</title><rect x="211.2" y="581" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.20" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (52,113,807 samples, 0.18%)</title><rect x="138.3" y="837" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.25" y="847.5" ></text>
</g>
<g >
<title>[[stack]] (748,282,209 samples, 2.56%)</title><rect x="17.1" y="997" width="30.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="20.08" y="1007.5" >[[..</text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,208,821 samples, 0.09%)</title><rect x="97.9" y="725" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="100.90" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,333,183 samples, 0.09%)</title><rect x="155.7" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.71" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,180,018 samples, 0.09%)</title><rect x="111.4" y="629" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="114.39" y="639.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,243 samples, 0.09%)</title><rect x="170.3" y="469" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="173.34" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (339,694,550 samples, 1.16%)</title><rect x="84.2" y="757" width="13.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="87.17" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (135,321,245 samples, 0.46%)</title><rect x="205.7" y="469" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="208.73" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (150,320,918 samples, 0.51%)</title><rect x="147.6" y="533" width="6.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="150.55" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,178,020 samples, 0.12%)</title><rect x="862.9" y="389" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="865.85" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,397,003 samples, 0.18%)</title><rect x="69.9" y="293" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.91" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="789" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="799.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (109,971,600 samples, 0.38%)</title><rect x="191.6" y="613" width="4.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="194.64" y="623.5" ></text>
</g>
<g >
<title>do_page_fault (34,193,868 samples, 0.12%)</title><rect x="590.8" y="597" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="593.77" y="607.5" ></text>
</g>
<g >
<title>task_work_run (33,987,773 samples, 0.12%)</title><rect x="1028.5" y="437" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1031.46" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,205,863 samples, 0.09%)</title><rect x="202.7" y="261" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="205.71" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,636 samples, 0.09%)</title><rect x="58.2" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.17" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_openat (25,918,556 samples, 0.09%)</title><rect x="77.9" y="229" width="1.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="80.89" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_insert_node (34,294,883 samples, 0.12%)</title><rect x="1149.8" y="597" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1152.83" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,821 samples, 0.09%)</title><rect x="97.9" y="645" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="100.90" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,149,751 samples, 0.09%)</title><rect x="137.2" y="677" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="140.20" y="687.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (78,263,558 samples, 0.27%)</title><rect x="137.2" y="853" width="3.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="140.20" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,961,501 samples, 0.09%)</title><rect x="99.0" y="709" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.95" y="719.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (239,470,326 samples, 0.82%)</title><rect x="960.8" y="517" width="9.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="963.76" y="527.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (29,925,438 samples, 0.10%)</title><rect x="193.8" y="405" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="196.82" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (18,140,811 samples, 0.06%)</title><rect x="97.2" y="485" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.16" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,243 samples, 0.09%)</title><rect x="170.3" y="229" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.34" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="853" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (48,355,673 samples, 0.17%)</title><rect x="219.8" y="309" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="222.79" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,168,113 samples, 0.27%)</title><rect x="118.3" y="661" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="121.33" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,149,751 samples, 0.09%)</title><rect x="137.2" y="597" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="140.20" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,126 samples, 0.09%)</title><rect x="109.3" y="533" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.27" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (32,878,788 samples, 0.11%)</title><rect x="179.4" y="485" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="182.36" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,255,041 samples, 0.23%)</title><rect x="908.4" y="693" width="2.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="911.37" y="703.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectBasicBlock (34,084,795 samples, 0.12%)</title><rect x="226.8" y="949" width="1.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="229.81" y="959.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator++ (34,180,988 samples, 0.12%)</title><rect x="915.2" y="613" width="1.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="918.20" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,863 samples, 0.09%)</title><rect x="73.0" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.04" y="335.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (33,970,452 samples, 0.12%)</title><rect x="127.2" y="389" width="1.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="130.16" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,275,847 samples, 0.23%)</title><rect x="171.4" y="325" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="174.40" y="335.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,333,183 samples, 0.09%)</title><rect x="155.7" y="309" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="158.71" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,120,135 samples, 0.12%)</title><rect x="213.6" y="837" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="216.60" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,180,018 samples, 0.09%)</title><rect x="111.4" y="869" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.39" y="879.5" ></text>
</g>
<g >
<title>std::string::reserve (25,833,299 samples, 0.09%)</title><rect x="105.1" y="373" width="1.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="108.05" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (32,857,115 samples, 0.11%)</title><rect x="196.1" y="453" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.09" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="741" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (183,690,559 samples, 0.63%)</title><rect x="203.8" y="597" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="607.5" ></text>
</g>
<g >
<title>PyRun_StringFlags (26,199,664 samples, 0.09%)</title><rect x="92.6" y="293" width="1.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="95.57" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (68,275,847 samples, 0.23%)</title><rect x="171.4" y="469" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="479.5" ></text>
</g>
<g >
<title>security_file_permission (26,198,614 samples, 0.09%)</title><rect x="165.8" y="133" width="1.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="168.82" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="581" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1163.87" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (156,416,788 samples, 0.54%)</title><rect x="67.8" y="661" width="6.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="70.78" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,211,764 samples, 0.09%)</title><rect x="223.9" y="501" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="226.86" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (52,415,202 samples, 0.18%)</title><rect x="216.4" y="405" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.36" y="415.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,180,018 samples, 0.09%)</title><rect x="111.4" y="677" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="114.39" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="149" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="159.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (163,155,457 samples, 0.56%)</title><rect x="609.7" y="437" width="6.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="612.72" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (29,925,438 samples, 0.10%)</title><rect x="193.8" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.82" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,668 samples, 0.09%)</title><rect x="139.3" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.30" y="495.5" ></text>
</g>
<g >
<title>__GI___sbrk (94,637,922 samples, 0.32%)</title><rect x="611.1" y="325" width="3.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="614.10" y="335.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; (3,587,935,413 samples, 12.29%)</title><rect x="923.5" y="613" width="145.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="926.50" y="623.5" >boost::dijkstra_sh..</text>
</g>
<g >
<title>__GI___xstat (26,180,018 samples, 0.09%)</title><rect x="111.4" y="261" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="114.39" y="271.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (91,763,092 samples, 0.31%)</title><rect x="102.4" y="693" width="3.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="105.39" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (321,553,739 samples, 1.10%)</title><rect x="84.2" y="693" width="13.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="87.17" y="703.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (34,084,795 samples, 0.12%)</title><rect x="226.8" y="981" width="1.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="229.81" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (136,670,961 samples, 0.47%)</title><rect x="116.0" y="949" width="5.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.96" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,207,764 samples, 0.09%)</title><rect x="176.3" y="309" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="179.27" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (24,363,856 samples, 0.08%)</title><rect x="116.0" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (68,275,847 samples, 0.23%)</title><rect x="171.4" y="565" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="575.5" ></text>
</g>
<g >
<title>__do_munmap (33,623,323 samples, 0.12%)</title><rect x="188.2" y="197" width="1.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="191.17" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="261" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="271.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,120,817 samples, 0.12%)</title><rect x="186.8" y="357" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="189.79" y="367.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,345,047 samples, 0.18%)</title><rect x="207.7" y="405" width="2.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="210.70" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,061,992 samples, 0.09%)</title><rect x="60.3" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.29" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,416,674 samples, 0.18%)</title><rect x="122.8" y="325" width="2.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="125.82" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (24,041,190 samples, 0.08%)</title><rect x="152.7" y="261" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.66" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,333,183 samples, 0.09%)</title><rect x="155.7" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.71" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="693" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.77" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (29,291,122 samples, 0.10%)</title><rect x="191.6" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.64" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (77,869,280 samples, 0.27%)</title><rect x="154.7" y="693" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,477,215 samples, 0.27%)</title><rect x="58.2" y="693" width="3.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="61.17" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (128,626,150 samples, 0.44%)</title><rect x="174.2" y="565" width="5.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="177.16" y="575.5" ></text>
</g>
<g >
<title>PyLong_FromUnsignedLongLong (26,192,389 samples, 0.09%)</title><rect x="48.7" y="981" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="51.67" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (174,253,697 samples, 0.60%)</title><rect x="121.5" y="837" width="7.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="124.49" y="847.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,208,558 samples, 0.09%)</title><rect x="66.7" y="725" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.72" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,914,139 samples, 0.09%)</title><rect x="138.3" y="485" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.25" y="495.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (17,813,920 samples, 0.06%)</title><rect x="84.2" y="181" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="87.17" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="789" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (157,213,577 samples, 0.54%)</title><rect x="197.4" y="533" width="6.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.42" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (157,213,577 samples, 0.54%)</title><rect x="197.4" y="549" width="6.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="200.42" y="559.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,213,712 samples, 0.09%)</title><rect x="587.3" y="469" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="590.27" y="479.5" ></text>
</g>
<g >
<title>pmd_devmap_trans_unstable (34,169,484 samples, 0.12%)</title><rect x="853.6" y="309" width="1.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="856.57" y="319.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT_interface::run_for_batch_matrices (6,212,989,464 samples, 21.28%)</title><rect x="911.1" y="693" width="251.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="914.13" y="703.5" >diff_Nexullance_IT_interface::run..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,120,135 samples, 0.12%)</title><rect x="213.6" y="437" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="216.60" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (32,559,354 samples, 0.11%)</title><rect x="218.5" y="405" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="221.48" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,416,674 samples, 0.18%)</title><rect x="122.8" y="405" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="125.82" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_emplace_equal&lt;std::pair&lt;float, unsigned long&gt; &gt; (68,483,590 samples, 0.23%)</title><rect x="1149.8" y="613" width="2.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1152.83" y="623.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;unsigned long, unsigned long&gt; (34,267,590 samples, 0.12%)</title><rect x="40.5" y="981" width="1.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="43.47" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,149,751 samples, 0.09%)</title><rect x="137.2" y="485" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.20" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (136,670,961 samples, 0.47%)</title><rect x="116.0" y="789" width="5.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="118.96" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,342 samples, 0.12%)</title><rect x="103.7" y="325" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.67" y="335.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (32,932,890 samples, 0.11%)</title><rect x="121.5" y="357" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="124.49" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (156,416,788 samples, 0.54%)</title><rect x="67.8" y="645" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="70.78" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::push_back (647,489,562 samples, 2.22%)</title><rect x="1090.5" y="613" width="26.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1093.52" y="623.5" >s..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (229,780,785 samples, 0.79%)</title><rect x="171.4" y="709" width="9.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.40" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="725" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="735.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (34,260,961 samples, 0.12%)</title><rect x="1020.2" y="517" width="1.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1023.17" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="613" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1163.87" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,214,243 samples, 0.09%)</title><rect x="170.3" y="549" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="173.34" y="559.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (26,194,413 samples, 0.09%)</title><rect x="84.9" y="341" width="1.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="87.89" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,171,141 samples, 0.12%)</title><rect x="907.0" y="581" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="909.99" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (6,262,720,403 samples, 21.45%)</title><rect x="609.7" y="453" width="253.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="612.72" y="463.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (49,522,514 samples, 0.17%)</title><rect x="148.6" y="309" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.59" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (29,291,122 samples, 0.10%)</title><rect x="191.6" y="373" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="194.64" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (28,723,853 samples, 0.10%)</title><rect x="124.9" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.94" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (32,878,788 samples, 0.11%)</title><rect x="179.4" y="229" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.36" y="239.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (25,721,139 samples, 0.09%)</title><rect x="167.9" y="437" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="170.94" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,207,307 samples, 0.09%)</title><rect x="65.7" y="373" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="68.66" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (52,415,202 samples, 0.18%)</title><rect x="216.4" y="309" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.36" y="319.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (33,123,665 samples, 0.11%)</title><rect x="1097.4" y="501" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1100.43" y="511.5" ></text>
</g>
<g >
<title>ufunc_generic_fastcall (68,136,851 samples, 0.23%)</title><rect x="228.2" y="981" width="2.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="231.18" y="991.5" ></text>
</g>
<g >
<title>migrate_misplaced_page (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="885" width="1.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1191.64" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (339,694,550 samples, 1.16%)</title><rect x="84.2" y="789" width="13.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="799.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (14,313,598,062 samples, 49.03%)</title><rect x="583.7" y="917" width="578.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="586.71" y="927.5" >_PyRun_SimpleFileObject</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,209,080 samples, 0.21%)</title><rect x="134.8" y="725" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.76" y="735.5" ></text>
</g>
<g >
<title>perf_event_mmap (34,170,040 samples, 0.12%)</title><rect x="613.5" y="229" width="1.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="616.55" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (25,914,139 samples, 0.09%)</title><rect x="138.3" y="549" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.25" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,326,266 samples, 0.18%)</title><rect x="586.2" y="821" width="2.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="589.22" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (34,137,131 samples, 0.12%)</title><rect x="142.7" y="293" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,212,636 samples, 0.09%)</title><rect x="58.2" y="421" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="61.17" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (52,424,216 samples, 0.18%)</title><rect x="107.2" y="453" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (27,896,301 samples, 0.10%)</title><rect x="94.7" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.66" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (28,723,853 samples, 0.10%)</title><rect x="124.9" y="389" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="127.94" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,150,710 samples, 0.09%)</title><rect x="106.1" y="437" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.09" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,477,215 samples, 0.27%)</title><rect x="58.2" y="773" width="3.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="61.17" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (32,878,788 samples, 0.11%)</title><rect x="179.4" y="517" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.36" y="527.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,464,634 samples, 0.11%)</title><rect x="100.0" y="517" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="103.00" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (211,594,461 samples, 0.72%)</title><rect x="58.2" y="965" width="8.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="61.17" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="581" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="591.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (25,918,556 samples, 0.09%)</title><rect x="77.9" y="437" width="1.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="80.89" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (120,056,685 samples, 0.41%)</title><rect x="142.7" y="645" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,061,992 samples, 0.09%)</title><rect x="60.3" y="293" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="63.29" y="303.5" ></text>
</g>
<g >
<title>in_group_p (27,498,501 samples, 0.09%)</title><rect x="144.1" y="117" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="147.08" y="127.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (68,555,022 samples, 0.23%)</title><rect x="973.2" y="469" width="2.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="976.21" y="479.5" ></text>
</g>
<g >
<title>clear_page_erms (34,164,226 samples, 0.12%)</title><rect x="909.7" y="421" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="912.75" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,162,148 samples, 0.11%)</title><rect x="140.4" y="725" width="1.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="143.36" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,120,342 samples, 0.12%)</title><rect x="103.7" y="293" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.67" y="303.5" ></text>
</g>
<g >
<title>handle_mm_fault (26,210,416 samples, 0.09%)</title><rect x="166.9" y="213" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="169.88" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (610,828,580 samples, 2.09%)</title><rect x="171.4" y="933" width="24.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="943.5" >[..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,111 samples, 0.09%)</title><rect x="190.6" y="261" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="193.58" y="271.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (49,522,514 samples, 0.17%)</title><rect x="148.6" y="357" width="2.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="151.59" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (120,163,633 samples, 0.41%)</title><rect x="186.8" y="693" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="189.79" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (48,895,588 samples, 0.17%)</title><rect x="205.7" y="373" width="2.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="208.73" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (33,517,476 samples, 0.11%)</title><rect x="1074.0" y="517" width="1.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1077.01" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (580,901,950 samples, 1.99%)</title><rect x="560.2" y="917" width="23.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="563.23" y="927.5" >[..</text>
</g>
<g >
<title>[python3.12] (26,211,890 samples, 0.09%)</title><rect x="222.8" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.80" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (270,377,603 samples, 0.93%)</title><rect x="142.7" y="677" width="10.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="145.70" y="687.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,649 samples, 0.09%)</title><rect x="83.1" y="309" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="86.11" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (32,207,239 samples, 0.11%)</title><rect x="145.2" y="309" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="148.19" y="319.5" ></text>
</g>
<g >
<title>__GI___xstat (28,290,192 samples, 0.10%)</title><rect x="63.5" y="325" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="66.46" y="335.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (68,303,293 samples, 0.23%)</title><rect x="935.9" y="533" width="2.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="938.92" y="543.5" ></text>
</g>
<g >
<title>PyObject_Malloc (34,193,868 samples, 0.12%)</title><rect x="590.8" y="661" width="1.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="593.77" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (68,275,847 samples, 0.23%)</title><rect x="171.4" y="581" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="174.40" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (102,344,064 samples, 0.35%)</title><rect x="128.5" y="597" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (24,041,190 samples, 0.08%)</title><rect x="152.7" y="293" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="155.66" y="303.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (59,468,639 samples, 0.20%)</title><rect x="211.2" y="293" width="2.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="214.20" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (154,194,036 samples, 0.53%)</title><rect x="128.5" y="821" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,649 samples, 0.09%)</title><rect x="83.1" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.11" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,134,229 samples, 0.09%)</title><rect x="118.3" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.33" y="495.5" ></text>
</g>
<g >
<title>do_anonymous_page (34,272,580 samples, 0.12%)</title><rect x="614.9" y="261" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="617.93" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,712 samples, 0.09%)</title><rect x="587.3" y="405" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="590.27" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (68,338,208 samples, 0.23%)</title><rect x="1122.2" y="549" width="2.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1125.22" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,095,135 samples, 0.09%)</title><rect x="174.2" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.16" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="149" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="159.5" ></text>
</g>
<g >
<title>page_fault (34,164,226 samples, 0.12%)</title><rect x="909.7" y="581" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="912.75" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (33,882,874 samples, 0.12%)</title><rect x="87.2" y="293" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.16" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (120,056,685 samples, 0.41%)</title><rect x="142.7" y="613" width="4.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.70" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,374,349 samples, 0.09%)</title><rect x="134.8" y="421" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="137.76" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="773" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="783.5" ></text>
</g>
<g >
<title>_PyObject_Call (156,416,788 samples, 0.54%)</title><rect x="67.8" y="709" width="6.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.78" y="719.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (174,253,697 samples, 0.60%)</title><rect x="121.5" y="645" width="7.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="124.49" y="655.5" ></text>
</g>
<g >
<title>migrate_pages (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="869" width="1.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1191.64" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,120,817 samples, 0.12%)</title><rect x="186.8" y="373" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="189.79" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (24,363,856 samples, 0.08%)</title><rect x="116.0" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="789" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="799.5" ></text>
</g>
<g >
<title>do_anonymous_page (34,120,135 samples, 0.12%)</title><rect x="213.6" y="117" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="216.60" y="127.5" ></text>
</g>
<g >
<title>[python3.12] (48,369,314 samples, 0.17%)</title><rect x="203.8" y="469" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,120,135 samples, 0.12%)</title><rect x="213.6" y="821" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="216.60" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (174,253,697 samples, 0.60%)</title><rect x="121.5" y="885" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.49" y="895.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (80,703,196 samples, 0.28%)</title><rect x="63.5" y="565" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="66.46" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (157,213,577 samples, 0.54%)</title><rect x="197.4" y="565" width="6.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.42" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,018,355 samples, 0.09%)</title><rect x="67.8" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.78" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (413,439,208 samples, 1.42%)</title><rect x="154.7" y="821" width="16.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="157.69" y="831.5" ></text>
</g>
<g >
<title>_PyObject_Call (119,943,099 samples, 0.41%)</title><rect x="89.8" y="565" width="4.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="92.81" y="575.5" ></text>
</g>
<g >
<title>PyNumber_Remainder (26,214,243 samples, 0.09%)</title><rect x="170.3" y="421" width="1.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="173.34" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,559,354 samples, 0.11%)</title><rect x="218.5" y="517" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="221.48" y="527.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,419,493 samples, 0.18%)</title><rect x="189.5" y="405" width="2.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="192.52" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,712 samples, 0.09%)</title><rect x="587.3" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="590.27" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,834,731 samples, 0.12%)</title><rect x="135.8" y="293" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="138.83" y="303.5" ></text>
</g>
<g >
<title>PyDict_GetItemWithError (33,162,148 samples, 0.11%)</title><rect x="140.4" y="261" width="1.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="143.36" y="271.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (183,690,559 samples, 0.63%)</title><rect x="203.8" y="677" width="7.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="206.77" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (174,253,697 samples, 0.60%)</title><rect x="121.5" y="917" width="7.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="124.49" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (136,670,961 samples, 0.47%)</title><rect x="116.0" y="805" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="815.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT::initialize_routing_table (32,227,910 samples, 0.11%)</title><rect x="911.1" y="645" width="1.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="914.13" y="655.5" ></text>
</g>
<g >
<title>release_pages (101,246,105 samples, 0.35%)</title><rect x="1173.2" y="789" width="4.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1176.24" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_openat (27,498,501 samples, 0.09%)</title><rect x="144.1" y="245" width="1.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="147.08" y="255.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (836,816,200 samples, 2.87%)</title><rect x="76.5" y="949" width="33.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="79.51" y="959.5" >_P..</text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (67,903,104 samples, 0.23%)</title><rect x="1014.7" y="453" width="2.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1017.68" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,209,080 samples, 0.21%)</title><rect x="134.8" y="949" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="137.76" y="959.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,162,148 samples, 0.11%)</title><rect x="140.4" y="709" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="143.36" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,863 samples, 0.09%)</title><rect x="73.0" y="357" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="76.04" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,101,693 samples, 0.12%)</title><rect x="95.8" y="277" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="98.78" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,180,018 samples, 0.09%)</title><rect x="111.4" y="821" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="114.39" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (168,744,858 samples, 0.58%)</title><rect x="1170.5" y="965" width="6.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1173.51" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,149,751 samples, 0.09%)</title><rect x="137.2" y="757" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.20" y="767.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (48,375,272 samples, 0.17%)</title><rect x="235.3" y="821" width="2.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="238.30" y="831.5" ></text>
</g>
<g >
<title>page_fault (25,826,519 samples, 0.09%)</title><rect x="119.4" y="325" width="1.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="122.38" y="335.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,120,342 samples, 0.12%)</title><rect x="103.7" y="421" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="106.67" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,206,552 samples, 0.09%)</title><rect x="61.3" y="725" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="64.34" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="431.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (25,918,556 samples, 0.09%)</title><rect x="77.9" y="325" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="80.89" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (58,421,053 samples, 0.20%)</title><rect x="145.2" y="437" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="148.19" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,207,498 samples, 0.09%)</title><rect x="62.4" y="453" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="65.40" y="463.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (34,164,226 samples, 0.12%)</title><rect x="909.7" y="453" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="912.75" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,464,634 samples, 0.11%)</title><rect x="100.0" y="597" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.00" y="607.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,244,955 samples, 0.12%)</title><rect x="609.7" y="325" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="612.72" y="335.5" ></text>
</g>
<g >
<title>PyIter_Next (26,209,250 samples, 0.09%)</title><rect x="153.6" y="261" width="1.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="156.63" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,890 samples, 0.09%)</title><rect x="222.8" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.80" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,243 samples, 0.09%)</title><rect x="170.3" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.34" y="383.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,649 samples, 0.09%)</title><rect x="83.1" y="485" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="86.11" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (94,637,922 samples, 0.32%)</title><rect x="611.1" y="293" width="3.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="614.10" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,149,751 samples, 0.09%)</title><rect x="137.2" y="709" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="140.20" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,785,052 samples, 0.36%)</title><rect x="106.1" y="629" width="4.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="109.09" y="639.5" ></text>
</g>
<g >
<title>dl_open_worker (26,209,701 samples, 0.09%)</title><rect x="195.0" y="309" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="198.03" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33,571,412 samples, 0.11%)</title><rect x="169.0" y="69" width="1.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="171.98" y="79.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,890 samples, 0.09%)</title><rect x="222.8" y="389" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="225.80" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="629" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (25,961,501 samples, 0.09%)</title><rect x="99.0" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.95" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (34,256,998 samples, 0.12%)</title><rect x="1138.8" y="581" width="1.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1141.80" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (250,063,134 samples, 0.86%)</title><rect x="157.8" y="357" width="10.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="160.84" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (109,971,600 samples, 0.38%)</title><rect x="191.6" y="709" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.64" y="719.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (68,494,600 samples, 0.23%)</title><rect x="1119.5" y="549" width="2.7" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1122.46" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,173,947 samples, 0.09%)</title><rect x="201.7" y="293" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.65" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (243,159,198 samples, 0.83%)</title><rect x="203.8" y="789" width="9.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="206.77" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,199,668 samples, 0.09%)</title><rect x="139.3" y="405" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="142.30" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,333,183 samples, 0.09%)</title><rect x="155.7" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.71" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,464,634 samples, 0.11%)</title><rect x="100.0" y="629" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="103.00" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (32,878,788 samples, 0.11%)</title><rect x="179.4" y="341" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.36" y="351.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,212,863 samples, 0.09%)</title><rect x="73.0" y="629" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="76.04" y="639.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,247 samples, 0.09%)</title><rect x="175.2" y="325" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="178.21" y="335.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (196,901,997 samples, 0.67%)</title><rect x="171.4" y="597" width="8.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="174.40" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (68,275,847 samples, 0.23%)</title><rect x="171.4" y="549" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.40" y="559.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,419,493 samples, 0.18%)</title><rect x="189.5" y="469" width="2.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="192.52" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (61,635,632 samples, 0.21%)</title><rect x="142.7" y="469" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="479.5" ></text>
</g>
<g >
<title>__get_vma_policy (47,489,663 samples, 0.16%)</title><rect x="79.9" y="181" width="2.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="82.94" y="191.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (68,328,515 samples, 0.23%)</title><rect x="963.5" y="501" width="2.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="966.53" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,199,668 samples, 0.09%)</title><rect x="139.3" y="533" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="142.30" y="543.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (34,223,013 samples, 0.12%)</title><rect x="1076.7" y="613" width="1.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1079.71" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,374,349 samples, 0.09%)</title><rect x="134.8" y="373" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.76" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (74,372,820 samples, 0.25%)</title><rect x="219.8" y="421" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="222.79" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (58,502,848 samples, 0.20%)</title><rect x="116.0" y="517" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (128,626,150 samples, 0.44%)</title><rect x="174.2" y="549" width="5.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.16" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,649 samples, 0.09%)</title><rect x="83.1" y="405" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="86.11" y="415.5" ></text>
</g>
<g >
<title>smp_call_function_many (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="709" width="1.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1191.64" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (33,623,323 samples, 0.12%)</title><rect x="188.2" y="341" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.17" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (28,290,192 samples, 0.10%)</title><rect x="63.5" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.46" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,101,693 samples, 0.12%)</title><rect x="95.8" y="485" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="98.78" y="495.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visitRet (34,084,795 samples, 0.12%)</title><rect x="226.8" y="917" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="229.81" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,374,349 samples, 0.09%)</title><rect x="134.8" y="293" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.76" y="303.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (77,869,280 samples, 0.27%)</title><rect x="154.7" y="533" width="3.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="157.69" y="543.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (25,961,501 samples, 0.09%)</title><rect x="99.0" y="789" width="1.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="101.95" y="799.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (32,559,354 samples, 0.11%)</title><rect x="218.5" y="437" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="221.48" y="447.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,120,135 samples, 0.12%)</title><rect x="213.6" y="421" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="216.60" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (29,960,916 samples, 0.10%)</title><rect x="85.9" y="341" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.94" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,416,674 samples, 0.18%)</title><rect x="122.8" y="437" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="125.82" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (22,160,344 samples, 0.08%)</title><rect x="204.8" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.83" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (102,344,064 samples, 0.35%)</title><rect x="128.5" y="533" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,243 samples, 0.09%)</title><rect x="170.3" y="293" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="173.34" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,033,884 samples, 0.18%)</title><rect x="119.4" y="517" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="122.38" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,817 samples, 0.12%)</title><rect x="186.8" y="341" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.79" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="421" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="431.5" ></text>
</g>
<g >
<title>__handle_mm_fault (102,514,763 samples, 0.35%)</title><rect x="692.3" y="341" width="4.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="695.32" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,587 samples, 0.09%)</title><rect x="59.2" y="261" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.23" y="271.5" ></text>
</g>
<g >
<title>do_anonymous_page (569,945,057 samples, 1.95%)</title><rect x="830.5" y="309" width="23.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="833.54" y="319.5" >d..</text>
</g>
<g >
<title>[python3.12] (26,017,147 samples, 0.09%)</title><rect x="221.7" y="245" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="224.75" y="255.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (238,526,690 samples, 0.82%)</title><rect x="1052.0" y="517" width="9.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1054.95" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (190,070,692 samples, 0.65%)</title><rect x="196.1" y="677" width="7.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.09" y="687.5" ></text>
</g>
<g >
<title>x86_pmu_enable (2,747,910 samples, 0.01%)</title><rect x="1177.4" y="821" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1180.45" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (77,869,280 samples, 0.27%)</title><rect x="154.7" y="645" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="157.69" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,890 samples, 0.09%)</title><rect x="222.8" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.80" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,817 samples, 0.12%)</title><rect x="186.8" y="581" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.79" y="591.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (25,086,030 samples, 0.09%)</title><rect x="185.8" y="677" width="1.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="188.77" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="405" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (339,694,550 samples, 1.16%)</title><rect x="84.2" y="709" width="13.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (27,896,301 samples, 0.10%)</title><rect x="94.7" y="613" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="97.66" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,199,668 samples, 0.09%)</title><rect x="139.3" y="517" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="142.30" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (31,809,451 samples, 0.11%)</title><rect x="102.4" y="389" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="105.39" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (19,219,567 samples, 0.07%)</title><rect x="1167.0" y="965" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1169.98" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,149,751 samples, 0.09%)</title><rect x="137.2" y="533" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="140.20" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,207,498 samples, 0.09%)</title><rect x="62.4" y="533" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="65.40" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,285,084 samples, 0.12%)</title><rect x="688.2" y="389" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="691.16" y="399.5" ></text>
</g>
<g >
<title>get_page_from_freelist (34,120,135 samples, 0.12%)</title><rect x="213.6" y="69" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="216.60" y="79.5" ></text>
</g>
<g >
<title>_PyObject_Call (29,291,122 samples, 0.10%)</title><rect x="191.6" y="501" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="194.64" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (57,799,046 samples, 0.20%)</title><rect x="180.7" y="517" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (29,291,122 samples, 0.10%)</title><rect x="191.6" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.64" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (52,424,216 samples, 0.18%)</title><rect x="107.2" y="517" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="527.5" ></text>
</g>
<g >
<title>[vectorized.cpython-312-x86_64-linux-gnu.so] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="293" width="1.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="104.36" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call (86,042,816 samples, 0.29%)</title><rect x="188.2" y="549" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="191.17" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,960 samples, 0.09%)</title><rect x="133.7" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.70" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,180,018 samples, 0.09%)</title><rect x="111.4" y="357" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="114.39" y="367.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,212,863 samples, 0.09%)</title><rect x="73.0" y="517" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="76.04" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,120,135 samples, 0.12%)</title><rect x="213.6" y="341" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="216.60" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (296,586,853 samples, 1.02%)</title><rect x="142.7" y="885" width="12.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="145.70" y="895.5" ></text>
</g>
<g >
<title>_dlerror_run (33,571,412 samples, 0.11%)</title><rect x="169.0" y="309" width="1.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="171.98" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="773" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="783.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (18,140,811 samples, 0.06%)</title><rect x="97.2" y="293" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="100.16" y="303.5" ></text>
</g>
<g >
<title>_PyAST_Compile (26,199,664 samples, 0.09%)</title><rect x="92.6" y="261" width="1.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="95.57" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,636 samples, 0.09%)</title><rect x="58.2" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.17" y="447.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,214,243 samples, 0.09%)</title><rect x="170.3" y="277" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="173.34" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (604,114,541 samples, 2.07%)</title><rect x="830.5" y="389" width="24.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="833.54" y="399.5" >d..</text>
</g>
<g >
<title>[python3.12] (26,207,307 samples, 0.09%)</title><rect x="65.7" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.66" y="479.5" ></text>
</g>
<g >
<title>_dlerror_run (33,970,452 samples, 0.12%)</title><rect x="127.2" y="469" width="1.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="130.16" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (52,415,202 samples, 0.18%)</title><rect x="216.4" y="501" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.36" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,821 samples, 0.09%)</title><rect x="97.9" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.90" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,477,215 samples, 0.27%)</title><rect x="58.2" y="901" width="3.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="61.17" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (23,799,126 samples, 0.08%)</title><rect x="206.7" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="209.74" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (77,869,280 samples, 0.27%)</title><rect x="154.7" y="629" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,524 samples, 0.09%)</title><rect x="107.2" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (34,145,840 samples, 0.12%)</title><rect x="588.3" y="773" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="591.33" y="783.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,179,925 samples, 0.09%)</title><rect x="156.8" y="389" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="159.78" y="399.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,212,863 samples, 0.09%)</title><rect x="73.0" y="261" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="76.04" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (26,180,018 samples, 0.09%)</title><rect x="111.4" y="213" width="1.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="114.39" y="223.5" ></text>
</g>
<g >
<title>do_page_fault (34,151,016 samples, 0.12%)</title><rect x="91.2" y="213" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="94.19" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (34,145,840 samples, 0.12%)</title><rect x="588.3" y="805" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="591.33" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27,498,501 samples, 0.09%)</title><rect x="144.1" y="277" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="147.08" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,817 samples, 0.12%)</title><rect x="186.8" y="677" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.79" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_drop_node (34,222,172 samples, 0.12%)</title><rect x="1154.0" y="533" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1156.96" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,814 samples, 0.09%)</title><rect x="146.5" y="261" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="149.49" y="271.5" ></text>
</g>
<g >
<title>page_fault (25,460,519 samples, 0.09%)</title><rect x="101.4" y="197" width="1.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="104.36" y="207.5" ></text>
</g>
<g >
<title>__dlopen (26,209,701 samples, 0.09%)</title><rect x="195.0" y="421" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="198.03" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,649 samples, 0.09%)</title><rect x="83.1" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.11" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,365 samples, 0.09%)</title><rect x="120.4" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.43" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (229,780,785 samples, 0.79%)</title><rect x="171.4" y="693" width="9.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="174.40" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (29,291,122 samples, 0.10%)</title><rect x="191.6" y="325" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="194.64" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (125,826,532 samples, 0.43%)</title><rect x="180.7" y="613" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="183.69" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (14,313,598,062 samples, 49.03%)</title><rect x="583.7" y="869" width="578.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="586.71" y="879.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,211,890 samples, 0.09%)</title><rect x="222.8" y="245" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.80" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate (68,401,874 samples, 0.23%)</title><rect x="1136.0" y="581" width="2.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1139.03" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,552 samples, 0.09%)</title><rect x="61.3" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,120,817 samples, 0.12%)</title><rect x="186.8" y="469" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="189.79" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (111,425,706 samples, 0.38%)</title><rect x="137.2" y="901" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.20" y="911.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (34,098,451 samples, 0.12%)</title><rect x="44.6" y="981" width="1.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="47.63" y="991.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,527,697 samples, 0.09%)</title><rect x="68.8" y="357" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="71.83" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (78,477,215 samples, 0.27%)</title><rect x="58.2" y="917" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.17" y="927.5" ></text>
</g>
<g >
<title>PyObject_Malloc (34,194,760 samples, 0.12%)</title><rect x="607.0" y="501" width="1.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="609.96" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (58,502,848 samples, 0.20%)</title><rect x="116.0" y="533" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,206,552 samples, 0.09%)</title><rect x="61.3" y="597" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="64.34" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (68,449,376 samples, 0.23%)</title><rect x="1130.5" y="581" width="2.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1133.50" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (77,869,280 samples, 0.27%)</title><rect x="154.7" y="517" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="157.69" y="527.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,150,710 samples, 0.09%)</title><rect x="106.1" y="357" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="109.09" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (61,635,632 samples, 0.21%)</title><rect x="142.7" y="421" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,243 samples, 0.09%)</title><rect x="170.3" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.34" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (86,555,090 samples, 0.30%)</title><rect x="215.0" y="789" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="799.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,209,080 samples, 0.21%)</title><rect x="134.8" y="485" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="137.76" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="613" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,199,668 samples, 0.09%)</title><rect x="139.3" y="453" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="142.30" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (29,925,438 samples, 0.10%)</title><rect x="193.8" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.82" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (28,290,192 samples, 0.10%)</title><rect x="63.5" y="277" width="1.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="66.46" y="287.5" ></text>
</g>
<g >
<title>_start (15,167,101,538 samples, 51.95%)</title><rect x="554.7" y="997" width="613.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="557.72" y="1007.5" >_start</text>
</g>
<g >
<title>on_each_cpu_cond_mask (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="741" width="1.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1191.64" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (52,326,266 samples, 0.18%)</title><rect x="586.2" y="805" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="589.22" y="815.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (34,170,040 samples, 0.12%)</title><rect x="613.5" y="197" width="1.4" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="616.55" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (34,293,118 samples, 0.12%)</title><rect x="1098.8" y="469" width="1.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1101.77" y="479.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (68,518,504 samples, 0.23%)</title><rect x="999.5" y="517" width="2.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1002.46" y="527.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (3,553,746,928 samples, 12.17%)</title><rect x="923.5" y="565" width="143.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="926.50" y="575.5" >boost::dijkstra_sh..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (77,869,280 samples, 0.27%)</title><rect x="154.7" y="725" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="157.69" y="735.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,212,863 samples, 0.09%)</title><rect x="73.0" y="565" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="76.04" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="437" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="597" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1163.87" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (25,826,519 samples, 0.09%)</title><rect x="119.4" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.38" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,186,177 samples, 0.12%)</title><rect x="76.5" y="421" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.51" y="431.5" ></text>
</g>
<g >
<title>ksys_read (85,833,913 samples, 0.29%)</title><rect x="163.4" y="181" width="3.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="166.41" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (101,344,301 samples, 0.35%)</title><rect x="1096.1" y="533" width="4.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1099.06" y="543.5" ></text>
</g>
<g >
<title>change_protection (33,987,773 samples, 0.12%)</title><rect x="1028.5" y="389" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1031.46" y="399.5" ></text>
</g>
<g >
<title>elf_machine_rela_relative (33,571,412 samples, 0.11%)</title><rect x="169.0" y="165" width="1.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="171.98" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,692 samples, 0.09%)</title><rect x="108.2" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.21" y="303.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,061,992 samples, 0.09%)</title><rect x="60.3" y="485" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="63.29" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (18,140,811 samples, 0.06%)</title><rect x="97.2" y="405" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.16" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (109,971,600 samples, 0.38%)</title><rect x="191.6" y="661" width="4.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="194.64" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (28,290,192 samples, 0.10%)</title><rect x="63.5" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.46" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (106,910,694 samples, 0.37%)</title><rect x="62.4" y="677" width="4.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="65.40" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,154 samples, 0.09%)</title><rect x="123.9" y="293" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.88" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="309" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="319.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,834,731 samples, 0.12%)</title><rect x="135.8" y="309" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="138.83" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,498 samples, 0.09%)</title><rect x="62.4" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.40" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,834,731 samples, 0.12%)</title><rect x="135.8" y="277" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="138.83" y="287.5" ></text>
</g>
<g >
<title>_PyObject_GC_NewVar (34,226,143 samples, 0.12%)</title><rect x="593.5" y="613" width="1.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="596.54" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (836,816,200 samples, 2.87%)</title><rect x="76.5" y="901" width="33.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.51" y="911.5" >[p..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,101,693 samples, 0.12%)</title><rect x="95.8" y="613" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.78" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (296,586,853 samples, 1.02%)</title><rect x="142.7" y="789" width="12.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.70" y="799.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (25,460,519 samples, 0.09%)</title><rect x="101.4" y="325" width="1.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="104.36" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,243 samples, 0.09%)</title><rect x="170.3" y="245" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.34" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (141,320,807 samples, 0.48%)</title><rect x="122.8" y="565" width="5.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="125.82" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (60,209,080 samples, 0.21%)</title><rect x="134.8" y="517" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.76" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (34,120,817 samples, 0.12%)</title><rect x="186.8" y="405" width="1.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="189.79" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,209,960 samples, 0.09%)</title><rect x="133.7" y="293" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="136.70" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (34,285,084 samples, 0.12%)</title><rect x="688.2" y="309" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="691.16" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (32,559,354 samples, 0.11%)</title><rect x="218.5" y="421" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="221.48" y="431.5" ></text>
</g>
<g >
<title>page_evictable (25,917,198 samples, 0.09%)</title><rect x="849.8" y="245" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="852.77" y="255.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,214,243 samples, 0.09%)</title><rect x="170.3" y="485" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="173.34" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (154,194,036 samples, 0.53%)</title><rect x="128.5" y="629" width="6.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="131.53" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (25,640,012 samples, 0.09%)</title><rect x="132.7" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.67" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,162,148 samples, 0.11%)</title><rect x="140.4" y="341" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="143.36" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,206,552 samples, 0.09%)</title><rect x="61.3" y="757" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="64.34" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (106,910,694 samples, 0.37%)</title><rect x="62.4" y="661" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.40" y="671.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="725" width="1.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1191.64" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (219,699,154 samples, 0.75%)</title><rect x="215.0" y="965" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (154,194,036 samples, 0.53%)</title><rect x="128.5" y="885" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="895.5" ></text>
</g>
<g >
<title>[_json.cpython-312-x86_64-linux-gnu.so] (26,195,992 samples, 0.09%)</title><rect x="177.3" y="373" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="180.33" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (190,070,692 samples, 0.65%)</title><rect x="196.1" y="661" width="7.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="199.09" y="671.5" ></text>
</g>
<g >
<title>error_entry (26,194,413 samples, 0.09%)</title><rect x="84.9" y="293" width="1.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="87.89" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (72,447,729 samples, 0.25%)</title><rect x="10.0" y="981" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="13.01" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (136,670,961 samples, 0.47%)</title><rect x="116.0" y="773" width="5.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.96" y="783.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (34,173,093 samples, 0.12%)</title><rect x="172.8" y="261" width="1.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="175.78" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,173,947 samples, 0.09%)</title><rect x="201.7" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.65" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,571,412 samples, 0.11%)</title><rect x="169.0" y="549" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="171.98" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (139,612,646 samples, 0.48%)</title><rect x="84.2" y="517" width="5.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="87.17" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,961,501 samples, 0.09%)</title><rect x="99.0" y="453" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.95" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (154,194,036 samples, 0.53%)</title><rect x="128.5" y="693" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="703.5" ></text>
</g>
<g >
<title>flush_tlb_func_remote (3,848,355 samples, 0.01%)</title><rect x="1189.8" y="629" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1192.84" y="639.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,120,135 samples, 0.12%)</title><rect x="213.6" y="149" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="216.60" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;::~vector (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="437" width="1.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1163.87" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,112,554 samples, 0.09%)</title><rect x="586.2" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="589.22" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,195,992 samples, 0.09%)</title><rect x="177.3" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.33" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (52,033,884 samples, 0.18%)</title><rect x="119.4" y="533" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.38" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (86,042,816 samples, 0.29%)</title><rect x="188.2" y="517" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.17" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,111 samples, 0.09%)</title><rect x="190.6" y="277" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.58" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (68,494,951 samples, 0.23%)</title><rect x="594.9" y="645" width="2.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="597.92" y="655.5" ></text>
</g>
<g >
<title>__do_page_fault (33,257,301 samples, 0.11%)</title><rect x="900.4" y="469" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="903.45" y="479.5" ></text>
</g>
<g >
<title>try_to_unmap (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="853" width="1.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1191.64" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,623,323 samples, 0.12%)</title><rect x="188.2" y="389" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.17" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (28,723,853 samples, 0.10%)</title><rect x="124.9" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="127.94" y="367.5" ></text>
</g>
<g >
<title>__vm_munmap (33,623,323 samples, 0.12%)</title><rect x="188.2" y="213" width="1.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="191.17" y="223.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (78,168,113 samples, 0.27%)</title><rect x="118.3" y="581" width="3.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="121.33" y="591.5" ></text>
</g>
<g >
<title>task_work_run (33,693,608 samples, 0.12%)</title><rect x="858.7" y="357" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="861.74" y="367.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,186,177 samples, 0.12%)</title><rect x="76.5" y="341" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="79.51" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (34,140,509 samples, 0.12%)</title><rect x="582.3" y="821" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="585.33" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,640,012 samples, 0.09%)</title><rect x="132.7" y="421" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="135.67" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,209,250 samples, 0.09%)</title><rect x="153.6" y="485" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="156.63" y="495.5" ></text>
</g>
<g >
<title>PyObject_Str (24,776,733 samples, 0.08%)</title><rect x="151.7" y="293" width="1.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="154.66" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (23,918,012 samples, 0.08%)</title><rect x="178.4" y="277" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.39" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (34,139,888 samples, 0.12%)</title><rect x="215.0" y="517" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,914,139 samples, 0.09%)</title><rect x="138.3" y="293" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.25" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;*, std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="421" width="1.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1163.87" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="293" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.77" y="303.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (34,084,795 samples, 0.12%)</title><rect x="226.8" y="965" width="1.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="229.81" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call (18,140,811 samples, 0.06%)</title><rect x="97.2" y="437" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="100.16" y="447.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (102,710,651 samples, 0.35%)</title><rect x="977.4" y="517" width="4.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="980.36" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (27,896,301 samples, 0.10%)</title><rect x="94.7" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.66" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,180,018 samples, 0.09%)</title><rect x="111.4" y="245" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="114.39" y="255.5" ></text>
</g>
<g >
<title>dl_open_worker (33,970,452 samples, 0.12%)</title><rect x="127.2" y="373" width="1.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="130.16" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,260,870 samples, 0.09%)</title><rect x="72.0" y="373" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="75.02" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="101" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="111.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,260,870 samples, 0.09%)</title><rect x="72.0" y="341" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="75.02" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (229,780,785 samples, 0.79%)</title><rect x="171.4" y="725" width="9.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,207,365 samples, 0.09%)</title><rect x="120.4" y="325" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="123.43" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (125,826,532 samples, 0.43%)</title><rect x="180.7" y="677" width="5.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="183.69" y="687.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (6,331,099,151 samples, 21.69%)</title><rect x="608.3" y="501" width="255.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="611.34" y="511.5" >PyObject_VectorcallMethod</text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="351.5" ></text>
</g>
<g >
<title>PyBuffer_Release (34,183,053 samples, 0.12%)</title><rect x="592.2" y="661" width="1.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="595.15" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (141,320,807 samples, 0.48%)</title><rect x="122.8" y="629" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.82" y="639.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_not_relaxed&gt; (102,587,672 samples, 0.35%)</title><rect x="982.9" y="517" width="4.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="985.89" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (182,625,346 samples, 0.63%)</title><rect x="66.7" y="869" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="879.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (34,211,582 samples, 0.12%)</title><rect x="1060.2" y="485" width="1.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1063.21" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (28,723,853 samples, 0.10%)</title><rect x="124.9" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.94" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (230,135,233 samples, 0.79%)</title><rect x="186.8" y="789" width="9.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="189.79" y="799.5" ></text>
</g>
<g >
<title>PyImport_Import (25,086,030 samples, 0.09%)</title><rect x="185.8" y="869" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="188.77" y="879.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,180,018 samples, 0.09%)</title><rect x="111.4" y="597" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="114.39" y="607.5" ></text>
</g>
<g >
<title>__GI_munmap (33,623,323 samples, 0.12%)</title><rect x="188.2" y="277" width="1.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="191.17" y="287.5" ></text>
</g>
<g >
<title>_PyObject_Call (296,586,853 samples, 1.02%)</title><rect x="142.7" y="757" width="12.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="145.70" y="767.5" ></text>
</g>
<g >
<title>_copy_to_user (26,180,018 samples, 0.09%)</title><rect x="111.4" y="165" width="1.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="114.39" y="175.5" ></text>
</g>
<g >
<title>do_anonymous_page (34,244,955 samples, 0.12%)</title><rect x="609.7" y="277" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="612.72" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,150,710 samples, 0.09%)</title><rect x="106.1" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.09" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (52,113,807 samples, 0.18%)</title><rect x="138.3" y="741" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.25" y="751.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,086,030 samples, 0.09%)</title><rect x="185.8" y="309" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="188.77" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (139,612,646 samples, 0.48%)</title><rect x="84.2" y="581" width="5.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.17" y="591.5" ></text>
</g>
<g >
<title>PyObject_GetItem (28,723,853 samples, 0.10%)</title><rect x="124.9" y="469" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="127.94" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,140,509 samples, 0.12%)</title><rect x="582.3" y="789" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="585.33" y="799.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (25,640,012 samples, 0.09%)</title><rect x="132.7" y="453" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="135.67" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,764 samples, 0.09%)</title><rect x="223.9" y="453" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="226.86" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="197" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="207.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="757" width="1.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1191.64" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="565" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="575.5" ></text>
</g>
<g >
<title>_dl_relocate_object (33,970,452 samples, 0.12%)</title><rect x="127.2" y="357" width="1.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="130.16" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,244,955 samples, 0.12%)</title><rect x="609.7" y="309" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="612.72" y="319.5" ></text>
</g>
<g >
<title>Py_FinalizeEx (717,346,546 samples, 2.46%)</title><rect x="554.7" y="933" width="29.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="557.72" y="943.5" >Py..</text>
</g>
<g >
<title>[python3.12] (26,213,712 samples, 0.09%)</title><rect x="587.3" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="590.27" y="463.5" ></text>
</g>
<g >
<title>__do_sys_newstat (26,180,018 samples, 0.09%)</title><rect x="111.4" y="197" width="1.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="114.39" y="207.5" ></text>
</g>
<g >
<title>PyMemoryView_FromMemory (34,226,143 samples, 0.12%)</title><rect x="593.5" y="661" width="1.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="596.54" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,149,751 samples, 0.09%)</title><rect x="137.2" y="789" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.20" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="773" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,326,266 samples, 0.18%)</title><rect x="586.2" y="757" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="589.22" y="767.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (275,784,273 samples, 0.94%)</title><rect x="157.8" y="613" width="11.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="160.84" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (413,439,208 samples, 1.42%)</title><rect x="154.7" y="949" width="16.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (33,571,412 samples, 0.11%)</title><rect x="169.0" y="501" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.98" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (154,194,036 samples, 0.53%)</title><rect x="128.5" y="837" width="6.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="131.53" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (78,477,215 samples, 0.27%)</title><rect x="58.2" y="789" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.17" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (25,914,139 samples, 0.09%)</title><rect x="138.3" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.25" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,307 samples, 0.09%)</title><rect x="65.7" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.66" y="415.5" ></text>
</g>
<g >
<title>handle_mm_fault (25,460,519 samples, 0.09%)</title><rect x="101.4" y="133" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="104.36" y="143.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,623,323 samples, 0.12%)</title><rect x="188.2" y="469" width="1.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="191.17" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,559,354 samples, 0.11%)</title><rect x="218.5" y="677" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="221.48" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (106,910,694 samples, 0.37%)</title><rect x="62.4" y="629" width="4.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="65.40" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (33,882,874 samples, 0.12%)</title><rect x="87.2" y="341" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.16" y="351.5" ></text>
</g>
<g >
<title>[missing.cpython-312-x86_64-linux-gnu.so] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="853" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="104.36" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,149,751 samples, 0.09%)</title><rect x="137.2" y="725" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.20" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (24,041,190 samples, 0.08%)</title><rect x="152.7" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.66" y="319.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (25,460,519 samples, 0.09%)</title><rect x="101.4" y="469" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="104.36" y="479.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (33,987,773 samples, 0.12%)</title><rect x="1028.5" y="453" width="1.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1031.46" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,960 samples, 0.09%)</title><rect x="133.7" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.70" y="335.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,477,215 samples, 0.27%)</title><rect x="58.2" y="517" width="3.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="61.17" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,863 samples, 0.09%)</title><rect x="202.7" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.71" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,552 samples, 0.09%)</title><rect x="61.3" y="341" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="64.34" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (34,282,533 samples, 0.12%)</title><rect x="901.8" y="629" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="904.79" y="639.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (68,520,786 samples, 0.23%)</title><rect x="942.8" y="453" width="2.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="945.83" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,326,266 samples, 0.18%)</title><rect x="586.2" y="565" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="589.22" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,464,634 samples, 0.11%)</title><rect x="100.0" y="261" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.00" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (34,293,118 samples, 0.12%)</title><rect x="1098.8" y="485" width="1.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1101.77" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33,623,323 samples, 0.12%)</title><rect x="188.2" y="261" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="191.17" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (34,223,013 samples, 0.12%)</title><rect x="1076.7" y="597" width="1.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1079.71" y="607.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (170,461,596 samples, 0.58%)</title><rect x="989.8" y="533" width="6.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="992.80" y="543.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (34,285,084 samples, 0.12%)</title><rect x="688.2" y="165" width="1.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="691.16" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (32,932,890 samples, 0.11%)</title><rect x="121.5" y="325" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.49" y="335.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (24,041,190 samples, 0.08%)</title><rect x="152.7" y="277" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="155.66" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="597" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (335,569,928 samples, 1.15%)</title><rect x="157.8" y="661" width="13.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.84" y="671.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,828 samples, 0.09%)</title><rect x="126.1" y="421" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="129.10" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,033,884 samples, 0.18%)</title><rect x="119.4" y="501" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="122.38" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (296,586,853 samples, 1.02%)</title><rect x="142.7" y="741" width="12.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (32,878,788 samples, 0.11%)</title><rect x="179.4" y="277" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.36" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (80,680,478 samples, 0.28%)</title><rect x="192.8" y="501" width="3.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="195.83" y="511.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (3,848,355 samples, 0.01%)</title><rect x="1189.8" y="661" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1192.84" y="671.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,217,192 samples, 0.12%)</title><rect x="1116.7" y="565" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1119.69" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (25,826,519 samples, 0.09%)</title><rect x="119.4" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.38" y="367.5" ></text>
</g>
<g >
<title>BOOL_equal (34,068,126 samples, 0.12%)</title><rect x="228.2" y="933" width="1.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="231.18" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,764 samples, 0.09%)</title><rect x="176.3" y="261" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.27" y="271.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (119,943,099 samples, 0.41%)</title><rect x="89.8" y="453" width="4.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="92.81" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,017,147 samples, 0.09%)</title><rect x="221.7" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="224.75" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (34,090,815 samples, 0.12%)</title><rect x="908.4" y="549" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="911.37" y="559.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (34,139,165 samples, 0.12%)</title><rect x="964.9" y="469" width="1.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="967.91" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (154,194,036 samples, 0.53%)</title><rect x="128.5" y="757" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (25,826,519 samples, 0.09%)</title><rect x="119.4" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.38" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,134,229 samples, 0.09%)</title><rect x="118.3" y="437" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="121.33" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (34,256,998 samples, 0.12%)</title><rect x="1138.8" y="533" width="1.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1141.80" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (189,478,031 samples, 0.65%)</title><rect x="76.5" y="565" width="7.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.51" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (32,932,890 samples, 0.11%)</title><rect x="121.5" y="405" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.49" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (23,918,012 samples, 0.08%)</title><rect x="178.4" y="245" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.39" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (119,943,099 samples, 0.41%)</title><rect x="89.8" y="533" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.81" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,061,992 samples, 0.09%)</title><rect x="60.3" y="389" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="63.29" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,888 samples, 0.09%)</title><rect x="150.6" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.60" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (48,369,314 samples, 0.17%)</title><rect x="203.8" y="453" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="463.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,199,668 samples, 0.09%)</title><rect x="139.3" y="341" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="142.30" y="351.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (61,635,632 samples, 0.21%)</title><rect x="142.7" y="373" width="2.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="145.70" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,834,731 samples, 0.12%)</title><rect x="135.8" y="325" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.83" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,207,498 samples, 0.09%)</title><rect x="62.4" y="581" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="65.40" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,120,817 samples, 0.12%)</title><rect x="186.8" y="597" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="189.79" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (48,375,272 samples, 0.17%)</title><rect x="235.3" y="917" width="2.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="238.30" y="927.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (106,910,694 samples, 0.37%)</title><rect x="62.4" y="709" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="65.40" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,195,992 samples, 0.09%)</title><rect x="177.3" y="341" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="180.33" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (229,780,785 samples, 0.79%)</title><rect x="171.4" y="629" width="9.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="174.40" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,828 samples, 0.09%)</title><rect x="126.1" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.10" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (34,171,141 samples, 0.12%)</title><rect x="907.0" y="645" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="909.99" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,134,229 samples, 0.09%)</title><rect x="118.3" y="389" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.33" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (77,657,873 samples, 0.27%)</title><rect x="69.9" y="533" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.91" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (51,676,354 samples, 0.18%)</title><rect x="92.6" y="309" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.57" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,113,807 samples, 0.18%)</title><rect x="138.3" y="773" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.25" y="783.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (154,194,036 samples, 0.53%)</title><rect x="128.5" y="949" width="6.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="131.53" y="959.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (136,976,757 samples, 0.47%)</title><rect x="970.4" y="517" width="5.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="973.44" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (60,209,080 samples, 0.21%)</title><rect x="134.8" y="869" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.76" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="463.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::top (102,710,651 samples, 0.35%)</title><rect x="977.4" y="533" width="4.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="980.36" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (25,826,519 samples, 0.09%)</title><rect x="119.4" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.38" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (139,612,646 samples, 0.48%)</title><rect x="84.2" y="613" width="5.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="87.17" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (91,763,092 samples, 0.31%)</title><rect x="102.4" y="549" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.39" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (91,763,092 samples, 0.31%)</title><rect x="102.4" y="517" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.39" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (189,478,031 samples, 0.65%)</title><rect x="76.5" y="805" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.51" y="815.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,179,925 samples, 0.09%)</title><rect x="156.8" y="437" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="159.78" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,882,874 samples, 0.12%)</title><rect x="87.2" y="261" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.16" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (86,555,090 samples, 0.30%)</title><rect x="215.0" y="629" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.98" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (32,857,115 samples, 0.11%)</title><rect x="196.1" y="373" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.09" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="693" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="703.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,415,202 samples, 0.18%)</title><rect x="216.4" y="517" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="219.36" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (32,559,354 samples, 0.11%)</title><rect x="218.5" y="597" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="221.48" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (68,275,847 samples, 0.23%)</title><rect x="171.4" y="501" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="511.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (5,018,746 samples, 0.02%)</title><rect x="554.3" y="837" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="557.29" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (18,140,811 samples, 0.06%)</title><rect x="97.2" y="245" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.16" y="255.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (67,767,268 samples, 0.23%)</title><rect x="958.0" y="501" width="2.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="961.02" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (60,209,080 samples, 0.21%)</title><rect x="134.8" y="853" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.76" y="863.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (34,256,998 samples, 0.12%)</title><rect x="1138.8" y="549" width="1.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1141.80" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (91,763,092 samples, 0.31%)</title><rect x="102.4" y="501" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="105.39" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,139,888 samples, 0.12%)</title><rect x="215.0" y="469" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="217.98" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (190,070,692 samples, 0.65%)</title><rect x="196.1" y="741" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.09" y="751.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,084,795 samples, 0.12%)</title><rect x="226.8" y="757" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="229.81" y="767.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, bool&gt;::pair&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, bool, true&gt; (32,689,180 samples, 0.11%)</title><rect x="46.0" y="981" width="1.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="49.01" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,186,177 samples, 0.12%)</title><rect x="76.5" y="357" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.51" y="367.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (34,271,849 samples, 0.12%)</title><rect x="1089.1" y="565" width="1.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1092.13" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,180,018 samples, 0.09%)</title><rect x="111.4" y="789" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="114.39" y="799.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (68,400,819 samples, 0.23%)</title><rect x="1100.2" y="501" width="2.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1103.15" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (174,253,697 samples, 0.60%)</title><rect x="121.5" y="789" width="7.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="124.49" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,207,498 samples, 0.09%)</title><rect x="62.4" y="421" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="65.40" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="933" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (296,586,853 samples, 1.02%)</title><rect x="142.7" y="869" width="12.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="879.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,345,047 samples, 0.18%)</title><rect x="207.7" y="341" width="2.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="210.70" y="351.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,419,493 samples, 0.18%)</title><rect x="189.5" y="357" width="2.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="192.52" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (57,799,046 samples, 0.20%)</title><rect x="180.7" y="325" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="335.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::initialize_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (34,269,764 samples, 0.12%)</title><rect x="923.5" y="549" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="926.50" y="559.5" ></text>
</g>
<g >
<title>advise_stack_range (48,375,272 samples, 0.17%)</title><rect x="235.3" y="965" width="2.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="238.30" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (189,478,031 samples, 0.65%)</title><rect x="76.5" y="677" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.51" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (58,502,848 samples, 0.20%)</title><rect x="116.0" y="661" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="671.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (34,171,141 samples, 0.12%)</title><rect x="907.0" y="533" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="909.99" y="543.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,207,307 samples, 0.09%)</title><rect x="65.7" y="421" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="68.66" y="431.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (68,436,399 samples, 0.23%)</title><rect x="1032.6" y="517" width="2.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1035.60" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,416,674 samples, 0.18%)</title><rect x="122.8" y="309" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="125.82" y="319.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,101,693 samples, 0.12%)</title><rect x="95.8" y="661" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="98.78" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (275,784,273 samples, 0.94%)</title><rect x="157.8" y="517" width="11.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="160.84" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (34,167,112 samples, 0.12%)</title><rect x="913.8" y="533" width="1.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="916.82" y="543.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT::optimize_for_M_R_fixed_step (6,146,654,013 samples, 21.05%)</title><rect x="912.4" y="645" width="248.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="915.43" y="655.5" >diff_Nexullance_IT::optimize_for_..</text>
</g>
<g >
<title>do_syscall_64 (85,833,913 samples, 0.29%)</title><rect x="163.4" y="213" width="3.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="166.41" y="223.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,721,139 samples, 0.09%)</title><rect x="167.9" y="261" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="170.94" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="709" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.77" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (48,355,673 samples, 0.17%)</title><rect x="219.8" y="293" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="222.79" y="303.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,571,412 samples, 0.11%)</title><rect x="169.0" y="613" width="1.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="171.98" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (33,834,731 samples, 0.12%)</title><rect x="135.8" y="421" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.83" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,149,751 samples, 0.09%)</title><rect x="137.2" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.20" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="773" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.77" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (102,344,064 samples, 0.35%)</title><rect x="128.5" y="565" width="4.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.53" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,247 samples, 0.09%)</title><rect x="175.2" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.21" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,890 samples, 0.09%)</title><rect x="222.8" y="485" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="225.80" y="495.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,814 samples, 0.09%)</title><rect x="146.5" y="325" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="149.49" y="335.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,138,992 samples, 0.12%)</title><rect x="116.9" y="469" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="119.95" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (182,625,346 samples, 0.63%)</title><rect x="66.7" y="853" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,701 samples, 0.09%)</title><rect x="195.0" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="198.03" y="447.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (29,925,438 samples, 0.10%)</title><rect x="193.8" y="357" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="196.82" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (29,925,438 samples, 0.10%)</title><rect x="193.8" y="437" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="196.82" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,857,115 samples, 0.11%)</title><rect x="196.1" y="437" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="199.09" y="447.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (68,313,728 samples, 0.23%)</title><rect x="993.9" y="517" width="2.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="996.93" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="293" width="1.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1163.87" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (18,140,811 samples, 0.06%)</title><rect x="97.2" y="325" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.16" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (52,331,898 samples, 0.18%)</title><rect x="197.4" y="405" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.42" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,120,817 samples, 0.12%)</title><rect x="186.8" y="293" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="189.79" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (68,255,041 samples, 0.23%)</title><rect x="908.4" y="677" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="911.37" y="687.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (33,987,773 samples, 0.12%)</title><rect x="1028.5" y="485" width="1.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1031.46" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,914,139 samples, 0.09%)</title><rect x="138.3" y="469" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="141.25" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,137,131 samples, 0.12%)</title><rect x="142.7" y="277" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (33,571,412 samples, 0.11%)</title><rect x="169.0" y="85" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="171.98" y="95.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,382 samples, 0.09%)</title><rect x="189.5" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.52" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,764 samples, 0.09%)</title><rect x="176.3" y="325" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.27" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,211,764 samples, 0.09%)</title><rect x="223.9" y="853" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="226.86" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,888 samples, 0.09%)</title><rect x="150.6" y="261" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.60" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (34,255,732 samples, 0.12%)</title><rect x="945.6" y="485" width="1.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="948.60" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (58,502,848 samples, 0.20%)</title><rect x="116.0" y="485" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.96" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="885" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="895.5" ></text>
</g>
<g >
<title>__GI___libc_read (34,285,084 samples, 0.12%)</title><rect x="688.2" y="325" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="691.16" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (861,652,275 samples, 2.95%)</title><rect x="865.6" y="469" width="34.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="868.62" y="479.5" >_P..</text>
</g>
<g >
<title>_PyObject_Call (33,162,148 samples, 0.11%)</title><rect x="140.4" y="517" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="143.36" y="527.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (33,970,452 samples, 0.12%)</title><rect x="127.2" y="437" width="1.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="130.16" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (139,612,646 samples, 0.48%)</title><rect x="84.2" y="469" width="5.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="87.17" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (80,703,196 samples, 0.28%)</title><rect x="63.5" y="549" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.46" y="559.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (102,735,322 samples, 0.35%)</title><rect x="919.3" y="597" width="4.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="922.34" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,180,018 samples, 0.09%)</title><rect x="111.4" y="501" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="114.39" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,697 samples, 0.09%)</title><rect x="64.6" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.60" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,587 samples, 0.09%)</title><rect x="59.2" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.23" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (250,063,134 samples, 0.86%)</title><rect x="157.8" y="405" width="10.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="160.84" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (52,113,807 samples, 0.18%)</title><rect x="138.3" y="725" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.25" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (104,185,570 samples, 0.36%)</title><rect x="68.8" y="597" width="4.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="71.83" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (250,063,134 samples, 0.86%)</title><rect x="157.8" y="325" width="10.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.84" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="197" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,760,523 samples, 0.11%)</title><rect x="88.5" y="293" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="91.52" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="869" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="879.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (133,117,246 samples, 0.46%)</title><rect x="61.3" y="917" width="5.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="64.34" y="927.5" ></text>
</g>
<g >
<title>__do_sys_madvise (48,375,272 samples, 0.17%)</title><rect x="235.3" y="885" width="2.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="238.30" y="895.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (190,070,692 samples, 0.65%)</title><rect x="196.1" y="581" width="7.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="199.09" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (34,139,888 samples, 0.12%)</title><rect x="215.0" y="293" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="437" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="447.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,649 samples, 0.09%)</title><rect x="83.1" y="261" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="86.11" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (14,313,598,062 samples, 49.03%)</title><rect x="583.7" y="885" width="578.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="586.71" y="895.5" >[python3.12]</text>
</g>
<g >
<title>__x64_sys_brk (34,256,533 samples, 0.12%)</title><rect x="611.1" y="277" width="1.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="614.10" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (14,313,598,062 samples, 49.03%)</title><rect x="583.7" y="837" width="578.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="586.71" y="847.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (239,510,121 samples, 0.82%)</title><rect x="1029.8" y="533" width="9.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1032.84" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (51,849,972 samples, 0.18%)</title><rect x="132.7" y="533" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="135.67" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,896,301 samples, 0.10%)</title><rect x="94.7" y="421" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.66" y="431.5" ></text>
</g>
<g >
<title>may_open.isra.0 (27,498,501 samples, 0.09%)</title><rect x="144.1" y="165" width="1.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="147.08" y="175.5" ></text>
</g>
<g >
<title>_PyObject_Call (86,042,816 samples, 0.29%)</title><rect x="188.2" y="677" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="191.17" y="687.5" ></text>
</g>
<g >
<title>PyDataMem_GetHandler (34,090,815 samples, 0.12%)</title><rect x="908.4" y="613" width="1.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="911.37" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (61,635,632 samples, 0.21%)</title><rect x="142.7" y="325" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (275,784,273 samples, 0.94%)</title><rect x="157.8" y="549" width="11.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="160.84" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,857,115 samples, 0.11%)</title><rect x="196.1" y="389" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.09" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (68,439,154 samples, 0.23%)</title><rect x="920.7" y="581" width="2.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="923.73" y="591.5" ></text>
</g>
<g >
<title>LONG_multiply (34,068,725 samples, 0.12%)</title><rect x="229.6" y="933" width="1.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="232.56" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,896,301 samples, 0.10%)</title><rect x="94.7" y="549" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.66" y="559.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,205,863 samples, 0.09%)</title><rect x="202.7" y="341" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="205.71" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (52,345,047 samples, 0.18%)</title><rect x="207.7" y="389" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.70" y="399.5" ></text>
</g>
<g >
<title>PyObject_IsTrue (26,211,626 samples, 0.09%)</title><rect x="217.4" y="277" width="1.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="220.42" y="287.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,374,349 samples, 0.09%)</title><rect x="134.8" y="357" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="137.76" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,460,519 samples, 0.09%)</title><rect x="101.4" y="549" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="104.36" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,477,215 samples, 0.27%)</title><rect x="58.2" y="597" width="3.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="61.17" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,213,712 samples, 0.09%)</title><rect x="587.3" y="421" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="590.27" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_futex (7,992,475 samples, 0.03%)</title><rect x="1177.3" y="965" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1180.33" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (78,477,215 samples, 0.27%)</title><rect x="58.2" y="821" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.17" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="213" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (7,952,093,388 samples, 27.24%)</title><rect x="589.7" y="789" width="321.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.71" y="799.5" >[python3.12]</text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (33,822,668 samples, 0.12%)</title><rect x="1111.2" y="485" width="1.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1114.21" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (133,117,246 samples, 0.46%)</title><rect x="61.3" y="789" width="5.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="64.34" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,649 samples, 0.09%)</title><rect x="83.1" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.11" y="431.5" ></text>
</g>
<g >
<title>sysmalloc (128,910,502 samples, 0.44%)</title><rect x="611.1" y="373" width="5.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="614.10" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,649 samples, 0.09%)</title><rect x="83.1" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.11" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (17,813,920 samples, 0.06%)</title><rect x="84.2" y="261" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="271.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,209,080 samples, 0.21%)</title><rect x="134.8" y="741" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="137.76" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (119,943,099 samples, 0.41%)</title><rect x="89.8" y="501" width="4.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="92.81" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (34,140,509 samples, 0.12%)</title><rect x="582.3" y="805" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="585.33" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (104,264,939 samples, 0.36%)</title><rect x="159.2" y="277" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.20" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,208,558 samples, 0.09%)</title><rect x="66.7" y="789" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="69.72" y="799.5" ></text>
</g>
<g >
<title>PyTuple_New (26,208,970 samples, 0.09%)</title><rect x="203.8" y="357" width="1.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="206.77" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (190,070,692 samples, 0.65%)</title><rect x="196.1" y="773" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.09" y="783.5" ></text>
</g>
<g >
<title>_PyObject_Call (136,670,961 samples, 0.47%)</title><rect x="116.0" y="837" width="5.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="118.96" y="847.5" ></text>
</g>
<g >
<title>elf_dynamic_do_Rela (33,571,412 samples, 0.11%)</title><rect x="169.0" y="181" width="1.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="171.98" y="191.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (33,571,412 samples, 0.11%)</title><rect x="169.0" y="485" width="1.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="171.98" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (52,331,898 samples, 0.18%)</title><rect x="197.4" y="421" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.42" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (48,375,272 samples, 0.17%)</title><rect x="235.3" y="933" width="2.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="238.30" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (190,070,692 samples, 0.65%)</title><rect x="196.1" y="709" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.09" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,150,710 samples, 0.09%)</title><rect x="106.1" y="293" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="109.09" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,150,710 samples, 0.09%)</title><rect x="106.1" y="469" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="109.09" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (17,813,920 samples, 0.06%)</title><rect x="84.2" y="213" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (32,559,354 samples, 0.11%)</title><rect x="218.5" y="501" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="221.48" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (32,559,354 samples, 0.11%)</title><rect x="218.5" y="341" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="221.48" y="351.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT::diff_Nexullance_IT (32,227,910 samples, 0.11%)</title><rect x="911.1" y="661" width="1.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="914.13" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,101,693 samples, 0.12%)</title><rect x="95.8" y="389" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.78" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,863 samples, 0.09%)</title><rect x="73.0" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.04" y="559.5" ></text>
</g>
<g >
<title>PyObject_Dir (26,208,821 samples, 0.09%)</title><rect x="97.9" y="581" width="1.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="100.90" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (48,817,923 samples, 0.17%)</title><rect x="151.7" y="485" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.66" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (102,531,015 samples, 0.35%)</title><rect x="175.2" y="437" width="4.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.21" y="447.5" ></text>
</g>
<g >
<title>do_page_fault (34,244,955 samples, 0.12%)</title><rect x="609.7" y="357" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="612.72" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (104,881,679 samples, 0.36%)</title><rect x="199.5" y="485" width="4.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="202.53" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (6,331,099,151 samples, 21.69%)</title><rect x="608.3" y="469" width="255.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="611.34" y="479.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (25,918,556 samples, 0.09%)</title><rect x="77.9" y="357" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="80.89" y="367.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (18,140,811 samples, 0.06%)</title><rect x="97.2" y="213" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="100.16" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (57,799,046 samples, 0.20%)</title><rect x="180.7" y="437" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (139,612,646 samples, 0.48%)</title><rect x="84.2" y="549" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="559.5" ></text>
</g>
<g >
<title>rmap_walk_anon (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="821" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1191.64" y="831.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (68,371,841 samples, 0.23%)</title><rect x="1049.2" y="517" width="2.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1052.19" y="527.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4,706,099 samples, 0.02%)</title><rect x="235.0" y="885" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="238.01" y="895.5" ></text>
</g>
<g >
<title>__vfs_read (59,635,299 samples, 0.20%)</title><rect x="163.4" y="149" width="2.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="166.41" y="159.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="495.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (59,468,639 samples, 0.20%)</title><rect x="211.2" y="341" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="214.20" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (29,291,122 samples, 0.10%)</title><rect x="191.6" y="533" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="194.64" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,291,122 samples, 0.10%)</title><rect x="191.6" y="517" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.64" y="527.5" ></text>
</g>
<g >
<title>PyIter_Next (34,138,992 samples, 0.12%)</title><rect x="116.9" y="389" width="1.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="119.95" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,721,139 samples, 0.09%)</title><rect x="167.9" y="325" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="170.94" y="335.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator++ (34,180,988 samples, 0.12%)</title><rect x="915.2" y="629" width="1.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="918.20" y="639.5" ></text>
</g>
<g >
<title>new_sync_read (34,285,084 samples, 0.12%)</title><rect x="688.2" y="213" width="1.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="691.16" y="223.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (174,253,697 samples, 0.60%)</title><rect x="121.5" y="821" width="7.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="124.49" y="831.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,199,668 samples, 0.09%)</title><rect x="139.3" y="437" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="142.30" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,180,018 samples, 0.09%)</title><rect x="111.4" y="757" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="114.39" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,477,215 samples, 0.27%)</title><rect x="58.2" y="565" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="61.17" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (154,194,036 samples, 0.53%)</title><rect x="128.5" y="869" width="6.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="131.53" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (129,080,205 samples, 0.44%)</title><rect x="77.9" y="469" width="5.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="80.89" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,559,354 samples, 0.11%)</title><rect x="218.5" y="453" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="221.48" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,552 samples, 0.09%)</title><rect x="61.3" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="623.5" ></text>
</g>
<g >
<title>__GI___libc_read (34,285,084 samples, 0.12%)</title><rect x="688.2" y="341" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="691.16" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,477,215 samples, 0.27%)</title><rect x="58.2" y="581" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="61.17" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,668 samples, 0.09%)</title><rect x="139.3" y="261" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.30" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long*&gt;::allocate (33,688,686 samples, 0.12%)</title><rect x="1085.0" y="517" width="1.4" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="1088.01" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (34,293,118 samples, 0.12%)</title><rect x="1098.8" y="501" width="1.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1101.77" y="511.5" ></text>
</g>
<g >
<title>__do_page_fault (47,489,663 samples, 0.16%)</title><rect x="79.9" y="261" width="2.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="82.94" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock (48,375,272 samples, 0.17%)</title><rect x="235.3" y="805" width="2.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="238.30" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (102,344,064 samples, 0.35%)</title><rect x="128.5" y="469" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (120,056,685 samples, 0.41%)</title><rect x="142.7" y="533" width="4.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.70" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="725" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (33,757,590 samples, 0.12%)</title><rect x="1016.1" y="405" width="1.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1019.06" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_put_node (34,222,172 samples, 0.12%)</title><rect x="1154.0" y="517" width="1.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1156.96" y="527.5" ></text>
</g>
<g >
<title>PyDict_Copy (29,925,438 samples, 0.10%)</title><rect x="193.8" y="213" width="1.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="196.82" y="223.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,162,148 samples, 0.11%)</title><rect x="140.4" y="645" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="143.36" y="655.5" ></text>
</g>
<g >
<title>handle_mm_fault (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="933" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1191.64" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (243,159,198 samples, 0.83%)</title><rect x="203.8" y="757" width="9.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="767.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,120,817 samples, 0.12%)</title><rect x="186.8" y="309" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="189.79" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (18,140,811 samples, 0.06%)</title><rect x="97.2" y="693" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.16" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (34,098,899 samples, 0.12%)</title><rect x="1129.1" y="581" width="1.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1132.12" y="591.5" ></text>
</g>
<g >
<title>exit_mmap (168,744,858 samples, 0.58%)</title><rect x="1170.5" y="901" width="6.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1173.51" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,636 samples, 0.09%)</title><rect x="58.2" y="325" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="61.17" y="335.5" ></text>
</g>
<g >
<title>schedule (7,411,120 samples, 0.03%)</title><rect x="1177.4" y="901" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1180.36" y="911.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,101,693 samples, 0.12%)</title><rect x="95.8" y="597" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.78" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,207,365 samples, 0.09%)</title><rect x="120.4" y="405" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="123.43" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (25,640,012 samples, 0.09%)</title><rect x="132.7" y="277" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.67" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (102,531,015 samples, 0.35%)</title><rect x="175.2" y="469" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.21" y="479.5" ></text>
</g>
<g >
<title>__handle_mm_fault (26,210,416 samples, 0.09%)</title><rect x="166.9" y="197" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="169.88" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (230,135,233 samples, 0.79%)</title><rect x="186.8" y="821" width="9.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.79" y="831.5" ></text>
</g>
<g >
<title>__do_page_fault (604,114,541 samples, 2.07%)</title><rect x="830.5" y="373" width="24.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="833.54" y="383.5" >_..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,180,018 samples, 0.09%)</title><rect x="111.4" y="661" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="114.39" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_destroy_node (33,636,338 samples, 0.12%)</title><rect x="1152.6" y="533" width="1.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1155.60" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (68,460,150 samples, 0.23%)</title><rect x="1025.7" y="485" width="2.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1028.70" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,397,003 samples, 0.18%)</title><rect x="69.9" y="421" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="72.91" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (59,468,639 samples, 0.20%)</title><rect x="211.2" y="469" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.20" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,415,202 samples, 0.18%)</title><rect x="216.4" y="389" width="2.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="219.36" y="399.5" ></text>
</g>
<g >
<title>do_page_fault (102,514,763 samples, 0.35%)</title><rect x="692.3" y="405" width="4.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="695.32" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (58,502,848 samples, 0.20%)</title><rect x="116.0" y="581" width="2.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="118.96" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,120,342 samples, 0.12%)</title><rect x="103.7" y="309" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="106.67" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,171,997 samples, 0.09%)</title><rect x="212.5" y="229" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.54" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (610,828,580 samples, 2.09%)</title><rect x="171.4" y="949" width="24.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="959.5" >[..</text>
</g>
<g >
<title>[python3.12] (29,291,122 samples, 0.10%)</title><rect x="191.6" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.64" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,134,229 samples, 0.09%)</title><rect x="118.3" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.33" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (125,826,532 samples, 0.43%)</title><rect x="180.7" y="597" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (34,292,325 samples, 0.12%)</title><rect x="978.7" y="469" width="1.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="981.74" y="479.5" ></text>
</g>
<g >
<title>Py_BytesMain (15,147,881,971 samples, 51.89%)</title><rect x="554.7" y="965" width="612.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="557.72" y="975.5" >Py_BytesMain</text>
</g>
<g >
<title>_PyObject_Call (86,555,090 samples, 0.30%)</title><rect x="215.0" y="821" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="217.98" y="831.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (17,813,920 samples, 0.06%)</title><rect x="84.2" y="325" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="87.17" y="335.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,211,649 samples, 0.09%)</title><rect x="83.1" y="549" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="86.11" y="559.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator!= (34,249,825 samples, 0.12%)</title><rect x="912.4" y="629" width="1.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="915.43" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (65,643,397 samples, 0.22%)</title><rect x="87.2" y="389" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.16" y="399.5" ></text>
</g>
<g >
<title>_dl_open (33,571,412 samples, 0.11%)</title><rect x="169.0" y="245" width="1.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="171.98" y="255.5" ></text>
</g>
<g >
<title>PyObject_Malloc (34,282,533 samples, 0.12%)</title><rect x="901.8" y="597" width="1.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="904.79" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (190,070,692 samples, 0.65%)</title><rect x="196.1" y="805" width="7.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.09" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,120,135 samples, 0.12%)</title><rect x="213.6" y="357" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="216.60" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (125,826,532 samples, 0.43%)</title><rect x="180.7" y="821" width="5.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="183.69" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,112,554 samples, 0.09%)</title><rect x="586.2" y="405" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="589.22" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,764 samples, 0.09%)</title><rect x="223.9" y="373" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="226.86" y="383.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,890 samples, 0.09%)</title><rect x="222.8" y="549" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="225.80" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (18,140,811 samples, 0.06%)</title><rect x="97.2" y="661" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.16" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="469" width="1.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1163.87" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (57,799,046 samples, 0.20%)</title><rect x="180.7" y="389" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (229,780,785 samples, 0.79%)</title><rect x="171.4" y="677" width="9.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="174.40" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (196,548,144 samples, 0.67%)</title><rect x="102.4" y="869" width="7.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.39" y="879.5" ></text>
</g>
<g >
<title>alloc_pages_vma (34,272,580 samples, 0.12%)</title><rect x="614.9" y="245" width="1.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="617.93" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (102,344,064 samples, 0.35%)</title><rect x="128.5" y="405" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="415.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,250 samples, 0.09%)</title><rect x="153.6" y="629" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="156.63" y="639.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,017,147 samples, 0.09%)</title><rect x="221.7" y="373" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="224.75" y="383.5" ></text>
</g>
<g >
<title>boost::iterator_range_detail::iterator_range_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::iterators::random_access_traversal_tag&gt;::size (68,348,330 samples, 0.23%)</title><rect x="1078.1" y="597" width="2.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1081.09" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (25,918,556 samples, 0.09%)</title><rect x="77.9" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.89" y="351.5" ></text>
</g>
<g >
<title>__Pyx_PyType_Ready (49,522,514 samples, 0.17%)</title><rect x="148.6" y="325" width="2.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="151.59" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;::~pair (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="357" width="1.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1163.87" y="367.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (3,910,130 samples, 0.01%)</title><rect x="1177.4" y="853" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1180.41" y="863.5" ></text>
</g>
<g >
<title>_PyObject_Call (196,548,144 samples, 0.67%)</title><rect x="102.4" y="789" width="7.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="105.39" y="799.5" ></text>
</g>
<g >
<title>PyImport_Import (25,086,030 samples, 0.09%)</title><rect x="185.8" y="629" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="188.77" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,960,916 samples, 0.10%)</title><rect x="85.9" y="421" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.94" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,209,080 samples, 0.21%)</title><rect x="134.8" y="565" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="137.76" y="575.5" ></text>
</g>
<g >
<title>elf_machine_rela_relative (26,209,701 samples, 0.09%)</title><rect x="195.0" y="261" width="1.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="198.03" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (57,799,046 samples, 0.20%)</title><rect x="180.7" y="405" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,374,349 samples, 0.09%)</title><rect x="134.8" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.76" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (31,760,523 samples, 0.11%)</title><rect x="88.5" y="309" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.52" y="319.5" ></text>
</g>
<g >
<title>pagecache_get_page (26,112,043 samples, 0.09%)</title><rect x="164.8" y="69" width="1.0" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="167.77" y="79.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,214,243 samples, 0.09%)</title><rect x="170.3" y="389" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="173.34" y="399.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (32,227,910 samples, 0.11%)</title><rect x="911.1" y="549" width="1.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="914.13" y="559.5" ></text>
</g>
<g >
<title>PySequence_Tuple (24,041,190 samples, 0.08%)</title><rect x="152.7" y="325" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="155.66" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,162,148 samples, 0.11%)</title><rect x="140.4" y="453" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.36" y="463.5" ></text>
</g>
<g >
<title>do_page_fault (26,136,258 samples, 0.09%)</title><rect x="198.5" y="293" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="201.48" y="303.5" ></text>
</g>
<g >
<title>__do_page_fault (34,151,016 samples, 0.12%)</title><rect x="91.2" y="197" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="94.19" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,692 samples, 0.09%)</title><rect x="108.2" y="245" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.21" y="255.5" ></text>
</g>
<g >
<title>PyObject_Free (34,179,984 samples, 0.12%)</title><rect x="560.2" y="885" width="1.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="563.23" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,017,147 samples, 0.09%)</title><rect x="221.7" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="224.75" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (74,372,820 samples, 0.25%)</title><rect x="219.8" y="485" width="3.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="222.79" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (139,612,646 samples, 0.48%)</title><rect x="84.2" y="629" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (219,699,154 samples, 0.75%)</title><rect x="215.0" y="901" width="8.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="217.98" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (34,101,693 samples, 0.12%)</title><rect x="95.8" y="581" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.78" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (190,070,692 samples, 0.65%)</title><rect x="196.1" y="837" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.09" y="847.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (34,179,984 samples, 0.12%)</title><rect x="560.2" y="693" width="1.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="563.23" y="703.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,203,576 samples, 0.09%)</title><rect x="216.4" y="277" width="1.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="219.36" y="287.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,477,215 samples, 0.27%)</title><rect x="58.2" y="869" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="61.17" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25,918,556 samples, 0.09%)</title><rect x="77.9" y="261" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="80.89" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,552 samples, 0.09%)</title><rect x="61.3" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="303.5" ></text>
</g>
<g >
<title>__sched_text_start (5,018,746 samples, 0.02%)</title><rect x="554.3" y="885" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="557.29" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (32,207,239 samples, 0.11%)</title><rect x="145.2" y="293" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="148.19" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="805" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (25,961,501 samples, 0.09%)</title><rect x="99.0" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.95" y="367.5" ></text>
</g>
<g >
<title>unmap_region (34,179,984 samples, 0.12%)</title><rect x="560.2" y="773" width="1.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="563.23" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,326,266 samples, 0.18%)</title><rect x="586.2" y="789" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="589.22" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,623,323 samples, 0.12%)</title><rect x="188.2" y="453" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.17" y="463.5" ></text>
</g>
<g >
<title>__do_page_fault (22,160,344 samples, 0.08%)</title><rect x="204.8" y="277" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="207.83" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,809,451 samples, 0.11%)</title><rect x="102.4" y="341" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.39" y="351.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (68,464,166 samples, 0.23%)</title><rect x="1010.5" y="469" width="2.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1013.53" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,250 samples, 0.09%)</title><rect x="153.6" y="453" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="156.63" y="463.5" ></text>
</g>
<g >
<title>PyImport_Import (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="837" width="4.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1165.25" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (109,971,600 samples, 0.38%)</title><rect x="191.6" y="597" width="4.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.64" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.77" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,649 samples, 0.09%)</title><rect x="83.1" y="341" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="86.11" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,243 samples, 0.09%)</title><rect x="170.3" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.34" y="511.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (34,283,429 samples, 0.12%)</title><rect x="1080.9" y="613" width="1.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1083.86" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,150,710 samples, 0.09%)</title><rect x="106.1" y="501" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="109.09" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_drop_node (33,636,338 samples, 0.12%)</title><rect x="1152.6" y="549" width="1.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1155.60" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="591.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (68,520,786 samples, 0.23%)</title><rect x="942.8" y="437" width="2.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="945.83" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (34,174,261 samples, 0.12%)</title><rect x="937.3" y="501" width="1.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="940.30" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (57,799,046 samples, 0.20%)</title><rect x="180.7" y="501" width="2.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="183.69" y="511.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (17,813,920 samples, 0.06%)</title><rect x="84.2" y="421" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="87.17" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,112,554 samples, 0.09%)</title><rect x="586.2" y="389" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="589.22" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,649 samples, 0.09%)</title><rect x="83.1" y="245" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="86.11" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (100,584,710 samples, 0.34%)</title><rect x="219.8" y="613" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="222.79" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,185,570 samples, 0.36%)</title><rect x="68.8" y="549" width="4.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="71.83" y="559.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,151,016 samples, 0.12%)</title><rect x="91.2" y="165" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="94.19" y="175.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (111,425,706 samples, 0.38%)</title><rect x="137.2" y="965" width="4.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="140.20" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (34,177,262 samples, 0.12%)</title><rect x="1158.1" y="549" width="1.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1161.11" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::deallocate (34,222,172 samples, 0.12%)</title><rect x="1154.0" y="485" width="1.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1156.96" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (74,372,820 samples, 0.25%)</title><rect x="219.8" y="501" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="222.79" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (32,207,239 samples, 0.11%)</title><rect x="145.2" y="277" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="148.19" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,932,890 samples, 0.11%)</title><rect x="121.5" y="581" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="124.49" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="165" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="175.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,120,135 samples, 0.12%)</title><rect x="213.6" y="597" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="216.60" y="607.5" ></text>
</g>
<g >
<title>native_write_msr (2,747,910 samples, 0.01%)</title><rect x="1177.4" y="789" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1180.45" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (119,943,099 samples, 0.41%)</title><rect x="89.8" y="389" width="4.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="92.81" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,498 samples, 0.09%)</title><rect x="62.4" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.40" y="367.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (67,577,117 samples, 0.23%)</title><rect x="1071.3" y="565" width="2.7" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1074.28" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (32,559,354 samples, 0.11%)</title><rect x="218.5" y="613" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="221.48" y="623.5" ></text>
</g>
<g >
<title>__memset_erms (26,194,413 samples, 0.09%)</title><rect x="84.9" y="309" width="1.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="87.89" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (119,943,099 samples, 0.41%)</title><rect x="89.8" y="357" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.81" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,828 samples, 0.09%)</title><rect x="126.1" y="261" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="129.10" y="271.5" ></text>
</g>
<g >
<title>__do_page_fault (34,194,760 samples, 0.12%)</title><rect x="607.0" y="421" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="609.96" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="277" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (14,165,082,852 samples, 48.52%)</title><rect x="589.7" y="805" width="572.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.71" y="815.5" >[python3.12]</text>
</g>
<g >
<title>_PyFunction_Vectorcall (174,253,697 samples, 0.60%)</title><rect x="121.5" y="757" width="7.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="124.49" y="767.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (33,688,686 samples, 0.12%)</title><rect x="1085.0" y="485" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1088.01" y="495.5" ></text>
</g>
<g >
<title>PyDict_DelItem (34,203,747 samples, 0.12%)</title><rect x="580.9" y="789" width="1.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="583.95" y="799.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (18,140,811 samples, 0.06%)</title><rect x="97.2" y="533" width="0.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="100.16" y="543.5" ></text>
</g>
<g >
<title>do_page_fault (33,571,412 samples, 0.11%)</title><rect x="169.0" y="133" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="171.98" y="143.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (109,971,600 samples, 0.38%)</title><rect x="191.6" y="693" width="4.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="194.64" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,961,501 samples, 0.09%)</title><rect x="99.0" y="661" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="101.95" y="671.5" ></text>
</g>
<g >
<title>page_fault (34,151,016 samples, 0.12%)</title><rect x="91.2" y="229" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="94.19" y="239.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,961,501 samples, 0.09%)</title><rect x="99.0" y="629" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.95" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (28,290,192 samples, 0.10%)</title><rect x="63.5" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.46" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,120,817 samples, 0.12%)</title><rect x="186.8" y="629" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="189.79" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (196,548,144 samples, 0.67%)</title><rect x="102.4" y="709" width="7.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="105.39" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28,290,192 samples, 0.10%)</title><rect x="63.5" y="309" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="66.46" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="501" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (77,869,280 samples, 0.27%)</title><rect x="154.7" y="661" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="671.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (34,211,880 samples, 0.12%)</title><rect x="695.1" y="293" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="698.08" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,821 samples, 0.09%)</title><rect x="97.9" y="709" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.90" y="719.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (67,903,104 samples, 0.23%)</title><rect x="1014.7" y="485" width="2.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1017.68" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (341,717,752 samples, 1.17%)</title><rect x="568.5" y="853" width="13.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="571.52" y="863.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (182,625,346 samples, 0.63%)</title><rect x="66.7" y="837" width="7.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="69.72" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (48,895,588 samples, 0.17%)</title><rect x="205.7" y="325" width="2.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="208.73" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (120,163,633 samples, 0.41%)</title><rect x="186.8" y="725" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.79" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_erase (67,858,510 samples, 0.23%)</title><rect x="1152.6" y="581" width="2.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1155.60" y="591.5" ></text>
</g>
<g >
<title>__GI___default_morecore (94,637,922 samples, 0.32%)</title><rect x="611.1" y="357" width="3.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="614.10" y="367.5" ></text>
</g>
<g >
<title>__GI___clone (7,915,986,227 samples, 27.11%)</title><rect x="234.8" y="997" width="319.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="237.76" y="1007.5" >__GI___clone</text>
</g>
<g >
<title>[python3.12] (34,140,509 samples, 0.12%)</title><rect x="582.3" y="773" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="585.33" y="783.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch2&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (3,553,746,928 samples, 12.17%)</title><rect x="923.5" y="581" width="143.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="926.50" y="591.5" >boost::detail::dij..</text>
</g>
<g >
<title>[python3.12] (26,207,365 samples, 0.09%)</title><rect x="120.4" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.43" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::~_Rb_tree (67,858,510 samples, 0.23%)</title><rect x="1152.6" y="613" width="2.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1155.60" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (120,056,685 samples, 0.41%)</title><rect x="142.7" y="485" width="4.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.70" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (230,135,233 samples, 0.79%)</title><rect x="186.8" y="805" width="9.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.79" y="815.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (59,635,299 samples, 0.20%)</title><rect x="163.4" y="85" width="2.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="166.41" y="95.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (34,278,120 samples, 0.12%)</title><rect x="1082.2" y="613" width="1.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1085.24" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (189,478,031 samples, 0.65%)</title><rect x="76.5" y="613" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.51" y="623.5" ></text>
</g>
<g >
<title>get_page_from_freelist (34,272,580 samples, 0.12%)</title><rect x="614.9" y="213" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="617.93" y="223.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,857,115 samples, 0.11%)</title><rect x="196.1" y="517" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.09" y="527.5" ></text>
</g>
<g >
<title>task_numa_work (33,693,608 samples, 0.12%)</title><rect x="858.7" y="341" width="1.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="861.74" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (73,969,249 samples, 0.25%)</title><rect x="84.2" y="453" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (34,179,984 samples, 0.12%)</title><rect x="560.2" y="821" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="563.23" y="831.5" ></text>
</g>
<g >
<title>task_work_run (19,219,567 samples, 0.07%)</title><rect x="1167.0" y="933" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1169.98" y="943.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (34,171,141 samples, 0.12%)</title><rect x="907.0" y="613" width="1.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="909.99" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,961,501 samples, 0.09%)</title><rect x="99.0" y="469" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.95" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (24,041,190 samples, 0.08%)</title><rect x="152.7" y="229" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="155.66" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,113,807 samples, 0.18%)</title><rect x="138.3" y="693" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.25" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,460,519 samples, 0.09%)</title><rect x="101.4" y="693" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="104.36" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (34,271,849 samples, 0.12%)</title><rect x="1089.1" y="501" width="1.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1092.13" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (34,145,840 samples, 0.12%)</title><rect x="588.3" y="741" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="591.33" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (34,138,992 samples, 0.12%)</title><rect x="116.9" y="309" width="1.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="119.95" y="319.5" ></text>
</g>
<g >
<title>futex_wait (7,992,475 samples, 0.03%)</title><rect x="1177.3" y="933" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1180.33" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (100,584,710 samples, 0.34%)</title><rect x="219.8" y="677" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="222.79" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,243 samples, 0.09%)</title><rect x="170.3" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.34" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,180,018 samples, 0.09%)</title><rect x="111.4" y="533" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="114.39" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,559,354 samples, 0.11%)</title><rect x="218.5" y="581" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="221.48" y="591.5" ></text>
</g>
<g >
<title>vfs_read (34,285,084 samples, 0.12%)</title><rect x="688.2" y="245" width="1.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="691.16" y="255.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (25,961,501 samples, 0.09%)</title><rect x="99.0" y="549" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="101.95" y="559.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (68,400,819 samples, 0.23%)</title><rect x="1100.2" y="517" width="2.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1103.15" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;float&gt;::~allocator (34,188,485 samples, 0.12%)</title><rect x="1067.1" y="581" width="1.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1070.14" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,095,135 samples, 0.09%)</title><rect x="174.2" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.16" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (51,849,972 samples, 0.18%)</title><rect x="132.7" y="485" width="2.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="135.67" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (100,584,710 samples, 0.34%)</title><rect x="219.8" y="565" width="4.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="222.79" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,162,148 samples, 0.11%)</title><rect x="140.4" y="469" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="143.36" y="479.5" ></text>
</g>
<g >
<title>free_unref_page (19,219,567 samples, 0.07%)</title><rect x="1167.0" y="821" width="0.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1169.98" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (34,080,610 samples, 0.12%)</title><rect x="209.8" y="325" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.82" y="335.5" ></text>
</g>
<g >
<title>PyObject_GetItem (27,896,301 samples, 0.10%)</title><rect x="94.7" y="661" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="97.66" y="671.5" ></text>
</g>
<g >
<title>alloc_perturb (34,256,975 samples, 0.12%)</title><rect x="596.3" y="501" width="1.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="599.30" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,552 samples, 0.09%)</title><rect x="61.3" y="501" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="64.34" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,101,693 samples, 0.12%)</title><rect x="95.8" y="549" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="98.78" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (156,416,788 samples, 0.54%)</title><rect x="67.8" y="677" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.78" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (109,971,600 samples, 0.38%)</title><rect x="191.6" y="741" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.64" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,150,710 samples, 0.09%)</title><rect x="106.1" y="453" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="109.09" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (25,826,519 samples, 0.09%)</title><rect x="119.4" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.38" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (52,419,493 samples, 0.18%)</title><rect x="189.5" y="453" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.52" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (60,209,080 samples, 0.21%)</title><rect x="134.8" y="501" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.76" y="511.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (33,987,773 samples, 0.12%)</title><rect x="1028.5" y="469" width="1.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1031.46" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,214,243 samples, 0.09%)</title><rect x="170.3" y="581" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="173.34" y="591.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (137,061,734 samples, 0.47%)</title><rect x="996.7" y="533" width="5.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="999.69" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (25,260,870 samples, 0.09%)</title><rect x="72.0" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.02" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,764 samples, 0.09%)</title><rect x="176.3" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.27" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (133,117,246 samples, 0.46%)</title><rect x="61.3" y="837" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="847.5" ></text>
</g>
<g >
<title>__do_page_fault (26,136,258 samples, 0.09%)</title><rect x="198.5" y="277" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="201.48" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (413,439,208 samples, 1.42%)</title><rect x="154.7" y="805" width="16.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="157.69" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (34,101,693 samples, 0.12%)</title><rect x="95.8" y="501" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.78" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (57,799,046 samples, 0.20%)</title><rect x="180.7" y="469" width="2.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="183.69" y="479.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="917" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1191.64" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (18,140,811 samples, 0.06%)</title><rect x="97.2" y="629" width="0.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="100.16" y="639.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,272,580 samples, 0.12%)</title><rect x="614.9" y="277" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="617.93" y="287.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,571,412 samples, 0.11%)</title><rect x="169.0" y="565" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="171.98" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (65,929,793 samples, 0.23%)</title><rect x="102.4" y="453" width="2.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="105.39" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,207,498 samples, 0.09%)</title><rect x="62.4" y="549" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="65.40" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (119,943,099 samples, 0.41%)</title><rect x="89.8" y="485" width="4.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="92.81" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (125,826,532 samples, 0.43%)</title><rect x="180.7" y="581" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,162,148 samples, 0.11%)</title><rect x="140.4" y="741" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.36" y="751.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (50,114,004 samples, 0.17%)</title><rect x="177.3" y="421" width="2.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="180.33" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,018,355 samples, 0.09%)</title><rect x="67.8" y="421" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.78" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,697 samples, 0.09%)</title><rect x="64.6" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.60" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,821 samples, 0.09%)</title><rect x="97.9" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.90" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (58,502,848 samples, 0.20%)</title><rect x="116.0" y="613" width="2.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="118.96" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (25,914,139 samples, 0.09%)</title><rect x="138.3" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.25" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,207,307 samples, 0.09%)</title><rect x="65.7" y="501" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.66" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (52,326,266 samples, 0.18%)</title><rect x="586.2" y="597" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="589.22" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (335,569,928 samples, 1.15%)</title><rect x="157.8" y="741" width="13.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.84" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (23,918,012 samples, 0.08%)</title><rect x="178.4" y="229" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.39" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,552 samples, 0.09%)</title><rect x="61.3" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="559.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,202,587 samples, 0.09%)</title><rect x="59.2" y="325" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="62.23" y="335.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (154,194,036 samples, 0.53%)</title><rect x="128.5" y="917" width="6.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="131.53" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (34,086,907 samples, 0.12%)</title><rect x="1159.5" y="629" width="1.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1162.49" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (33,571,412 samples, 0.11%)</title><rect x="169.0" y="597" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.98" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,878,788 samples, 0.11%)</title><rect x="179.4" y="357" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="182.36" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (296,586,853 samples, 1.02%)</title><rect x="142.7" y="693" width="12.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.70" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,326,266 samples, 0.18%)</title><rect x="586.2" y="677" width="2.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="589.22" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (34,167,112 samples, 0.12%)</title><rect x="913.8" y="549" width="1.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="916.82" y="559.5" ></text>
</g>
<g >
<title>PyType_GenericAlloc (34,164,226 samples, 0.12%)</title><rect x="909.7" y="613" width="1.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="912.75" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="581" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1165.25" y="591.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,061,992 samples, 0.09%)</title><rect x="60.3" y="277" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="63.29" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.77" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,134,229 samples, 0.09%)</title><rect x="118.3" y="565" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="121.33" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="565" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1165.25" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (100,584,710 samples, 0.34%)</title><rect x="219.8" y="709" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="222.79" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,018,355 samples, 0.09%)</title><rect x="67.8" y="613" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="70.78" y="623.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (33,571,412 samples, 0.11%)</title><rect x="169.0" y="293" width="1.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="171.98" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (32,857,115 samples, 0.11%)</title><rect x="196.1" y="485" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.09" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,416,674 samples, 0.18%)</title><rect x="122.8" y="469" width="2.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="125.82" y="479.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (25,476,690 samples, 0.09%)</title><rect x="93.6" y="277" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="96.63" y="287.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (33,523,256 samples, 0.11%)</title><rect x="163.4" y="53" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="166.41" y="63.5" ></text>
</g>
<g >
<title>[python3.12] (23,918,012 samples, 0.08%)</title><rect x="178.4" y="181" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.39" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (32,559,354 samples, 0.11%)</title><rect x="218.5" y="629" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="221.48" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (33,623,323 samples, 0.12%)</title><rect x="188.2" y="357" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.17" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (25,914,139 samples, 0.09%)</title><rect x="138.3" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.25" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="351.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (60,209,080 samples, 0.21%)</title><rect x="134.8" y="805" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="137.76" y="815.5" ></text>
</g>
<g >
<title>PyRun_StringFlags (26,208,558 samples, 0.09%)</title><rect x="66.7" y="501" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="69.72" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="757" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="767.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch1&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (3,587,935,413 samples, 12.29%)</title><rect x="923.5" y="597" width="145.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="926.50" y="607.5" >boost::detail::dij..</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (259,555,745 samples, 0.89%)</title><rect x="84.2" y="661" width="10.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="87.17" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (86,042,816 samples, 0.29%)</title><rect x="188.2" y="597" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.17" y="607.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (68,514,062 samples, 0.23%)</title><rect x="966.3" y="469" width="2.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="969.29" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (109,971,600 samples, 0.38%)</title><rect x="191.6" y="581" width="4.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="194.64" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (34,145,840 samples, 0.12%)</title><rect x="588.3" y="757" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="591.33" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (7,720,852,826 samples, 26.45%)</title><rect x="594.9" y="661" width="312.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="597.92" y="671.5" >[python3.12]</text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,211,890 samples, 0.09%)</title><rect x="222.8" y="421" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="225.80" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,199,668 samples, 0.09%)</title><rect x="139.3" y="357" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="142.30" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,961,501 samples, 0.09%)</title><rect x="99.0" y="437" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="101.95" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,243 samples, 0.09%)</title><rect x="170.3" y="533" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="173.34" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (17,813,920 samples, 0.06%)</title><rect x="84.2" y="389" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (229,780,785 samples, 0.79%)</title><rect x="171.4" y="805" width="9.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="174.40" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (150,320,918 samples, 0.51%)</title><rect x="147.6" y="661" width="6.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.55" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,464,634 samples, 0.11%)</title><rect x="100.0" y="613" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.00" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (58,502,848 samples, 0.20%)</title><rect x="116.0" y="741" width="2.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="118.96" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (104,785,052 samples, 0.36%)</title><rect x="106.1" y="565" width="4.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="109.09" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (119,943,099 samples, 0.41%)</title><rect x="89.8" y="597" width="4.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="92.81" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (33,882,874 samples, 0.12%)</title><rect x="87.2" y="309" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.16" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="549" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,668 samples, 0.09%)</title><rect x="139.3" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.30" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,207,365 samples, 0.09%)</title><rect x="120.4" y="341" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="123.43" y="351.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,204,520 samples, 0.09%)</title><rect x="122.8" y="293" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="125.82" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,477,215 samples, 0.27%)</title><rect x="58.2" y="741" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="61.17" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,149,751 samples, 0.09%)</title><rect x="137.2" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.20" y="303.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,178,020 samples, 0.12%)</title><rect x="862.9" y="453" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="865.85" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (18,140,811 samples, 0.06%)</title><rect x="97.2" y="645" width="0.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="100.16" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (34,264,056 samples, 0.12%)</title><rect x="918.0" y="613" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="920.96" y="623.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,424,216 samples, 0.18%)</title><rect x="107.2" y="485" width="2.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="110.15" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,587 samples, 0.09%)</title><rect x="59.2" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.23" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,814 samples, 0.09%)</title><rect x="146.5" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="149.49" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (34,292,325 samples, 0.12%)</title><rect x="978.7" y="485" width="1.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="981.74" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (59,468,639 samples, 0.20%)</title><rect x="211.2" y="261" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.20" y="271.5" ></text>
</g>
<g >
<title>switch_fpu_return (4,450,896 samples, 0.02%)</title><rect x="554.5" y="917" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="557.49" y="927.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::swap_heap_elements (136,987,310 samples, 0.47%)</title><rect x="941.4" y="501" width="5.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="944.45" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (67,903,104 samples, 0.23%)</title><rect x="1014.7" y="437" width="2.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1017.68" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (25,961,501 samples, 0.09%)</title><rect x="99.0" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.95" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,247 samples, 0.09%)</title><rect x="175.2" y="261" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.21" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,247 samples, 0.09%)</title><rect x="175.2" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.21" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (32,878,788 samples, 0.11%)</title><rect x="179.4" y="437" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.36" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (133,144,064 samples, 0.46%)</title><rect x="218.5" y="885" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="221.48" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (52,326,266 samples, 0.18%)</title><rect x="586.2" y="517" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="589.22" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,139,888 samples, 0.12%)</title><rect x="215.0" y="357" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="217.98" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="693" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="703.5" ></text>
</g>
<g >
<title>PyObject_GetItem (27,896,301 samples, 0.10%)</title><rect x="94.7" y="533" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="97.66" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (24,041,190 samples, 0.08%)</title><rect x="152.7" y="245" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.66" y="255.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,890 samples, 0.09%)</title><rect x="222.8" y="453" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="225.80" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="485" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (31,809,451 samples, 0.11%)</title><rect x="102.4" y="421" width="1.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="105.39" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,960 samples, 0.09%)</title><rect x="133.7" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.70" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,180,018 samples, 0.09%)</title><rect x="111.4" y="469" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="114.39" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (230,135,233 samples, 0.79%)</title><rect x="186.8" y="901" width="9.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="189.79" y="911.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (34,120,135 samples, 0.12%)</title><rect x="213.6" y="389" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="216.60" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (61,635,632 samples, 0.21%)</title><rect x="142.7" y="405" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (58,502,848 samples, 0.20%)</title><rect x="116.0" y="645" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="655.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (67,825,286 samples, 0.23%)</title><rect x="857.4" y="389" width="2.7" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="860.36" y="399.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (17,813,920 samples, 0.06%)</title><rect x="84.2" y="437" width="0.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="87.17" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,084,795 samples, 0.12%)</title><rect x="226.8" y="725" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="229.81" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,477,215 samples, 0.27%)</title><rect x="58.2" y="933" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="61.17" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="597" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (27,896,301 samples, 0.10%)</title><rect x="94.7" y="485" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="97.66" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,206,552 samples, 0.09%)</title><rect x="61.3" y="517" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="64.34" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (51,689,355 samples, 0.18%)</title><rect x="154.7" y="421" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="157.69" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (24,545,339 samples, 0.08%)</title><rect x="192.8" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.83" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (25,771,593 samples, 0.09%)</title><rect x="147.6" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.55" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (48,817,923 samples, 0.17%)</title><rect x="151.7" y="405" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.66" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,821 samples, 0.09%)</title><rect x="97.9" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.90" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,150,710 samples, 0.09%)</title><rect x="106.1" y="309" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="109.09" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (48,369,314 samples, 0.17%)</title><rect x="203.8" y="437" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="447.5" ></text>
</g>
<g >
<title>do_user_addr_fault (25,460,519 samples, 0.09%)</title><rect x="101.4" y="149" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="104.36" y="159.5" ></text>
</g>
<g >
<title>[python3.12] (48,369,314 samples, 0.17%)</title><rect x="203.8" y="405" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="415.5" ></text>
</g>
<g >
<title>do_page_fault (22,160,344 samples, 0.08%)</title><rect x="204.8" y="293" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="207.83" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (7,823,433,163 samples, 26.80%)</title><rect x="592.2" y="677" width="316.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="595.15" y="687.5" >[python3.12]</text>
</g>
<g >
<title>PyEval_EvalCode (125,826,532 samples, 0.43%)</title><rect x="180.7" y="741" width="5.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="183.69" y="751.5" ></text>
</g>
<g >
<title>PyIter_Next (48,817,923 samples, 0.17%)</title><rect x="151.7" y="421" width="1.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="154.66" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,961,501 samples, 0.09%)</title><rect x="99.0" y="533" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.95" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="709" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1165.25" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="319.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (102,723,698 samples, 0.35%)</title><rect x="1035.4" y="501" width="4.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1038.37" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,120,817 samples, 0.12%)</title><rect x="186.8" y="613" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="189.79" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,587 samples, 0.09%)</title><rect x="59.2" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.23" y="479.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (34,138,992 samples, 0.12%)</title><rect x="116.9" y="341" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="119.95" y="351.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,207,764 samples, 0.09%)</title><rect x="176.3" y="373" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="179.27" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (52,424,216 samples, 0.18%)</title><rect x="107.2" y="357" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (51,849,972 samples, 0.18%)</title><rect x="132.7" y="549" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="135.67" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,180,018 samples, 0.09%)</title><rect x="111.4" y="485" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.39" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (102,531,015 samples, 0.35%)</title><rect x="175.2" y="501" width="4.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="178.21" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,214,243 samples, 0.09%)</title><rect x="170.3" y="453" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="173.34" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,113,807 samples, 0.18%)</title><rect x="138.3" y="789" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="141.25" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="677" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="687.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt; (34,124,370 samples, 0.12%)</title><rect x="1137.4" y="549" width="1.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1140.42" y="559.5" ></text>
</g>
<g >
<title>get_page_from_freelist (407,992,892 samples, 1.40%)</title><rect x="833.3" y="261" width="16.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="836.28" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (100,584,710 samples, 0.34%)</title><rect x="219.8" y="597" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="222.79" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (48,369,314 samples, 0.17%)</title><rect x="203.8" y="389" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,112,554 samples, 0.09%)</title><rect x="586.2" y="437" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="589.22" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (86,555,090 samples, 0.30%)</title><rect x="215.0" y="885" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="217.98" y="895.5" ></text>
</g>
<g >
<title>_PyObject_GC_New (26,134,229 samples, 0.09%)</title><rect x="118.3" y="277" width="1.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="121.33" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (30,882,219 samples, 0.11%)</title><rect x="81.9" y="357" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="84.86" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (34,080,610 samples, 0.12%)</title><rect x="209.8" y="277" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.82" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,477,215 samples, 0.27%)</title><rect x="58.2" y="885" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="61.17" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_do_relocate (68,401,874 samples, 0.23%)</title><rect x="1136.0" y="565" width="2.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1139.03" y="575.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,250 samples, 0.09%)</title><rect x="153.6" y="565" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="156.63" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (25,826,519 samples, 0.09%)</title><rect x="119.4" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.38" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (24,776,733 samples, 0.08%)</title><rect x="151.7" y="213" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.66" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (24,789,767 samples, 0.08%)</title><rect x="78.9" y="293" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.94" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,138,992 samples, 0.12%)</title><rect x="116.9" y="181" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="119.95" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (125,826,532 samples, 0.43%)</title><rect x="180.7" y="869" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size (34,181,334 samples, 0.12%)</title><rect x="1133.3" y="565" width="1.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1136.26" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,552 samples, 0.09%)</title><rect x="61.3" y="741" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="751.5" ></text>
</g>
<g >
<title>__vm_munmap (34,179,984 samples, 0.12%)</title><rect x="560.2" y="805" width="1.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="563.23" y="815.5" ></text>
</g>
<g >
<title>handle_mm_fault (604,114,541 samples, 2.07%)</title><rect x="830.5" y="341" width="24.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="833.54" y="351.5" >h..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,828 samples, 0.09%)</title><rect x="126.1" y="325" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="129.10" y="335.5" ></text>
</g>
<g >
<title>do_page_fault (47,489,663 samples, 0.16%)</title><rect x="79.9" y="277" width="2.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="82.94" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (34,186,177 samples, 0.12%)</title><rect x="76.5" y="437" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.51" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,764 samples, 0.09%)</title><rect x="223.9" y="629" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="226.86" y="639.5" ></text>
</g>
<g >
<title>cp_new_stat (26,180,018 samples, 0.09%)</title><rect x="111.4" y="181" width="1.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="114.39" y="191.5" ></text>
</g>
<g >
<title>_int_realloc (34,173,093 samples, 0.12%)</title><rect x="172.8" y="277" width="1.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="175.78" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="383.5" ></text>
</g>
<g >
<title>schedule_tail (12,335,475 samples, 0.04%)</title><rect x="234.8" y="965" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="237.76" y="975.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,208,558 samples, 0.09%)</title><rect x="66.7" y="549" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="69.72" y="559.5" ></text>
</g>
<g >
<title>vfs_statx (28,290,192 samples, 0.10%)</title><rect x="63.5" y="245" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="66.46" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,018,355 samples, 0.09%)</title><rect x="67.8" y="565" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="70.78" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (52,419,493 samples, 0.18%)</title><rect x="189.5" y="389" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.52" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (272,545,968 samples, 0.93%)</title><rect x="1093.3" y="549" width="11.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1096.28" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (25,918,556 samples, 0.09%)</title><rect x="77.9" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.89" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (24,041,190 samples, 0.08%)</title><rect x="152.7" y="213" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="155.66" y="223.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (174,253,697 samples, 0.60%)</title><rect x="121.5" y="661" width="7.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="124.49" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (25,961,501 samples, 0.09%)</title><rect x="99.0" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.95" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (119,943,099 samples, 0.41%)</title><rect x="89.8" y="549" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.81" y="559.5" ></text>
</g>
<g >
<title>free_unref_page_commit (19,219,567 samples, 0.07%)</title><rect x="1167.0" y="805" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1169.98" y="815.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,460,519 samples, 0.09%)</title><rect x="101.4" y="677" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="104.36" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,697 samples, 0.09%)</title><rect x="64.6" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.60" y="495.5" ></text>
</g>
<g >
<title>PyErr_Format (27,896,301 samples, 0.10%)</title><rect x="94.7" y="293" width="1.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="97.66" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (24,747,959 samples, 0.08%)</title><rect x="141.7" y="853" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="144.70" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (86,042,816 samples, 0.29%)</title><rect x="188.2" y="533" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.17" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,424,216 samples, 0.18%)</title><rect x="107.2" y="389" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.15" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,464,634 samples, 0.11%)</title><rect x="100.0" y="725" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="103.00" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,587 samples, 0.09%)</title><rect x="59.2" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.23" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,623,323 samples, 0.12%)</title><rect x="188.2" y="405" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="191.17" y="415.5" ></text>
</g>
<g >
<title>alloc_pages_vma (407,992,892 samples, 1.40%)</title><rect x="833.3" y="293" width="16.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="836.28" y="303.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::dummy_property_map, boost::detail::dummy_pmap_reference, unsigned long, unsigned long&gt; (34,223,522 samples, 0.12%)</title><rect x="32.2" y="981" width="1.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="35.19" y="991.5" ></text>
</g>
<g >
<title>dl_open_worker (33,571,412 samples, 0.11%)</title><rect x="169.0" y="213" width="1.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="171.98" y="223.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (355,607,317 samples, 1.22%)</title><rect x="171.4" y="885" width="14.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="174.40" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (33,571,412 samples, 0.11%)</title><rect x="169.0" y="421" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.98" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (273,537,711 samples, 0.94%)</title><rect x="1127.7" y="597" width="11.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1130.74" y="607.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,177,262 samples, 0.12%)</title><rect x="1158.1" y="613" width="1.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1161.11" y="623.5" ></text>
</g>
<g >
<title>do_page_fault (34,194,760 samples, 0.12%)</title><rect x="607.0" y="437" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="609.96" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (189,478,031 samples, 0.65%)</title><rect x="76.5" y="741" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.51" y="751.5" ></text>
</g>
<g >
<title>rmap_walk (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="837" width="1.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1191.64" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="661" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,237,976 samples, 0.12%)</title><rect x="594.9" y="613" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="597.92" y="623.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (34,167,112 samples, 0.12%)</title><rect x="913.8" y="597" width="1.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="916.82" y="607.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,212,863 samples, 0.09%)</title><rect x="73.0" y="581" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="76.04" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (229,780,785 samples, 0.79%)</title><rect x="171.4" y="741" width="9.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="174.40" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (154,194,036 samples, 0.53%)</title><rect x="128.5" y="709" width="6.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="131.53" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,134,229 samples, 0.09%)</title><rect x="118.3" y="373" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="121.33" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (86,555,090 samples, 0.30%)</title><rect x="215.0" y="741" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="751.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::getRegister (34,084,795 samples, 0.12%)</title><rect x="226.8" y="885" width="1.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="229.81" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,017,147 samples, 0.09%)</title><rect x="221.7" y="213" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="224.75" y="223.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,256,975 samples, 0.12%)</title><rect x="596.3" y="613" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="599.30" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,080,610 samples, 0.12%)</title><rect x="209.8" y="293" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.82" y="303.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (136,670,961 samples, 0.47%)</title><rect x="116.0" y="933" width="5.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="118.96" y="943.5" ></text>
</g>
<g >
<title>_PyObject_Call (29,925,438 samples, 0.10%)</title><rect x="193.8" y="277" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="196.82" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,149,751 samples, 0.09%)</title><rect x="137.2" y="821" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.20" y="831.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4,706,099 samples, 0.02%)</title><rect x="235.0" y="901" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="238.01" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="821" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (25,640,012 samples, 0.09%)</title><rect x="132.7" y="325" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.67" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (24,545,339 samples, 0.08%)</title><rect x="192.8" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.83" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (129,080,205 samples, 0.44%)</title><rect x="77.9" y="517" width="5.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="80.89" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,095,135 samples, 0.09%)</title><rect x="174.2" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.16" y="383.5" ></text>
</g>
<g >
<title>clear_page_erms (24,747,959 samples, 0.08%)</title><rect x="141.7" y="741" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="144.70" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (32,932,890 samples, 0.11%)</title><rect x="121.5" y="421" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.49" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="149" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="159.5" ></text>
</g>
<g >
<title>[unknown] (4,300,534,318 samples, 14.73%)</title><rect x="57.1" y="997" width="173.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="60.12" y="1007.5" >[unknown]</text>
</g>
<g >
<title>[python3.12] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="837" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.77" y="847.5" ></text>
</g>
<g >
<title>mmput (168,744,858 samples, 0.58%)</title><rect x="1170.5" y="917" width="6.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1173.51" y="927.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (174,253,697 samples, 0.60%)</title><rect x="121.5" y="677" width="7.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="124.49" y="687.5" ></text>
</g>
<g >
<title>page_fault (34,120,135 samples, 0.12%)</title><rect x="213.6" y="213" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="216.60" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (68,439,103 samples, 0.23%)</title><rect x="1036.8" y="485" width="2.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1039.75" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (25,086,030 samples, 0.09%)</title><rect x="185.8" y="613" width="1.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="188.77" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (29,960,916 samples, 0.10%)</title><rect x="85.9" y="293" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.94" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::size (34,081,722 samples, 0.12%)</title><rect x="1112.6" y="549" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1115.58" y="559.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (34,198,678 samples, 0.12%)</title><rect x="1100.2" y="453" width="1.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1103.15" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (52,417,011 samples, 0.18%)</title><rect x="175.2" y="389" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.21" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (836,816,200 samples, 2.87%)</title><rect x="76.5" y="965" width="33.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.51" y="975.5" >[p..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (135,321,245 samples, 0.46%)</title><rect x="205.7" y="421" width="5.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="208.73" y="431.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (68,313,728 samples, 0.23%)</title><rect x="993.9" y="501" width="2.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="996.93" y="511.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (34,084,795 samples, 0.12%)</title><rect x="226.8" y="869" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="229.81" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,828 samples, 0.09%)</title><rect x="126.1" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.10" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,212,863 samples, 0.09%)</title><rect x="73.0" y="469" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="76.04" y="479.5" ></text>
</g>
<g >
<title>Py_RunMain (15,030,944,608 samples, 51.49%)</title><rect x="554.7" y="949" width="607.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="557.72" y="959.5" >Py_RunMain</text>
</g>
<g >
<title>__alloc_pages_nodemask (26,136,258 samples, 0.09%)</title><rect x="198.5" y="181" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="201.48" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_erase (67,858,510 samples, 0.23%)</title><rect x="1152.6" y="597" width="2.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1155.60" y="607.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (59,635,299 samples, 0.20%)</title><rect x="163.4" y="117" width="2.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="166.41" y="127.5" ></text>
</g>
<g >
<title>[python3.12] (52,415,202 samples, 0.18%)</title><rect x="216.4" y="421" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.36" y="431.5" ></text>
</g>
<g >
<title>pipe_release (19,219,567 samples, 0.07%)</title><rect x="1167.0" y="885" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1169.98" y="895.5" ></text>
</g>
<g >
<title>[index.cpython-312-x86_64-linux-gnu.so] (26,134,229 samples, 0.09%)</title><rect x="118.3" y="293" width="1.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="121.33" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (102,344,064 samples, 0.35%)</title><rect x="128.5" y="293" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,275,847 samples, 0.23%)</title><rect x="171.4" y="517" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="174.40" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (25,356,172 samples, 0.09%)</title><rect x="154.7" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,878,788 samples, 0.11%)</title><rect x="179.4" y="389" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="182.36" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,275,847 samples, 0.23%)</title><rect x="171.4" y="389" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="174.40" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="389" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (120,056,685 samples, 0.41%)</title><rect x="142.7" y="549" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="559.5" ></text>
</g>
<g >
<title>smp_call_function_interrupt (7,158,787 samples, 0.02%)</title><rect x="1189.7" y="677" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1192.71" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="559.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (273,464,088 samples, 0.94%)</title><rect x="1018.8" y="533" width="11.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1021.79" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19,219,567 samples, 0.07%)</title><rect x="1167.0" y="981" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1169.98" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (230,135,233 samples, 0.79%)</title><rect x="186.8" y="773" width="9.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="189.79" y="783.5" ></text>
</g>
<g >
<title>_PyRun_AnyFileObject (26,180,018 samples, 0.09%)</title><rect x="111.4" y="965" width="1.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="114.39" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,018,355 samples, 0.09%)</title><rect x="67.8" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.78" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,209,080 samples, 0.21%)</title><rect x="134.8" y="549" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.76" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,668 samples, 0.09%)</title><rect x="139.3" y="629" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.30" y="639.5" ></text>
</g>
<g >
<title>_int_free (34,292,760 samples, 0.12%)</title><rect x="23.9" y="981" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="26.90" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="709" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="719.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (34,256,998 samples, 0.12%)</title><rect x="1138.8" y="565" width="1.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1141.80" y="575.5" ></text>
</g>
<g >
<title>_PyModule_ClearDict (34,140,509 samples, 0.12%)</title><rect x="582.3" y="901" width="1.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="585.33" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (34,226,143 samples, 0.12%)</title><rect x="593.5" y="645" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="596.54" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="693" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (723,752,147 samples, 2.48%)</title><rect x="112.4" y="981" width="29.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.45" y="991.5" >[p..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (133,117,246 samples, 0.46%)</title><rect x="61.3" y="885" width="5.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="64.34" y="895.5" ></text>
</g>
<g >
<title>_PyCode_New (25,356,172 samples, 0.09%)</title><rect x="154.7" y="325" width="1.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="157.69" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (34,139,888 samples, 0.12%)</title><rect x="215.0" y="389" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="399.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (33,757,594 samples, 0.12%)</title><rect x="1176.0" y="741" width="1.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1178.97" y="751.5" ></text>
</g>
<g >
<title>PyDescr_NewGetSet (49,522,514 samples, 0.17%)</title><rect x="148.6" y="293" width="2.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="151.59" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (34,256,975 samples, 0.12%)</title><rect x="596.3" y="597" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="599.30" y="607.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (34,285,084 samples, 0.12%)</title><rect x="688.2" y="405" width="1.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="691.16" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (189,478,031 samples, 0.65%)</title><rect x="76.5" y="709" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.51" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (189,478,031 samples, 0.65%)</title><rect x="76.5" y="773" width="7.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.51" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (102,344,064 samples, 0.35%)</title><rect x="128.5" y="613" width="4.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="131.53" y="623.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,205,863 samples, 0.09%)</title><rect x="202.7" y="405" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="205.71" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,764 samples, 0.09%)</title><rect x="223.9" y="549" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="226.86" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="229" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (25,356,172 samples, 0.09%)</title><rect x="154.7" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (25,961,501 samples, 0.09%)</title><rect x="99.0" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.95" y="575.5" ></text>
</g>
<g >
<title>PyDict_Copy (26,213,814 samples, 0.09%)</title><rect x="146.5" y="277" width="1.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="149.49" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,498 samples, 0.09%)</title><rect x="62.4" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.40" y="479.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_not_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (34,230,531 samples, 0.12%)</title><rect x="26.7" y="981" width="1.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="29.67" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,649 samples, 0.09%)</title><rect x="83.1" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.11" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,498 samples, 0.09%)</title><rect x="62.4" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.40" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (32,932,890 samples, 0.11%)</title><rect x="121.5" y="485" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.49" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,524 samples, 0.09%)</title><rect x="107.2" y="261" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="271.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (34,137,131 samples, 0.12%)</title><rect x="142.7" y="261" width="1.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="145.70" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (189,478,031 samples, 0.65%)</title><rect x="76.5" y="597" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.51" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (52,397,003 samples, 0.18%)</title><rect x="69.9" y="405" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.91" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,863 samples, 0.09%)</title><rect x="73.0" y="245" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.04" y="255.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (18,140,811 samples, 0.06%)</title><rect x="97.2" y="677" width="0.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="100.16" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,558 samples, 0.09%)</title><rect x="66.7" y="629" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="69.72" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,263,558 samples, 0.27%)</title><rect x="137.2" y="869" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.20" y="879.5" ></text>
</g>
<g >
<title>__dlopen (33,970,452 samples, 0.12%)</title><rect x="127.2" y="485" width="1.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="130.16" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (33,834,731 samples, 0.12%)</title><rect x="135.8" y="213" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.83" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (24,776,733 samples, 0.08%)</title><rect x="151.7" y="261" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.66" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (28,723,853 samples, 0.10%)</title><rect x="124.9" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.94" y="335.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,101,693 samples, 0.12%)</title><rect x="95.8" y="373" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="98.78" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (174,253,697 samples, 0.60%)</title><rect x="121.5" y="709" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.49" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="341" width="1.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1163.87" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,120,817 samples, 0.12%)</title><rect x="186.8" y="501" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="189.79" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,139,888 samples, 0.12%)</title><rect x="215.0" y="565" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="217.98" y="575.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,150,710 samples, 0.09%)</title><rect x="106.1" y="277" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="109.09" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (133,117,246 samples, 0.46%)</title><rect x="61.3" y="933" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="943.5" ></text>
</g>
<g >
<title>page_fault (34,272,580 samples, 0.12%)</title><rect x="614.9" y="357" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="617.93" y="367.5" ></text>
</g>
<g >
<title>PyObject_Malloc (34,256,975 samples, 0.12%)</title><rect x="596.3" y="549" width="1.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="599.30" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,101,693 samples, 0.12%)</title><rect x="95.8" y="453" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="98.78" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (25,914,139 samples, 0.09%)</title><rect x="138.3" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.25" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,210,126 samples, 0.09%)</title><rect x="109.3" y="325" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="112.27" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (150,320,918 samples, 0.51%)</title><rect x="147.6" y="645" width="6.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="150.55" y="655.5" ></text>
</g>
<g >
<title>std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::~map (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="645" width="1.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1163.87" y="655.5" ></text>
</g>
<g >
<title>finish_task_switch (6,205,061 samples, 0.02%)</title><rect x="1177.4" y="869" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1180.41" y="879.5" ></text>
</g>
<g >
<title>_dl_relocate_object (26,209,701 samples, 0.09%)</title><rect x="195.0" y="293" width="1.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="198.03" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_drop_node (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="517" width="1.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1163.87" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (182,625,346 samples, 0.63%)</title><rect x="66.7" y="885" width="7.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.72" y="895.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,149,751 samples, 0.09%)</title><rect x="137.2" y="469" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="140.20" y="479.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,213,524 samples, 0.09%)</title><rect x="107.2" y="325" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="110.15" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,664 samples, 0.09%)</title><rect x="92.6" y="277" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.57" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (91,763,092 samples, 0.31%)</title><rect x="102.4" y="613" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.39" y="623.5" ></text>
</g>
<g >
<title>native_write_msr (5,018,746 samples, 0.02%)</title><rect x="554.3" y="789" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="557.29" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,018,355 samples, 0.09%)</title><rect x="67.8" y="597" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.78" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,881,679 samples, 0.36%)</title><rect x="199.5" y="421" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="202.53" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (74,372,820 samples, 0.25%)</title><rect x="219.8" y="389" width="3.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="222.79" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (275,784,273 samples, 0.94%)</title><rect x="157.8" y="453" width="11.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="160.84" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="661" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1165.25" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,154 samples, 0.09%)</title><rect x="123.9" y="277" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.88" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_read (85,833,913 samples, 0.29%)</title><rect x="163.4" y="245" width="3.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="166.41" y="255.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,188,485 samples, 0.12%)</title><rect x="1067.1" y="565" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1070.14" y="575.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize_generic (25,833,299 samples, 0.09%)</title><rect x="105.1" y="405" width="1.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="108.05" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (33,571,412 samples, 0.11%)</title><rect x="169.0" y="357" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.98" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,168,113 samples, 0.27%)</title><rect x="118.3" y="597" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.33" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,527,697 samples, 0.09%)</title><rect x="68.8" y="453" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="71.83" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (75,294,107 samples, 0.26%)</title><rect x="147.6" y="453" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.55" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (413,439,208 samples, 1.42%)</title><rect x="154.7" y="901" width="16.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="157.69" y="911.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (34,167,112 samples, 0.12%)</title><rect x="913.8" y="565" width="1.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="916.82" y="575.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (130,203,925 samples, 0.45%)</title><rect x="67.8" y="629" width="5.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="70.78" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (23,918,012 samples, 0.08%)</title><rect x="178.4" y="197" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.39" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (106,910,694 samples, 0.37%)</title><rect x="62.4" y="725" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.40" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (74,372,820 samples, 0.25%)</title><rect x="219.8" y="469" width="3.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="222.79" y="479.5" ></text>
</g>
<g >
<title>std::equal&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (34,250,855 samples, 0.12%)</title><rect x="1155.3" y="597" width="1.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1158.34" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (58,502,848 samples, 0.20%)</title><rect x="116.0" y="597" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="607.5" ></text>
</g>
<g >
<title>inflate (34,171,141 samples, 0.12%)</title><rect x="907.0" y="549" width="1.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="909.99" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,180,018 samples, 0.09%)</title><rect x="111.4" y="885" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="114.39" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,636 samples, 0.09%)</title><rect x="58.2" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.17" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,333,183 samples, 0.09%)</title><rect x="155.7" y="357" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="158.71" y="367.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,271,849 samples, 0.12%)</title><rect x="1089.1" y="581" width="1.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1092.13" y="591.5" ></text>
</g>
<g >
<title>_PyObject_LookupAttr (26,211,890 samples, 0.09%)</title><rect x="222.8" y="213" width="1.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="225.80" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (24,776,733 samples, 0.08%)</title><rect x="151.7" y="277" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.66" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (52,415,202 samples, 0.18%)</title><rect x="216.4" y="341" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.36" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,527,697 samples, 0.09%)</title><rect x="68.8" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.83" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,914,139 samples, 0.09%)</title><rect x="138.3" y="629" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="141.25" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (109,971,600 samples, 0.38%)</title><rect x="191.6" y="725" width="4.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="194.64" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,626 samples, 0.09%)</title><rect x="217.4" y="261" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="220.42" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,126 samples, 0.09%)</title><rect x="109.3" y="373" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.27" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,193,868 samples, 0.12%)</title><rect x="590.8" y="565" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="593.77" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (34,167,761 samples, 0.12%)</title><rect x="22.5" y="981" width="1.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="25.52" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,626 samples, 0.09%)</title><rect x="217.4" y="245" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="220.42" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (25,918,556 samples, 0.09%)</title><rect x="77.9" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.89" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (156,416,788 samples, 0.54%)</title><rect x="67.8" y="789" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.78" y="799.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (24,041,190 samples, 0.08%)</title><rect x="152.7" y="373" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="155.66" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (861,652,275 samples, 2.95%)</title><rect x="865.6" y="453" width="34.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="868.62" y="463.5" >_P..</text>
</g>
<g >
<title>[python3.12] (120,056,685 samples, 0.41%)</title><rect x="142.7" y="517" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="869" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="879.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,932,890 samples, 0.11%)</title><rect x="121.5" y="565" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="124.49" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,878,788 samples, 0.11%)</title><rect x="179.4" y="373" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="182.36" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (58,502,848 samples, 0.20%)</title><rect x="116.0" y="725" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="735.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,250 samples, 0.09%)</title><rect x="153.6" y="437" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="156.63" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (150,320,918 samples, 0.51%)</title><rect x="147.6" y="629" width="6.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.55" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,195,992 samples, 0.09%)</title><rect x="177.3" y="309" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="180.33" y="319.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (33,557,465 samples, 0.11%)</title><rect x="1148.5" y="533" width="1.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1151.48" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (273,537,711 samples, 0.94%)</title><rect x="1127.7" y="613" width="11.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1130.74" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,821 samples, 0.09%)</title><rect x="97.9" y="757" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.90" y="767.5" ></text>
</g>
<g >
<title>_PyObject_CallMethod (7,294,475,978 samples, 24.99%)</title><rect x="607.0" y="597" width="294.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="609.96" y="607.5" >_PyObject_CallMethod</text>
</g>
<g >
<title>page_fault (26,210,416 samples, 0.09%)</title><rect x="166.9" y="277" width="1.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="169.88" y="287.5" ></text>
</g>
<g >
<title>PyArray_ToList (68,266,745 samples, 0.23%)</title><rect x="89.8" y="277" width="2.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="92.81" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,460,519 samples, 0.09%)</title><rect x="101.4" y="709" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="104.36" y="719.5" ></text>
</g>
<g >
<title>python3.12 (29,193,942,895 samples, 100.00%)</title><rect x="10.0" y="1013" width="1180.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="13.01" y="1023.5" >python3.12</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,207,307 samples, 0.09%)</title><rect x="65.7" y="277" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="68.66" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,415,202 samples, 0.18%)</title><rect x="216.4" y="453" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="219.36" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,194,413 samples, 0.09%)</title><rect x="84.9" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.89" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,552 samples, 0.09%)</title><rect x="61.3" y="709" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="64.34" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="629" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,552 samples, 0.09%)</title><rect x="61.3" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (59,468,639 samples, 0.20%)</title><rect x="211.2" y="677" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.20" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,211,890 samples, 0.09%)</title><rect x="222.8" y="261" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="225.80" y="271.5" ></text>
</g>
<g >
<title>[timestamps.cpython-312-x86_64-linux-gnu.so] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="421" width="1.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="188.77" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,571,412 samples, 0.11%)</title><rect x="169.0" y="453" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="171.98" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (296,586,853 samples, 1.02%)</title><rect x="142.7" y="709" width="12.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="145.70" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (34,101,693 samples, 0.12%)</title><rect x="95.8" y="309" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="98.78" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="293" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (150,320,918 samples, 0.51%)</title><rect x="147.6" y="597" width="6.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="150.55" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,896,301 samples, 0.10%)</title><rect x="94.7" y="629" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.66" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (183,690,559 samples, 0.63%)</title><rect x="203.8" y="517" width="7.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="206.77" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (30,882,219 samples, 0.11%)</title><rect x="81.9" y="389" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="84.86" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,194,413 samples, 0.09%)</title><rect x="84.9" y="325" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.89" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (86,555,090 samples, 0.30%)</title><rect x="215.0" y="837" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.98" y="847.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (32,227,910 samples, 0.11%)</title><rect x="911.1" y="533" width="1.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="914.13" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,200,728 samples, 0.12%)</title><rect x="608.3" y="437" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="611.34" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,180,018 samples, 0.09%)</title><rect x="111.4" y="773" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.39" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (296,586,853 samples, 1.02%)</title><rect x="142.7" y="773" width="12.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.70" y="783.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (61,635,632 samples, 0.21%)</title><rect x="142.7" y="453" width="2.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="145.70" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (58,502,848 samples, 0.20%)</title><rect x="116.0" y="709" width="2.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="118.96" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (77,869,280 samples, 0.27%)</title><rect x="154.7" y="773" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="157.69" y="783.5" ></text>
</g>
<g >
<title>dlopen_doit (33,970,452 samples, 0.12%)</title><rect x="127.2" y="421" width="1.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="130.16" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,120,135 samples, 0.12%)</title><rect x="213.6" y="709" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="216.60" y="719.5" ></text>
</g>
<g >
<title>get_page_from_freelist (22,160,344 samples, 0.08%)</title><rect x="204.8" y="165" width="0.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="207.83" y="175.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,896,301 samples, 0.10%)</title><rect x="94.7" y="341" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.66" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,207,307 samples, 0.09%)</title><rect x="65.7" y="325" width="1.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="68.66" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,018,355 samples, 0.09%)</title><rect x="67.8" y="325" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.78" y="335.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,206,552 samples, 0.09%)</title><rect x="61.3" y="485" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="64.34" y="495.5" ></text>
</g>
<g >
<title>page_fault (305,356,094 samples, 1.05%)</title><rect x="1177.7" y="997" width="12.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1180.66" y="1007.5" ></text>
</g>
<g >
<title>_dl_open (26,209,701 samples, 0.09%)</title><rect x="195.0" y="341" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="198.03" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (80,703,196 samples, 0.28%)</title><rect x="63.5" y="533" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="66.46" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (59,468,639 samples, 0.20%)</title><rect x="211.2" y="437" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="214.20" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,961,501 samples, 0.09%)</title><rect x="99.0" y="597" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="101.95" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::max_size (68,465,549 samples, 0.23%)</title><rect x="1104.3" y="565" width="2.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1107.30" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (32,878,788 samples, 0.11%)</title><rect x="179.4" y="309" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.36" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (122,425,728 samples, 0.42%)</title><rect x="51.1" y="981" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.11" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,345,047 samples, 0.18%)</title><rect x="207.7" y="261" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="210.70" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (250,063,134 samples, 0.86%)</title><rect x="157.8" y="293" width="10.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.84" y="303.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, false&gt;::operator mpl_::bool_&lt;false&gt; const&amp; (33,736,935 samples, 0.12%)</title><rect x="933.2" y="501" width="1.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="936.18" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,668 samples, 0.09%)</title><rect x="139.3" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.30" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,149,751 samples, 0.09%)</title><rect x="137.2" y="405" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="140.20" y="415.5" ></text>
</g>
<g >
<title>page_fault (34,084,795 samples, 0.12%)</title><rect x="226.8" y="805" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="229.81" y="815.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,209,247 samples, 0.09%)</title><rect x="175.2" y="293" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="178.21" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (91,763,092 samples, 0.31%)</title><rect x="102.4" y="597" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.39" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (14,165,082,852 samples, 48.52%)</title><rect x="589.7" y="821" width="572.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="592.71" y="831.5" >_PyObject_MakeTpCall</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,675,816 samples, 0.27%)</title><rect x="199.5" y="325" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="202.53" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,552 samples, 0.09%)</title><rect x="61.3" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (34,139,188 samples, 0.12%)</title><rect x="29.4" y="981" width="1.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="32.42" y="991.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,828 samples, 0.09%)</title><rect x="126.1" y="469" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="129.10" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (33,162,148 samples, 0.11%)</title><rect x="140.4" y="421" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="143.36" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (52,415,202 samples, 0.18%)</title><rect x="216.4" y="597" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.36" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (139,612,646 samples, 0.48%)</title><rect x="84.2" y="533" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="661" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="671.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,017,147 samples, 0.09%)</title><rect x="221.7" y="325" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="224.75" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (32,932,890 samples, 0.11%)</title><rect x="121.5" y="533" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.49" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,137,131 samples, 0.12%)</title><rect x="142.7" y="229" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (25,771,593 samples, 0.09%)</title><rect x="147.6" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.55" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (25,914,139 samples, 0.09%)</title><rect x="138.3" y="421" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="141.25" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (31,902,797 samples, 0.11%)</title><rect x="17.1" y="981" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="20.08" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,018,355 samples, 0.09%)</title><rect x="67.8" y="437" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="70.78" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (25,914,139 samples, 0.09%)</title><rect x="138.3" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.25" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,863 samples, 0.09%)</title><rect x="73.0" y="485" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="76.04" y="495.5" ></text>
</g>
<g >
<title>do_sys_open (27,498,501 samples, 0.09%)</title><rect x="144.1" y="229" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="147.08" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (125,826,532 samples, 0.43%)</title><rect x="180.7" y="757" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,914,139 samples, 0.09%)</title><rect x="138.3" y="597" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="141.25" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,120,135 samples, 0.12%)</title><rect x="213.6" y="885" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="216.60" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,649 samples, 0.09%)</title><rect x="83.1" y="325" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="86.11" y="335.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (58,421,053 samples, 0.20%)</title><rect x="145.2" y="421" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="148.19" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,960 samples, 0.09%)</title><rect x="133.7" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.70" y="431.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,890 samples, 0.09%)</title><rect x="222.8" y="405" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="225.80" y="415.5" ></text>
</g>
<g >
<title>change_prot_numa (33,693,608 samples, 0.12%)</title><rect x="858.7" y="325" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="861.74" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (171,048,446 samples, 0.59%)</title><rect x="1118.1" y="597" width="6.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1121.07" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,018,355 samples, 0.09%)</title><rect x="67.8" y="453" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="70.78" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (133,144,064 samples, 0.46%)</title><rect x="218.5" y="853" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="221.48" y="863.5" ></text>
</g>
<g >
<title>dlopen_doit (26,209,701 samples, 0.09%)</title><rect x="195.0" y="357" width="1.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="198.03" y="367.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,202,587 samples, 0.09%)</title><rect x="59.2" y="421" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="62.23" y="431.5" ></text>
</g>
<g >
<title>kthread_blkcg (34,276,296 samples, 0.12%)</title><rect x="693.7" y="277" width="1.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="696.69" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (52,416,674 samples, 0.18%)</title><rect x="122.8" y="341" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.82" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,960 samples, 0.09%)</title><rect x="133.7" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.70" y="447.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (243,159,198 samples, 0.83%)</title><rect x="203.8" y="693" width="9.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="206.77" y="703.5" ></text>
</g>
<g >
<title>page_fault (22,160,344 samples, 0.08%)</title><rect x="204.8" y="309" width="0.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="207.83" y="319.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (102,735,322 samples, 0.35%)</title><rect x="919.3" y="613" width="4.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="922.34" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,888 samples, 0.09%)</title><rect x="150.6" y="405" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.60" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (61,635,632 samples, 0.21%)</title><rect x="142.7" y="309" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="319.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,209,828 samples, 0.09%)</title><rect x="126.1" y="245" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="129.10" y="255.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="773" width="1.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1191.64" y="783.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (358,124,194 samples, 1.23%)</title><rect x="886.0" y="405" width="14.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="888.97" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (413,439,208 samples, 1.42%)</title><rect x="154.7" y="837" width="16.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="847.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,101,693 samples, 0.12%)</title><rect x="95.8" y="341" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="98.78" y="351.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (27,896,301 samples, 0.10%)</title><rect x="94.7" y="405" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="97.66" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_read (85,833,913 samples, 0.29%)</title><rect x="163.4" y="197" width="3.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="166.41" y="207.5" ></text>
</g>
<g >
<title>_int_malloc (34,194,760 samples, 0.12%)</title><rect x="607.0" y="469" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="609.96" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (355,607,317 samples, 1.22%)</title><rect x="171.4" y="901" width="14.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="174.40" y="911.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (32,878,788 samples, 0.11%)</title><rect x="179.4" y="453" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="182.36" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,636 samples, 0.09%)</title><rect x="58.2" y="405" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="61.17" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,863 samples, 0.09%)</title><rect x="73.0" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.04" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (34,186,177 samples, 0.12%)</title><rect x="76.5" y="453" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.51" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (25,918,556 samples, 0.09%)</title><rect x="77.9" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.89" y="463.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (34,151,016 samples, 0.12%)</title><rect x="91.2" y="69" width="1.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="94.19" y="79.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,821 samples, 0.09%)</title><rect x="97.9" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.90" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (275,784,273 samples, 0.94%)</title><rect x="157.8" y="501" width="11.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.84" y="511.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (101,246,105 samples, 0.35%)</title><rect x="1173.2" y="821" width="4.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1176.24" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.77" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,326,266 samples, 0.18%)</title><rect x="586.2" y="661" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="589.22" y="671.5" ></text>
</g>
<g >
<title>xas_start (26,112,043 samples, 0.09%)</title><rect x="164.8" y="37" width="1.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="167.77" y="47.5" ></text>
</g>
<g >
<title>[python3.12] (59,468,639 samples, 0.20%)</title><rect x="211.2" y="389" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.20" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (25,260,870 samples, 0.09%)</title><rect x="72.0" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.02" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,120,135 samples, 0.12%)</title><rect x="213.6" y="325" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="216.60" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (51,849,972 samples, 0.18%)</title><rect x="132.7" y="469" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="135.67" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (296,586,853 samples, 1.02%)</title><rect x="142.7" y="933" width="12.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="943.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (150,320,918 samples, 0.51%)</title><rect x="147.6" y="613" width="6.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="150.55" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,863 samples, 0.09%)</title><rect x="202.7" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.71" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (243,159,198 samples, 0.83%)</title><rect x="203.8" y="773" width="9.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="206.77" y="783.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (170,415,180 samples, 0.58%)</title><rect x="1142.9" y="565" width="6.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1145.95" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (102,531,015 samples, 0.35%)</title><rect x="175.2" y="485" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.21" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,890 samples, 0.09%)</title><rect x="222.8" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.80" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (24,363,856 samples, 0.08%)</title><rect x="116.0" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.96" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="165" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (296,586,853 samples, 1.02%)</title><rect x="142.7" y="853" width="12.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="863.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (34,282,533 samples, 0.12%)</title><rect x="901.8" y="581" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="904.79" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (102,344,064 samples, 0.35%)</title><rect x="128.5" y="325" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (28,290,192 samples, 0.10%)</title><rect x="63.5" y="469" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="66.46" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (135,321,245 samples, 0.46%)</title><rect x="205.7" y="437" width="5.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="208.73" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (120,163,633 samples, 0.41%)</title><rect x="186.8" y="709" width="4.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="189.79" y="719.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (34,221,096 samples, 0.12%)</title><rect x="1140.2" y="581" width="1.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1143.18" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,138,992 samples, 0.12%)</title><rect x="116.9" y="357" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="119.95" y="367.5" ></text>
</g>
<g >
<title>std::multimap&lt;float, unsigned long, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::insert&lt;std::pair&lt;float, unsigned long&gt; &gt; (68,483,590 samples, 0.23%)</title><rect x="1149.8" y="629" width="2.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1152.83" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,764 samples, 0.09%)</title><rect x="223.9" y="805" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="226.86" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (68,207,985 samples, 0.23%)</title><rect x="557.5" y="853" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="560.47" y="863.5" ></text>
</g>
<g >
<title>do_user_addr_fault (33,257,301 samples, 0.11%)</title><rect x="900.4" y="453" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="903.45" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,139,888 samples, 0.12%)</title><rect x="215.0" y="437" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="217.98" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,961,501 samples, 0.09%)</title><rect x="99.0" y="373" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="101.95" y="383.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator* (34,156,864 samples, 0.12%)</title><rect x="25.3" y="981" width="1.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="28.29" y="991.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (60,209,080 samples, 0.21%)</title><rect x="134.8" y="629" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="137.76" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (243,159,198 samples, 0.83%)</title><rect x="203.8" y="837" width="9.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="206.77" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="901" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (189,478,031 samples, 0.65%)</title><rect x="76.5" y="725" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.51" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (48,355,673 samples, 0.17%)</title><rect x="219.8" y="341" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="222.79" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (32,207,239 samples, 0.11%)</title><rect x="145.2" y="325" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="148.19" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,138,992 samples, 0.12%)</title><rect x="116.9" y="277" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="119.95" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,326,266 samples, 0.18%)</title><rect x="586.2" y="485" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="589.22" y="495.5" ></text>
</g>
<g >
<title>handle_mm_fault (102,514,763 samples, 0.35%)</title><rect x="692.3" y="357" width="4.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="695.32" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,134,229 samples, 0.09%)</title><rect x="118.3" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.33" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (34,177,262 samples, 0.12%)</title><rect x="1158.1" y="581" width="1.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1161.11" y="591.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,571,412 samples, 0.11%)</title><rect x="169.0" y="373" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="171.98" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (335,569,928 samples, 1.15%)</title><rect x="157.8" y="693" width="13.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="160.84" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,559,354 samples, 0.11%)</title><rect x="218.5" y="709" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="221.48" y="719.5" ></text>
</g>
<g >
<title>[index.cpython-312-x86_64-linux-gnu.so] (26,134,229 samples, 0.09%)</title><rect x="118.3" y="309" width="1.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="121.33" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (58,502,848 samples, 0.20%)</title><rect x="116.0" y="565" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.96" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (18,140,811 samples, 0.06%)</title><rect x="97.2" y="597" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.16" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,623,323 samples, 0.12%)</title><rect x="188.2" y="309" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.17" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (24,363,856 samples, 0.08%)</title><rect x="116.0" y="405" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="118.96" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,587 samples, 0.09%)</title><rect x="59.2" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.23" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,211,764 samples, 0.09%)</title><rect x="223.9" y="917" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="226.86" y="927.5" ></text>
</g>
<g >
<title>do_page_fault (34,120,135 samples, 0.12%)</title><rect x="213.6" y="197" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="216.60" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (133,144,064 samples, 0.46%)</title><rect x="218.5" y="821" width="5.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="221.48" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (129,080,205 samples, 0.44%)</title><rect x="77.9" y="501" width="5.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.89" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,150,710 samples, 0.09%)</title><rect x="106.1" y="389" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="109.09" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (183,690,559 samples, 0.63%)</title><rect x="203.8" y="549" width="7.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="206.77" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (56,135,139 samples, 0.19%)</title><rect x="193.8" y="485" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="196.82" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (51,849,972 samples, 0.18%)</title><rect x="132.7" y="581" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.67" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,086,030 samples, 0.09%)</title><rect x="185.8" y="261" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="188.77" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,061,992 samples, 0.09%)</title><rect x="60.3" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.29" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,086,030 samples, 0.09%)</title><rect x="185.8" y="757" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="188.77" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,209,080 samples, 0.21%)</title><rect x="134.8" y="917" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="137.76" y="927.5" ></text>
</g>
<g >
<title>finish_task_switch (5,018,746 samples, 0.02%)</title><rect x="554.3" y="869" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="557.29" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="495.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,061,992 samples, 0.09%)</title><rect x="60.3" y="373" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="63.29" y="383.5" ></text>
</g>
<g >
<title>_PyObject_LookupAttr (26,017,147 samples, 0.09%)</title><rect x="221.7" y="229" width="1.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="224.75" y="239.5" ></text>
</g>
<g >
<title>__handle_mm_fault (24,747,959 samples, 0.08%)</title><rect x="141.7" y="821" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="144.70" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,675,816 samples, 0.27%)</title><rect x="199.5" y="341" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="202.53" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,242,543 samples, 0.12%)</title><rect x="33.6" y="981" width="1.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="36.57" y="991.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (68,264,248 samples, 0.23%)</title><rect x="850.8" y="277" width="2.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="853.81" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (25,721,139 samples, 0.09%)</title><rect x="167.9" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.94" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,061,992 samples, 0.09%)</title><rect x="60.3" y="261" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.29" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (34,193,868 samples, 0.12%)</title><rect x="590.8" y="645" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="593.77" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,460,519 samples, 0.09%)</title><rect x="101.4" y="581" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="104.36" y="591.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,415,202 samples, 0.18%)</title><rect x="216.4" y="373" width="2.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="219.36" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (68,400,819 samples, 0.23%)</title><rect x="1100.2" y="533" width="2.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1103.15" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,134,229 samples, 0.09%)</title><rect x="118.3" y="405" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="121.33" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (128,626,150 samples, 0.44%)</title><rect x="174.2" y="533" width="5.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="177.16" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,888 samples, 0.09%)</title><rect x="150.6" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.60" y="351.5" ></text>
</g>
<g >
<title>do_anonymous_page (33,257,301 samples, 0.11%)</title><rect x="900.4" y="405" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="903.45" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (86,042,816 samples, 0.29%)</title><rect x="188.2" y="501" width="3.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="191.17" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (48,369,314 samples, 0.17%)</title><rect x="203.8" y="421" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (710,026,061 samples, 2.43%)</title><rect x="142.7" y="965" width="28.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="145.70" y="975.5" >Py..</text>
</g>
<g >
<title>PyEval_EvalCode (190,070,692 samples, 0.65%)</title><rect x="196.1" y="613" width="7.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="199.09" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,090,815 samples, 0.12%)</title><rect x="908.4" y="565" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="911.37" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,814 samples, 0.09%)</title><rect x="146.5" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="149.49" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,203,576 samples, 0.09%)</title><rect x="216.4" y="245" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="219.36" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (47,489,663 samples, 0.16%)</title><rect x="79.9" y="213" width="2.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="82.94" y="223.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_initialize_vertex&gt; (34,269,764 samples, 0.12%)</title><rect x="923.5" y="533" width="1.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="926.50" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (91,763,092 samples, 0.31%)</title><rect x="102.4" y="565" width="3.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="105.39" y="575.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,293,118 samples, 0.12%)</title><rect x="1098.8" y="453" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1101.77" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,080,610 samples, 0.12%)</title><rect x="209.8" y="245" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.82" y="255.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (75,294,107 samples, 0.26%)</title><rect x="147.6" y="469" width="3.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="150.55" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (65,929,793 samples, 0.23%)</title><rect x="102.4" y="437" width="2.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.39" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (34,221,096 samples, 0.12%)</title><rect x="1140.2" y="565" width="1.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1143.18" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (33,834,731 samples, 0.12%)</title><rect x="135.8" y="197" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.83" y="207.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (170,415,180 samples, 0.58%)</title><rect x="1142.9" y="581" width="6.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1145.95" y="591.5" ></text>
</g>
<g >
<title>__free_pages (19,219,567 samples, 0.07%)</title><rect x="1167.0" y="837" width="0.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1169.98" y="847.5" ></text>
</g>
<g >
<title>_PyObject_Call (58,502,848 samples, 0.20%)</title><rect x="116.0" y="677" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="118.96" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (102,344,064 samples, 0.35%)</title><rect x="128.5" y="341" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (33,162,148 samples, 0.11%)</title><rect x="140.4" y="373" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.36" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (51,689,355 samples, 0.18%)</title><rect x="154.7" y="453" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="463.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (34,256,975 samples, 0.12%)</title><rect x="596.3" y="565" width="1.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="599.30" y="575.5" ></text>
</g>
<g >
<title>rw_verify_area (26,198,614 samples, 0.09%)</title><rect x="165.8" y="149" width="1.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="168.82" y="159.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,212,636 samples, 0.09%)</title><rect x="58.2" y="453" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="61.17" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (80,703,196 samples, 0.28%)</title><rect x="63.5" y="581" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.46" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,960,916 samples, 0.10%)</title><rect x="85.9" y="373" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.94" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (27,896,301 samples, 0.10%)</title><rect x="94.7" y="565" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="97.66" y="575.5" ></text>
</g>
<g >
<title>ret_from_fork (13,458,128 samples, 0.05%)</title><rect x="234.8" y="981" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="237.76" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (48,369,314 samples, 0.17%)</title><rect x="203.8" y="373" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_read (85,833,913 samples, 0.29%)</title><rect x="163.4" y="261" width="3.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="166.41" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (34,137,131 samples, 0.12%)</title><rect x="142.7" y="165" width="1.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="145.70" y="175.5" ></text>
</g>
<g >
<title>unmap_single_vma (168,744,858 samples, 0.58%)</title><rect x="1170.5" y="869" width="6.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1173.51" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (34,176,341 samples, 0.12%)</title><rect x="232.0" y="981" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="235.00" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (34,145,840 samples, 0.12%)</title><rect x="588.3" y="725" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="591.33" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (78,630,413 samples, 0.27%)</title><rect x="160.2" y="261" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.24" y="271.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,571,412 samples, 0.11%)</title><rect x="169.0" y="517" width="1.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="171.98" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="325" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.77" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (25,918,556 samples, 0.09%)</title><rect x="77.9" y="245" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="80.89" y="255.5" ></text>
</g>
<g >
<title>PyUFunc_FromFuncAndDataAndSignatureAndIdentity (47,489,663 samples, 0.16%)</title><rect x="79.9" y="357" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.94" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (24,789,767 samples, 0.08%)</title><rect x="78.9" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.94" y="367.5" ></text>
</g>
<g >
<title>get_page_from_freelist (34,026,587 samples, 0.12%)</title><rect x="692.3" y="277" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="695.32" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,888 samples, 0.09%)</title><rect x="150.6" y="325" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="153.60" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (33,257,301 samples, 0.11%)</title><rect x="900.4" y="389" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="903.45" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (174,253,697 samples, 0.60%)</title><rect x="121.5" y="949" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.49" y="959.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (68,546,462 samples, 0.23%)</title><rect x="1144.3" y="517" width="2.8" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1147.33" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,209,080 samples, 0.21%)</title><rect x="134.8" y="885" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="137.76" y="895.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (67,767,268 samples, 0.23%)</title><rect x="958.0" y="517" width="2.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="961.02" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (156,416,788 samples, 0.54%)</title><rect x="67.8" y="773" width="6.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="70.78" y="783.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_examine_edge&gt; (136,342,899 samples, 0.47%)</title><rect x="929.0" y="517" width="5.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="932.04" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (57,799,046 samples, 0.20%)</title><rect x="180.7" y="421" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.69" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,863 samples, 0.09%)</title><rect x="73.0" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.04" y="623.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (34,138,992 samples, 0.12%)</title><rect x="116.9" y="325" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="119.95" y="335.5" ></text>
</g>
<g >
<title>alloc_pages_vma (34,244,955 samples, 0.12%)</title><rect x="609.7" y="261" width="1.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="612.72" y="271.5" ></text>
</g>
<g >
<title>do_last (25,918,556 samples, 0.09%)</title><rect x="77.9" y="165" width="1.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="80.89" y="175.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,326,266 samples, 0.18%)</title><rect x="586.2" y="741" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="589.22" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (48,895,588 samples, 0.17%)</title><rect x="205.7" y="357" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="208.73" y="367.5" ></text>
</g>
<g >
<title>schedule (5,018,746 samples, 0.02%)</title><rect x="554.3" y="901" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="557.29" y="911.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (25,260,870 samples, 0.09%)</title><rect x="72.0" y="277" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="75.02" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,764 samples, 0.09%)</title><rect x="223.9" y="725" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="226.86" y="735.5" ></text>
</g>
<g >
<title>_PyObject_Call (58,502,848 samples, 0.20%)</title><rect x="116.0" y="549" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="118.96" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="805" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (183,690,559 samples, 0.63%)</title><rect x="203.8" y="533" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (157,213,577 samples, 0.54%)</title><rect x="197.4" y="501" width="6.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="200.42" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (67,904,390 samples, 0.23%)</title><rect x="1111.2" y="581" width="2.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1114.21" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,817 samples, 0.12%)</title><rect x="186.8" y="437" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.79" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,275,847 samples, 0.23%)</title><rect x="171.4" y="533" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="174.40" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (52,417,011 samples, 0.18%)</title><rect x="175.2" y="405" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.21" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (25,640,012 samples, 0.09%)</title><rect x="132.7" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.67" y="319.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::discover_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (34,263,420 samples, 0.12%)</title><rect x="927.7" y="533" width="1.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="930.65" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (24,545,339 samples, 0.08%)</title><rect x="192.8" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.83" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (196,548,144 samples, 0.67%)</title><rect x="102.4" y="757" width="7.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.39" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,464,634 samples, 0.11%)</title><rect x="100.0" y="469" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.00" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (33,834,731 samples, 0.12%)</title><rect x="135.8" y="261" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.83" y="271.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (68,278,988 samples, 0.23%)</title><rect x="1167.8" y="997" width="2.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1170.75" y="1007.5" ></text>
</g>
<g >
<title>_PyObject_GC_NewVar (47,489,663 samples, 0.16%)</title><rect x="79.9" y="309" width="2.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="82.94" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,888 samples, 0.09%)</title><rect x="150.6" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.60" y="495.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (170,453,925 samples, 0.58%)</title><rect x="947.0" y="501" width="6.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="949.99" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,018,355 samples, 0.09%)</title><rect x="67.8" y="485" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="70.78" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,764 samples, 0.09%)</title><rect x="176.3" y="245" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.27" y="255.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (33,693,608 samples, 0.12%)</title><rect x="858.7" y="373" width="1.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="861.74" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (275,784,273 samples, 0.94%)</title><rect x="157.8" y="485" width="11.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.84" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (250,063,134 samples, 0.86%)</title><rect x="157.8" y="341" width="10.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.84" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,925,438 samples, 0.10%)</title><rect x="193.8" y="293" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="196.82" y="303.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (168,744,858 samples, 0.58%)</title><rect x="1170.5" y="837" width="6.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1173.51" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="837" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,520 samples, 0.09%)</title><rect x="122.8" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.82" y="287.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (34,254,867 samples, 0.12%)</title><rect x="1050.6" y="501" width="1.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1053.57" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (52,331,898 samples, 0.18%)</title><rect x="197.4" y="373" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.42" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (34,244,955 samples, 0.12%)</title><rect x="609.7" y="341" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="612.72" y="351.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,126 samples, 0.09%)</title><rect x="109.3" y="501" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="112.27" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (86,555,090 samples, 0.30%)</title><rect x="215.0" y="613" width="3.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="217.98" y="623.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (170,415,180 samples, 0.58%)</title><rect x="1142.9" y="549" width="6.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1145.95" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (102,344,064 samples, 0.35%)</title><rect x="128.5" y="389" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,464,634 samples, 0.11%)</title><rect x="100.0" y="773" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.00" y="783.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (102,764,265 samples, 0.35%)</title><rect x="971.8" y="501" width="4.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="974.82" y="511.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (68,328,664 samples, 0.23%)</title><rect x="1039.5" y="533" width="2.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1042.52" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (529,172,581 samples, 1.81%)</title><rect x="76.5" y="837" width="21.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="79.51" y="847.5" >P..</text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,649 samples, 0.09%)</title><rect x="83.1" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.11" y="463.5" ></text>
</g>
<g >
<title>operator new (33,688,686 samples, 0.12%)</title><rect x="1085.0" y="501" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1088.01" y="511.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (34,282,533 samples, 0.12%)</title><rect x="901.8" y="613" width="1.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="904.79" y="623.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,212,863 samples, 0.09%)</title><rect x="73.0" y="421" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="76.04" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (24,776,733 samples, 0.08%)</title><rect x="151.7" y="181" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.66" y="191.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,149,751 samples, 0.09%)</title><rect x="137.2" y="229" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="140.20" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (68,557,218 samples, 0.23%)</title><rect x="686.8" y="437" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="689.78" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (34,151,016 samples, 0.12%)</title><rect x="91.2" y="245" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.19" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,243 samples, 0.09%)</title><rect x="170.3" y="437" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="173.34" y="447.5" ></text>
</g>
<g >
<title>PyObject_GetBuffer (34,224,387 samples, 0.12%)</title><rect x="616.3" y="437" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="619.31" y="447.5" ></text>
</g>
<g >
<title>try_charge (68,264,248 samples, 0.23%)</title><rect x="850.8" y="261" width="2.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="853.81" y="271.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,477,215 samples, 0.27%)</title><rect x="58.2" y="805" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="61.17" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (34,101,693 samples, 0.12%)</title><rect x="95.8" y="325" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.78" y="335.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,134,229 samples, 0.09%)</title><rect x="118.3" y="325" width="1.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="121.33" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,587 samples, 0.09%)</title><rect x="59.2" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.23" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,202,587 samples, 0.09%)</title><rect x="59.2" y="341" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="62.23" y="351.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,828 samples, 0.09%)</title><rect x="126.1" y="357" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="129.10" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (296,586,853 samples, 1.02%)</title><rect x="142.7" y="725" width="12.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.70" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,558 samples, 0.09%)</title><rect x="66.7" y="533" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.72" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (31,809,451 samples, 0.11%)</title><rect x="102.4" y="373" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.39" y="383.5" ></text>
</g>
<g >
<title>InitOperators (47,489,663 samples, 0.16%)</title><rect x="79.9" y="373" width="2.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="82.94" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,626 samples, 0.09%)</title><rect x="217.4" y="229" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="220.42" y="239.5" ></text>
</g>
<g >
<title>do_fault (34,084,795 samples, 0.12%)</title><rect x="226.8" y="709" width="1.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="229.81" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (154,194,036 samples, 0.53%)</title><rect x="128.5" y="805" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="805" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (52,326,266 samples, 0.18%)</title><rect x="586.2" y="709" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="589.22" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,524 samples, 0.09%)</title><rect x="107.2" y="293" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="303.5" ></text>
</g>
<g >
<title>PyUnicode_New (22,160,344 samples, 0.08%)</title><rect x="204.8" y="341" width="0.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="207.83" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (154,194,036 samples, 0.53%)</title><rect x="128.5" y="661" width="6.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="131.53" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,992 samples, 0.12%)</title><rect x="116.9" y="405" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.95" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (190,070,692 samples, 0.65%)</title><rect x="196.1" y="597" width="7.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.09" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="133" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="591.5" ></text>
</g>
<g >
<title>initumath (47,489,663 samples, 0.16%)</title><rect x="79.9" y="389" width="2.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="82.94" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (29,291,122 samples, 0.10%)</title><rect x="191.6" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.64" y="303.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (33,257,301 samples, 0.11%)</title><rect x="900.4" y="517" width="1.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="903.45" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="549" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1163.87" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,180,018 samples, 0.09%)</title><rect x="111.4" y="389" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="114.39" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,552 samples, 0.09%)</title><rect x="61.3" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="319.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (68,400,819 samples, 0.23%)</title><rect x="1100.2" y="485" width="2.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1103.15" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (136,670,961 samples, 0.47%)</title><rect x="116.0" y="965" width="5.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="118.96" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (34,221,616 samples, 0.12%)</title><rect x="956.6" y="501" width="1.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="959.64" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (339,694,550 samples, 1.16%)</title><rect x="84.2" y="805" width="13.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="87.17" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (335,569,928 samples, 1.15%)</title><rect x="157.8" y="725" width="13.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="160.84" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (24,789,767 samples, 0.08%)</title><rect x="78.9" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.94" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (34,080,610 samples, 0.12%)</title><rect x="209.8" y="309" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.82" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (34,217,192 samples, 0.12%)</title><rect x="1116.7" y="581" width="1.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1119.69" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,817 samples, 0.12%)</title><rect x="186.8" y="421" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.79" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,932,890 samples, 0.11%)</title><rect x="121.5" y="501" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="124.49" y="511.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (102,659,343 samples, 0.35%)</title><rect x="1144.3" y="533" width="4.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1147.33" y="543.5" ></text>
</g>
<g >
<title>do_anonymous_page (22,160,344 samples, 0.08%)</title><rect x="204.8" y="213" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="207.83" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (48,355,673 samples, 0.17%)</title><rect x="219.8" y="325" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="222.79" y="335.5" ></text>
</g>
<g >
<title>PyArray_NewFromDescr (68,255,041 samples, 0.23%)</title><rect x="908.4" y="645" width="2.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="911.37" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (67,416,783 samples, 0.23%)</title><rect x="1097.4" y="517" width="2.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1100.43" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (25,914,139 samples, 0.09%)</title><rect x="138.3" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.25" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,649 samples, 0.09%)</title><rect x="83.1" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.11" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (34,137,131 samples, 0.12%)</title><rect x="142.7" y="197" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="145.70" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (34,171,141 samples, 0.12%)</title><rect x="907.0" y="565" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="909.99" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="245" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (182,625,346 samples, 0.63%)</title><rect x="66.7" y="901" width="7.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.72" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,168,113 samples, 0.27%)</title><rect x="118.3" y="677" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.33" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (119,943,099 samples, 0.41%)</title><rect x="89.8" y="517" width="4.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="92.81" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (77,869,280 samples, 0.27%)</title><rect x="154.7" y="709" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="157.69" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (58,421,053 samples, 0.20%)</title><rect x="145.2" y="373" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="148.19" y="383.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,374,349 samples, 0.09%)</title><rect x="134.8" y="453" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="137.76" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,828 samples, 0.09%)</title><rect x="126.1" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.10" y="351.5" ></text>
</g>
<g >
<title>PySequence_Tuple (48,817,923 samples, 0.17%)</title><rect x="151.7" y="453" width="1.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="154.66" y="463.5" ></text>
</g>
<g >
<title>PyUnicode_Concat (26,212,636 samples, 0.09%)</title><rect x="58.2" y="309" width="1.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="61.17" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="949" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1165.25" y="959.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (125,826,532 samples, 0.43%)</title><rect x="180.7" y="565" width="5.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="183.69" y="575.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,712 samples, 0.09%)</title><rect x="587.3" y="389" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="590.27" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (104,881,679 samples, 0.36%)</title><rect x="199.5" y="469" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.53" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (33,822,668 samples, 0.12%)</title><rect x="1111.2" y="549" width="1.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1114.21" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (102,710,651 samples, 0.35%)</title><rect x="977.4" y="501" width="4.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="980.36" y="511.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (34,054,098 samples, 0.12%)</title><rect x="1040.9" y="485" width="1.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1043.90" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (111,425,706 samples, 0.38%)</title><rect x="137.2" y="949" width="4.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.20" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,135 samples, 0.12%)</title><rect x="213.6" y="549" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.60" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (182,625,346 samples, 0.63%)</title><rect x="66.7" y="821" width="7.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.72" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,914,139 samples, 0.09%)</title><rect x="138.3" y="661" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="141.25" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,914,139 samples, 0.09%)</title><rect x="138.3" y="613" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.25" y="623.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (18,140,811 samples, 0.06%)</title><rect x="97.2" y="357" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="100.16" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (6,331,099,151 samples, 21.69%)</title><rect x="608.3" y="485" width="255.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="611.34" y="495.5" >_PyFunction_Vectorcall</text>
</g>
<g >
<title>PyEval_EvalCode (189,478,031 samples, 0.65%)</title><rect x="76.5" y="581" width="7.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="79.51" y="591.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (34,179,984 samples, 0.12%)</title><rect x="560.2" y="757" width="1.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="563.23" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,291,122 samples, 0.10%)</title><rect x="191.6" y="309" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.64" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (413,439,208 samples, 1.42%)</title><rect x="154.7" y="853" width="16.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="863.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,199,668 samples, 0.09%)</title><rect x="139.3" y="581" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="142.30" y="591.5" ></text>
</g>
<g >
<title>PyTuple_New (26,195,640 samples, 0.09%)</title><rect x="197.4" y="357" width="1.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="200.42" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,697 samples, 0.09%)</title><rect x="64.6" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.60" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (60,209,080 samples, 0.21%)</title><rect x="134.8" y="789" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.76" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (77,657,873 samples, 0.27%)</title><rect x="69.9" y="485" width="3.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="72.91" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,250 samples, 0.09%)</title><rect x="153.6" y="373" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="156.63" y="383.5" ></text>
</g>
<g >
<title>AddNodeIDCustom (34,084,795 samples, 0.12%)</title><rect x="226.8" y="837" width="1.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="229.81" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (49,522,514 samples, 0.17%)</title><rect x="148.6" y="373" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.59" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (78,477,215 samples, 0.27%)</title><rect x="58.2" y="533" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.17" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,552 samples, 0.09%)</title><rect x="61.3" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,086,030 samples, 0.09%)</title><rect x="185.8" y="789" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="188.77" y="799.5" ></text>
</g>
<g >
<title>PyNumber_And (25,721,139 samples, 0.09%)</title><rect x="167.9" y="309" width="1.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="170.94" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="789" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (24,545,339 samples, 0.08%)</title><rect x="192.8" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.83" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="485" width="1.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1163.87" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (51,849,972 samples, 0.18%)</title><rect x="132.7" y="517" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.67" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (243,159,198 samples, 0.83%)</title><rect x="203.8" y="805" width="9.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="206.77" y="815.5" ></text>
</g>
<g >
<title>_dl_relocate_object (33,571,412 samples, 0.11%)</title><rect x="169.0" y="197" width="1.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="171.98" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,162,148 samples, 0.11%)</title><rect x="140.4" y="821" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.36" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (52,331,898 samples, 0.18%)</title><rect x="197.4" y="453" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.42" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (86,555,090 samples, 0.30%)</title><rect x="215.0" y="805" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (27,896,301 samples, 0.10%)</title><rect x="94.7" y="357" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="97.66" y="367.5" ></text>
</g>
<g >
<title>do_user_addr_fault (33,571,412 samples, 0.11%)</title><rect x="169.0" y="101" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="171.98" y="111.5" ></text>
</g>
<g >
<title>[python3.12] (26,150,710 samples, 0.09%)</title><rect x="106.1" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.09" y="527.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (168,495,394 samples, 0.58%)</title><rect x="1069.9" y="597" width="6.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1072.90" y="607.5" ></text>
</g>
<g >
<title>get_page_from_freelist (26,136,258 samples, 0.09%)</title><rect x="198.5" y="165" width="1.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="201.48" y="175.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (14,313,598,062 samples, 49.03%)</title><rect x="583.7" y="853" width="578.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="586.71" y="863.5" >PyEval_EvalCode</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (24,789,767 samples, 0.08%)</title><rect x="78.9" y="389" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="81.94" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (52,397,003 samples, 0.18%)</title><rect x="69.9" y="341" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.91" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (119,943,099 samples, 0.41%)</title><rect x="89.8" y="629" width="4.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="92.81" y="639.5" ></text>
</g>
<g >
<title>get_page_from_freelist (24,747,959 samples, 0.08%)</title><rect x="141.7" y="757" width="1.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="144.70" y="767.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (67,767,268 samples, 0.23%)</title><rect x="958.0" y="485" width="2.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="961.02" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,186,177 samples, 0.12%)</title><rect x="76.5" y="405" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="79.51" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,186,177 samples, 0.12%)</title><rect x="76.5" y="373" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="79.51" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,164,226 samples, 0.12%)</title><rect x="909.7" y="501" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="912.75" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,101,693 samples, 0.12%)</title><rect x="95.8" y="357" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.78" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (25,961,501 samples, 0.09%)</title><rect x="99.0" y="757" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.95" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,863 samples, 0.09%)</title><rect x="73.0" y="277" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="76.04" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (27,896,301 samples, 0.10%)</title><rect x="94.7" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.66" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,649 samples, 0.09%)</title><rect x="83.1" y="437" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="86.11" y="447.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,199,668 samples, 0.09%)</title><rect x="139.3" y="501" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="142.30" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (275,784,273 samples, 0.94%)</title><rect x="157.8" y="597" width="11.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.84" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,697 samples, 0.09%)</title><rect x="64.6" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.60" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_check_len (34,081,722 samples, 0.12%)</title><rect x="1112.6" y="565" width="1.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1115.58" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (34,178,020 samples, 0.12%)</title><rect x="862.9" y="405" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="865.85" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (836,816,200 samples, 2.87%)</title><rect x="76.5" y="885" width="33.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.51" y="895.5" >[p..</text>
</g>
<g >
<title>[python3.12] (26,095,135 samples, 0.09%)</title><rect x="174.2" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.16" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (34,139,888 samples, 0.12%)</title><rect x="215.0" y="453" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,208,888 samples, 0.09%)</title><rect x="150.6" y="421" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="153.60" y="431.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (68,518,504 samples, 0.23%)</title><rect x="999.5" y="501" width="2.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1002.46" y="511.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (25,918,556 samples, 0.09%)</title><rect x="77.9" y="421" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="80.89" y="431.5" ></text>
</g>
<g >
<title>do_brk_flags (60,381,389 samples, 0.21%)</title><rect x="612.5" y="245" width="2.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="615.49" y="255.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (29,925,438 samples, 0.10%)</title><rect x="193.8" y="341" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="196.82" y="351.5" ></text>
</g>
<g >
<title>_PyImport_GetModuleAttr (116,937,363 samples, 0.40%)</title><rect x="1162.3" y="853" width="4.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1165.25" y="863.5" ></text>
</g>
<g >
<title>__do_page_fault (25,826,519 samples, 0.09%)</title><rect x="119.4" y="293" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="122.38" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (25,460,519 samples, 0.09%)</title><rect x="101.4" y="805" width="1.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="104.36" y="815.5" ></text>
</g>
<g >
<title>PyRun_StringFlags (33,882,874 samples, 0.12%)</title><rect x="87.2" y="357" width="1.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="90.16" y="367.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,208,888 samples, 0.09%)</title><rect x="150.6" y="453" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="153.60" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (78,168,113 samples, 0.27%)</title><rect x="118.3" y="629" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.33" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (33,623,323 samples, 0.12%)</title><rect x="188.2" y="293" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.17" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (33,464,634 samples, 0.11%)</title><rect x="100.0" y="437" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.00" y="447.5" ></text>
</g>
<g >
<title>PyArray_NewFromDescr_int (68,255,041 samples, 0.23%)</title><rect x="908.4" y="629" width="2.7" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="911.37" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (33,882,874 samples, 0.12%)</title><rect x="87.2" y="373" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.16" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (243,159,198 samples, 0.83%)</title><rect x="203.8" y="821" width="9.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (183,690,559 samples, 0.63%)</title><rect x="203.8" y="565" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.77" y="575.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (34,026,587 samples, 0.12%)</title><rect x="692.3" y="293" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="695.32" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,162,148 samples, 0.11%)</title><rect x="140.4" y="581" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="143.36" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (18,140,811 samples, 0.06%)</title><rect x="97.2" y="549" width="0.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="100.16" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,179,925 samples, 0.09%)</title><rect x="156.8" y="245" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.78" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,365 samples, 0.09%)</title><rect x="120.4" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.43" y="463.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,207,764 samples, 0.09%)</title><rect x="176.3" y="357" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="179.27" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33,257,301 samples, 0.11%)</title><rect x="900.4" y="421" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="903.45" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (34,259,501 samples, 0.12%)</title><rect x="41.9" y="981" width="1.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="44.86" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (52,345,047 samples, 0.18%)</title><rect x="207.7" y="277" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.70" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (25,826,519 samples, 0.09%)</title><rect x="119.4" y="309" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="122.38" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (68,266,745 samples, 0.23%)</title><rect x="89.8" y="293" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.81" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,527,697 samples, 0.09%)</title><rect x="68.8" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.83" y="399.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (33,970,452 samples, 0.12%)</title><rect x="127.2" y="453" width="1.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="130.16" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,139,888 samples, 0.12%)</title><rect x="215.0" y="501" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,126 samples, 0.09%)</title><rect x="109.3" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.27" y="399.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT::optimize_for_M_EPs (6,180,761,554 samples, 21.17%)</title><rect x="912.4" y="661" width="249.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="915.43" y="671.5" >diff_Nexullance_IT::optimize_for_..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,419,493 samples, 0.18%)</title><rect x="189.5" y="325" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="192.52" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,863 samples, 0.09%)</title><rect x="202.7" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.71" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (34,276,296 samples, 0.12%)</title><rect x="693.7" y="293" width="1.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="696.69" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,415,202 samples, 0.18%)</title><rect x="216.4" y="293" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="219.36" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (17,813,920 samples, 0.06%)</title><rect x="84.2" y="341" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (60,381,389 samples, 0.21%)</title><rect x="612.5" y="277" width="2.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="615.49" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (128,626,150 samples, 0.44%)</title><rect x="174.2" y="581" width="5.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.16" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (34,120,342 samples, 0.12%)</title><rect x="103.7" y="341" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.67" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (190,070,692 samples, 0.65%)</title><rect x="196.1" y="757" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.09" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (24,776,733 samples, 0.08%)</title><rect x="151.7" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.66" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (7,294,475,978 samples, 24.99%)</title><rect x="607.0" y="581" width="294.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="609.96" y="591.5" >[python3.12]</text>
</g>
<g >
<title>__handle_mm_fault (34,151,016 samples, 0.12%)</title><rect x="91.2" y="149" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="94.19" y="159.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,126 samples, 0.09%)</title><rect x="109.3" y="277" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.27" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,587 samples, 0.09%)</title><rect x="59.2" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.23" y="415.5" ></text>
</g>
<g >
<title>free_pipe_info (19,219,567 samples, 0.07%)</title><rect x="1167.0" y="853" width="0.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1169.98" y="863.5" ></text>
</g>
<g >
<title>_PyObject_Call (189,478,031 samples, 0.65%)</title><rect x="76.5" y="757" width="7.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.51" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (33,571,412 samples, 0.11%)</title><rect x="169.0" y="581" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.98" y="591.5" ></text>
</g>
<g >
<title>PySequence_Tuple (25,260,870 samples, 0.09%)</title><rect x="72.0" y="325" width="1.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="75.02" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,559,354 samples, 0.11%)</title><rect x="218.5" y="661" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="221.48" y="671.5" ></text>
</g>
<g >
<title>do_page_fault (34,164,226 samples, 0.12%)</title><rect x="909.7" y="565" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="912.75" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (273,076,414 samples, 0.94%)</title><rect x="1138.8" y="613" width="11.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1141.80" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,199,668 samples, 0.09%)</title><rect x="139.3" y="645" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="142.30" y="655.5" ></text>
</g>
<g >
<title>[_json.cpython-312-x86_64-linux-gnu.so] (26,195,992 samples, 0.09%)</title><rect x="177.3" y="405" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="180.33" y="415.5" ></text>
</g>
<g >
<title>handle_mm_fault (47,489,663 samples, 0.16%)</title><rect x="79.9" y="229" width="2.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="82.94" y="239.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (34,057,968 samples, 0.12%)</title><rect x="934.5" y="533" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="937.55" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="213" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (150,320,918 samples, 0.51%)</title><rect x="147.6" y="549" width="6.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.55" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,863 samples, 0.09%)</title><rect x="73.0" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.04" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (103,161,649 samples, 0.35%)</title><rect x="78.9" y="453" width="4.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="81.94" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (68,303,293 samples, 0.23%)</title><rect x="935.9" y="517" width="2.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="938.92" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (25,961,501 samples, 0.09%)</title><rect x="99.0" y="821" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.95" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (59,468,639 samples, 0.20%)</title><rect x="211.2" y="565" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.20" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_brk (60,381,389 samples, 0.21%)</title><rect x="612.5" y="261" width="2.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="615.49" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,120,817 samples, 0.12%)</title><rect x="186.8" y="533" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="189.79" y="543.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (2,747,910 samples, 0.01%)</title><rect x="1177.4" y="837" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1180.45" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (34,139,888 samples, 0.12%)</title><rect x="215.0" y="309" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.98" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="565" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1163.87" y="575.5" ></text>
</g>
<g >
<title>PyLong_FromLong (68,266,745 samples, 0.23%)</title><rect x="89.8" y="261" width="2.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="92.81" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (30,882,219 samples, 0.11%)</title><rect x="81.9" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.86" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (25,086,030 samples, 0.09%)</title><rect x="185.8" y="533" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.77" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="325" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (29,291,122 samples, 0.10%)</title><rect x="191.6" y="437" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="194.64" y="447.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,960 samples, 0.09%)</title><rect x="133.7" y="405" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="136.70" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,206,552 samples, 0.09%)</title><rect x="61.3" y="693" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.34" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (136,670,961 samples, 0.47%)</title><rect x="116.0" y="901" width="5.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="118.96" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (74,372,820 samples, 0.25%)</title><rect x="219.8" y="437" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="222.79" y="447.5" ></text>
</g>
<g >
<title>boost::relax_target&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::plus&lt;float&gt;, std::less&lt;float&gt; &gt; (614,923,860 samples, 2.11%)</title><rect x="1042.3" y="533" width="24.8" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="1045.28" y="543.5" >b..</text>
</g>
<g >
<title>[python3.12] (32,878,788 samples, 0.11%)</title><rect x="179.4" y="565" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.36" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,552 samples, 0.09%)</title><rect x="61.3" y="645" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (34,107,541 samples, 0.12%)</title><rect x="1160.9" y="533" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1163.87" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (25,260,870 samples, 0.09%)</title><rect x="72.0" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.02" y="447.5" ></text>
</g>
<g >
<title>do_page_fault (33,257,301 samples, 0.11%)</title><rect x="900.4" y="485" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="903.45" y="495.5" ></text>
</g>
<g >
<title>PyObject_IsInstance (34,145,355 samples, 0.12%)</title><rect x="49.7" y="981" width="1.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="52.73" y="991.5" ></text>
</g>
<g >
<title>PySequence_Tuple (34,138,992 samples, 0.12%)</title><rect x="116.9" y="421" width="1.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="119.95" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (34,171,476 samples, 0.12%)</title><rect x="14.3" y="981" width="1.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="17.31" y="991.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,207,365 samples, 0.09%)</title><rect x="120.4" y="485" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="123.43" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,960 samples, 0.09%)</title><rect x="133.7" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.70" y="383.5" ></text>
</g>
<g >
<title>page_fault (604,114,541 samples, 2.07%)</title><rect x="830.5" y="405" width="24.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="833.54" y="415.5" >p..</text>
</g>
<g >
<title>[python3.12] (34,090,815 samples, 0.12%)</title><rect x="908.4" y="581" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="911.37" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (243,159,198 samples, 0.83%)</title><rect x="203.8" y="709" width="9.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="206.77" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (86,555,090 samples, 0.30%)</title><rect x="215.0" y="693" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="217.98" y="703.5" ></text>
</g>
<g >
<title>_PyAST_Compile (33,882,874 samples, 0.12%)</title><rect x="87.2" y="325" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="90.16" y="335.5" ></text>
</g>
<g >
<title>_PyRun_AnyFileObject (14,313,598,062 samples, 49.03%)</title><rect x="583.7" y="933" width="578.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="586.71" y="943.5" >_PyRun_AnyFileObject</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (28,723,853 samples, 0.10%)</title><rect x="124.9" y="293" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="127.94" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (34,179,984 samples, 0.12%)</title><rect x="560.2" y="853" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="563.23" y="863.5" ></text>
</g>
<g >
<title>do_page_fault (25,460,519 samples, 0.09%)</title><rect x="101.4" y="181" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="104.36" y="191.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (33,257,301 samples, 0.11%)</title><rect x="900.4" y="373" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="903.45" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (34,101,693 samples, 0.12%)</title><rect x="95.8" y="469" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.78" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,878,788 samples, 0.11%)</title><rect x="179.4" y="469" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="182.36" y="479.5" ></text>
</g>
<g >
<title>PyUnicode_Append (24,776,733 samples, 0.08%)</title><rect x="151.7" y="229" width="1.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="154.66" y="239.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,460,519 samples, 0.09%)</title><rect x="101.4" y="613" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="104.36" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,250 samples, 0.09%)</title><rect x="153.6" y="645" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.63" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,149,751 samples, 0.09%)</title><rect x="137.2" y="437" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="140.20" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (17,813,920 samples, 0.06%)</title><rect x="84.2" y="293" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,821 samples, 0.09%)</title><rect x="97.9" y="805" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.90" y="815.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (33,686,964 samples, 0.12%)</title><rect x="1017.4" y="485" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1020.42" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (29,291,122 samples, 0.10%)</title><rect x="191.6" y="565" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="194.64" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (219,699,154 samples, 0.75%)</title><rect x="215.0" y="933" width="8.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="217.98" y="943.5" ></text>
</g>
<g >
<title>alloc_pages_vma (34,164,226 samples, 0.12%)</title><rect x="909.7" y="469" width="1.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="912.75" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (28,723,853 samples, 0.10%)</title><rect x="124.9" y="341" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="127.94" y="351.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (34,200,728 samples, 0.12%)</title><rect x="608.3" y="453" width="1.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="611.34" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,126 samples, 0.09%)</title><rect x="109.3" y="437" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.27" y="447.5" ></text>
</g>
<g >
<title>vfs_read (85,833,913 samples, 0.29%)</title><rect x="163.4" y="165" width="3.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="166.41" y="175.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,760,523 samples, 0.11%)</title><rect x="88.5" y="325" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="91.52" y="335.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (34,167,112 samples, 0.12%)</title><rect x="913.8" y="613" width="1.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="916.82" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (59,468,639 samples, 0.20%)</title><rect x="211.2" y="325" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.20" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,558 samples, 0.09%)</title><rect x="66.7" y="245" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.72" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (33,882,874 samples, 0.12%)</title><rect x="87.2" y="277" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.16" y="287.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,828 samples, 0.09%)</title><rect x="126.1" y="309" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="129.10" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,668 samples, 0.09%)</title><rect x="139.3" y="245" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.30" y="255.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (34,120,817 samples, 0.12%)</title><rect x="186.8" y="645" width="1.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="189.79" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,291,122 samples, 0.10%)</title><rect x="191.6" y="389" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.64" y="399.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,207,365 samples, 0.09%)</title><rect x="120.4" y="357" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="123.43" y="367.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;unsigned long, unsigned long&gt; (34,124,370 samples, 0.12%)</title><rect x="1137.4" y="533" width="1.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1140.42" y="543.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::dispatcher (6,212,989,464 samples, 21.28%)</title><rect x="911.1" y="789" width="251.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="914.13" y="799.5" >pybind11::cpp_function::dispatcher</text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (34,139,165 samples, 0.12%)</title><rect x="964.9" y="485" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="967.91" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,326,266 samples, 0.18%)</title><rect x="586.2" y="725" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="589.22" y="735.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (34,177,262 samples, 0.12%)</title><rect x="1158.1" y="597" width="1.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1161.11" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,209,080 samples, 0.21%)</title><rect x="134.8" y="597" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="137.76" y="607.5" ></text>
</g>
<g >
<title>__vfs_read (34,285,084 samples, 0.12%)</title><rect x="688.2" y="229" width="1.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="691.16" y="239.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (104,881,679 samples, 0.36%)</title><rect x="199.5" y="437" width="4.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="202.53" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,086,030 samples, 0.09%)</title><rect x="185.8" y="549" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="188.77" y="559.5" ></text>
</g>
<g >
<title>do_futex (7,992,475 samples, 0.03%)</title><rect x="1177.3" y="949" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1180.33" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (52,326,266 samples, 0.18%)</title><rect x="586.2" y="629" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="589.22" y="639.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,206,552 samples, 0.09%)</title><rect x="61.3" y="437" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="64.34" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,559,354 samples, 0.11%)</title><rect x="218.5" y="645" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="221.48" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (189,478,031 samples, 0.65%)</title><rect x="76.5" y="661" width="7.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="79.51" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,209,080 samples, 0.21%)</title><rect x="134.8" y="661" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="137.76" y="671.5" ></text>
</g>
<g >
<title>find_get_entry (26,112,043 samples, 0.09%)</title><rect x="164.8" y="53" width="1.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="167.77" y="63.5" ></text>
</g>
<g >
<title>_PyObject_Call (74,372,820 samples, 0.25%)</title><rect x="219.8" y="453" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="222.79" y="463.5" ></text>
</g>
<g >
<title>elf_machine_rela (33,970,452 samples, 0.12%)</title><rect x="127.2" y="325" width="1.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="130.16" y="335.5" ></text>
</g>
<g >
<title>generic_permission (27,498,501 samples, 0.09%)</title><rect x="144.1" y="133" width="1.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="147.08" y="143.5" ></text>
</g>
<g >
<title>generic_file_read_iter (59,635,299 samples, 0.20%)</title><rect x="163.4" y="101" width="2.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="166.41" y="111.5" ></text>
</g>
<g >
<title>[python3.12] (26,095,135 samples, 0.09%)</title><rect x="174.2" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.16" y="511.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,250 samples, 0.09%)</title><rect x="153.6" y="677" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="156.63" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (7,952,093,388 samples, 27.24%)</title><rect x="589.7" y="709" width="321.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.71" y="719.5" >[python3.12]</text>
</g>
<g >
<title>__GI__dl_catch_error (26,209,701 samples, 0.09%)</title><rect x="195.0" y="389" width="1.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="198.03" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Deque_base (67,885,180 samples, 0.23%)</title><rect x="1083.6" y="581" width="2.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1086.63" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (25,460,519 samples, 0.09%)</title><rect x="101.4" y="725" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (25,771,593 samples, 0.09%)</title><rect x="147.6" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.55" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (102,344,064 samples, 0.35%)</title><rect x="128.5" y="517" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.53" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (296,586,853 samples, 1.02%)</title><rect x="142.7" y="901" width="12.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.70" y="911.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,113,807 samples, 0.18%)</title><rect x="138.3" y="821" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="141.25" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size (34,181,334 samples, 0.12%)</title><rect x="1133.3" y="549" width="1.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1136.26" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (133,117,246 samples, 0.46%)</title><rect x="61.3" y="901" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.34" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,416,674 samples, 0.18%)</title><rect x="122.8" y="389" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="125.82" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (17,813,920 samples, 0.06%)</title><rect x="84.2" y="373" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.17" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (75,294,107 samples, 0.26%)</title><rect x="147.6" y="485" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.55" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,416,674 samples, 0.18%)</title><rect x="122.8" y="373" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="125.82" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (34,285,084 samples, 0.12%)</title><rect x="688.2" y="421" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="691.16" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (34,161,984 samples, 0.12%)</title><rect x="1087.8" y="613" width="1.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1090.75" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,764 samples, 0.09%)</title><rect x="223.9" y="213" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.86" y="223.5" ></text>
</g>
<g >
<title>change_protection_range (33,987,773 samples, 0.12%)</title><rect x="1028.5" y="373" width="1.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1031.46" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,134,229 samples, 0.09%)</title><rect x="118.3" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.33" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,018,355 samples, 0.09%)</title><rect x="67.8" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.78" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (156,416,788 samples, 0.54%)</title><rect x="67.8" y="725" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="70.78" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,180,018 samples, 0.09%)</title><rect x="111.4" y="933" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.39" y="943.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (229,780,785 samples, 0.79%)</title><rect x="171.4" y="837" width="9.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.40" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~vector (34,177,262 samples, 0.12%)</title><rect x="1158.1" y="629" width="1.4" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1161.11" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,896,301 samples, 0.10%)</title><rect x="94.7" y="501" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.66" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,149,751 samples, 0.09%)</title><rect x="137.2" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.20" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (77,869,280 samples, 0.27%)</title><rect x="154.7" y="549" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.69" y="559.5" ></text>
</g>
<g >
<title>do_user_addr_fault (33,680,975 samples, 0.12%)</title><rect x="1188.6" y="949" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1191.64" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (34,186,177 samples, 0.12%)</title><rect x="76.5" y="325" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.51" y="335.5" ></text>
</g>
</g>
</svg>
