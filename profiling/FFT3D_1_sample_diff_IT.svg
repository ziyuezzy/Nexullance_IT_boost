<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1062.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1045" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1045" > </text>
<g id="frames">
<g >
<title>[python3.12] (32,378,744 samples, 0.12%)</title><rect x="111.9" y="389" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="399.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (26,889,025 samples, 0.10%)</title><rect x="228.6" y="149" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="231.60" y="159.5" ></text>
</g>
<g >
<title>[python3.12] (32,642,068 samples, 0.13%)</title><rect x="227.1" y="613" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="703.5" ></text>
</g>
<g >
<title>page_fault (33,995,910 samples, 0.13%)</title><rect x="661.8" y="597" width="1.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="664.84" y="607.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, diff_Nexullance_IT_interface, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (3,052,279,658 samples, 11.77%)</title><rect x="1022.7" y="741" width="138.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1025.70" y="751.5" >pybind11::cpp_fun..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,995,731 samples, 0.13%)</title><rect x="1019.6" y="645" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1022.61" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="351.5" ></text>
</g>
<g >
<title>llvm::LLVMTargetMachine::addPassesToEmitMC (33,772,025 samples, 0.13%)</title><rect x="129.9" y="741" width="1.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="132.86" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (52,542,568 samples, 0.20%)</title><rect x="137.7" y="341" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (53,471,225 samples, 0.21%)</title><rect x="94.8" y="565" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,993,205 samples, 0.40%)</title><rect x="90.1" y="757" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.07" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (101,846,406 samples, 0.39%)</title><rect x="98.5" y="341" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.54" y="351.5" ></text>
</g>
<g >
<title>pybind11::detail::argument_loader&lt;diff_Nexullance_IT_interface*, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int&gt;::call&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, diff_Nexullance_IT_interface, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (3,052,279,658 samples, 11.77%)</title><rect x="1022.7" y="725" width="138.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1025.70" y="735.5" >pybind11::detail:..</text>
</g>
<g >
<title>[python3.12] (32,732,469 samples, 0.13%)</title><rect x="47.0" y="309" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.97" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,227,014 samples, 0.10%)</title><rect x="126.3" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.28" y="543.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,112,844 samples, 0.13%)</title><rect x="1147.7" y="565" width="1.6" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1150.70" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,227,014 samples, 0.10%)</title><rect x="126.3" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.28" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,014,393 samples, 0.13%)</title><rect x="233.4" y="389" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="236.40" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,284 samples, 0.10%)</title><rect x="90.1" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (33,440,064 samples, 0.13%)</title><rect x="180.0" y="373" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,381 samples, 0.10%)</title><rect x="81.4" y="453" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="84.40" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,528,058 samples, 0.10%)</title><rect x="51.2" y="389" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="54.18" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_get_insert_equal_pos (33,752,545 samples, 0.13%)</title><rect x="1157.0" y="581" width="1.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1159.96" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (67,411,753 samples, 0.26%)</title><rect x="40.9" y="885" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="43.89" y="895.5" ></text>
</g>
<g >
<title>std::multimap&lt;float, unsigned long, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::insert&lt;std::pair&lt;float, unsigned long&gt; &gt; (67,794,662 samples, 0.26%)</title><rect x="1155.4" y="613" width="3.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1158.42" y="623.5" ></text>
</g>
<g >
<title>user_path_at_empty (26,211,838 samples, 0.10%)</title><rect x="150.3" y="197" width="1.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="153.32" y="207.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (308,025,147 samples, 1.19%)</title><rect x="45.5" y="469" width="14.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="48.47" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,772,594 samples, 0.11%)</title><rect x="97.3" y="725" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="100.28" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (78,646,250 samples, 0.30%)</title><rect x="59.5" y="501" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.48" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (145,693,923 samples, 0.56%)</title><rect x="233.4" y="917" width="6.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="236.40" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,284 samples, 0.10%)</title><rect x="90.1" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="655.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,213,193 samples, 0.10%)</title><rect x="127.5" y="421" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="130.47" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,493,181 samples, 0.13%)</title><rect x="140.1" y="309" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.10" y="319.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,239,491 samples, 0.10%)</title><rect x="199.2" y="341" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="202.17" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,245,332 samples, 0.10%)</title><rect x="106.8" y="581" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.76" y="591.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (101,743,703 samples, 0.39%)</title><rect x="1073.5" y="501" width="4.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1076.51" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (67,683,134 samples, 0.26%)</title><rect x="1152.3" y="565" width="3.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1155.34" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (94,077,511 samples, 0.36%)</title><rect x="203.4" y="405" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="206.44" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (101,846,406 samples, 0.39%)</title><rect x="98.5" y="437" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.54" y="447.5" ></text>
</g>
<g >
<title>page_fault (135,689,289 samples, 0.52%)</title><rect x="794.7" y="405" width="6.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="797.74" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,248 samples, 0.10%)</title><rect x="135.0" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.97" y="495.5" ></text>
</g>
<g >
<title>try_charge (52,435,033 samples, 0.20%)</title><rect x="985.2" y="245" width="2.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="988.21" y="255.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (134,911,879 samples, 0.52%)</title><rect x="194.2" y="853" width="6.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="197.23" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (32,378,744 samples, 0.12%)</title><rect x="111.9" y="437" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,385,368 samples, 0.10%)</title><rect x="92.5" y="261" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="95.46" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (78,773,921 samples, 0.30%)</title><rect x="91.3" y="549" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.27" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (53,471,225 samples, 0.21%)</title><rect x="94.8" y="533" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.85" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,477 samples, 0.10%)</title><rect x="133.8" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.78" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (106,882,167 samples, 0.41%)</title><rect x="71.4" y="405" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.35" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,687 samples, 0.10%)</title><rect x="166.4" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.36" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (156,098,650 samples, 0.60%)</title><rect x="64.3" y="501" width="7.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="67.25" y="511.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,178,164 samples, 0.10%)</title><rect x="91.3" y="293" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="94.27" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (67,877,904 samples, 0.26%)</title><rect x="1144.6" y="549" width="3.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1147.61" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (7,501,673,498 samples, 28.92%)</title><rect x="675.3" y="517" width="341.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="678.35" y="527.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (109,961,623 samples, 0.42%)</title><rect x="214.4" y="389" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.41" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (53,573,450 samples, 0.21%)</title><rect x="234.9" y="549" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.94" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,620 samples, 0.10%)</title><rect x="63.1" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="367.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,216,729 samples, 0.10%)</title><rect x="240.0" y="757" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="243.02" y="767.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,232,219 samples, 0.10%)</title><rect x="128.7" y="389" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="131.66" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (33,620,864 samples, 0.13%)</title><rect x="156.6" y="69" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="159.64" y="79.5" ></text>
</g>
<g >
<title>[python3.12] (101,846,406 samples, 0.39%)</title><rect x="98.5" y="453" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,477 samples, 0.10%)</title><rect x="133.8" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.78" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (334,238,364 samples, 1.29%)</title><rect x="164.8" y="805" width="15.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.83" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,965 samples, 0.10%)</title><rect x="105.6" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.57" y="287.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (78,773,921 samples, 0.30%)</title><rect x="91.3" y="565" width="3.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="94.27" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,729 samples, 0.10%)</title><rect x="240.0" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="243.02" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (188,843,341 samples, 0.73%)</title><rect x="210.8" y="677" width="8.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="213.82" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,261 samples, 0.10%)</title><rect x="229.8" y="309" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="232.82" y="319.5" ></text>
</g>
<g >
<title>PyObject_Malloc (26,889,025 samples, 0.10%)</title><rect x="228.6" y="309" width="1.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="231.60" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::allocate (34,104,407 samples, 0.13%)</title><rect x="1135.3" y="549" width="1.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1138.34" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (112,378,838 samples, 0.43%)</title><rect x="106.8" y="837" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (52,682,634 samples, 0.20%)</title><rect x="104.4" y="773" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.37" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="805" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,903,177 samples, 0.02%)</title><rect x="246.6" y="901" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="249.59" y="911.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,620,864 samples, 0.13%)</title><rect x="156.6" y="501" width="1.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="159.64" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,917 samples, 0.10%)</title><rect x="190.3" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.30" y="319.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,193 samples, 0.10%)</title><rect x="127.5" y="357" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="130.47" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,900,707 samples, 0.13%)</title><rect x="79.8" y="773" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.79" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (87,587,843 samples, 0.34%)</title><rect x="233.4" y="613" width="4.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="236.40" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,422,740 samples, 0.20%)</title><rect x="229.8" y="453" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="232.82" y="463.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,372,878 samples, 0.10%)</title><rect x="160.5" y="309" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="163.54" y="319.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,271,110 samples, 0.10%)</title><rect x="35.5" y="293" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="38.54" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,903,177 samples, 0.02%)</title><rect x="246.6" y="917" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="249.59" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (33,321,038 samples, 0.13%)</title><rect x="44.0" y="501" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (33,578,807 samples, 0.13%)</title><rect x="1141.5" y="517" width="1.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1144.54" y="527.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,421,594 samples, 0.20%)</title><rect x="173.6" y="405" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="176.61" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::end (34,132,280 samples, 0.13%)</title><rect x="1123.0" y="581" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1125.97" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,193 samples, 0.10%)</title><rect x="127.5" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,965 samples, 0.10%)</title><rect x="105.6" y="469" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="108.57" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,193 samples, 0.10%)</title><rect x="127.5" y="437" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.47" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (138,167,571 samples, 0.53%)</title><rect x="227.1" y="821" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="230.11" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (34,057,586 samples, 0.13%)</title><rect x="206.2" y="261" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="209.17" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (25,875,311 samples, 0.10%)</title><rect x="159.4" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.37" y="543.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (16,774,674 samples, 0.06%)</title><rect x="1171.6" y="933" width="0.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1174.56" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,284 samples, 0.10%)</title><rect x="90.1" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="335.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (34,015,909 samples, 0.13%)</title><rect x="13.9" y="965" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="16.92" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (33,321,038 samples, 0.13%)</title><rect x="44.0" y="293" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (52,542,568 samples, 0.20%)</title><rect x="137.7" y="293" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (101,846,406 samples, 0.39%)</title><rect x="98.5" y="549" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.54" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (33,897,814 samples, 0.13%)</title><rect x="221.0" y="757" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="223.95" y="767.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (27,772,594 samples, 0.11%)</title><rect x="97.3" y="469" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="100.28" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (32,378,744 samples, 0.12%)</title><rect x="111.9" y="293" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,965 samples, 0.10%)</title><rect x="105.6" y="181" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.57" y="191.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,866 samples, 0.10%)</title><rect x="110.7" y="245" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="113.68" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (34,032,811 samples, 0.13%)</title><rect x="1121.4" y="565" width="1.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1124.42" y="575.5" ></text>
</g>
<g >
<title>__GI_madvise (5,903,177 samples, 0.02%)</title><rect x="246.6" y="933" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="249.59" y="943.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (342,869,059 samples, 1.32%)</title><rect x="111.9" y="789" width="15.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="114.88" y="799.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (33,917,650 samples, 0.13%)</title><rect x="1021.2" y="581" width="1.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1024.16" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (32,566,060 samples, 0.13%)</title><rect x="628.4" y="853" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="631.39" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (58,106,080 samples, 0.22%)</title><rect x="237.4" y="517" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="240.38" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (57,010,314 samples, 0.22%)</title><rect x="56.9" y="309" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.89" y="319.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (133,117,029 samples, 0.51%)</title><rect x="167.6" y="405" width="6.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="170.55" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="415.5" ></text>
</g>
<g >
<title>[libffi.so.7.1.0] (33,772,025 samples, 0.13%)</title><rect x="129.9" y="837" width="1.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="132.86" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,729 samples, 0.10%)</title><rect x="240.0" y="821" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="243.02" y="831.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,334 samples, 0.10%)</title><rect x="191.5" y="661" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="194.49" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,561,945 samples, 0.13%)</title><rect x="39.4" y="645" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="42.41" y="655.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4,666,742 samples, 0.02%)</title><rect x="623.6" y="821" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="626.59" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (78,646,250 samples, 0.30%)</title><rect x="59.5" y="405" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.48" y="415.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (112,647,823 samples, 0.43%)</title><rect x="186.4" y="517" width="5.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="189.37" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.36" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,239,491 samples, 0.10%)</title><rect x="199.2" y="229" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.17" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,561,945 samples, 0.13%)</title><rect x="39.4" y="421" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.41" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (169,843,788 samples, 0.65%)</title><rect x="1136.9" y="565" width="7.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1139.89" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="373" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,890,031 samples, 0.40%)</title><rect x="131.4" y="501" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.39" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (419,992,435 samples, 1.62%)</title><rect x="44.0" y="645" width="19.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="46.96" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,965 samples, 0.10%)</title><rect x="105.6" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.57" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (32,793,665 samples, 0.13%)</title><rect x="124.8" y="261" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="127.79" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (67,877,904 samples, 0.26%)</title><rect x="1144.6" y="581" width="3.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1147.61" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,215,195 samples, 0.10%)</title><rect x="60.7" y="261" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="63.67" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (33,321,038 samples, 0.13%)</title><rect x="44.0" y="405" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,023,571 samples, 0.13%)</title><rect x="163.3" y="853" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="166.29" y="863.5" ></text>
</g>
<g >
<title>PyUnicode_New (33,589,208 samples, 0.13%)</title><rect x="164.8" y="309" width="1.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="167.83" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,014,393 samples, 0.13%)</title><rect x="233.4" y="341" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="236.40" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,647,213 samples, 0.30%)</title><rect x="29.4" y="741" width="3.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="32.39" y="751.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (549,934,679 samples, 2.12%)</title><rect x="991.5" y="453" width="25.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="994.53" y="463.5" >_..</text>
</g>
<g >
<title>do_user_addr_fault (26,216,620 samples, 0.10%)</title><rect x="63.1" y="229" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="66.06" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,926 samples, 0.10%)</title><rect x="70.2" y="405" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="73.16" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (34,104,407 samples, 0.13%)</title><rect x="1135.3" y="501" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1138.34" y="511.5" ></text>
</g>
<g >
<title>do_anonymous_page (34,059,701 samples, 0.13%)</title><rect x="207.7" y="261" width="1.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="210.72" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;float, unsigned long&gt; &gt; (34,042,117 samples, 0.13%)</title><rect x="1155.4" y="565" width="1.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1158.42" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (81,243,819 samples, 0.31%)</title><rect x="94.8" y="917" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="97.85" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (135,744,322 samples, 0.52%)</title><rect x="1136.9" y="549" width="6.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1139.89" y="559.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (26,214,717 samples, 0.10%)</title><rect x="213.2" y="389" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="216.21" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,467,069 samples, 0.12%)</title><rect x="33.0" y="325" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.96" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (188,843,341 samples, 0.73%)</title><rect x="210.8" y="837" width="8.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="847.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,738 samples, 0.10%)</title><rect x="232.2" y="453" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="235.21" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,214,866 samples, 0.10%)</title><rect x="110.7" y="277" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="113.68" y="287.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (33,796,891 samples, 0.13%)</title><rect x="1050.4" y="485" width="1.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1053.41" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,889,025 samples, 0.10%)</title><rect x="228.6" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.60" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (56,123,417 samples, 0.22%)</title><rect x="194.2" y="325" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.23" y="335.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,245,332 samples, 0.10%)</title><rect x="106.8" y="501" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="109.76" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate_map (33,555,776 samples, 0.13%)</title><rect x="1129.2" y="549" width="1.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1132.16" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,738 samples, 0.10%)</title><rect x="232.2" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="235.21" y="287.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (33,841,371 samples, 0.13%)</title><rect x="225.6" y="677" width="1.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="228.57" y="687.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,237,850 samples, 0.10%)</title><rect x="131.4" y="341" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="134.39" y="351.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (33,939,472 samples, 0.13%)</title><rect x="1025.8" y="597" width="1.5" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1028.76" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,334 samples, 0.10%)</title><rect x="191.5" y="789" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.49" y="799.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (251,854,636 samples, 0.97%)</title><rect x="180.0" y="693" width="11.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="183.04" y="703.5" ></text>
</g>
<g >
<title>PySequence_List (52,661,992 samples, 0.20%)</title><rect x="154.2" y="341" width="2.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="157.25" y="351.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,193 samples, 0.10%)</title><rect x="127.5" y="309" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="130.47" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,632 samples, 0.10%)</title><rect x="234.9" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.94" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,477 samples, 0.10%)</title><rect x="133.8" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.78" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,059,701 samples, 0.13%)</title><rect x="207.7" y="293" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="210.72" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,159,496 samples, 0.10%)</title><rect x="87.4" y="549" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="90.36" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,900,707 samples, 0.13%)</title><rect x="79.8" y="613" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="82.79" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (342,869,059 samples, 1.32%)</title><rect x="111.9" y="661" width="15.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="114.88" y="671.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,216,479 samples, 0.10%)</title><rect x="231.0" y="309" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="234.01" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,445,412 samples, 0.20%)</title><rect x="127.5" y="805" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.47" y="815.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (195,992,634 samples, 0.76%)</title><rect x="201.9" y="597" width="8.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="204.91" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,913,533 samples, 0.12%)</title><rect x="238.6" y="325" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="241.57" y="335.5" ></text>
</g>
<g >
<title>__lru_cache_add (26,216,620 samples, 0.10%)</title><rect x="63.1" y="149" width="1.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="66.06" y="159.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,372,878 samples, 0.10%)</title><rect x="160.5" y="741" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.54" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (188,843,341 samples, 0.73%)</title><rect x="210.8" y="693" width="8.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="213.82" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (67,983,303 samples, 0.26%)</title><rect x="161.7" y="933" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.74" y="943.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (2,442,595,625 samples, 9.41%)</title><rect x="678.1" y="421" width="111.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="681.15" y="431.5" >[libz.so.1.2...</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,453,705 samples, 0.10%)</title><rect x="212.0" y="357" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="215.01" y="367.5" ></text>
</g>
<g >
<title>do_anonymous_page (135,689,289 samples, 0.52%)</title><rect x="794.7" y="309" width="6.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="797.74" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_vma (27,554,181 samples, 0.11%)</title><rect x="675.3" y="325" width="1.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="678.35" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (58,106,080 samples, 0.22%)</title><rect x="237.4" y="405" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="240.38" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (781,206,718 samples, 3.01%)</title><rect x="164.8" y="949" width="35.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="167.83" y="959.5" >_Py..</text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (230,223,817 samples, 0.89%)</title><rect x="790.4" y="421" width="10.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="793.44" y="431.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="757" width="1.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1169.94" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (156,098,650 samples, 0.60%)</title><rect x="64.3" y="533" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.25" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (52,430,158 samples, 0.20%)</title><rect x="77.4" y="501" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.40" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (133,112,806 samples, 0.51%)</title><rect x="71.4" y="517" width="6.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="74.35" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,216,047 samples, 0.10%)</title><rect x="61.9" y="309" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="64.87" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (136,176,340 samples, 0.52%)</title><rect x="213.2" y="597" width="6.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="216.21" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,642,068 samples, 0.13%)</title><rect x="227.1" y="549" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="230.11" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (86,437,906 samples, 0.33%)</title><rect x="186.4" y="389" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.37" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,712,837 samples, 0.13%)</title><rect x="108.0" y="293" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="110.96" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,813 samples, 0.10%)</title><rect x="103.2" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.18" y="271.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,255,374 samples, 0.10%)</title><rect x="86.2" y="437" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="89.16" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,674 samples, 0.10%)</title><rect x="158.2" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.17" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (52,682,634 samples, 0.20%)</title><rect x="104.4" y="677" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.37" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,620 samples, 0.10%)</title><rect x="63.1" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,813 samples, 0.10%)</title><rect x="103.2" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.18" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,255,374 samples, 0.10%)</title><rect x="86.2" y="757" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="89.16" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,445,412 samples, 0.20%)</title><rect x="127.5" y="821" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="130.47" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (419,992,435 samples, 1.62%)</title><rect x="44.0" y="677" width="19.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="46.96" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,445,412 samples, 0.20%)</title><rect x="127.5" y="853" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="130.47" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (27,358,818 samples, 0.11%)</title><rect x="236.1" y="181" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="239.14" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (52,542,568 samples, 0.20%)</title><rect x="137.7" y="389" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,193 samples, 0.10%)</title><rect x="127.5" y="677" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (53,573,450 samples, 0.21%)</title><rect x="234.9" y="437" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="237.94" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (11,092,871,523 samples, 42.76%)</title><rect x="657.0" y="869" width="504.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="659.99" y="879.5" >[python3.12]</text>
</g>
<g >
<title>_PyObject_Call (52,542,568 samples, 0.20%)</title><rect x="137.7" y="693" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="140.71" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (52,420,669 samples, 0.20%)</title><rect x="109.5" y="421" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.49" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (735,420,511 samples, 2.83%)</title><rect x="44.0" y="821" width="33.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="46.96" y="831.5" >Py..</text>
</g>
<g >
<title>[python3.12] (81,243,819 samples, 0.31%)</title><rect x="94.8" y="853" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,813 samples, 0.10%)</title><rect x="103.2" y="453" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.18" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,738 samples, 0.10%)</title><rect x="232.2" y="229" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="235.21" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (7,934,037,009 samples, 30.58%)</title><rect x="661.8" y="677" width="360.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="664.84" y="687.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.36" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,205,803 samples, 0.10%)</title><rect x="109.5" y="373" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="112.49" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,841,371 samples, 0.13%)</title><rect x="225.6" y="581" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="228.57" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (31,913,533 samples, 0.12%)</title><rect x="238.6" y="245" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="241.57" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,353,363 samples, 0.13%)</title><rect x="1016.5" y="629" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1019.55" y="639.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4,287,558 samples, 0.02%)</title><rect x="246.3" y="901" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="249.33" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="613" width="5.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1164.53" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (156,098,650 samples, 0.60%)</title><rect x="64.3" y="597" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.25" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (274,443,469 samples, 1.06%)</title><rect x="167.6" y="453" width="12.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.55" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (86,133,506 samples, 0.33%)</title><rect x="108.0" y="533" width="3.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.96" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="549" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1164.53" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (161,490,949 samples, 0.62%)</title><rect x="29.4" y="821" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (65,321,839 samples, 0.25%)</title><rect x="37.9" y="853" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,174 samples, 0.10%)</title><rect x="85.0" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.97" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,214,717 samples, 0.10%)</title><rect x="213.2" y="213" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="216.21" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,174 samples, 0.10%)</title><rect x="85.0" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.97" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (34,057,586 samples, 0.13%)</title><rect x="206.2" y="309" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="209.17" y="319.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,372,878 samples, 0.10%)</title><rect x="160.5" y="469" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="163.54" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,321,038 samples, 0.13%)</title><rect x="44.0" y="341" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.96" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (32,561,945 samples, 0.13%)</title><rect x="39.4" y="629" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.41" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (27,772,594 samples, 0.11%)</title><rect x="97.3" y="773" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="100.28" y="783.5" ></text>
</g>
<g >
<title>rmap_walk_anon (34,023,571 samples, 0.13%)</title><rect x="163.3" y="741" width="1.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="166.29" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,271,110 samples, 0.10%)</title><rect x="35.5" y="597" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="38.54" y="607.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (182,315,270 samples, 0.70%)</title><rect x="63.1" y="677" width="8.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="66.06" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,159,496 samples, 0.10%)</title><rect x="87.4" y="853" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="90.36" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (65,321,839 samples, 0.25%)</title><rect x="37.9" y="869" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,965 samples, 0.10%)</title><rect x="105.6" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.57" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (128,061,219 samples, 0.49%)</title><rect x="98.5" y="821" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="101.54" y="831.5" ></text>
</g>
<g >
<title>do_numa_page (34,023,571 samples, 0.13%)</title><rect x="163.3" y="805" width="1.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="166.29" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="639.5" ></text>
</g>
<g >
<title>_PyCode_New (52,415,289 samples, 0.20%)</title><rect x="187.9" y="309" width="2.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="190.92" y="319.5" ></text>
</g>
<g >
<title>Py_BytesMain (11,907,502,162 samples, 45.90%)</title><rect x="625.3" y="949" width="541.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="628.35" y="959.5" >Py_BytesMain</text>
</g>
<g >
<title>_PyObject_Call (26,213,193 samples, 0.10%)</title><rect x="127.5" y="629" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="130.47" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,949,436 samples, 0.13%)</title><rect x="178.5" y="325" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="181.49" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,738 samples, 0.10%)</title><rect x="232.2" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="235.21" y="303.5" ></text>
</g>
<g >
<title>__do_sys_newstat (104,051,402 samples, 0.40%)</title><rect x="168.9" y="213" width="4.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="171.88" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,334 samples, 0.10%)</title><rect x="191.5" y="773" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.49" y="783.5" ></text>
</g>
<g >
<title>PyInit__multiarray_umath (251,469,636 samples, 0.97%)</title><rect x="113.3" y="405" width="11.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="116.35" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,014,393 samples, 0.13%)</title><rect x="233.4" y="549" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="236.40" y="559.5" ></text>
</g>
<g >
<title>copy_page_to_iter (26,212,519 samples, 0.10%)</title><rect x="149.1" y="53" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="152.13" y="63.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::cpp_function&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, diff_Nexullance_IT_interface, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (3,052,279,658 samples, 11.77%)</title><rect x="1022.7" y="693" width="138.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1025.70" y="703.5" >pybind11::cpp_fun..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,230,639 samples, 0.10%)</title><rect x="76.2" y="277" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.21" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (52,430,158 samples, 0.20%)</title><rect x="77.4" y="645" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.40" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (86,133,506 samples, 0.33%)</title><rect x="108.0" y="677" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.96" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (251,854,636 samples, 0.97%)</title><rect x="180.0" y="709" width="11.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="183.04" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,647,213 samples, 0.30%)</title><rect x="29.4" y="485" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="32.39" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,245,332 samples, 0.10%)</title><rect x="106.8" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="677" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (308,025,147 samples, 1.19%)</title><rect x="45.5" y="501" width="14.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="48.47" y="511.5" ></text>
</g>
<g >
<title>native_write_msr (4,287,558 samples, 0.02%)</title><rect x="246.3" y="853" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="249.33" y="863.5" ></text>
</g>
<g >
<title>inflate (293,739,428 samples, 1.13%)</title><rect x="1003.2" y="405" width="13.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1006.19" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (32,561,945 samples, 0.13%)</title><rect x="39.4" y="405" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.41" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_read (32,378,744 samples, 0.12%)</title><rect x="111.9" y="197" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="114.88" y="207.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,470,669 samples, 0.10%)</title><rect x="104.4" y="405" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="107.37" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (32,924,554 samples, 0.13%)</title><rect x="654.0" y="773" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="656.97" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,334 samples, 0.10%)</title><rect x="191.5" y="677" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.49" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,106,661 samples, 0.10%)</title><rect x="36.7" y="469" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="39.73" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (78,646,250 samples, 0.30%)</title><rect x="59.5" y="373" width="3.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="62.48" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (104,993,205 samples, 0.40%)</title><rect x="90.1" y="949" width="4.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="93.07" y="959.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,271,110 samples, 0.10%)</title><rect x="35.5" y="453" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="38.54" y="463.5" ></text>
</g>
<g >
<title>PyUnicode_RPartition (30,467,069 samples, 0.12%)</title><rect x="33.0" y="309" width="1.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="35.96" y="319.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (72,894,303 samples, 0.28%)</title><rect x="657.0" y="629" width="3.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="659.99" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,212,417 samples, 0.10%)</title><rect x="82.6" y="485" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="85.59" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (25,875,311 samples, 0.10%)</title><rect x="159.4" y="629" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.37" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,682,634 samples, 0.20%)</title><rect x="104.4" y="821" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.37" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (32,561,945 samples, 0.13%)</title><rect x="39.4" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.41" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (31,913,533 samples, 0.12%)</title><rect x="238.6" y="293" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="241.57" y="303.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (27,554,181 samples, 0.11%)</title><rect x="675.3" y="309" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="678.35" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (27,554,181 samples, 0.11%)</title><rect x="675.3" y="389" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="678.35" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,620,864 samples, 0.13%)</title><rect x="156.6" y="581" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.64" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (86,133,506 samples, 0.33%)</title><rect x="108.0" y="725" width="3.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="110.96" y="735.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,078,940 samples, 0.10%)</title><rect x="83.8" y="517" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="86.78" y="527.5" ></text>
</g>
<g >
<title>array_assign_subscript (67,411,753 samples, 0.26%)</title><rect x="40.9" y="789" width="3.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="43.89" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,897,814 samples, 0.13%)</title><rect x="221.0" y="693" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="223.95" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (104,711,912 samples, 0.40%)</title><rect x="81.4" y="565" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.40" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (229,841,116 samples, 0.89%)</title><rect x="200.4" y="661" width="10.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="203.37" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (52,661,992 samples, 0.20%)</title><rect x="154.2" y="405" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.25" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,239,491 samples, 0.10%)</title><rect x="199.2" y="213" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.17" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (53,471,225 samples, 0.21%)</title><rect x="94.8" y="773" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,178,164 samples, 0.10%)</title><rect x="91.3" y="325" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="94.27" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (72,894,303 samples, 0.28%)</title><rect x="657.0" y="773" width="3.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="659.99" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,245,332 samples, 0.10%)</title><rect x="106.8" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (72,894,303 samples, 0.28%)</title><rect x="657.0" y="613" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="659.99" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (133,117,029 samples, 0.51%)</title><rect x="167.6" y="373" width="6.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="170.55" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (78,773,921 samples, 0.30%)</title><rect x="91.3" y="693" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.27" y="703.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,209,917 samples, 0.10%)</title><rect x="190.3" y="421" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="193.30" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,620 samples, 0.10%)</title><rect x="63.1" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="495.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,351 samples, 0.10%)</title><rect x="174.8" y="293" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="177.80" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,661,992 samples, 0.20%)</title><rect x="154.2" y="373" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="157.25" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,773,921 samples, 0.30%)</title><rect x="91.3" y="485" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="94.27" y="495.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,477 samples, 0.10%)</title><rect x="133.8" y="373" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="136.78" y="383.5" ></text>
</g>
<g >
<title>llvm::LLVMContext::~LLVMContext (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="917" width="1.6" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1169.94" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (300,649,156 samples, 1.16%)</title><rect x="166.4" y="677" width="13.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.36" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,848 samples, 0.10%)</title><rect x="659.1" y="405" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="662.11" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,245,332 samples, 0.10%)</title><rect x="106.8" y="533" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="109.76" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (68,224,054 samples, 0.26%)</title><rect x="1088.9" y="421" width="3.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1091.94" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (32,561,945 samples, 0.13%)</title><rect x="39.4" y="661" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.41" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,900,707 samples, 0.13%)</title><rect x="79.8" y="293" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.79" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (27,772,594 samples, 0.11%)</title><rect x="97.3" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.28" y="383.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_not_relaxed&gt; (34,039,294 samples, 0.13%)</title><rect x="1062.7" y="501" width="1.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1065.73" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (67,899,390 samples, 0.26%)</title><rect x="1168.5" y="965" width="3.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1171.47" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,213,738 samples, 0.10%)</title><rect x="232.2" y="517" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="235.21" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (419,992,435 samples, 1.62%)</title><rect x="44.0" y="661" width="19.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="671.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (34,127,900 samples, 0.13%)</title><rect x="1140.0" y="485" width="1.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1142.98" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,900,707 samples, 0.13%)</title><rect x="79.8" y="341" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="82.79" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,738 samples, 0.10%)</title><rect x="232.2" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="235.21" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (87,587,843 samples, 0.34%)</title><rect x="233.4" y="693" width="4.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="236.40" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (101,846,406 samples, 0.39%)</title><rect x="98.5" y="501" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (161,490,949 samples, 0.62%)</title><rect x="29.4" y="917" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (52,542,568 samples, 0.20%)</title><rect x="137.7" y="357" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (104,993,205 samples, 0.40%)</title><rect x="90.1" y="917" width="4.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="93.07" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (56,572,626 samples, 0.22%)</title><rect x="33.0" y="629" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="35.96" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,192,547 samples, 0.10%)</title><rect x="237.4" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="240.38" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (112,647,823 samples, 0.43%)</title><rect x="186.4" y="453" width="5.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="189.37" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,014,393 samples, 0.13%)</title><rect x="233.4" y="405" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="236.40" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="805" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (53,573,450 samples, 0.21%)</title><rect x="234.9" y="517" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="237.94" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (56,572,626 samples, 0.22%)</title><rect x="33.0" y="517" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="35.96" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,106,661 samples, 0.10%)</title><rect x="36.7" y="613" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="39.73" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (31,913,533 samples, 0.12%)</title><rect x="238.6" y="357" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="241.57" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (423,593,188 samples, 1.63%)</title><rect x="140.1" y="677" width="19.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="143.10" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (134,911,879 samples, 0.52%)</title><rect x="194.2" y="709" width="6.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="197.23" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="885" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1164.53" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (27,772,594 samples, 0.11%)</title><rect x="97.3" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.28" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (562,639,549 samples, 2.17%)</title><rect x="629.9" y="869" width="25.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="632.87" y="879.5" >[..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,589,208 samples, 0.13%)</title><rect x="164.8" y="741" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="167.83" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,243 samples, 0.10%)</title><rect x="173.6" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.61" y="255.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,214,274 samples, 0.10%)</title><rect x="28.2" y="757" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="31.19" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,453,705 samples, 0.10%)</title><rect x="212.0" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.01" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (52,430,158 samples, 0.20%)</title><rect x="77.4" y="693" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.40" y="703.5" ></text>
</g>
<g >
<title>do_user_addr_fault (135,689,289 samples, 0.52%)</title><rect x="794.7" y="357" width="6.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="797.74" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (395,314,471 samples, 1.52%)</title><rect x="111.9" y="933" width="18.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.88" y="943.5" ></text>
</g>
<g >
<title>calculate_sigpending (6,749,013 samples, 0.03%)</title><rect x="245.9" y="933" width="0.3" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="248.86" y="943.5" ></text>
</g>
<g >
<title>__GI__IO_setb (251,469,636 samples, 0.97%)</title><rect x="113.3" y="309" width="11.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="116.35" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (67,990,178 samples, 0.26%)</title><rect x="67.1" y="149" width="3.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="70.07" y="159.5" ></text>
</g>
<g >
<title>[python3.12] (25,875,311 samples, 0.10%)</title><rect x="159.4" y="709" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.37" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (33,990,505 samples, 0.13%)</title><rect x="192.7" y="869" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.68" y="879.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_map_allocator (33,555,776 samples, 0.13%)</title><rect x="1129.2" y="533" width="1.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1132.16" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (56,572,626 samples, 0.22%)</title><rect x="33.0" y="581" width="2.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="35.96" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,159,496 samples, 0.10%)</title><rect x="87.4" y="581" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="90.36" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,193 samples, 0.10%)</title><rect x="127.5" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="303.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (32,561,945 samples, 0.13%)</title><rect x="39.4" y="533" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="42.41" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (65,321,839 samples, 0.25%)</title><rect x="37.9" y="709" width="3.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="40.92" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (7,501,673,498 samples, 28.92%)</title><rect x="675.3" y="549" width="341.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="678.35" y="559.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,214,866 samples, 0.10%)</title><rect x="110.7" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.68" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,841,371 samples, 0.13%)</title><rect x="225.6" y="725" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="228.57" y="735.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (53,471,225 samples, 0.21%)</title><rect x="94.8" y="549" width="2.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="97.85" y="559.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,917 samples, 0.10%)</title><rect x="190.3" y="341" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="193.30" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (87,587,843 samples, 0.34%)</title><rect x="233.4" y="869" width="4.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="236.40" y="879.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,334 samples, 0.10%)</title><rect x="191.5" y="821" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="194.49" y="831.5" ></text>
</g>
<g >
<title>_PyObject_Call (229,841,116 samples, 0.89%)</title><rect x="200.4" y="773" width="10.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="203.37" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,159,496 samples, 0.10%)</title><rect x="87.4" y="437" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.36" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (33,841,371 samples, 0.13%)</title><rect x="225.6" y="757" width="1.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="228.57" y="767.5" ></text>
</g>
<g >
<title>__memset_erms (26,216,620 samples, 0.10%)</title><rect x="63.1" y="293" width="1.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="66.06" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (32,561,945 samples, 0.13%)</title><rect x="39.4" y="453" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.41" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (229,841,116 samples, 0.89%)</title><rect x="200.4" y="677" width="10.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="203.37" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,210,174 samples, 0.10%)</title><rect x="85.0" y="421" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="87.97" y="431.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,205,803 samples, 0.10%)</title><rect x="109.5" y="277" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="112.49" y="287.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,239,491 samples, 0.10%)</title><rect x="199.2" y="389" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="202.17" y="399.5" ></text>
</g>
<g >
<title>[[stack]] (161,093,282 samples, 0.62%)</title><rect x="11.2" y="981" width="7.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="14.22" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (363,770,650 samples, 1.40%)</title><rect x="140.1" y="517" width="16.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.10" y="527.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (237,710,546 samples, 0.92%)</title><rect x="1081.2" y="517" width="10.8" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1084.23" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,900,707 samples, 0.13%)</title><rect x="79.8" y="389" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.79" y="399.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (33,949,436 samples, 0.13%)</title><rect x="178.5" y="357" width="1.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="181.49" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (250,980,516 samples, 0.97%)</title><rect x="140.1" y="421" width="11.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="143.10" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (112,378,838 samples, 0.43%)</title><rect x="106.8" y="917" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,372,878 samples, 0.10%)</title><rect x="160.5" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.54" y="495.5" ></text>
</g>
<g >
<title>llvm::BasicBlock::eraseFromParent (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="837" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1169.94" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (34,014,393 samples, 0.13%)</title><rect x="233.4" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="383.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (476,135,756 samples, 1.84%)</title><rect x="137.7" y="773" width="21.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="140.71" y="783.5" >P..</text>
</g>
<g >
<title>[python3.12] (33,712,837 samples, 0.13%)</title><rect x="108.0" y="421" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.96" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (139,206,813 samples, 0.54%)</title><rect x="180.0" y="549" width="6.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="183.04" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (180,743,853 samples, 0.70%)</title><rect x="98.5" y="901" width="8.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="101.54" y="911.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,813 samples, 0.10%)</title><rect x="103.2" y="389" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="106.18" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,214,274 samples, 0.10%)</title><rect x="28.2" y="885" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="31.19" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (33,917,650 samples, 0.13%)</title><rect x="1021.2" y="629" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1024.16" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,219,284 samples, 0.10%)</title><rect x="90.1" y="565" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="93.07" y="575.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,274 samples, 0.10%)</title><rect x="28.2" y="421" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="31.19" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (106,882,167 samples, 0.41%)</title><rect x="71.4" y="341" width="4.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="74.35" y="351.5" ></text>
</g>
<g >
<title>boost::checked_array_delete&lt;unsigned long&gt; (33,704,090 samples, 0.13%)</title><rect x="1113.7" y="501" width="1.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1116.71" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (78,773,921 samples, 0.30%)</title><rect x="91.3" y="453" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.27" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,284 samples, 0.10%)</title><rect x="90.1" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="527.5" ></text>
</g>
<g >
<title>_dl_relocate_object (33,620,864 samples, 0.13%)</title><rect x="156.6" y="181" width="1.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="159.64" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (26,294,972 samples, 0.10%)</title><rect x="185.2" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.17" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (139,206,813 samples, 0.54%)</title><rect x="180.0" y="581" width="6.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="591.5" ></text>
</g>
<g >
<title>PySequence_Tuple (27,358,818 samples, 0.11%)</title><rect x="236.1" y="373" width="1.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="239.14" y="383.5" ></text>
</g>
<g >
<title>__do_sys_newstat (26,182,305 samples, 0.10%)</title><rect x="184.0" y="213" width="1.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="186.98" y="223.5" ></text>
</g>
<g >
<title>_PyObject_Call (139,206,813 samples, 0.54%)</title><rect x="180.0" y="613" width="6.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="183.04" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,219,284 samples, 0.10%)</title><rect x="90.1" y="309" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.07" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (7,662,828,843 samples, 29.54%)</title><rect x="668.0" y="629" width="348.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="671.02" y="639.5" >[python3.12]</text>
</g>
<g >
<title>_PyFunction_Vectorcall (139,206,813 samples, 0.54%)</title><rect x="180.0" y="645" width="6.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="183.04" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,589,208 samples, 0.13%)</title><rect x="164.8" y="709" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="167.83" y="719.5" ></text>
</g>
<g >
<title>user_path_at_empty (104,051,402 samples, 0.40%)</title><rect x="168.9" y="181" width="4.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="171.88" y="191.5" ></text>
</g>
<g >
<title>all (25,943,689,597 samples, 100%)</title><rect x="10.0" y="1013" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (33,988,187 samples, 0.13%)</title><rect x="219.4" y="853" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="222.41" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (86,133,506 samples, 0.33%)</title><rect x="108.0" y="453" width="3.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.96" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (195,992,634 samples, 0.76%)</title><rect x="201.9" y="613" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.91" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="581" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1164.53" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,687 samples, 0.10%)</title><rect x="166.4" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.36" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (52,542,568 samples, 0.20%)</title><rect x="137.7" y="373" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="383.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,422,798 samples, 0.20%)</title><rect x="81.4" y="517" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="84.40" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,740 samples, 0.20%)</title><rect x="229.8" y="421" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.82" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,661,992 samples, 0.20%)</title><rect x="154.2" y="213" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="157.25" y="223.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (78,646,250 samples, 0.30%)</title><rect x="59.5" y="485" width="3.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="62.48" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (56,123,417 samples, 0.22%)</title><rect x="194.2" y="341" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.23" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,917 samples, 0.10%)</title><rect x="190.3" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.30" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (52,682,634 samples, 0.20%)</title><rect x="104.4" y="613" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.37" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (528,383,945 samples, 2.04%)</title><rect x="137.7" y="901" width="24.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="911.5" >[..</text>
</g>
<g >
<title>PyObject_Vectorcall (26,372,878 samples, 0.10%)</title><rect x="160.5" y="261" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="163.54" y="271.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (26,245,332 samples, 0.10%)</title><rect x="106.8" y="389" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="109.76" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (34,029,420 samples, 0.13%)</title><rect x="1001.6" y="405" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1004.64" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,214,813 samples, 0.10%)</title><rect x="103.2" y="517" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.18" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,965 samples, 0.10%)</title><rect x="105.6" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="108.57" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (138,892,822 samples, 0.54%)</title><rect x="131.4" y="805" width="6.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="134.39" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (35,686,722 samples, 0.14%)</title><rect x="64.3" y="309" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.25" y="319.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (26,299,537 samples, 0.10%)</title><rect x="214.4" y="229" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="217.41" y="239.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,219,284 samples, 0.10%)</title><rect x="90.1" y="693" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="93.07" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (87,587,843 samples, 0.34%)</title><rect x="233.4" y="725" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (81,243,819 samples, 0.31%)</title><rect x="94.8" y="949" width="3.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="97.85" y="959.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,245,332 samples, 0.10%)</title><rect x="106.8" y="741" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="109.76" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (11,092,871,523 samples, 42.76%)</title><rect x="657.0" y="837" width="504.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="659.99" y="847.5" >PyEval_EvalCode</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (6,863,829,578 samples, 26.46%)</title><rect x="676.6" y="453" width="312.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="679.60" y="463.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>[python3.12] (26,227,014 samples, 0.10%)</title><rect x="126.3" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.28" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (134,911,879 samples, 0.52%)</title><rect x="194.2" y="661" width="6.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="197.23" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (101,846,406 samples, 0.39%)</title><rect x="98.5" y="261" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="271.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (136,176,340 samples, 0.52%)</title><rect x="213.2" y="501" width="6.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="216.21" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (105,525,503 samples, 0.41%)</title><rect x="228.6" y="677" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.60" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,717 samples, 0.10%)</title><rect x="213.2" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.21" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (528,383,945 samples, 2.04%)</title><rect x="137.7" y="917" width="24.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="140.71" y="927.5" >P..</text>
</g>
<g >
<title>PyEval_EvalCode (104,993,205 samples, 0.40%)</title><rect x="90.1" y="773" width="4.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="93.07" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,759,894 samples, 0.13%)</title><rect x="37.9" y="533" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="40.92" y="543.5" ></text>
</g>
<g >
<title>do_page_fault (33,995,910 samples, 0.13%)</title><rect x="661.8" y="581" width="1.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="664.84" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,470,669 samples, 0.10%)</title><rect x="104.4" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.37" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,900,707 samples, 0.13%)</title><rect x="79.8" y="805" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.79" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,019,925 samples, 0.23%)</title><rect x="203.4" y="357" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="206.44" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,477 samples, 0.10%)</title><rect x="133.8" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.78" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,224,456 samples, 0.10%)</title><rect x="132.6" y="325" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="135.59" y="335.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,965 samples, 0.10%)</title><rect x="105.6" y="549" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="108.57" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (308,025,147 samples, 1.19%)</title><rect x="45.5" y="453" width="14.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.47" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,216,620 samples, 0.10%)</title><rect x="63.1" y="581" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="66.06" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,993,205 samples, 0.40%)</title><rect x="90.1" y="933" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.07" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (7,501,673,498 samples, 28.92%)</title><rect x="675.3" y="533" width="341.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="678.35" y="543.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (25,875,311 samples, 0.10%)</title><rect x="159.4" y="757" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="162.37" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,824 samples, 0.10%)</title><rect x="65.9" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.87" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,422,740 samples, 0.20%)</title><rect x="229.8" y="389" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="232.82" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (52,682,634 samples, 0.20%)</title><rect x="104.4" y="789" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.37" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (363,770,650 samples, 1.40%)</title><rect x="140.1" y="549" width="16.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.10" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (180,743,853 samples, 0.70%)</title><rect x="98.5" y="933" width="8.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="101.54" y="943.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,372,878 samples, 0.10%)</title><rect x="160.5" y="501" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="163.54" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (726,254,566 samples, 2.80%)</title><rect x="200.4" y="965" width="33.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="203.37" y="975.5" >_P..</text>
</g>
<g >
<title>_PyObject_Call (26,372,878 samples, 0.10%)</title><rect x="160.5" y="725" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="163.54" y="735.5" ></text>
</g>
<g >
<title>_PyObject_Call (182,453,960 samples, 0.70%)</title><rect x="51.2" y="437" width="8.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.18" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,866 samples, 0.10%)</title><rect x="110.7" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.68" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,417 samples, 0.10%)</title><rect x="82.6" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.59" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (203,948,195 samples, 0.79%)</title><rect x="1135.3" y="581" width="9.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1138.34" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,589,208 samples, 0.13%)</title><rect x="164.8" y="661" width="1.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="167.83" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,210,381 samples, 0.10%)</title><rect x="81.4" y="437" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.40" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (135,689,289 samples, 0.52%)</title><rect x="794.7" y="325" width="6.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="797.74" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,203,652 samples, 0.10%)</title><rect x="50.0" y="405" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="52.99" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,192,547 samples, 0.10%)</title><rect x="237.4" y="293" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="240.38" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,334 samples, 0.10%)</title><rect x="191.5" y="853" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.49" y="863.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,620,864 samples, 0.13%)</title><rect x="156.6" y="421" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="159.64" y="431.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (68,066,874 samples, 0.26%)</title><rect x="1106.0" y="485" width="3.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1108.98" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (58,106,080 samples, 0.22%)</title><rect x="237.4" y="565" width="2.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="240.38" y="575.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,271,110 samples, 0.10%)</title><rect x="35.5" y="357" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="38.54" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,002,791 samples, 0.13%)</title><rect x="136.2" y="533" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="139.16" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (138,892,822 samples, 0.54%)</title><rect x="131.4" y="917" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.39" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (86,133,506 samples, 0.33%)</title><rect x="108.0" y="565" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.96" y="575.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (135,957,216 samples, 0.52%)</title><rect x="1092.0" y="501" width="6.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1095.05" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (86,437,906 samples, 0.33%)</title><rect x="186.4" y="405" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.37" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,105,557 samples, 0.10%)</title><rect x="34.3" y="341" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="37.35" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (32,793,665 samples, 0.13%)</title><rect x="124.8" y="309" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.79" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,875,311 samples, 0.10%)</title><rect x="159.4" y="341" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="162.37" y="351.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (26,159,496 samples, 0.10%)</title><rect x="87.4" y="709" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="90.36" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (52,356,857 samples, 0.20%)</title><rect x="25.8" y="981" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="28.81" y="991.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,210,174 samples, 0.10%)</title><rect x="85.0" y="517" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="87.97" y="527.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,210,174 samples, 0.10%)</title><rect x="85.0" y="325" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="87.97" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (7,934,037,009 samples, 30.58%)</title><rect x="661.8" y="725" width="360.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="664.84" y="735.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,212,417 samples, 0.10%)</title><rect x="82.6" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.59" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="565" width="5.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1164.53" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (33,995,910 samples, 0.13%)</title><rect x="661.8" y="629" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="664.84" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,193 samples, 0.10%)</title><rect x="127.5" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="255.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,759,894 samples, 0.13%)</title><rect x="37.9" y="501" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="40.92" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (34,043,541 samples, 0.13%)</title><rect x="1115.2" y="517" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1118.25" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="773" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.36" y="783.5" ></text>
</g>
<g >
<title>__GI_exit (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="949" width="1.6" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1169.94" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (27,259,986 samples, 0.11%)</title><rect x="96.0" y="373" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.04" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (26,889,025 samples, 0.10%)</title><rect x="228.6" y="245" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="231.60" y="255.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,682,634 samples, 0.20%)</title><rect x="104.4" y="837" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="107.37" y="847.5" ></text>
</g>
<g >
<title>__mmdrop (3,260,393 samples, 0.01%)</title><rect x="246.2" y="917" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="249.17" y="927.5" ></text>
</g>
<g >
<title>_PyObject_Call (58,106,080 samples, 0.22%)</title><rect x="237.4" y="789" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="240.38" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (35,686,722 samples, 0.14%)</title><rect x="64.3" y="277" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.25" y="287.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (26,216,553 samples, 0.10%)</title><rect x="987.6" y="389" width="1.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="990.60" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,717 samples, 0.10%)</title><rect x="213.2" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.21" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,445,412 samples, 0.20%)</title><rect x="127.5" y="789" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="130.47" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (106,882,167 samples, 0.41%)</title><rect x="71.4" y="325" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="74.35" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,211,965 samples, 0.10%)</title><rect x="105.6" y="517" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="108.57" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (60,019,925 samples, 0.23%)</title><rect x="203.4" y="373" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.44" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (11,092,871,523 samples, 42.76%)</title><rect x="657.0" y="853" width="504.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="659.99" y="863.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (86,133,506 samples, 0.33%)</title><rect x="108.0" y="661" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.96" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (33,440,064 samples, 0.13%)</title><rect x="180.0" y="453" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,889,025 samples, 0.10%)</title><rect x="228.6" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.60" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,717 samples, 0.10%)</title><rect x="213.2" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.21" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (72,894,303 samples, 0.28%)</title><rect x="657.0" y="469" width="3.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="659.99" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,219 samples, 0.10%)</title><rect x="128.7" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.66" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (67,411,753 samples, 0.26%)</title><rect x="40.9" y="949" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.89" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (112,647,823 samples, 0.43%)</title><rect x="186.4" y="677" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.37" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (129,891,724 samples, 0.50%)</title><rect x="64.3" y="421" width="5.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.25" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (134,911,879 samples, 0.52%)</title><rect x="194.2" y="901" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.23" y="911.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (94,077,511 samples, 0.36%)</title><rect x="203.4" y="533" width="4.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="206.44" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,813 samples, 0.10%)</title><rect x="103.2" y="293" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.18" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,788,462 samples, 0.30%)</title><rect x="196.8" y="469" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="199.78" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (133,117,029 samples, 0.51%)</title><rect x="167.6" y="389" width="6.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.55" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (27,772,594 samples, 0.11%)</title><rect x="97.3" y="357" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="100.28" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (927,983,972 samples, 3.58%)</title><rect x="44.0" y="965" width="42.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="46.96" y="975.5" >PyO..</text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (33,620,864 samples, 0.13%)</title><rect x="156.6" y="485" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.64" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,214,813 samples, 0.10%)</title><rect x="103.2" y="549" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="106.18" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (52,430,158 samples, 0.20%)</title><rect x="77.4" y="565" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.40" y="575.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,900,707 samples, 0.13%)</title><rect x="79.8" y="821" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="82.79" y="831.5" ></text>
</g>
<g >
<title>_PyUnicode_InternMortal (33,897,814 samples, 0.13%)</title><rect x="221.0" y="597" width="1.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="223.95" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,245,332 samples, 0.10%)</title><rect x="106.8" y="773" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="109.76" y="783.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (646,294,839 samples, 2.49%)</title><rect x="164.8" y="901" width="29.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="167.83" y="911.5" >Py..</text>
</g>
<g >
<title>[python3.12] (59,302,193 samples, 0.23%)</title><rect x="20.1" y="965" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="23.10" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (56,572,626 samples, 0.22%)</title><rect x="33.0" y="677" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.96" y="687.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,216,479 samples, 0.10%)</title><rect x="231.0" y="373" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="234.01" y="383.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (33,522,307 samples, 0.13%)</title><rect x="1116.8" y="517" width="1.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1119.80" y="527.5" ></text>
</g>
<g >
<title>__GI___xstat (26,182,305 samples, 0.10%)</title><rect x="184.0" y="277" width="1.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="186.98" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (105,766,749 samples, 0.41%)</title><rect x="181.6" y="469" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.56" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (58,106,080 samples, 0.22%)</title><rect x="237.4" y="821" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="240.38" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,351 samples, 0.10%)</title><rect x="174.8" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.80" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (138,892,822 samples, 0.54%)</title><rect x="131.4" y="853" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.39" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (67,846,774 samples, 0.26%)</title><rect x="1095.1" y="469" width="3.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1098.14" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (56,572,626 samples, 0.22%)</title><rect x="33.0" y="437" width="2.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="35.96" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,211,239 samples, 0.10%)</title><rect x="94.8" y="373" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="97.85" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,793,665 samples, 0.13%)</title><rect x="124.8" y="341" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="127.79" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (67,877,904 samples, 0.26%)</title><rect x="1144.6" y="501" width="3.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1147.61" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (86,437,906 samples, 0.33%)</title><rect x="186.4" y="325" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.37" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (528,383,945 samples, 2.04%)</title><rect x="137.7" y="933" width="24.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="943.5" >[..</text>
</g>
<g >
<title>advise_stack_range (5,903,177 samples, 0.02%)</title><rect x="246.6" y="949" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="249.59" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,245,332 samples, 0.10%)</title><rect x="106.8" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,674 samples, 0.10%)</title><rect x="158.2" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.17" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,620,864 samples, 0.13%)</title><rect x="156.6" y="389" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.64" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (150,812,745 samples, 0.58%)</title><rect x="1171.6" y="981" width="6.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1174.56" y="991.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,542,568 samples, 0.20%)</title><rect x="137.7" y="517" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="140.71" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,430,158 samples, 0.20%)</title><rect x="77.4" y="741" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.40" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (342,869,059 samples, 1.32%)</title><rect x="111.9" y="581" width="15.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="114.88" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (32,561,945 samples, 0.13%)</title><rect x="39.4" y="229" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="42.41" y="239.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,965 samples, 0.10%)</title><rect x="105.6" y="389" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="108.57" y="399.5" ></text>
</g>
<g >
<title>__data_start (33,536,604 samples, 0.13%)</title><rect x="623.8" y="981" width="1.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="626.82" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (135,414,351 samples, 0.52%)</title><rect x="221.0" y="837" width="6.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="223.95" y="847.5" ></text>
</g>
<g >
<title>start_thread (8,293,846,774 samples, 31.97%)</title><rect x="246.6" y="965" width="377.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="249.59" y="975.5" >start_thread</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,227,014 samples, 0.10%)</title><rect x="126.3" y="229" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="129.28" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (33,949,474 samples, 0.13%)</title><rect x="1127.6" y="549" width="1.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1130.62" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,159,496 samples, 0.10%)</title><rect x="87.4" y="485" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="90.36" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,926 samples, 0.10%)</title><rect x="70.2" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="73.16" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (67,411,753 samples, 0.26%)</title><rect x="40.9" y="805" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="43.89" y="815.5" ></text>
</g>
<g >
<title>vfs_read (32,378,744 samples, 0.12%)</title><rect x="111.9" y="165" width="1.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="114.88" y="175.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,900,707 samples, 0.13%)</title><rect x="79.8" y="709" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="82.79" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,642,068 samples, 0.13%)</title><rect x="227.1" y="373" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="230.11" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (25,875,311 samples, 0.10%)</title><rect x="159.4" y="741" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.37" y="751.5" ></text>
</g>
<g >
<title>_int_realloc (33,848,482 samples, 0.13%)</title><rect x="200.4" y="453" width="1.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="203.37" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (135,689,289 samples, 0.52%)</title><rect x="794.7" y="341" width="6.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="797.74" y="351.5" ></text>
</g>
<g >
<title>walk_component (26,211,838 samples, 0.10%)</title><rect x="150.3" y="149" width="1.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="153.32" y="159.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (363,770,650 samples, 1.40%)</title><rect x="140.1" y="533" width="16.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.10" y="543.5" ></text>
</g>
<g >
<title>_Py_read (32,378,744 samples, 0.12%)</title><rect x="111.9" y="277" width="1.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="114.88" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (32,793,665 samples, 0.13%)</title><rect x="124.8" y="245" width="1.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="127.79" y="255.5" ></text>
</g>
<g >
<title>PyObject_Dir (52,430,158 samples, 0.20%)</title><rect x="77.4" y="549" width="2.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="80.40" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,245,332 samples, 0.10%)</title><rect x="106.8" y="645" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="109.76" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (67,411,753 samples, 0.26%)</title><rect x="40.9" y="869" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="43.89" y="879.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (30,467,069 samples, 0.12%)</title><rect x="33.0" y="341" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="35.96" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (87,587,843 samples, 0.34%)</title><rect x="233.4" y="741" width="4.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="236.40" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,542,568 samples, 0.20%)</title><rect x="137.7" y="709" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.71" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (33,848,482 samples, 0.13%)</title><rect x="200.4" y="645" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="655.5" ></text>
</g>
<g >
<title>llvm::LLVMContextImpl::~LLVMContextImpl (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="901" width="1.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1169.94" y="911.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,255,374 samples, 0.10%)</title><rect x="86.2" y="261" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="89.16" y="271.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,078,940 samples, 0.10%)</title><rect x="83.8" y="437" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="86.78" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (188,843,341 samples, 0.73%)</title><rect x="210.8" y="757" width="8.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="213.82" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (52,661,992 samples, 0.20%)</title><rect x="154.2" y="325" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.25" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,900,707 samples, 0.13%)</title><rect x="79.8" y="757" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.79" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (27,259,986 samples, 0.11%)</title><rect x="96.0" y="357" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.04" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (136,176,340 samples, 0.52%)</title><rect x="213.2" y="549" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.21" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (94,077,511 samples, 0.36%)</title><rect x="203.4" y="437" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.44" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (138,167,571 samples, 0.53%)</title><rect x="227.1" y="869" width="6.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="230.11" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (139,206,813 samples, 0.54%)</title><rect x="180.0" y="629" width="6.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="183.04" y="639.5" ></text>
</g>
<g >
<title>ksys_read (32,378,744 samples, 0.12%)</title><rect x="111.9" y="181" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="114.88" y="191.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,174 samples, 0.10%)</title><rect x="85.0" y="405" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="87.97" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (33,848,482 samples, 0.13%)</title><rect x="200.4" y="565" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,232,219 samples, 0.10%)</title><rect x="128.7" y="677" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="131.66" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,841,371 samples, 0.13%)</title><rect x="225.6" y="565" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="228.57" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,213,193 samples, 0.10%)</title><rect x="127.5" y="533" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="130.47" y="543.5" ></text>
</g>
<g >
<title>new_sync_read (32,378,744 samples, 0.12%)</title><rect x="111.9" y="133" width="1.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="114.88" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (34,008,987 samples, 0.13%)</title><rect x="1160.0" y="581" width="1.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1162.98" y="591.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (32,933,349 samples, 0.13%)</title><rect x="45.5" y="309" width="1.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="48.47" y="319.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,201,674 samples, 0.10%)</title><rect x="158.2" y="533" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="161.17" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,591,189 samples, 0.13%)</title><rect x="655.5" y="837" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="658.46" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,078,940 samples, 0.10%)</title><rect x="83.8" y="293" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="86.78" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,642,068 samples, 0.13%)</title><rect x="227.1" y="581" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="230.11" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (274,443,469 samples, 1.06%)</title><rect x="167.6" y="485" width="12.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="170.55" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="255.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,201,674 samples, 0.10%)</title><rect x="158.2" y="501" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="161.17" y="511.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (237,710,546 samples, 0.92%)</title><rect x="1081.2" y="485" width="10.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1084.23" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (33,848,482 samples, 0.13%)</title><rect x="200.4" y="517" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (58,106,080 samples, 0.22%)</title><rect x="237.4" y="437" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="240.38" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,848,482 samples, 0.13%)</title><rect x="200.4" y="533" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (52,548,971 samples, 0.20%)</title><rect x="196.8" y="373" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.78" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (106,882,167 samples, 0.41%)</title><rect x="71.4" y="309" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.35" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,078,940 samples, 0.10%)</title><rect x="83.8" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.78" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (53,573,450 samples, 0.21%)</title><rect x="234.9" y="469" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.94" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (32,566,060 samples, 0.13%)</title><rect x="628.4" y="837" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="631.39" y="847.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,215,379 samples, 0.10%)</title><rect x="31.8" y="309" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="34.77" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,002,791 samples, 0.13%)</title><rect x="136.2" y="437" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="139.16" y="447.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,717 samples, 0.10%)</title><rect x="213.2" y="277" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="216.21" y="287.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (26,211,838 samples, 0.10%)</title><rect x="150.3" y="117" width="1.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="153.32" y="127.5" ></text>
</g>
<g >
<title>[python3.12] (26,678,105 samples, 0.10%)</title><rect x="10.0" y="965" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="13.01" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,227,014 samples, 0.10%)</title><rect x="126.3" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.28" y="527.5" ></text>
</g>
<g >
<title>__GI___xstat (104,051,402 samples, 0.40%)</title><rect x="168.9" y="277" width="4.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="171.88" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,729 samples, 0.10%)</title><rect x="240.0" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="243.02" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (56,123,417 samples, 0.22%)</title><rect x="194.2" y="405" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.23" y="415.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,866 samples, 0.10%)</title><rect x="110.7" y="325" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="113.68" y="335.5" ></text>
</g>
<g >
<title>zap_page_range (5,903,177 samples, 0.02%)</title><rect x="246.6" y="853" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="249.59" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (342,869,059 samples, 1.32%)</title><rect x="111.9" y="677" width="15.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="687.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (25,875,311 samples, 0.10%)</title><rect x="159.4" y="325" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="162.37" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,245,332 samples, 0.10%)</title><rect x="106.8" y="709" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.76" y="719.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT_interface::add_next_matrix (3,018,665,800 samples, 11.64%)</title><rect x="1024.2" y="661" width="137.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1027.23" y="671.5" >diff_Nexullance_I..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,237,850 samples, 0.10%)</title><rect x="131.4" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.39" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (5,903,177 samples, 0.02%)</title><rect x="246.6" y="885" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="249.59" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (101,846,406 samples, 0.39%)</title><rect x="98.5" y="277" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,159,496 samples, 0.10%)</title><rect x="87.4" y="453" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="90.36" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (109,407,846 samples, 0.42%)</title><rect x="54.5" y="341" width="5.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="57.50" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,224,456 samples, 0.10%)</title><rect x="132.6" y="341" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="135.59" y="351.5" ></text>
</g>
<g >
<title>__vfs_read (26,212,519 samples, 0.10%)</title><rect x="149.1" y="133" width="1.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="152.13" y="143.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5,076,349 samples, 0.02%)</title><rect x="623.6" y="837" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="626.59" y="847.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (33,995,731 samples, 0.13%)</title><rect x="1019.6" y="517" width="1.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1022.61" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (35,686,722 samples, 0.14%)</title><rect x="64.3" y="357" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.25" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,729 samples, 0.10%)</title><rect x="240.0" y="741" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="243.02" y="751.5" ></text>
</g>
<g >
<title>migrate_pages (34,023,571 samples, 0.13%)</title><rect x="163.3" y="773" width="1.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="166.29" y="783.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (68,037,615 samples, 0.26%)</title><rect x="1136.9" y="501" width="3.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1139.89" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (109,961,623 samples, 0.42%)</title><rect x="214.4" y="357" width="5.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="217.41" y="367.5" ></text>
</g>
<g >
<title>mmput (133,615,269 samples, 0.52%)</title><rect x="1172.3" y="901" width="6.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1175.33" y="911.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~queue (67,739,456 samples, 0.26%)</title><rect x="1129.2" y="597" width="3.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1132.16" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (34,014,393 samples, 0.13%)</title><rect x="233.4" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="495.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (135,957,216 samples, 0.52%)</title><rect x="1092.0" y="485" width="6.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1095.05" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (33,949,436 samples, 0.13%)</title><rect x="178.5" y="373" width="1.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="181.49" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,516,466,788 samples, 5.85%)</title><rect x="131.4" y="965" width="69.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.39" y="975.5" >_PyEval..</text>
</g>
<g >
<title>[python3.12] (78,647,213 samples, 0.30%)</title><rect x="29.4" y="629" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (101,846,406 samples, 0.39%)</title><rect x="98.5" y="357" width="4.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="101.54" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (419,992,435 samples, 1.62%)</title><rect x="44.0" y="789" width="19.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="799.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (156,098,650 samples, 0.60%)</title><rect x="64.3" y="469" width="7.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="67.25" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (53,573,450 samples, 0.21%)</title><rect x="234.9" y="565" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="237.94" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (27,358,818 samples, 0.11%)</title><rect x="236.1" y="357" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="239.14" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (32,793,665 samples, 0.13%)</title><rect x="124.8" y="325" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.79" y="335.5" ></text>
</g>
<g >
<title>memcpy@plt (26,216,905 samples, 0.10%)</title><rect x="198.0" y="277" width="1.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="200.98" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,243 samples, 0.10%)</title><rect x="173.6" y="293" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="176.61" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,453,705 samples, 0.10%)</title><rect x="212.0" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.01" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,620 samples, 0.10%)</title><rect x="63.1" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="559.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::update (68,125,050 samples, 0.26%)</title><rect x="1059.6" y="517" width="3.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1062.64" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,271,110 samples, 0.10%)</title><rect x="35.5" y="533" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="38.54" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,219,284 samples, 0.10%)</title><rect x="90.1" y="661" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="93.07" y="671.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,227,014 samples, 0.10%)</title><rect x="126.3" y="501" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="129.28" y="511.5" ></text>
</g>
<g >
<title>_PyRuntime (34,044,533 samples, 0.13%)</title><rect x="244.3" y="981" width="1.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="247.32" y="991.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,174 samples, 0.10%)</title><rect x="85.0" y="389" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="87.97" y="399.5" ></text>
</g>
<g >
<title>Py_FinalizeEx (695,679,892 samples, 2.68%)</title><rect x="625.3" y="917" width="31.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="628.35" y="927.5" >Py..</text>
</g>
<g >
<title>[python3.12] (57,452,198 samples, 0.22%)</title><rect x="216.8" y="245" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.80" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (274,443,469 samples, 1.06%)</title><rect x="167.6" y="469" width="12.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.55" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (87,587,843 samples, 0.34%)</title><rect x="233.4" y="853" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="863.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (65,321,839 samples, 0.25%)</title><rect x="37.9" y="949" width="3.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="40.92" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (34,002,791 samples, 0.13%)</title><rect x="136.2" y="405" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.16" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,647,213 samples, 0.30%)</title><rect x="29.4" y="677" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.39" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,214,813 samples, 0.10%)</title><rect x="103.2" y="277" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.18" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,248 samples, 0.10%)</title><rect x="135.0" y="309" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.97" y="319.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,214,274 samples, 0.10%)</title><rect x="28.2" y="469" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="31.19" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,594 samples, 0.20%)</title><rect x="173.6" y="309" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.61" y="319.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (34,127,900 samples, 0.13%)</title><rect x="1140.0" y="469" width="1.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1142.98" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (25,875,311 samples, 0.10%)</title><rect x="159.4" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.37" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (33,841,371 samples, 0.13%)</title><rect x="225.6" y="693" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="228.57" y="703.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT::optimize_for_M_EPs (2,985,002,482 samples, 11.51%)</title><rect x="1025.8" y="645" width="135.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1028.76" y="655.5" >diff_Nexullance_I..</text>
</g>
<g >
<title>[python3.12] (33,897,814 samples, 0.13%)</title><rect x="221.0" y="565" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="223.95" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,589,208 samples, 0.13%)</title><rect x="164.8" y="581" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="167.83" y="591.5" ></text>
</g>
<g >
<title>_dl_open (33,620,864 samples, 0.13%)</title><rect x="156.6" y="229" width="1.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="159.64" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,965 samples, 0.10%)</title><rect x="105.6" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.57" y="303.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,773,921 samples, 0.30%)</title><rect x="91.3" y="421" width="3.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="94.27" y="431.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (27,259,986 samples, 0.11%)</title><rect x="96.0" y="517" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="99.04" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32,793,665 samples, 0.13%)</title><rect x="124.8" y="277" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="127.79" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,926 samples, 0.10%)</title><rect x="70.2" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.16" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (26,211,838 samples, 0.10%)</title><rect x="150.3" y="245" width="1.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="153.32" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,620 samples, 0.10%)</title><rect x="63.1" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="623.5" ></text>
</g>
<g >
<title>__GI___libc_free (31,913,533 samples, 0.12%)</title><rect x="238.6" y="197" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="241.57" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,248 samples, 0.10%)</title><rect x="135.0" y="453" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.97" y="463.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (34,059,701 samples, 0.13%)</title><rect x="207.7" y="245" width="1.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="210.72" y="255.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (86,133,506 samples, 0.33%)</title><rect x="108.0" y="581" width="3.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="110.96" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (79,471,777 samples, 0.31%)</title><rect x="181.6" y="293" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.56" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,729 samples, 0.10%)</title><rect x="240.0" y="917" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="243.02" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,078,940 samples, 0.10%)</title><rect x="83.8" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="86.78" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,479 samples, 0.10%)</title><rect x="231.0" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.01" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,813 samples, 0.10%)</title><rect x="103.2" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.18" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (72,894,303 samples, 0.28%)</title><rect x="657.0" y="517" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="659.99" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,213,738 samples, 0.10%)</title><rect x="232.2" y="421" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="235.21" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,773,921 samples, 0.30%)</title><rect x="91.3" y="469" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="94.27" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,219,284 samples, 0.10%)</title><rect x="90.1" y="405" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="93.07" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,900,707 samples, 0.13%)</title><rect x="79.8" y="405" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.79" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (128,061,219 samples, 0.49%)</title><rect x="98.5" y="725" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.54" y="735.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,219,284 samples, 0.10%)</title><rect x="90.1" y="389" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="93.07" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (27,259,986 samples, 0.11%)</title><rect x="96.0" y="421" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.04" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,667,001 samples, 0.20%)</title><rect x="210.8" y="661" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="213.82" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="181" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="191.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,993,205 samples, 0.40%)</title><rect x="90.1" y="837" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.07" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (180,743,853 samples, 0.70%)</title><rect x="98.5" y="917" width="8.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.54" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (52,542,568 samples, 0.20%)</title><rect x="137.7" y="677" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (65,321,839 samples, 0.25%)</title><rect x="37.9" y="773" width="3.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="40.92" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (56,572,626 samples, 0.22%)</title><rect x="33.0" y="549" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="35.96" y="559.5" ></text>
</g>
<g >
<title>__do_page_fault (34,064,534 samples, 0.13%)</title><rect x="1018.1" y="597" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1021.06" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (33,620,864 samples, 0.13%)</title><rect x="156.6" y="405" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.64" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (528,383,945 samples, 2.04%)</title><rect x="137.7" y="837" width="24.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="847.5" >[..</text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_not_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (34,039,294 samples, 0.13%)</title><rect x="1062.7" y="517" width="1.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1065.73" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (54,955,410 samples, 0.21%)</title><rect x="176.0" y="309" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.99" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (112,647,823 samples, 0.43%)</title><rect x="186.4" y="581" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.37" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (161,490,949 samples, 0.62%)</title><rect x="29.4" y="885" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (300,649,156 samples, 1.16%)</title><rect x="166.4" y="773" width="13.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.36" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (79,311,765 samples, 0.31%)</title><rect x="228.6" y="533" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.60" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (58,106,080 samples, 0.22%)</title><rect x="237.4" y="421" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="240.38" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (32,561,945 samples, 0.13%)</title><rect x="39.4" y="549" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.41" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,216,620 samples, 0.10%)</title><rect x="63.1" y="469" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="66.06" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,114,537 samples, 0.13%)</title><rect x="663.4" y="629" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="666.38" y="639.5" ></text>
</g>
<g >
<title>_cond_resched (34,141,209 samples, 0.13%)</title><rect x="961.6" y="325" width="1.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="964.56" y="335.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,239,491 samples, 0.10%)</title><rect x="199.2" y="325" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="202.17" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (86,437,906 samples, 0.33%)</title><rect x="186.4" y="341" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.37" y="351.5" ></text>
</g>
<g >
<title>_PyModule_ClearDict (33,591,189 samples, 0.13%)</title><rect x="655.5" y="885" width="1.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="658.46" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="677" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (94,205,002 samples, 0.36%)</title><rect x="65.9" y="357" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.87" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (300,649,156 samples, 1.16%)</title><rect x="166.4" y="741" width="13.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.36" y="751.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (56,123,417 samples, 0.22%)</title><rect x="194.2" y="517" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="197.23" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="165" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="175.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,274 samples, 0.10%)</title><rect x="28.2" y="565" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="31.19" y="575.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (26,212,519 samples, 0.10%)</title><rect x="149.1" y="37" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="152.13" y="47.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,255,374 samples, 0.10%)</title><rect x="86.2" y="325" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="89.16" y="335.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,255,374 samples, 0.10%)</title><rect x="86.2" y="309" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="89.16" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (26,159,496 samples, 0.10%)</title><rect x="87.4" y="917" width="1.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="90.36" y="927.5" ></text>
</g>
<g >
<title>init_string_ufuncs (251,469,636 samples, 0.97%)</title><rect x="113.3" y="373" width="11.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="116.35" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (109,961,623 samples, 0.42%)</title><rect x="214.4" y="405" width="5.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="217.41" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (94,077,511 samples, 0.36%)</title><rect x="203.4" y="501" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="206.44" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,378,744 samples, 0.12%)</title><rect x="111.9" y="357" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.88" y="367.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,389 samples, 0.10%)</title><rect x="93.7" y="277" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="96.66" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="661" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1164.53" y="671.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,421,594 samples, 0.20%)</title><rect x="173.6" y="341" width="2.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="176.61" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (6,863,829,578 samples, 26.46%)</title><rect x="676.6" y="437" width="312.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="679.60" y="447.5" >[python3.12]</text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,002,791 samples, 0.13%)</title><rect x="136.2" y="469" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="139.16" y="479.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long const&amp;&gt; (33,949,474 samples, 0.13%)</title><rect x="1127.6" y="533" width="1.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1130.62" y="543.5" ></text>
</g>
<g >
<title>user_path_at_empty (26,182,305 samples, 0.10%)</title><rect x="184.0" y="181" width="1.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="186.98" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,711,912 samples, 0.40%)</title><rect x="81.4" y="533" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="84.40" y="543.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT::optimize_for_M_R_fixed_step (2,985,002,482 samples, 11.51%)</title><rect x="1025.8" y="629" width="135.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1028.76" y="639.5" >diff_Nexullance_I..</text>
</g>
<g >
<title>_int_malloc (27,554,181 samples, 0.11%)</title><rect x="675.3" y="453" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="678.35" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (101,846,406 samples, 0.39%)</title><rect x="98.5" y="325" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,561,945 samples, 0.13%)</title><rect x="39.4" y="437" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="42.41" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,261 samples, 0.10%)</title><rect x="229.8" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.82" y="303.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch1&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (1,762,986,463 samples, 6.80%)</title><rect x="1038.1" y="581" width="80.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1041.13" y="591.5" >boost::de..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (363,770,650 samples, 1.40%)</title><rect x="140.1" y="437" width="16.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.10" y="447.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_down (134,011,507 samples, 0.52%)</title><rect x="1045.8" y="501" width="6.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1048.85" y="511.5" ></text>
</g>
<g >
<title>elf_dynamic_do_Rela (33,620,864 samples, 0.13%)</title><rect x="156.6" y="165" width="1.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="159.64" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (26,470,669 samples, 0.10%)</title><rect x="104.4" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.37" y="447.5" ></text>
</g>
<g >
<title>Py_RunMain (11,788,551,415 samples, 45.44%)</title><rect x="625.3" y="933" width="536.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="628.35" y="943.5" >Py_RunMain</text>
</g>
<g >
<title>PyEval_EvalCode (26,214,274 samples, 0.10%)</title><rect x="28.2" y="501" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="31.19" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (78,773,921 samples, 0.30%)</title><rect x="91.3" y="613" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.27" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,232,219 samples, 0.10%)</title><rect x="128.7" y="565" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="131.66" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (112,647,823 samples, 0.43%)</title><rect x="186.4" y="565" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.37" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (251,854,636 samples, 0.97%)</title><rect x="180.0" y="805" width="11.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="183.04" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (52,462,306 samples, 0.20%)</title><rect x="131.4" y="469" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.39" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (56,123,417 samples, 0.22%)</title><rect x="194.2" y="501" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="197.23" y="511.5" ></text>
</g>
<g >
<title>PyNumber_Multiply (33,660,553 samples, 0.13%)</title><rect x="660.3" y="805" width="1.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="663.31" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (342,869,059 samples, 1.32%)</title><rect x="111.9" y="821" width="15.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="114.88" y="831.5" ></text>
</g>
<g >
<title>_PyObject_Call (58,106,080 samples, 0.22%)</title><rect x="237.4" y="613" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="240.38" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (72,894,303 samples, 0.28%)</title><rect x="657.0" y="501" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="659.99" y="511.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (67,990,178 samples, 0.26%)</title><rect x="67.1" y="293" width="3.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="70.07" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="693" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (101,846,406 samples, 0.39%)</title><rect x="98.5" y="293" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call (395,314,471 samples, 1.52%)</title><rect x="111.9" y="917" width="18.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="114.88" y="927.5" ></text>
</g>
<g >
<title>__run_exit_handlers (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="933" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1169.94" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (105,766,749 samples, 0.41%)</title><rect x="181.6" y="357" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.56" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (27,772,594 samples, 0.11%)</title><rect x="97.3" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.28" y="319.5" ></text>
</g>
<g >
<title>__pyx_pymod_exec__helpers (25,875,311 samples, 0.10%)</title><rect x="159.4" y="789" width="1.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="162.37" y="799.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::RemoveKey (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="805" width="1.6" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1169.94" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,728,686 samples, 0.10%)</title><rect x="182.8" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.77" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (53,289,472 samples, 0.21%)</title><rect x="181.6" y="277" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.56" y="287.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (26,206,926 samples, 0.10%)</title><rect x="70.2" y="437" width="1.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="73.16" y="447.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,661,992 samples, 0.20%)</title><rect x="154.2" y="245" width="2.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="157.25" y="255.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,201,674 samples, 0.10%)</title><rect x="158.2" y="277" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="161.17" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (419,992,435 samples, 1.62%)</title><rect x="44.0" y="805" width="19.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="46.96" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="405" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,594 samples, 0.20%)</title><rect x="173.6" y="325" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.61" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="773" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (136,176,340 samples, 0.52%)</title><rect x="213.2" y="453" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.21" y="463.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,813 samples, 0.10%)</title><rect x="103.2" y="325" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="106.18" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (53,471,225 samples, 0.21%)</title><rect x="94.8" y="693" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,417 samples, 0.10%)</title><rect x="82.6" y="437" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="85.59" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,430,158 samples, 0.20%)</title><rect x="77.4" y="677" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="80.40" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (87,587,843 samples, 0.34%)</title><rect x="233.4" y="821" width="4.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="236.40" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (33,848,482 samples, 0.13%)</title><rect x="200.4" y="629" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (27,358,818 samples, 0.11%)</title><rect x="236.1" y="405" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="239.14" y="415.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,372,878 samples, 0.10%)</title><rect x="160.5" y="645" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="163.54" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,213,296 samples, 0.10%)</title><rect x="210.8" y="469" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="213.82" y="479.5" ></text>
</g>
<g >
<title>free_pages (2,218,440 samples, 0.01%)</title><rect x="246.2" y="885" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="249.22" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="901" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (54,955,410 samples, 0.21%)</title><rect x="176.0" y="293" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.99" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,174 samples, 0.10%)</title><rect x="85.0" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.97" y="495.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,059,701 samples, 0.13%)</title><rect x="207.7" y="309" width="1.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="210.72" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,453,705 samples, 0.10%)</title><rect x="212.0" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.01" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (52,445,412 samples, 0.20%)</title><rect x="127.5" y="757" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (32,759,894 samples, 0.13%)</title><rect x="37.9" y="405" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,561,945 samples, 0.13%)</title><rect x="39.4" y="597" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.41" y="607.5" ></text>
</g>
<g >
<title>__do_page_fault (26,889,025 samples, 0.10%)</title><rect x="228.6" y="261" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="231.60" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,917 samples, 0.10%)</title><rect x="190.3" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.30" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (419,992,435 samples, 1.62%)</title><rect x="44.0" y="709" width="19.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (171,910,652 samples, 0.66%)</title><rect x="233.4" y="965" width="7.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="236.40" y="975.5" ></text>
</g>
<g >
<title>finish_task_switch (5,076,349 samples, 0.02%)</title><rect x="623.6" y="853" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="626.59" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,078,940 samples, 0.10%)</title><rect x="83.8" y="421" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="86.78" y="431.5" ></text>
</g>
<g >
<title>vfs_statx (26,182,305 samples, 0.10%)</title><rect x="184.0" y="197" width="1.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="186.98" y="207.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (26,216,553 samples, 0.10%)</title><rect x="987.6" y="373" width="1.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="990.60" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,284 samples, 0.10%)</title><rect x="90.1" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,232,219 samples, 0.10%)</title><rect x="128.7" y="645" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="131.66" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (104,993,205 samples, 0.40%)</title><rect x="90.1" y="885" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="93.07" y="895.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,023,571 samples, 0.13%)</title><rect x="163.3" y="837" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="166.29" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,995,731 samples, 0.13%)</title><rect x="1019.6" y="565" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1022.61" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (33,900,707 samples, 0.13%)</title><rect x="79.8" y="741" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.79" y="751.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (33,842,829 samples, 0.13%)</title><rect x="1070.4" y="501" width="1.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1073.43" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,219,284 samples, 0.10%)</title><rect x="90.1" y="485" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="93.07" y="495.5" ></text>
</g>
<g >
<title>dl_open_worker (33,620,864 samples, 0.13%)</title><rect x="156.6" y="197" width="1.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="159.64" y="207.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,493,181 samples, 0.13%)</title><rect x="140.1" y="325" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="143.10" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,773,921 samples, 0.30%)</title><rect x="91.3" y="533" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="94.27" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (56,123,417 samples, 0.22%)</title><rect x="194.2" y="309" width="2.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="197.23" y="319.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,216,729 samples, 0.10%)</title><rect x="240.0" y="709" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="243.02" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (34,057,586 samples, 0.13%)</title><rect x="206.2" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="209.17" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,210,381 samples, 0.10%)</title><rect x="81.4" y="373" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="84.40" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,875,311 samples, 0.10%)</title><rect x="159.4" y="693" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="162.37" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,620,864 samples, 0.13%)</title><rect x="156.6" y="453" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="159.64" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,712,837 samples, 0.13%)</title><rect x="108.0" y="277" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.96" y="287.5" ></text>
</g>
<g >
<title>PyDict_SetItem (33,990,505 samples, 0.13%)</title><rect x="192.7" y="853" width="1.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="195.68" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (94,077,511 samples, 0.36%)</title><rect x="203.4" y="517" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.44" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (53,471,225 samples, 0.21%)</title><rect x="94.8" y="789" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="97.85" y="799.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,206,926 samples, 0.10%)</title><rect x="70.2" y="277" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="73.16" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,866 samples, 0.10%)</title><rect x="110.7" y="229" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.68" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (56,123,417 samples, 0.22%)</title><rect x="194.2" y="453" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.23" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="517" width="5.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1164.53" y="527.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch2&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (1,762,986,463 samples, 6.80%)</title><rect x="1038.1" y="565" width="80.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1041.13" y="575.5" >boost::de..</text>
</g>
<g >
<title>native_flush_tlb_others (5,903,177 samples, 0.02%)</title><rect x="246.6" y="789" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="249.59" y="799.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,214,274 samples, 0.10%)</title><rect x="28.2" y="677" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="31.19" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (133,112,806 samples, 0.51%)</title><rect x="71.4" y="581" width="6.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.35" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,219 samples, 0.10%)</title><rect x="128.7" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.66" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="789" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="799.5" ></text>
</g>
<g >
<title>PyMem_Malloc (26,271,110 samples, 0.10%)</title><rect x="35.5" y="197" width="1.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="38.54" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (72,894,303 samples, 0.28%)</title><rect x="657.0" y="549" width="3.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="659.99" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (342,869,059 samples, 1.32%)</title><rect x="111.9" y="853" width="15.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.88" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,243 samples, 0.10%)</title><rect x="173.6" y="229" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.61" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (67,411,753 samples, 0.26%)</title><rect x="40.9" y="917" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.89" y="927.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,214,274 samples, 0.10%)</title><rect x="28.2" y="613" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="31.19" y="623.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (667,276,767 samples, 2.57%)</title><rect x="131.4" y="949" width="30.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="134.39" y="959.5" >Py..</text>
</g>
<g >
<title>PyBytes_FromStringAndSize (27,554,181 samples, 0.11%)</title><rect x="675.3" y="501" width="1.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="678.35" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,212,680 samples, 0.10%)</title><rect x="151.5" y="293" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="154.51" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (53,573,450 samples, 0.21%)</title><rect x="234.9" y="533" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="237.94" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (229,841,116 samples, 0.89%)</title><rect x="200.4" y="805" width="10.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="203.37" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (284,263,301 samples, 1.10%)</title><rect x="113.3" y="485" width="13.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="116.35" y="495.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (34,127,900 samples, 0.13%)</title><rect x="1140.0" y="453" width="1.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1142.98" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (52,542,568 samples, 0.20%)</title><rect x="137.7" y="741" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="751.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (34,035,500 samples, 0.13%)</title><rect x="1058.1" y="501" width="1.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1061.09" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,159,496 samples, 0.10%)</title><rect x="87.4" y="373" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="90.36" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,271,110 samples, 0.10%)</title><rect x="35.5" y="501" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="38.54" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,900,707 samples, 0.13%)</title><rect x="79.8" y="533" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="82.79" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (79,311,765 samples, 0.31%)</title><rect x="228.6" y="485" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="231.60" y="495.5" ></text>
</g>
<g >
<title>handle_mm_fault (26,205,687 samples, 0.10%)</title><rect x="166.4" y="229" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="169.36" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,259,986 samples, 0.11%)</title><rect x="96.0" y="405" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.04" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (300,649,156 samples, 1.16%)</title><rect x="166.4" y="613" width="13.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="169.36" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (56,572,626 samples, 0.22%)</title><rect x="33.0" y="533" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="35.96" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,682,634 samples, 0.20%)</title><rect x="104.4" y="805" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.37" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (112,378,838 samples, 0.43%)</title><rect x="106.8" y="853" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="863.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (79,311,765 samples, 0.31%)</title><rect x="228.6" y="517" width="3.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="231.60" y="527.5" ></text>
</g>
<g >
<title>pgd_free (3,260,393 samples, 0.01%)</title><rect x="246.2" y="901" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="249.17" y="911.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT_interface::_initialize (33,613,858 samples, 0.13%)</title><rect x="1022.7" y="661" width="1.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1025.70" y="671.5" ></text>
</g>
<g >
<title>_int_malloc (33,917,650 samples, 0.13%)</title><rect x="1021.2" y="565" width="1.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1024.16" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,462,306 samples, 0.20%)</title><rect x="131.4" y="453" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="134.39" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,470,669 samples, 0.10%)</title><rect x="104.4" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.37" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (101,452,148 samples, 0.39%)</title><rect x="794.7" y="277" width="4.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="797.74" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (86,133,506 samples, 0.33%)</title><rect x="108.0" y="485" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.96" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,759,894 samples, 0.13%)</title><rect x="37.9" y="485" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="40.92" y="495.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,215,195 samples, 0.10%)</title><rect x="60.7" y="309" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="63.67" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (26,205,687 samples, 0.10%)</title><rect x="166.4" y="325" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="169.36" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (229,841,116 samples, 0.89%)</title><rect x="200.4" y="709" width="10.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="203.37" y="719.5" ></text>
</g>
<g >
<title>PyIter_Next (33,897,814 samples, 0.13%)</title><rect x="221.0" y="773" width="1.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="223.95" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (33,900,707 samples, 0.13%)</title><rect x="79.8" y="789" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.79" y="799.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="629" width="5.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1164.53" y="639.5" ></text>
</g>
<g >
<title>_PyObject_Call (101,846,406 samples, 0.39%)</title><rect x="98.5" y="405" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="101.54" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="725" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1164.53" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (27,772,594 samples, 0.11%)</title><rect x="97.3" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.28" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,788,462 samples, 0.30%)</title><rect x="196.8" y="485" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.78" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (67,411,753 samples, 0.26%)</title><rect x="40.9" y="933" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="43.89" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (32,642,068 samples, 0.13%)</title><rect x="227.1" y="693" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="703.5" ></text>
</g>
<g >
<title>__sched_text_start (5,076,349 samples, 0.02%)</title><rect x="623.6" y="869" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="626.59" y="879.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,201,674 samples, 0.10%)</title><rect x="158.2" y="597" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="161.17" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,214,248 samples, 0.10%)</title><rect x="135.0" y="389" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="137.97" y="399.5" ></text>
</g>
<g >
<title>clear_page_erms (27,554,181 samples, 0.11%)</title><rect x="675.3" y="277" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="678.35" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.36" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (106,882,167 samples, 0.41%)</title><rect x="71.4" y="293" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.35" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,014,393 samples, 0.13%)</title><rect x="233.4" y="453" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="236.40" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (78,647,213 samples, 0.30%)</title><rect x="29.4" y="533" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="543.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 1&gt;::operator (33,663,318 samples, 0.13%)</title><rect x="1024.2" y="645" width="1.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1027.23" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="821" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (229,841,116 samples, 0.89%)</title><rect x="200.4" y="693" width="10.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (32,759,894 samples, 0.13%)</title><rect x="37.9" y="437" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (138,167,571 samples, 0.53%)</title><rect x="227.1" y="805" width="6.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="230.11" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,211,965 samples, 0.10%)</title><rect x="105.6" y="261" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="108.57" y="271.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (56,572,626 samples, 0.22%)</title><rect x="33.0" y="613" width="2.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="35.96" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (528,383,945 samples, 2.04%)</title><rect x="137.7" y="821" width="24.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="831.5" >[..</text>
</g>
<g >
<title>python3.12 (25,943,480,860 samples, 100.00%)</title><rect x="10.0" y="997" width="1180.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="13.01" y="1007.5" >python3.12</text>
</g>
<g >
<title>[python3.12] (26,245,332 samples, 0.10%)</title><rect x="106.8" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="639.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,216,479 samples, 0.10%)</title><rect x="231.0" y="325" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="234.01" y="335.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (26,212,519 samples, 0.10%)</title><rect x="149.1" y="101" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="152.13" y="111.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,595,757 samples, 0.20%)</title><rect x="92.5" y="341" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="95.46" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,106,661 samples, 0.10%)</title><rect x="36.7" y="549" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="39.73" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (58,106,080 samples, 0.22%)</title><rect x="237.4" y="773" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="240.38" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (94,205,002 samples, 0.36%)</title><rect x="65.9" y="309" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="68.87" y="319.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,661,992 samples, 0.20%)</title><rect x="154.2" y="421" width="2.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="157.25" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,900,707 samples, 0.13%)</title><rect x="79.8" y="453" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.79" y="463.5" ></text>
</g>
<g >
<title>generic_file_read_iter (26,212,519 samples, 0.10%)</title><rect x="149.1" y="85" width="1.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="152.13" y="95.5" ></text>
</g>
<g >
<title>rmqueue (33,975,690 samples, 0.13%)</title><rect x="68.6" y="69" width="1.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="71.61" y="79.5" ></text>
</g>
<g >
<title>[python3.12] (32,642,068 samples, 0.13%)</title><rect x="227.1" y="341" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="351.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (135,957,216 samples, 0.52%)</title><rect x="1092.0" y="517" width="6.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1095.05" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (229,841,116 samples, 0.89%)</title><rect x="200.4" y="757" width="10.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="767.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (26,216,620 samples, 0.10%)</title><rect x="63.1" y="165" width="1.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="66.06" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (87,587,843 samples, 0.34%)</title><rect x="233.4" y="789" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="799.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,477 samples, 0.10%)</title><rect x="133.8" y="421" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="136.78" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,453,705 samples, 0.10%)</title><rect x="212.0" y="405" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="215.01" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (419,992,435 samples, 1.62%)</title><rect x="44.0" y="549" width="19.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.96" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,926 samples, 0.10%)</title><rect x="70.2" y="293" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="73.16" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,900,707 samples, 0.13%)</title><rect x="79.8" y="597" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.79" y="607.5" ></text>
</g>
<g >
<title>initumath (46,518,056 samples, 0.18%)</title><rect x="52.4" y="373" width="2.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="55.39" y="383.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (58,106,080 samples, 0.22%)</title><rect x="237.4" y="709" width="2.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="240.38" y="719.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (60,224,916 samples, 0.23%)</title><rect x="998.9" y="405" width="2.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1001.90" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (68,037,615 samples, 0.26%)</title><rect x="1136.9" y="469" width="3.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1139.89" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,528,058 samples, 0.10%)</title><rect x="51.2" y="309" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="54.18" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,248 samples, 0.10%)</title><rect x="135.0" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.97" y="255.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4,287,558 samples, 0.02%)</title><rect x="246.3" y="869" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="249.33" y="879.5" ></text>
</g>
<g >
<title>do_user_addr_fault (67,990,178 samples, 0.26%)</title><rect x="67.1" y="181" width="3.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="70.07" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (128,061,219 samples, 0.49%)</title><rect x="98.5" y="741" width="5.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="917" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="933" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1164.53" y="943.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,216,729 samples, 0.10%)</title><rect x="240.0" y="789" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="243.02" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,182,305 samples, 0.10%)</title><rect x="184.0" y="245" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="186.98" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;float const, unsigned long&gt;, std::pair&lt;float, unsigned long&gt; &gt; (34,042,117 samples, 0.13%)</title><rect x="1155.4" y="549" width="1.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1158.42" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,682,634 samples, 0.20%)</title><rect x="104.4" y="581" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="107.37" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (188,843,341 samples, 0.73%)</title><rect x="210.8" y="741" width="8.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,528,058 samples, 0.10%)</title><rect x="51.2" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.18" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="789" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="799.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_destroy_data (34,183,680 samples, 0.13%)</title><rect x="1130.7" y="565" width="1.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1133.69" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (27,358,818 samples, 0.11%)</title><rect x="236.1" y="197" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="239.14" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,372,878 samples, 0.10%)</title><rect x="160.5" y="277" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.54" y="287.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (26,294,972 samples, 0.10%)</title><rect x="185.2" y="261" width="1.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="188.17" y="271.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (105,766,749 samples, 0.41%)</title><rect x="181.6" y="373" width="4.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="184.56" y="383.5" ></text>
</g>
<g >
<title>filename_lookup (26,211,838 samples, 0.10%)</title><rect x="150.3" y="181" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="153.32" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="437" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,255,374 samples, 0.10%)</title><rect x="86.2" y="501" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="89.16" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (33,949,474 samples, 0.13%)</title><rect x="1127.6" y="581" width="1.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1130.62" y="591.5" ></text>
</g>
<g >
<title>recalc_sigpending (4,529,168 samples, 0.02%)</title><rect x="246.0" y="917" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="248.97" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,738 samples, 0.10%)</title><rect x="232.2" y="197" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="235.21" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,159,496 samples, 0.10%)</title><rect x="87.4" y="805" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.36" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (27,772,594 samples, 0.11%)</title><rect x="97.3" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.28" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,216,729 samples, 0.10%)</title><rect x="240.0" y="853" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="243.02" y="863.5" ></text>
</g>
<g >
<title>PyObject_RichCompareBool (46,518,056 samples, 0.18%)</title><rect x="52.4" y="293" width="2.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="55.39" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="837" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.36" y="847.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_relaxed&gt; (67,359,350 samples, 0.26%)</title><rect x="1064.3" y="501" width="3.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1067.28" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,219 samples, 0.10%)</title><rect x="128.7" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.66" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,717 samples, 0.10%)</title><rect x="213.2" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.21" y="303.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,299,537 samples, 0.10%)</title><rect x="214.4" y="261" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="217.41" y="271.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,214,813 samples, 0.10%)</title><rect x="103.2" y="437" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="106.18" y="447.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (34,059,701 samples, 0.13%)</title><rect x="207.7" y="229" width="1.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="210.72" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (191,275,497 samples, 0.74%)</title><rect x="141.6" y="293" width="8.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.62" y="303.5" ></text>
</g>
<g >
<title>PyMemoryView_FromBuffer (34,138,640 samples, 0.13%)</title><rect x="988.8" y="469" width="1.5" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="991.79" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,647,213 samples, 0.30%)</title><rect x="29.4" y="613" width="3.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="32.39" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,926 samples, 0.10%)</title><rect x="70.2" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.16" y="271.5" ></text>
</g>
<g >
<title>[unknown] (4,751,711,210 samples, 18.32%)</title><rect x="28.2" y="981" width="216.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="31.19" y="991.5" >[unknown]</text>
</g>
<g >
<title>[python3.12] (125,571,187 samples, 0.48%)</title><rect x="45.5" y="437" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.47" y="447.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,420,669 samples, 0.20%)</title><rect x="109.5" y="437" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="112.49" y="447.5" ></text>
</g>
<g >
<title>__do_page_fault (33,995,910 samples, 0.13%)</title><rect x="661.8" y="565" width="1.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="664.84" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (34,067,537 samples, 0.13%)</title><rect x="209.3" y="405" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.27" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (33,900,707 samples, 0.13%)</title><rect x="79.8" y="549" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.79" y="559.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (33,704,090 samples, 0.13%)</title><rect x="1113.7" y="485" width="1.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1116.71" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (156,098,650 samples, 0.60%)</title><rect x="64.3" y="549" width="7.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="67.25" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,470,669 samples, 0.10%)</title><rect x="104.4" y="549" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="107.37" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (34,067,537 samples, 0.13%)</title><rect x="209.3" y="469" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.27" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (104,890,031 samples, 0.40%)</title><rect x="131.4" y="517" width="4.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="134.39" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (128,061,219 samples, 0.49%)</title><rect x="98.5" y="853" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.54" y="863.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (34,127,900 samples, 0.13%)</title><rect x="1140.0" y="437" width="1.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1142.98" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,211,838 samples, 0.10%)</title><rect x="150.3" y="261" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="153.32" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,192,547 samples, 0.10%)</title><rect x="237.4" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="240.38" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (104,051,402 samples, 0.40%)</title><rect x="168.9" y="245" width="4.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="171.88" y="255.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,214,632 samples, 0.10%)</title><rect x="234.9" y="213" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="237.94" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,729 samples, 0.10%)</title><rect x="240.0" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="243.02" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,214,274 samples, 0.10%)</title><rect x="28.2" y="917" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="31.19" y="927.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (29,065,627 samples, 0.11%)</title><rect x="167.6" y="245" width="1.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="170.55" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (32,759,894 samples, 0.13%)</title><rect x="37.9" y="645" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (423,593,188 samples, 1.63%)</title><rect x="140.1" y="741" width="19.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="143.10" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,067,537 samples, 0.13%)</title><rect x="209.3" y="373" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="212.27" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,232,219 samples, 0.10%)</title><rect x="128.7" y="453" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.66" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="597" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="607.5" ></text>
</g>
<g >
<title>change_prot_numa (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="709" width="1.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1169.94" y="719.5" ></text>
</g>
<g >
<title>filename_lookup (26,182,305 samples, 0.10%)</title><rect x="184.0" y="165" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="186.98" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (927,983,972 samples, 3.58%)</title><rect x="44.0" y="869" width="42.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="879.5" >[py..</text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (33,939,472 samples, 0.13%)</title><rect x="1025.8" y="581" width="1.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1028.76" y="591.5" ></text>
</g>
<g >
<title>page_fault (32,561,945 samples, 0.13%)</title><rect x="39.4" y="277" width="1.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="42.41" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,477 samples, 0.10%)</title><rect x="133.8" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.78" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (251,854,636 samples, 0.97%)</title><rect x="180.0" y="821" width="11.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="831.5" ></text>
</g>
<g >
<title>get_page_from_freelist (101,452,148 samples, 0.39%)</title><rect x="794.7" y="261" width="4.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="797.74" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,687 samples, 0.10%)</title><rect x="166.4" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.36" y="383.5" ></text>
</g>
<g >
<title>PyArray_Nonzero (33,915,462 samples, 0.13%)</title><rect x="152.7" y="325" width="1.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="155.71" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (32,642,068 samples, 0.13%)</title><rect x="227.1" y="293" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="303.5" ></text>
</g>
<g >
<title>vfs_read (26,212,519 samples, 0.10%)</title><rect x="149.1" y="149" width="1.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="152.13" y="159.5" ></text>
</g>
<g >
<title>[python3.12] (133,117,029 samples, 0.51%)</title><rect x="167.6" y="357" width="6.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.55" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (112,378,838 samples, 0.43%)</title><rect x="106.8" y="885" width="5.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="109.76" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,620,864 samples, 0.13%)</title><rect x="156.6" y="373" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="159.64" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,729 samples, 0.10%)</title><rect x="240.0" y="725" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="243.02" y="735.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (87,587,843 samples, 0.34%)</title><rect x="233.4" y="597" width="4.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="236.40" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="335.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,245,332 samples, 0.10%)</title><rect x="106.8" y="309" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="109.76" y="319.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (7,934,037,009 samples, 30.58%)</title><rect x="661.8" y="741" width="360.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="664.84" y="751.5" >PyObject_Vectorcall</text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,647,213 samples, 0.30%)</title><rect x="29.4" y="581" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="32.39" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,453,705 samples, 0.10%)</title><rect x="212.0" y="309" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="215.01" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (169,600,099 samples, 0.65%)</title><rect x="1147.7" y="597" width="7.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1150.70" y="607.5" ></text>
</g>
<g >
<title>get_page_from_freelist (32,759,894 samples, 0.13%)</title><rect x="37.9" y="165" width="1.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="40.92" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,284 samples, 0.10%)</title><rect x="90.1" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (33,897,814 samples, 0.13%)</title><rect x="221.0" y="645" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="223.95" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (72,894,303 samples, 0.28%)</title><rect x="657.0" y="565" width="3.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="659.99" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,642,068 samples, 0.13%)</title><rect x="227.1" y="357" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="230.11" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (25,875,311 samples, 0.10%)</title><rect x="159.4" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.37" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,261 samples, 0.10%)</title><rect x="229.8" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.82" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,813 samples, 0.10%)</title><rect x="103.2" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.18" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (81,243,819 samples, 0.31%)</title><rect x="94.8" y="901" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.85" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (58,106,080 samples, 0.22%)</title><rect x="237.4" y="837" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="240.38" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (596,230,738 samples, 2.30%)</title><rect x="629.9" y="901" width="27.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="632.87" y="911.5" >[..</text>
</g>
<g >
<title>[python3.12] (106,882,167 samples, 0.41%)</title><rect x="71.4" y="357" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.35" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (32,759,894 samples, 0.13%)</title><rect x="37.9" y="469" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,211,239 samples, 0.10%)</title><rect x="94.8" y="485" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="97.85" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (927,983,972 samples, 3.58%)</title><rect x="44.0" y="933" width="42.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="46.96" y="943.5" >_Py..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,470,669 samples, 0.10%)</title><rect x="104.4" y="293" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.37" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,106,661 samples, 0.10%)</title><rect x="36.7" y="837" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="39.73" y="847.5" ></text>
</g>
<g >
<title>do_numa_page (34,064,534 samples, 0.13%)</title><rect x="1018.1" y="533" width="1.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1021.06" y="543.5" ></text>
</g>
<g >
<title>__libc_start_main (11,941,256,794 samples, 46.03%)</title><rect x="625.3" y="965" width="543.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="628.35" y="975.5" >__libc_start_main</text>
</g>
<g >
<title>[python3.12] (35,686,722 samples, 0.14%)</title><rect x="64.3" y="325" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.25" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (34,044,533 samples, 0.13%)</title><rect x="244.3" y="965" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="247.32" y="975.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,422,740 samples, 0.20%)</title><rect x="229.8" y="405" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="232.82" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (300,649,156 samples, 1.16%)</title><rect x="166.4" y="757" width="13.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.36" y="767.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (419,992,435 samples, 1.62%)</title><rect x="44.0" y="565" width="19.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="46.96" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (87,587,843 samples, 0.34%)</title><rect x="233.4" y="773" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,647,213 samples, 0.30%)</title><rect x="29.4" y="709" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="32.39" y="719.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pop (201,623,206 samples, 0.78%)</title><rect x="1045.8" y="517" width="9.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1048.85" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,255,374 samples, 0.10%)</title><rect x="86.2" y="741" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="89.16" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,178,164 samples, 0.10%)</title><rect x="91.3" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.27" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (334,238,364 samples, 1.29%)</title><rect x="164.8" y="853" width="15.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="167.83" y="863.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (78,646,250 samples, 0.30%)</title><rect x="59.5" y="533" width="3.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="62.48" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,334 samples, 0.10%)</title><rect x="191.5" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.49" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,900,707 samples, 0.13%)</title><rect x="79.8" y="469" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="82.79" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,900,707 samples, 0.13%)</title><rect x="79.8" y="501" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="82.79" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (67,675,166 samples, 0.26%)</title><rect x="222.5" y="789" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.50" y="799.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (300,649,156 samples, 1.16%)</title><rect x="166.4" y="725" width="13.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="169.36" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,294,972 samples, 0.10%)</title><rect x="185.2" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.17" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call (94,205,002 samples, 0.36%)</title><rect x="65.9" y="373" width="4.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="68.87" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,620 samples, 0.10%)</title><rect x="63.1" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,105,557 samples, 0.10%)</title><rect x="34.3" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="37.35" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (109,407,846 samples, 0.42%)</title><rect x="54.5" y="325" width="5.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="57.50" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,174 samples, 0.10%)</title><rect x="85.0" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.97" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (26,205,687 samples, 0.10%)</title><rect x="166.4" y="213" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="169.36" y="223.5" ></text>
</g>
<g >
<title>_PyNumber_Index (26,205,803 samples, 0.10%)</title><rect x="109.5" y="229" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="112.49" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (11,092,871,523 samples, 42.76%)</title><rect x="657.0" y="821" width="504.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="659.99" y="831.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>[python3.12] (34,059,701 samples, 0.13%)</title><rect x="207.7" y="453" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.72" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,632 samples, 0.10%)</title><rect x="234.9" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.94" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (27,772,594 samples, 0.11%)</title><rect x="97.3" y="661" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.28" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (128,061,219 samples, 0.49%)</title><rect x="98.5" y="661" width="5.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,793,665 samples, 0.13%)</title><rect x="124.8" y="357" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="127.79" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (52,430,158 samples, 0.20%)</title><rect x="77.4" y="629" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.40" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (81,243,819 samples, 0.31%)</title><rect x="94.8" y="869" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (27,772,594 samples, 0.11%)</title><rect x="97.3" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.28" y="575.5" ></text>
</g>
<g >
<title>boost::tuples::tie&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (33,972,841 samples, 0.13%)</title><rect x="1124.5" y="597" width="1.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1127.52" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,848 samples, 0.10%)</title><rect x="659.1" y="389" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="662.11" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,594 samples, 0.20%)</title><rect x="173.6" y="389" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.61" y="399.5" ></text>
</g>
<g >
<title>do_anonymous_page (33,995,910 samples, 0.13%)</title><rect x="661.8" y="501" width="1.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="664.84" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,470,669 samples, 0.10%)</title><rect x="104.4" y="517" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="107.37" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,321,038 samples, 0.13%)</title><rect x="44.0" y="309" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (94,205,002 samples, 0.36%)</title><rect x="65.9" y="325" width="4.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="68.87" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,680 samples, 0.10%)</title><rect x="151.5" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.51" y="399.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,595,757 samples, 0.20%)</title><rect x="92.5" y="325" width="2.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="95.46" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,192,547 samples, 0.10%)</title><rect x="237.4" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="240.38" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (72,894,303 samples, 0.28%)</title><rect x="657.0" y="645" width="3.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="659.99" y="655.5" ></text>
</g>
<g >
<title>vfs_statx (26,211,838 samples, 0.10%)</title><rect x="150.3" y="213" width="1.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="153.32" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (25,875,311 samples, 0.10%)</title><rect x="159.4" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.37" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="837" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="847.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (300,649,156 samples, 1.16%)</title><rect x="166.4" y="517" width="13.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="169.36" y="527.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (32,793,665 samples, 0.13%)</title><rect x="124.8" y="149" width="1.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="127.79" y="159.5" ></text>
</g>
<g >
<title>inflate (4,130,609,268 samples, 15.92%)</title><rect x="800.9" y="421" width="187.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="803.92" y="431.5" >inflate</text>
</g>
<g >
<title>ret_from_fork (16,033,980 samples, 0.06%)</title><rect x="245.9" y="965" width="0.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="248.86" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call (94,077,511 samples, 0.36%)</title><rect x="203.4" y="469" width="4.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="206.44" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,212,680 samples, 0.10%)</title><rect x="151.5" y="309" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="154.51" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,106,661 samples, 0.10%)</title><rect x="36.7" y="597" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="39.73" y="607.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (34,056,008 samples, 0.13%)</title><rect x="1110.6" y="485" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1113.61" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,640 samples, 0.13%)</title><rect x="988.8" y="453" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="991.79" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,841,371 samples, 0.13%)</title><rect x="225.6" y="709" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="228.57" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (33,949,436 samples, 0.13%)</title><rect x="178.5" y="293" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.49" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,214,717 samples, 0.10%)</title><rect x="213.2" y="197" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="216.21" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (54,955,410 samples, 0.21%)</title><rect x="176.0" y="229" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.99" y="239.5" ></text>
</g>
<g >
<title>llvm::Module::~Module (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="885" width="1.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1169.94" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (27,259,986 samples, 0.11%)</title><rect x="96.0" y="341" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.04" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (33,440,064 samples, 0.13%)</title><rect x="180.0" y="389" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="399.5" ></text>
</g>
<g >
<title>filename_lookup (32,793,665 samples, 0.13%)</title><rect x="124.8" y="181" width="1.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="127.79" y="191.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (229,841,116 samples, 0.89%)</title><rect x="200.4" y="837" width="10.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="203.37" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (78,773,921 samples, 0.30%)</title><rect x="91.3" y="629" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.27" y="639.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,105,557 samples, 0.10%)</title><rect x="34.3" y="309" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="37.35" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="693" width="5.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1164.53" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (133,117,029 samples, 0.51%)</title><rect x="167.6" y="341" width="6.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="170.55" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.36" y="543.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (67,947,906 samples, 0.26%)</title><rect x="1035.0" y="581" width="3.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1038.04" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (138,892,822 samples, 0.54%)</title><rect x="131.4" y="869" width="6.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="134.39" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,542,568 samples, 0.20%)</title><rect x="137.7" y="581" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.71" y="591.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (33,995,910 samples, 0.13%)</title><rect x="661.8" y="661" width="1.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="664.84" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (56,123,417 samples, 0.22%)</title><rect x="194.2" y="469" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.23" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,647,213 samples, 0.30%)</title><rect x="29.4" y="325" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="32.39" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (27,554,181 samples, 0.11%)</title><rect x="675.3" y="373" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="678.35" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (27,772,594 samples, 0.11%)</title><rect x="97.3" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.28" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="533" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="543.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,334 samples, 0.10%)</title><rect x="191.5" y="805" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="194.49" y="815.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,232,219 samples, 0.10%)</title><rect x="128.7" y="437" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="131.66" y="447.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,214,274 samples, 0.10%)</title><rect x="28.2" y="309" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="31.19" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (52,548,971 samples, 0.20%)</title><rect x="196.8" y="293" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.78" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,680 samples, 0.10%)</title><rect x="151.5" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.51" y="271.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,219,284 samples, 0.10%)</title><rect x="90.1" y="597" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="93.07" y="607.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,219,284 samples, 0.10%)</title><rect x="90.1" y="453" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="93.07" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (30,467,069 samples, 0.12%)</title><rect x="33.0" y="357" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="35.96" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,477 samples, 0.10%)</title><rect x="133.8" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.78" y="271.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,378,744 samples, 0.12%)</title><rect x="111.9" y="405" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="114.88" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,453,705 samples, 0.10%)</title><rect x="212.0" y="421" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="215.01" y="431.5" ></text>
</g>
<g >
<title>[_ctypes.cpython-312-x86_64-linux-gnu.so] (33,620,864 samples, 0.13%)</title><rect x="156.6" y="325" width="1.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="159.64" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,248 samples, 0.10%)</title><rect x="135.0" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.97" y="479.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (34,125,612 samples, 0.13%)</title><rect x="1118.3" y="581" width="1.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1121.32" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (81,243,819 samples, 0.31%)</title><rect x="94.8" y="837" width="3.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="97.85" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (7,798,013,181 samples, 30.06%)</title><rect x="664.9" y="645" width="354.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="667.94" y="655.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,211,334 samples, 0.10%)</title><rect x="191.5" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.49" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,296 samples, 0.10%)</title><rect x="210.8" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,014,393 samples, 0.13%)</title><rect x="233.4" y="325" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="236.40" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (78,647,213 samples, 0.30%)</title><rect x="29.4" y="373" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,174 samples, 0.10%)</title><rect x="85.0" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.97" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (34,014,393 samples, 0.13%)</title><rect x="233.4" y="501" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="511.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (68,165,091 samples, 0.26%)</title><rect x="1121.4" y="597" width="3.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1124.42" y="607.5" ></text>
</g>
<g >
<title>_PyCodec_LookupTextEncoding (33,897,814 samples, 0.13%)</title><rect x="221.0" y="629" width="1.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="223.95" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (54,955,410 samples, 0.21%)</title><rect x="176.0" y="261" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.99" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (78,647,213 samples, 0.30%)</title><rect x="29.4" y="517" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (187,705,223 samples, 0.72%)</title><rect x="28.2" y="933" width="8.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="31.19" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,334 samples, 0.10%)</title><rect x="191.5" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.49" y="575.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (88,904,846 samples, 0.34%)</title><rect x="176.0" y="405" width="4.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="178.99" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (78,646,250 samples, 0.30%)</title><rect x="59.5" y="453" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.48" y="463.5" ></text>
</g>
<g >
<title>PyIter_Next (54,955,410 samples, 0.21%)</title><rect x="176.0" y="325" width="2.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="178.99" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,078,940 samples, 0.10%)</title><rect x="83.8" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.78" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (52,431,834 samples, 0.20%)</title><rect x="29.4" y="277" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,378,744 samples, 0.12%)</title><rect x="111.9" y="533" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="114.88" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (34,042,151 samples, 0.13%)</title><rect x="1031.9" y="597" width="1.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1034.95" y="607.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (34,036,291 samples, 0.13%)</title><rect x="241.2" y="965" width="1.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="244.22" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,528,058 samples, 0.10%)</title><rect x="51.2" y="293" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="54.18" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (34,059,701 samples, 0.13%)</title><rect x="207.7" y="373" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.72" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,201,674 samples, 0.10%)</title><rect x="158.2" y="405" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="161.17" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (56,572,626 samples, 0.22%)</title><rect x="33.0" y="661" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.96" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,102 samples, 0.10%)</title><rect x="218.2" y="197" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="221.22" y="207.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,372,878 samples, 0.10%)</title><rect x="160.5" y="549" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="163.54" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="773" width="5.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1164.53" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="453" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="463.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,212,417 samples, 0.10%)</title><rect x="82.6" y="277" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="85.59" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallMethod (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="853" width="5.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1164.53" y="863.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,211,334 samples, 0.10%)</title><rect x="191.5" y="869" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="194.49" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,002,791 samples, 0.13%)</title><rect x="136.2" y="453" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="139.16" y="463.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (34,056,008 samples, 0.13%)</title><rect x="1110.6" y="501" width="1.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1113.61" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (87,587,843 samples, 0.34%)</title><rect x="233.4" y="837" width="4.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="236.40" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (250,980,516 samples, 0.97%)</title><rect x="140.1" y="373" width="11.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.10" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (7,662,828,843 samples, 29.54%)</title><rect x="668.0" y="597" width="348.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="671.02" y="607.5" >[python3.12]</text>
</g>
<g >
<title>_PyObject_Call (134,911,879 samples, 0.52%)</title><rect x="194.2" y="821" width="6.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="197.23" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,900,707 samples, 0.13%)</title><rect x="79.8" y="693" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.79" y="703.5" ></text>
</g>
<g >
<title>handle_mm_fault (32,759,894 samples, 0.13%)</title><rect x="37.9" y="245" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="40.92" y="255.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,216,047 samples, 0.10%)</title><rect x="61.9" y="325" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="64.87" y="335.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (33,522,307 samples, 0.13%)</title><rect x="1116.8" y="533" width="1.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1119.80" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,296 samples, 0.10%)</title><rect x="210.8" y="453" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="213.82" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (101,846,406 samples, 0.39%)</title><rect x="98.5" y="565" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.54" y="575.5" ></text>
</g>
<g >
<title>do_user_addr_fault (33,995,910 samples, 0.13%)</title><rect x="661.8" y="549" width="1.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="664.84" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (52,542,568 samples, 0.20%)</title><rect x="137.7" y="661" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="671.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (52,435,033 samples, 0.20%)</title><rect x="985.2" y="277" width="2.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="988.21" y="287.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,274 samples, 0.10%)</title><rect x="28.2" y="405" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="31.19" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,203,652 samples, 0.10%)</title><rect x="50.0" y="293" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="52.99" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,334 samples, 0.10%)</title><rect x="191.5" y="709" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="194.49" y="719.5" ></text>
</g>
<g >
<title>clear_page_erms (34,014,488 samples, 0.13%)</title><rect x="67.1" y="69" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="70.07" y="79.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (363,770,650 samples, 1.40%)</title><rect x="140.1" y="565" width="16.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="143.10" y="575.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (25,875,311 samples, 0.10%)</title><rect x="159.4" y="581" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="162.37" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,002,791 samples, 0.13%)</title><rect x="136.2" y="597" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="139.16" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (334,238,364 samples, 1.29%)</title><rect x="164.8" y="837" width="15.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="847.5" ></text>
</g>
<g >
<title>__libc_open64 (26,214,717 samples, 0.10%)</title><rect x="213.2" y="229" width="1.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="216.21" y="239.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,682,634 samples, 0.20%)</title><rect x="104.4" y="725" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="107.37" y="735.5" ></text>
</g>
<g >
<title>inflate (33,995,731 samples, 0.13%)</title><rect x="1019.6" y="533" width="1.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1022.61" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,255,374 samples, 0.10%)</title><rect x="86.2" y="581" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="89.16" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,255,374 samples, 0.10%)</title><rect x="86.2" y="245" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="89.16" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,142,958 samples, 0.10%)</title><rect x="27.0" y="965" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="30.00" y="975.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,245,332 samples, 0.10%)</title><rect x="106.8" y="373" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="109.76" y="383.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (26,205,687 samples, 0.10%)</title><rect x="166.4" y="149" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="169.36" y="159.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,788,462 samples, 0.30%)</title><rect x="196.8" y="533" width="3.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="199.78" y="543.5" ></text>
</g>
<g >
<title>PyThread_release_lock (26,294,972 samples, 0.10%)</title><rect x="185.2" y="213" width="1.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="188.17" y="223.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,067,537 samples, 0.13%)</title><rect x="209.3" y="453" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="212.27" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,219 samples, 0.10%)</title><rect x="128.7" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.66" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,900,707 samples, 0.13%)</title><rect x="79.8" y="645" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="82.79" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (128,061,219 samples, 0.49%)</title><rect x="98.5" y="677" width="5.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,740 samples, 0.20%)</title><rect x="229.8" y="437" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.82" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,440,064 samples, 0.13%)</title><rect x="180.0" y="437" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="447.5" ></text>
</g>
<g >
<title>elf_machine_rela_relative (33,620,864 samples, 0.13%)</title><rect x="156.6" y="149" width="1.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="159.64" y="159.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (56,123,417 samples, 0.22%)</title><rect x="194.2" y="389" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="197.23" y="399.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="789" width="1.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1169.94" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (32,378,744 samples, 0.12%)</title><rect x="111.9" y="309" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,239 samples, 0.10%)</title><rect x="94.8" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,772,594 samples, 0.11%)</title><rect x="97.3" y="341" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="100.28" y="351.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (78,646,250 samples, 0.30%)</title><rect x="59.5" y="421" width="3.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="62.48" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (27,259,986 samples, 0.11%)</title><rect x="96.0" y="485" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.04" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,239 samples, 0.10%)</title><rect x="94.8" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (7,900,041,099 samples, 30.45%)</title><rect x="663.4" y="661" width="359.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="666.38" y="671.5" >[python3.12]</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,255,374 samples, 0.10%)</title><rect x="86.2" y="837" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="89.16" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,193 samples, 0.10%)</title><rect x="127.5" y="277" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.47" y="287.5" ></text>
</g>
<g >
<title>_PyObject_Call (112,647,823 samples, 0.43%)</title><rect x="186.4" y="597" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="189.37" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,296 samples, 0.10%)</title><rect x="210.8" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="469" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (342,869,059 samples, 1.32%)</title><rect x="111.9" y="741" width="15.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="751.5" ></text>
</g>
<g >
<title>[hashtable.cpython-312-x86_64-linux-gnu.so] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="965" width="1.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="90.36" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (927,983,972 samples, 3.58%)</title><rect x="44.0" y="917" width="42.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.96" y="927.5" >_Py..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,642,068 samples, 0.13%)</title><rect x="227.1" y="405" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="230.11" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (106,882,167 samples, 0.41%)</title><rect x="71.4" y="373" width="4.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="74.35" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,174 samples, 0.10%)</title><rect x="85.0" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="87.97" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (134,911,879 samples, 0.52%)</title><rect x="194.2" y="629" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.23" y="639.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (128,061,219 samples, 0.49%)</title><rect x="98.5" y="645" width="5.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="101.54" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (27,259,986 samples, 0.11%)</title><rect x="96.0" y="437" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.04" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,239 samples, 0.10%)</title><rect x="94.8" y="309" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.85" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (33,440,064 samples, 0.13%)</title><rect x="180.0" y="421" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (104,890,031 samples, 0.40%)</title><rect x="131.4" y="661" width="4.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="134.39" y="671.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,477 samples, 0.10%)</title><rect x="133.8" y="437" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="136.78" y="447.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (6,863,829,578 samples, 26.46%)</title><rect x="676.6" y="485" width="312.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="679.60" y="495.5" >PyObject_VectorcallMethod</text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,213,296 samples, 0.10%)</title><rect x="210.8" y="373" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="213.82" y="383.5" ></text>
</g>
<g >
<title>__GI___clone (8,309,880,754 samples, 32.03%)</title><rect x="245.9" y="981" width="377.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="248.86" y="991.5" >__GI___clone</text>
</g>
<g >
<title>_PyObject_Call (26,216,620 samples, 0.10%)</title><rect x="63.1" y="565" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.06" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,917 samples, 0.10%)</title><rect x="190.3" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.30" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (606,426,096 samples, 2.34%)</title><rect x="960.0" y="373" width="27.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="963.01" y="383.5" >d..</text>
</g>
<g >
<title>[python3.12] (26,245,332 samples, 0.10%)</title><rect x="106.8" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,271,110 samples, 0.10%)</title><rect x="35.5" y="421" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="38.54" y="431.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (26,216,620 samples, 0.10%)</title><rect x="63.1" y="117" width="1.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="66.06" y="127.5" ></text>
</g>
<g >
<title>[python3.12] (99,097,498 samples, 0.38%)</title><rect x="651.0" y="805" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="653.96" y="815.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,788,462 samples, 0.30%)</title><rect x="196.8" y="421" width="3.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="199.78" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (7,934,037,009 samples, 30.58%)</title><rect x="661.8" y="693" width="360.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="664.84" y="703.5" >[python3.12]</text>
</g>
<g >
<title>PyObject_CallOneArg (26,203,652 samples, 0.10%)</title><rect x="50.0" y="325" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="52.99" y="335.5" ></text>
</g>
<g >
<title>PyNumber_Remainder (26,211,965 samples, 0.10%)</title><rect x="105.6" y="357" width="1.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="108.57" y="367.5" ></text>
</g>
<g >
<title>page_fault (606,426,096 samples, 2.34%)</title><rect x="960.0" y="389" width="27.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="963.01" y="399.5" >p..</text>
</g>
<g >
<title>[python3.12] (26,213,193 samples, 0.10%)</title><rect x="127.5" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,219 samples, 0.10%)</title><rect x="128.7" y="661" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.66" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (138,167,571 samples, 0.53%)</title><rect x="227.1" y="789" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (25,875,311 samples, 0.10%)</title><rect x="159.4" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.37" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (136,176,340 samples, 0.52%)</title><rect x="213.2" y="533" width="6.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="216.21" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,632 samples, 0.10%)</title><rect x="234.9" y="229" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.94" y="239.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::schedulePass (33,772,025 samples, 0.13%)</title><rect x="129.9" y="661" width="1.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="132.86" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,813 samples, 0.10%)</title><rect x="103.2" y="245" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.18" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (33,613,858 samples, 0.13%)</title><rect x="1022.7" y="565" width="1.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1025.70" y="575.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4,666,742 samples, 0.02%)</title><rect x="623.6" y="805" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="626.59" y="815.5" ></text>
</g>
<g >
<title>PyList_Sort (52,430,158 samples, 0.20%)</title><rect x="77.4" y="533" width="2.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="80.40" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,014,393 samples, 0.13%)</title><rect x="233.4" y="357" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="399.5" ></text>
</g>
<g >
<title>addPassesToGenerateCode (33,772,025 samples, 0.13%)</title><rect x="129.9" y="725" width="1.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="132.86" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (105,766,749 samples, 0.41%)</title><rect x="181.6" y="325" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.56" y="335.5" ></text>
</g>
<g >
<title>page_fault (26,889,025 samples, 0.10%)</title><rect x="228.6" y="293" width="1.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="231.60" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,237,850 samples, 0.10%)</title><rect x="131.4" y="309" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.39" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (34,067,537 samples, 0.13%)</title><rect x="209.3" y="389" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.27" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,271,110 samples, 0.10%)</title><rect x="35.5" y="773" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="38.54" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (72,894,303 samples, 0.28%)</title><rect x="657.0" y="725" width="3.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="659.99" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (101,965,174 samples, 0.39%)</title><rect x="1087.4" y="453" width="4.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1090.41" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,642,068 samples, 0.13%)</title><rect x="227.1" y="517" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="230.11" y="527.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (100,244,031 samples, 0.39%)</title><rect x="1173.8" y="789" width="4.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1176.84" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (136,176,340 samples, 0.52%)</title><rect x="213.2" y="581" width="6.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="216.21" y="591.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,205,803 samples, 0.10%)</title><rect x="109.5" y="325" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="112.49" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (106,232,596 samples, 0.41%)</title><rect x="81.3" y="821" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.33" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="447.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,212,417 samples, 0.10%)</title><rect x="82.6" y="341" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="85.59" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,889,025 samples, 0.10%)</title><rect x="228.6" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.60" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (99,367,535 samples, 0.38%)</title><rect x="45.5" y="357" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.47" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (7,501,673,498 samples, 28.92%)</title><rect x="675.3" y="565" width="341.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="678.35" y="575.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (284,263,301 samples, 1.10%)</title><rect x="113.3" y="437" width="13.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.35" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,213,193 samples, 0.10%)</title><rect x="127.5" y="661" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="130.47" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,239,491 samples, 0.10%)</title><rect x="199.2" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.17" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,875,311 samples, 0.10%)</title><rect x="159.4" y="453" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="162.37" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (33,949,474 samples, 0.13%)</title><rect x="1127.6" y="565" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1130.62" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,271,110 samples, 0.10%)</title><rect x="35.5" y="725" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="38.54" y="735.5" ></text>
</g>
<g >
<title>get_page_from_freelist (365,901,720 samples, 1.41%)</title><rect x="968.6" y="245" width="16.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="971.57" y="255.5" ></text>
</g>
<g >
<title>_PyObject_Call (53,573,450 samples, 0.21%)</title><rect x="234.9" y="501" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="237.94" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,002,791 samples, 0.13%)</title><rect x="136.2" y="501" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="139.16" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (586,093,000 samples, 2.26%)</title><rect x="164.8" y="869" width="26.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="167.83" y="879.5" >P..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (53,471,225 samples, 0.21%)</title><rect x="94.8" y="741" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.85" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (52,542,568 samples, 0.20%)</title><rect x="137.7" y="325" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,680 samples, 0.10%)</title><rect x="151.5" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.51" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,965 samples, 0.10%)</title><rect x="105.6" y="485" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="108.57" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,358,818 samples, 0.11%)</title><rect x="236.1" y="213" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="239.14" y="223.5" ></text>
</g>
<g >
<title>_PyObject_Call (315,428,076 samples, 1.22%)</title><rect x="63.1" y="725" width="14.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.06" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (342,869,059 samples, 1.32%)</title><rect x="111.9" y="613" width="15.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,014,393 samples, 0.13%)</title><rect x="233.4" y="517" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="236.40" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,214,813 samples, 0.10%)</title><rect x="103.2" y="581" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="106.18" y="591.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,212,680 samples, 0.10%)</title><rect x="151.5" y="357" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="154.51" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (106,232,596 samples, 0.41%)</title><rect x="81.3" y="805" width="4.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="84.33" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,542,568 samples, 0.20%)</title><rect x="137.7" y="501" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.71" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,889,025 samples, 0.10%)</title><rect x="228.6" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.60" y="447.5" ></text>
</g>
<g >
<title>llvm::MCJIT::generateCodeForModule (33,772,025 samples, 0.13%)</title><rect x="129.9" y="773" width="1.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="132.86" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="917" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="927.5" ></text>
</g>
<g >
<title>unmap_single_vma (133,615,269 samples, 0.52%)</title><rect x="1172.3" y="853" width="6.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1175.33" y="863.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (26,078,940 samples, 0.10%)</title><rect x="83.8" y="325" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="86.78" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (161,490,949 samples, 0.62%)</title><rect x="29.4" y="901" width="7.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="32.39" y="911.5" ></text>
</g>
<g >
<title>_PyObject_Call (56,123,417 samples, 0.22%)</title><rect x="194.2" y="485" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="197.23" y="495.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,201,674 samples, 0.10%)</title><rect x="158.2" y="341" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="161.17" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (315,428,076 samples, 1.22%)</title><rect x="63.1" y="757" width="14.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="66.06" y="767.5" ></text>
</g>
<g >
<title>pybind11::detail::argument_loader&lt;diff_Nexullance_IT_interface*, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int&gt;::call_impl&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, pybind11::cpp_function::cpp_function&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, diff_Nexullance_IT_interface, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (3,052,279,658 samples, 11.77%)</title><rect x="1022.7" y="709" width="138.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1025.70" y="719.5" >pybind11::detail:..</text>
</g>
<g >
<title>compute_all_shortest_paths_single_source (33,613,858 samples, 0.13%)</title><rect x="1022.7" y="597" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1025.70" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,965 samples, 0.10%)</title><rect x="105.6" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.57" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,106,661 samples, 0.10%)</title><rect x="36.7" y="645" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="39.73" y="655.5" ></text>
</g>
<g >
<title>user_path_at_empty (32,793,665 samples, 0.13%)</title><rect x="124.8" y="197" width="1.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="127.79" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (106,882,167 samples, 0.41%)</title><rect x="71.4" y="469" width="4.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="74.35" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,875,311 samples, 0.10%)</title><rect x="159.4" y="389" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="162.37" y="399.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (34,046,671 samples, 0.13%)</title><rect x="1119.9" y="565" width="1.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1122.87" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (25,875,311 samples, 0.10%)</title><rect x="159.4" y="549" width="1.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="162.37" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,542,568 samples, 0.20%)</title><rect x="137.7" y="565" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="140.71" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,351 samples, 0.10%)</title><rect x="174.8" y="229" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.80" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (136,176,340 samples, 0.52%)</title><rect x="213.2" y="421" width="6.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="216.21" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,284 samples, 0.10%)</title><rect x="90.1" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (229,841,116 samples, 0.89%)</title><rect x="200.4" y="741" width="10.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (128,061,219 samples, 0.49%)</title><rect x="98.5" y="869" width="5.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,640 samples, 0.13%)</title><rect x="988.8" y="437" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="991.79" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (52,595,757 samples, 0.20%)</title><rect x="92.5" y="309" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.46" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (33,440,064 samples, 0.13%)</title><rect x="180.0" y="485" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="399.5" ></text>
</g>
<g >
<title>page_fault (67,990,178 samples, 0.26%)</title><rect x="67.1" y="229" width="3.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="70.07" y="239.5" ></text>
</g>
<g >
<title>[[heap]] (26,678,105 samples, 0.10%)</title><rect x="10.0" y="981" width="1.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.01" y="991.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,239 samples, 0.10%)</title><rect x="94.8" y="421" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="97.85" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (32,759,894 samples, 0.13%)</title><rect x="37.9" y="581" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (781,206,718 samples, 3.01%)</title><rect x="164.8" y="917" width="35.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="927.5" >[py..</text>
</g>
<g >
<title>__handle_mm_fault (33,620,864 samples, 0.13%)</title><rect x="156.6" y="53" width="1.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="159.64" y="63.5" ></text>
</g>
<g >
<title>[python3.12] (26,828,812 samples, 0.10%)</title><rect x="177.3" y="165" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.27" y="175.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (106,232,596 samples, 0.41%)</title><rect x="81.3" y="837" width="4.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="84.33" y="847.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (33,758,586 samples, 0.13%)</title><rect x="1149.3" y="549" width="1.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1152.25" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (941,992,970 samples, 3.63%)</title><rect x="88.5" y="965" width="42.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.55" y="975.5" >[pyt..</text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (34,063,307 samples, 0.13%)</title><rect x="1079.7" y="517" width="1.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1082.69" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,378,744 samples, 0.12%)</title><rect x="111.9" y="469" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="114.88" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,926 samples, 0.10%)</title><rect x="70.2" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.16" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,542,568 samples, 0.20%)</title><rect x="137.7" y="725" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="140.71" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="869" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="879.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,712,837 samples, 0.13%)</title><rect x="108.0" y="341" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.96" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (58,106,080 samples, 0.22%)</title><rect x="237.4" y="645" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="240.38" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="479.5" ></text>
</g>
<g >
<title>find_get_entry (32,378,744 samples, 0.12%)</title><rect x="111.9" y="53" width="1.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="114.88" y="63.5" ></text>
</g>
<g >
<title>_PyCode_New (32,561,945 samples, 0.13%)</title><rect x="39.4" y="325" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="42.41" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (134,911,879 samples, 0.52%)</title><rect x="194.2" y="885" width="6.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="197.23" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (67,983,303 samples, 0.26%)</title><rect x="161.7" y="917" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.74" y="927.5" ></text>
</g>
<g >
<title>_int_malloc (34,060,297 samples, 0.13%)</title><rect x="676.6" y="373" width="1.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="679.60" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,875,311 samples, 0.10%)</title><rect x="159.4" y="277" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="162.37" y="287.5" ></text>
</g>
<g >
<title>PyObject_GC_Del (26,216,420 samples, 0.10%)</title><rect x="990.3" y="469" width="1.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="993.34" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,965 samples, 0.10%)</title><rect x="105.6" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.57" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (342,869,059 samples, 1.32%)</title><rect x="111.9" y="629" width="15.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="114.88" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,620,864 samples, 0.13%)</title><rect x="156.6" y="517" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="159.64" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,995,731 samples, 0.13%)</title><rect x="1019.6" y="629" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1022.61" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (58,106,080 samples, 0.22%)</title><rect x="237.4" y="453" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="240.38" y="463.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (86,133,506 samples, 0.33%)</title><rect x="108.0" y="613" width="3.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="110.96" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (56,572,626 samples, 0.22%)</title><rect x="33.0" y="709" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="35.96" y="719.5" ></text>
</g>
<g >
<title>__do_sys_newstat (26,211,838 samples, 0.10%)</title><rect x="150.3" y="229" width="1.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="153.32" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,889,025 samples, 0.10%)</title><rect x="228.6" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.60" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,274 samples, 0.10%)</title><rect x="28.2" y="869" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="31.19" y="879.5" ></text>
</g>
<g >
<title>unlink_chunk (33,917,650 samples, 0.13%)</title><rect x="1021.2" y="549" width="1.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1024.16" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,057,586 samples, 0.13%)</title><rect x="206.2" y="341" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="209.17" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,219 samples, 0.10%)</title><rect x="128.7" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.66" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (419,992,435 samples, 1.62%)</title><rect x="44.0" y="613" width="19.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.96" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (27,772,594 samples, 0.11%)</title><rect x="97.3" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.28" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (109,961,623 samples, 0.42%)</title><rect x="214.4" y="309" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.41" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,620 samples, 0.10%)</title><rect x="63.1" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,589,208 samples, 0.13%)</title><rect x="164.8" y="501" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="167.83" y="511.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (27,358,818 samples, 0.11%)</title><rect x="236.1" y="261" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="239.14" y="271.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (1,728,777,461 samples, 6.66%)</title><rect x="1039.7" y="549" width="78.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1042.69" y="559.5" >boost::di..</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (34,002,791 samples, 0.13%)</title><rect x="136.2" y="517" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="139.16" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,661,992 samples, 0.20%)</title><rect x="154.2" y="277" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.25" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (588,086,995 samples, 2.27%)</title><rect x="200.4" y="869" width="26.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="203.37" y="879.5" >_..</text>
</g>
<g >
<title>[python3.12] (25,875,311 samples, 0.10%)</title><rect x="159.4" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.37" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="805" width="5.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1164.53" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,047 samples, 0.10%)</title><rect x="61.9" y="213" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.87" y="223.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (58,106,080 samples, 0.22%)</title><rect x="237.4" y="805" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="240.38" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (99,449,154 samples, 0.38%)</title><rect x="625.3" y="869" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="628.35" y="879.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,772,025 samples, 0.13%)</title><rect x="129.9" y="917" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="132.86" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (927,983,972 samples, 3.58%)</title><rect x="44.0" y="885" width="42.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="895.5" >[py..</text>
</g>
<g >
<title>[python3.12] (26,219,284 samples, 0.10%)</title><rect x="90.1" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (27,358,818 samples, 0.11%)</title><rect x="236.1" y="293" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="239.14" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,219 samples, 0.10%)</title><rect x="128.7" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.66" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (134,911,879 samples, 0.52%)</title><rect x="194.2" y="581" width="6.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="197.23" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,773,921 samples, 0.30%)</title><rect x="91.3" y="661" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="94.27" y="671.5" ></text>
</g>
<g >
<title>exit_mmap (133,615,269 samples, 0.52%)</title><rect x="1172.3" y="885" width="6.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1175.33" y="895.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,245,332 samples, 0.10%)</title><rect x="106.8" y="437" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="109.76" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.36" y="479.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (33,995,910 samples, 0.13%)</title><rect x="661.8" y="469" width="1.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="664.84" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (138,167,571 samples, 0.53%)</title><rect x="227.1" y="885" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="895.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,334 samples, 0.10%)</title><rect x="191.5" y="757" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="194.49" y="767.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (101,846,406 samples, 0.39%)</title><rect x="98.5" y="469" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="101.54" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (33,620,864 samples, 0.13%)</title><rect x="156.6" y="341" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.64" y="351.5" ></text>
</g>
<g >
<title>_int_malloc (26,205,687 samples, 0.10%)</title><rect x="166.4" y="309" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="169.36" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,212,417 samples, 0.10%)</title><rect x="82.6" y="373" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="85.59" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (161,490,949 samples, 0.62%)</title><rect x="29.4" y="805" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="815.5" ></text>
</g>
<g >
<title>array_setstate (33,917,650 samples, 0.13%)</title><rect x="1021.2" y="613" width="1.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1024.16" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (134,911,879 samples, 0.52%)</title><rect x="194.2" y="677" width="6.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="197.23" y="687.5" ></text>
</g>
<g >
<title>__do_page_fault (32,561,945 samples, 0.13%)</title><rect x="39.4" y="245" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="42.41" y="255.5" ></text>
</g>
<g >
<title>raw_array_assign_scalar (67,411,753 samples, 0.26%)</title><rect x="40.9" y="741" width="3.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="43.89" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,803 samples, 0.10%)</title><rect x="109.5" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.49" y="271.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (52,661,992 samples, 0.20%)</title><rect x="154.2" y="261" width="2.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="157.25" y="271.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,239 samples, 0.10%)</title><rect x="94.8" y="453" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="97.85" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (56,572,626 samples, 0.22%)</title><rect x="33.0" y="453" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="35.96" y="463.5" ></text>
</g>
<g >
<title>__Pyx_Import.constprop.49 (25,875,311 samples, 0.10%)</title><rect x="159.4" y="773" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="162.37" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (86,133,506 samples, 0.33%)</title><rect x="108.0" y="501" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.96" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (58,106,080 samples, 0.22%)</title><rect x="237.4" y="757" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="240.38" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (27,772,594 samples, 0.11%)</title><rect x="97.3" y="757" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.28" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (56,123,417 samples, 0.22%)</title><rect x="194.2" y="437" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.23" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,067,537 samples, 0.13%)</title><rect x="209.3" y="501" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="212.27" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,828,812 samples, 0.10%)</title><rect x="177.3" y="181" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.27" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (26,245,332 samples, 0.10%)</title><rect x="106.8" y="661" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (128,061,219 samples, 0.49%)</title><rect x="98.5" y="757" width="5.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="101.54" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (52,682,634 samples, 0.20%)</title><rect x="104.4" y="709" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.37" y="719.5" ></text>
</g>
<g >
<title>walk_component (26,182,305 samples, 0.10%)</title><rect x="184.0" y="117" width="1.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="186.98" y="127.5" ></text>
</g>
<g >
<title>[python3.12] (25,875,311 samples, 0.10%)</title><rect x="159.4" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.37" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (133,117,029 samples, 0.51%)</title><rect x="167.6" y="325" width="6.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="170.55" y="335.5" ></text>
</g>
<g >
<title>llvm::MCJIT::emitObject (33,772,025 samples, 0.13%)</title><rect x="129.9" y="757" width="1.5" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="132.86" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (34,014,393 samples, 0.13%)</title><rect x="233.4" y="437" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,201,674 samples, 0.10%)</title><rect x="158.2" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="161.17" y="367.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (26,205,687 samples, 0.10%)</title><rect x="166.4" y="181" width="1.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="169.36" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_read (32,378,744 samples, 0.12%)</title><rect x="111.9" y="245" width="1.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="114.88" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,078,940 samples, 0.10%)</title><rect x="83.8" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.78" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,417 samples, 0.10%)</title><rect x="82.6" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.59" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="533" width="5.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1164.53" y="543.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (31,913,533 samples, 0.12%)</title><rect x="238.6" y="309" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="241.57" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (65,321,839 samples, 0.25%)</title><rect x="37.9" y="917" width="3.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="40.92" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,389 samples, 0.10%)</title><rect x="93.7" y="245" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.66" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,647,213 samples, 0.30%)</title><rect x="29.4" y="693" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="32.39" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,296 samples, 0.10%)</title><rect x="210.8" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,206,261 samples, 0.10%)</title><rect x="229.8" y="373" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="232.82" y="383.5" ></text>
</g>
<g >
<title>__pyx_pymod_exec__matrixapi (25,875,311 samples, 0.10%)</title><rect x="159.4" y="597" width="1.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="162.37" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,274 samples, 0.10%)</title><rect x="28.2" y="661" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="31.19" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (423,593,188 samples, 1.63%)</title><rect x="140.1" y="613" width="19.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.10" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (79,311,765 samples, 0.31%)</title><rect x="228.6" y="469" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="231.60" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,002,791 samples, 0.13%)</title><rect x="136.2" y="325" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="139.16" y="335.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,232,219 samples, 0.10%)</title><rect x="128.7" y="533" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="131.66" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,900,707 samples, 0.13%)</title><rect x="79.8" y="325" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.79" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (27,772,594 samples, 0.11%)</title><rect x="97.3" y="677" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.28" y="687.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (26,182,305 samples, 0.10%)</title><rect x="184.0" y="149" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="186.98" y="159.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,897,814 samples, 0.13%)</title><rect x="221.0" y="677" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="223.95" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (32,759,894 samples, 0.13%)</title><rect x="37.9" y="565" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,667,001 samples, 0.20%)</title><rect x="210.8" y="629" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="213.82" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,105,557 samples, 0.10%)</title><rect x="34.3" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="37.35" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (86,133,506 samples, 0.33%)</title><rect x="108.0" y="773" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.96" y="783.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (34,127,900 samples, 0.13%)</title><rect x="1140.0" y="421" width="1.5" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1142.98" y="431.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,915,462 samples, 0.13%)</title><rect x="152.7" y="389" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="155.71" y="399.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,211,848 samples, 0.10%)</title><rect x="659.1" y="453" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="662.11" y="463.5" ></text>
</g>
<g >
<title>__do_page_fault (34,060,297 samples, 0.13%)</title><rect x="676.6" y="325" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="679.60" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,828,812 samples, 0.10%)</title><rect x="177.3" y="149" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.27" y="159.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,239 samples, 0.10%)</title><rect x="94.8" y="437" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.85" y="447.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,213,296 samples, 0.10%)</title><rect x="210.8" y="437" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="213.82" y="447.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4,666,742 samples, 0.02%)</title><rect x="623.6" y="789" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="626.59" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (79,311,765 samples, 0.31%)</title><rect x="228.6" y="501" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.60" y="511.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (33,873,987 samples, 0.13%)</title><rect x="1085.9" y="469" width="1.5" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1088.87" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (27,772,594 samples, 0.11%)</title><rect x="97.3" y="741" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="100.28" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (33,995,731 samples, 0.13%)</title><rect x="1019.6" y="549" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1022.61" y="559.5" ></text>
</g>
<g >
<title>array_where (33,915,462 samples, 0.13%)</title><rect x="152.7" y="357" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="155.71" y="367.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,738 samples, 0.10%)</title><rect x="232.2" y="501" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="235.21" y="511.5" ></text>
</g>
<g >
<title>lookup_fast (32,793,665 samples, 0.13%)</title><rect x="124.8" y="117" width="1.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="127.79" y="127.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,232,219 samples, 0.10%)</title><rect x="128.7" y="501" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="131.66" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (138,892,822 samples, 0.54%)</title><rect x="131.4" y="757" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.39" y="767.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,965 samples, 0.10%)</title><rect x="105.6" y="501" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="108.57" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (250,980,516 samples, 0.97%)</title><rect x="140.1" y="405" width="11.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.10" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,321,038 samples, 0.13%)</title><rect x="44.0" y="389" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="46.96" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (52,445,412 samples, 0.20%)</title><rect x="127.5" y="773" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="783.5" ></text>
</g>
<g >
<title>xas_start (32,378,744 samples, 0.12%)</title><rect x="111.9" y="37" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="114.88" y="47.5" ></text>
</g>
<g >
<title>PyDict_Copy (26,203,102 samples, 0.10%)</title><rect x="218.2" y="213" width="1.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="221.22" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="255.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,542,568 samples, 0.20%)</title><rect x="137.7" y="597" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="140.71" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,334 samples, 0.10%)</title><rect x="191.5" y="613" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.49" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (101,846,406 samples, 0.39%)</title><rect x="98.5" y="309" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="319.5" ></text>
</g>
<g >
<title>PyMemoryView_FromMemory (34,114,537 samples, 0.13%)</title><rect x="663.4" y="645" width="1.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="666.38" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="821" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1164.53" y="831.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (25,875,311 samples, 0.10%)</title><rect x="159.4" y="261" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="162.37" y="271.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (188,843,341 samples, 0.73%)</title><rect x="210.8" y="789" width="8.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="213.82" y="799.5" ></text>
</g>
<g >
<title>handle_mm_fault (67,990,178 samples, 0.26%)</title><rect x="67.1" y="165" width="3.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="70.07" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (182,453,960 samples, 0.70%)</title><rect x="51.2" y="421" width="8.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.18" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,227,014 samples, 0.10%)</title><rect x="126.3" y="245" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="129.28" y="255.5" ></text>
</g>
<g >
<title>PyUFunc_FromFuncAndDataAndSignatureAndIdentity (46,518,056 samples, 0.18%)</title><rect x="52.4" y="341" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.39" y="351.5" ></text>
</g>
<g >
<title>__GI___xstat (26,211,838 samples, 0.10%)</title><rect x="150.3" y="293" width="1.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="153.32" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,379 samples, 0.10%)</title><rect x="31.8" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="34.77" y="287.5" ></text>
</g>
<g >
<title>PyDict_SetItem (26,159,496 samples, 0.10%)</title><rect x="87.4" y="341" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="90.36" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (27,358,818 samples, 0.11%)</title><rect x="236.1" y="277" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="239.14" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,224,456 samples, 0.10%)</title><rect x="132.6" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.59" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,296 samples, 0.10%)</title><rect x="210.8" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,192,547 samples, 0.10%)</title><rect x="237.4" y="389" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="240.38" y="399.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (67,990,178 samples, 0.26%)</title><rect x="67.1" y="101" width="3.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="70.07" y="111.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,205,803 samples, 0.10%)</title><rect x="109.5" y="341" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="112.49" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (419,992,435 samples, 1.62%)</title><rect x="44.0" y="693" width="19.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (10,986,316,667 samples, 42.35%)</title><rect x="661.8" y="789" width="499.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="664.84" y="799.5" >[python3.12]</text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (34,032,811 samples, 0.13%)</title><rect x="1121.4" y="581" width="1.6" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1124.42" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,875,311 samples, 0.10%)</title><rect x="159.4" y="677" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="162.37" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,589,208 samples, 0.13%)</title><rect x="164.8" y="565" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.83" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,019,925 samples, 0.23%)</title><rect x="203.4" y="325" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="206.44" y="335.5" ></text>
</g>
<g >
<title>_PyUnicode_IsXidStart (26,216,047 samples, 0.10%)</title><rect x="61.9" y="181" width="1.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="64.87" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,417 samples, 0.10%)</title><rect x="82.6" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.59" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,174 samples, 0.10%)</title><rect x="85.0" y="469" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="87.97" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,890,031 samples, 0.40%)</title><rect x="131.4" y="581" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.39" y="591.5" ></text>
</g>
<g >
<title>filename_lookup (104,051,402 samples, 0.40%)</title><rect x="168.9" y="165" width="4.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="171.88" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,687 samples, 0.10%)</title><rect x="166.4" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.36" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (52,595,757 samples, 0.20%)</title><rect x="92.5" y="373" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.46" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (57,452,198 samples, 0.22%)</title><rect x="216.8" y="229" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.80" y="239.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,214,274 samples, 0.10%)</title><rect x="28.2" y="645" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="31.19" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,738 samples, 0.10%)</title><rect x="232.2" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="235.21" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (86,133,506 samples, 0.33%)</title><rect x="108.0" y="757" width="3.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="110.96" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (251,854,636 samples, 0.97%)</title><rect x="180.0" y="853" width="11.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (250,980,516 samples, 0.97%)</title><rect x="140.1" y="341" width="11.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.10" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,230,639 samples, 0.10%)</title><rect x="76.2" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.21" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (101,846,406 samples, 0.39%)</title><rect x="98.5" y="373" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,493,181 samples, 0.13%)</title><rect x="140.1" y="245" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.10" y="255.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,227,014 samples, 0.10%)</title><rect x="126.3" y="277" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="129.28" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,379 samples, 0.10%)</title><rect x="31.8" y="229" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="34.77" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,813 samples, 0.10%)</title><rect x="103.2" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.18" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (112,647,823 samples, 0.43%)</title><rect x="186.4" y="613" width="5.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="189.37" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,002,791 samples, 0.13%)</title><rect x="136.2" y="613" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="139.16" y="623.5" ></text>
</g>
<g >
<title>llvm::AnalysisUsage::setPreservesCFG (33,772,025 samples, 0.13%)</title><rect x="129.9" y="629" width="1.5" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="132.86" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,212,519 samples, 0.10%)</title><rect x="149.1" y="197" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="152.13" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (101,846,406 samples, 0.39%)</title><rect x="98.5" y="421" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.54" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~vector (67,877,904 samples, 0.26%)</title><rect x="1144.6" y="597" width="3.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1147.61" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (308,025,147 samples, 1.19%)</title><rect x="45.5" y="517" width="14.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.47" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (138,167,571 samples, 0.53%)</title><rect x="227.1" y="773" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (342,869,059 samples, 1.32%)</title><rect x="111.9" y="773" width="15.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.88" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (105,766,749 samples, 0.41%)</title><rect x="181.6" y="341" width="4.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="184.56" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,884,222 samples, 0.13%)</title><rect x="224.0" y="773" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="227.03" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,674 samples, 0.10%)</title><rect x="158.2" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.17" y="335.5" ></text>
</g>
<g >
<title>sysmalloc (34,105,625 samples, 0.13%)</title><rect x="242.8" y="965" width="1.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="245.76" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (169,600,099 samples, 0.65%)</title><rect x="1147.7" y="581" width="7.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1150.70" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (33,949,436 samples, 0.13%)</title><rect x="178.5" y="277" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.49" y="287.5" ></text>
</g>
<g >
<title>sem_post@plt (26,294,972 samples, 0.10%)</title><rect x="185.2" y="197" width="1.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="188.17" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (53,471,225 samples, 0.21%)</title><rect x="94.8" y="613" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.85" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call (927,983,972 samples, 3.58%)</title><rect x="44.0" y="901" width="42.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.96" y="911.5" >_Py..</text>
</g>
<g >
<title>_PyObject_Call (134,911,879 samples, 0.52%)</title><rect x="194.2" y="645" width="6.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="197.23" y="655.5" ></text>
</g>
<g >
<title>task_work_run (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="741" width="1.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1169.94" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,174 samples, 0.10%)</title><rect x="85.0" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.97" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,232,219 samples, 0.10%)</title><rect x="128.7" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.66" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (72,894,303 samples, 0.28%)</title><rect x="657.0" y="581" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="659.99" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (54,955,410 samples, 0.21%)</title><rect x="176.0" y="277" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.99" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,453,705 samples, 0.10%)</title><rect x="212.0" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.01" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (27,358,818 samples, 0.11%)</title><rect x="236.1" y="245" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="239.14" y="255.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (32,642,068 samples, 0.13%)</title><rect x="227.1" y="437" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="230.11" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,219,284 samples, 0.10%)</title><rect x="90.1" y="725" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="93.07" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,201,674 samples, 0.10%)</title><rect x="158.2" y="293" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="161.17" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (32,561,945 samples, 0.13%)</title><rect x="39.4" y="341" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.41" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (72,894,303 samples, 0.28%)</title><rect x="657.0" y="485" width="3.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="659.99" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,642,068 samples, 0.13%)</title><rect x="227.1" y="645" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="230.11" y="655.5" ></text>
</g>
<g >
<title>clear_page_erms (101,452,148 samples, 0.39%)</title><rect x="794.7" y="245" width="4.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="797.74" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,284 samples, 0.10%)</title><rect x="90.1" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (188,843,341 samples, 0.73%)</title><rect x="210.8" y="725" width="8.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="735.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,214,717 samples, 0.10%)</title><rect x="213.2" y="373" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="216.21" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_read (32,378,744 samples, 0.12%)</title><rect x="111.9" y="261" width="1.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="114.88" y="271.5" ></text>
</g>
<g >
<title>load_elf_binary (16,774,674 samples, 0.06%)</title><rect x="1171.6" y="901" width="0.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1174.56" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (33,897,814 samples, 0.13%)</title><rect x="221.0" y="789" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="223.95" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (65,321,839 samples, 0.25%)</title><rect x="37.9" y="757" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.92" y="767.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (135,219,839 samples, 0.52%)</title><rect x="29.4" y="789" width="6.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="32.39" y="799.5" ></text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (67,359,350 samples, 0.26%)</title><rect x="1064.3" y="485" width="3.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1067.28" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (284,263,301 samples, 1.10%)</title><rect x="113.3" y="501" width="13.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.35" y="511.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,060,297 samples, 0.13%)</title><rect x="676.6" y="277" width="1.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="679.60" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,159,496 samples, 0.10%)</title><rect x="87.4" y="357" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.36" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (32,378,744 samples, 0.12%)</title><rect x="111.9" y="453" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,417 samples, 0.10%)</title><rect x="82.6" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.59" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,078,940 samples, 0.10%)</title><rect x="83.8" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.78" y="511.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_relaxed&gt; (33,999,552 samples, 0.13%)</title><rect x="1078.1" y="517" width="1.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1081.14" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,213,193 samples, 0.10%)</title><rect x="127.5" y="565" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="130.47" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,159,496 samples, 0.10%)</title><rect x="87.4" y="821" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="90.36" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="821" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="831.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,271,110 samples, 0.10%)</title><rect x="35.5" y="261" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="38.54" y="271.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (33,917,650 samples, 0.13%)</title><rect x="1021.2" y="517" width="1.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1024.16" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="661" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="671.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (34,125,612 samples, 0.13%)</title><rect x="1118.3" y="565" width="1.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1121.32" y="575.5" ></text>
</g>
<g >
<title>boost::relax_target&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::plus&lt;float&gt;, std::less&lt;float&gt; &gt; (272,083,604 samples, 1.05%)</title><rect x="1101.3" y="517" width="12.4" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="1104.34" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (300,649,156 samples, 1.16%)</title><rect x="166.4" y="661" width="13.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="169.36" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,548,971 samples, 0.20%)</title><rect x="196.8" y="325" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="199.78" y="335.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (145,693,923 samples, 0.56%)</title><rect x="233.4" y="885" width="6.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="236.40" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (52,431,834 samples, 0.20%)</title><rect x="29.4" y="245" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_free (66,172,944 samples, 0.26%)</title><rect x="651.0" y="773" width="3.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="653.96" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,174 samples, 0.10%)</title><rect x="85.0" y="229" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="87.97" y="239.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (67,947,906 samples, 0.26%)</title><rect x="1035.0" y="597" width="3.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1038.04" y="607.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (32,793,665 samples, 0.13%)</title><rect x="124.8" y="165" width="1.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="127.79" y="175.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,255,374 samples, 0.10%)</title><rect x="86.2" y="389" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="89.16" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,248 samples, 0.10%)</title><rect x="135.0" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.97" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (129,891,724 samples, 0.50%)</title><rect x="64.3" y="389" width="5.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="67.25" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (139,206,813 samples, 0.54%)</title><rect x="180.0" y="533" width="6.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,239 samples, 0.10%)</title><rect x="94.8" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.85" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (81,243,819 samples, 0.31%)</title><rect x="94.8" y="805" width="3.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="97.85" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="709" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,219 samples, 0.10%)</title><rect x="128.7" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.66" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,195 samples, 0.10%)</title><rect x="60.7" y="245" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="63.67" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,620 samples, 0.10%)</title><rect x="63.1" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (156,098,650 samples, 0.60%)</title><rect x="64.3" y="613" width="7.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="67.25" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (65,321,839 samples, 0.25%)</title><rect x="37.9" y="837" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (300,649,156 samples, 1.16%)</title><rect x="166.4" y="709" width="13.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.36" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,127,238 samples, 0.26%)</title><rect x="207.7" y="517" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="210.72" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,271,110 samples, 0.10%)</title><rect x="35.5" y="405" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="38.54" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,224,456 samples, 0.10%)</title><rect x="132.6" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.59" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (171,910,652 samples, 0.66%)</title><rect x="233.4" y="933" width="7.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,334 samples, 0.10%)</title><rect x="191.5" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.49" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (32,378,744 samples, 0.12%)</title><rect x="111.9" y="341" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (67,411,753 samples, 0.26%)</title><rect x="40.9" y="853" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.89" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (133,117,029 samples, 0.51%)</title><rect x="167.6" y="309" width="6.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.55" y="319.5" ></text>
</g>
<g >
<title>do_page_fault (34,023,571 samples, 0.13%)</title><rect x="163.3" y="885" width="1.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="166.29" y="895.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,841,371 samples, 0.13%)</title><rect x="225.6" y="789" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="228.57" y="799.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (33,848,482 samples, 0.13%)</title><rect x="200.4" y="469" width="1.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="203.37" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,248 samples, 0.10%)</title><rect x="135.0" y="437" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="137.97" y="447.5" ></text>
</g>
<g >
<title>[libffi.so.7.1.0] (33,772,025 samples, 0.13%)</title><rect x="129.9" y="821" width="1.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="132.86" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,542,568 samples, 0.20%)</title><rect x="137.7" y="421" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="140.71" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,243 samples, 0.10%)</title><rect x="173.6" y="213" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.61" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (34,002,791 samples, 0.13%)</title><rect x="136.2" y="629" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.16" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (300,649,156 samples, 1.16%)</title><rect x="166.4" y="581" width="13.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="169.36" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,639 samples, 0.10%)</title><rect x="76.2" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.21" y="511.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (33,620,864 samples, 0.13%)</title><rect x="156.6" y="261" width="1.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="159.64" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (342,869,059 samples, 1.32%)</title><rect x="111.9" y="805" width="15.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="815.5" ></text>
</g>
<g >
<title>PyImport_Import (26,106,661 samples, 0.10%)</title><rect x="36.7" y="965" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="39.73" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (52,445,412 samples, 0.20%)</title><rect x="127.5" y="837" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (463,368,409 samples, 1.79%)</title><rect x="634.4" y="853" width="21.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="637.39" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,913,533 samples, 0.12%)</title><rect x="238.6" y="341" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="241.57" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,773,921 samples, 0.30%)</title><rect x="91.3" y="645" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="94.27" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (101,846,406 samples, 0.39%)</title><rect x="98.5" y="517" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="527.5" ></text>
</g>
<g >
<title>llvm::TargetPassConfig::addISelPasses (33,772,025 samples, 0.13%)</title><rect x="129.9" y="709" width="1.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="132.86" y="719.5" ></text>
</g>
<g >
<title>clear_page_erms (33,995,910 samples, 0.13%)</title><rect x="661.8" y="437" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="664.84" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,381 samples, 0.10%)</title><rect x="81.4" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.40" y="399.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (67,683,134 samples, 0.26%)</title><rect x="1152.3" y="549" width="3.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1155.34" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (363,770,650 samples, 1.40%)</title><rect x="140.1" y="501" width="16.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="143.10" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (52,415,289 samples, 0.20%)</title><rect x="187.9" y="293" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.92" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call (342,869,059 samples, 1.32%)</title><rect x="111.9" y="757" width="15.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="114.88" y="767.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (67,494,245 samples, 0.26%)</title><rect x="1055.0" y="501" width="3.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1058.02" y="511.5" ></text>
</g>
<g >
<title>_dlerror_run (33,620,864 samples, 0.13%)</title><rect x="156.6" y="293" width="1.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="159.64" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,642,068 samples, 0.13%)</title><rect x="227.1" y="677" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="230.11" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,255,374 samples, 0.10%)</title><rect x="86.2" y="805" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="89.16" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,239,491 samples, 0.10%)</title><rect x="199.2" y="245" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="202.17" y="255.5" ></text>
</g>
<g >
<title>PyMem_Free (31,913,533 samples, 0.12%)</title><rect x="238.6" y="213" width="1.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="241.57" y="223.5" ></text>
</g>
<g >
<title>_Py_read (26,212,519 samples, 0.10%)</title><rect x="149.1" y="261" width="1.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="152.13" y="271.5" ></text>
</g>
<g >
<title>_PyObject_CallMethod (7,501,673,498 samples, 28.92%)</title><rect x="675.3" y="581" width="341.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="678.35" y="591.5" >_PyObject_CallMethod</text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,227,014 samples, 0.10%)</title><rect x="126.3" y="389" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="129.28" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (53,573,450 samples, 0.21%)</title><rect x="234.9" y="581" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.94" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (86,437,906 samples, 0.33%)</title><rect x="186.4" y="373" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.37" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,594 samples, 0.20%)</title><rect x="173.6" y="373" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.61" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,230,639 samples, 0.10%)</title><rect x="76.2" y="421" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.21" y="431.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,430,158 samples, 0.20%)</title><rect x="77.4" y="597" width="2.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="80.40" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,453,705 samples, 0.10%)</title><rect x="212.0" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.01" y="463.5" ></text>
</g>
<g >
<title>migrate_misplaced_page (34,023,571 samples, 0.13%)</title><rect x="163.3" y="789" width="1.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="166.29" y="799.5" ></text>
</g>
<g >
<title>__GI___libc_read (26,212,519 samples, 0.10%)</title><rect x="149.1" y="229" width="1.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="152.13" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,729 samples, 0.10%)</title><rect x="240.0" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="243.02" y="559.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,965 samples, 0.10%)</title><rect x="105.6" y="453" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="108.57" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (423,593,188 samples, 1.63%)</title><rect x="140.1" y="661" width="19.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.10" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (56,123,417 samples, 0.22%)</title><rect x="194.2" y="421" width="2.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="197.23" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,174 samples, 0.10%)</title><rect x="85.0" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.97" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="741" width="5.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1164.53" y="751.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (57,452,198 samples, 0.22%)</title><rect x="216.8" y="261" width="2.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="219.80" y="271.5" ></text>
</g>
<g >
<title>lookup_fast (26,182,305 samples, 0.10%)</title><rect x="184.0" y="101" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="186.98" y="111.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,639 samples, 0.10%)</title><rect x="76.2" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.21" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,589,208 samples, 0.13%)</title><rect x="164.8" y="485" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.83" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,738 samples, 0.10%)</title><rect x="232.2" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="235.21" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,274 samples, 0.10%)</title><rect x="28.2" y="741" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="31.19" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,848 samples, 0.10%)</title><rect x="659.1" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="662.11" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,729 samples, 0.10%)</title><rect x="240.0" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="243.02" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (58,106,080 samples, 0.22%)</title><rect x="237.4" y="725" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="240.38" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="213" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (54,955,410 samples, 0.21%)</title><rect x="176.0" y="341" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.99" y="351.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,206,926 samples, 0.10%)</title><rect x="70.2" y="341" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="73.16" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,243 samples, 0.10%)</title><rect x="173.6" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.61" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,889,025 samples, 0.10%)</title><rect x="228.6" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.60" y="383.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT::initialize_routing_table (33,613,858 samples, 0.13%)</title><rect x="1022.7" y="629" width="1.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1025.70" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (33,620,864 samples, 0.13%)</title><rect x="156.6" y="469" width="1.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="159.64" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (67,766,441 samples, 0.26%)</title><rect x="664.9" y="629" width="3.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="667.94" y="639.5" ></text>
</g>
<g >
<title>PyObject_Free (34,011,493 samples, 0.13%)</title><rect x="18.5" y="965" width="1.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="21.55" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,381 samples, 0.10%)</title><rect x="81.4" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.40" y="415.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_single_s_d (2,816,650,815 samples, 10.86%)</title><rect x="1027.3" y="613" width="128.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1030.31" y="623.5" >compute_all_shor..</text>
</g>
<g >
<title>do_sys_open (26,214,717 samples, 0.10%)</title><rect x="213.2" y="165" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="216.21" y="175.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,632 samples, 0.10%)</title><rect x="234.9" y="277" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="237.94" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (68,127,238 samples, 0.26%)</title><rect x="207.7" y="533" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.72" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,589,208 samples, 0.13%)</title><rect x="164.8" y="725" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.83" y="735.5" ></text>
</g>
<g >
<title>do_user_addr_fault (26,205,687 samples, 0.10%)</title><rect x="166.4" y="245" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="169.36" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,219,284 samples, 0.10%)</title><rect x="90.1" y="549" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.07" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,296 samples, 0.10%)</title><rect x="210.8" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (27,772,594 samples, 0.11%)</title><rect x="97.3" y="789" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.28" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,213,193 samples, 0.10%)</title><rect x="127.5" y="501" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="130.47" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (56,123,417 samples, 0.22%)</title><rect x="194.2" y="357" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="197.23" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,682,634 samples, 0.20%)</title><rect x="104.4" y="693" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="107.37" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (156,098,650 samples, 0.60%)</title><rect x="64.3" y="565" width="7.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="67.25" y="575.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,548,971 samples, 0.20%)</title><rect x="196.8" y="389" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="199.78" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (27,554,181 samples, 0.11%)</title><rect x="675.3" y="469" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="678.35" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (7,934,037,009 samples, 30.58%)</title><rect x="661.8" y="709" width="360.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="664.84" y="719.5" >[python3.12]</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (106,232,596 samples, 0.41%)</title><rect x="81.3" y="789" width="4.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="84.33" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,620 samples, 0.10%)</title><rect x="63.1" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,385 samples, 0.13%)</title><rect x="666.5" y="613" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="669.46" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (68,037,615 samples, 0.26%)</title><rect x="1136.9" y="485" width="3.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1139.89" y="495.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33,995,910 samples, 0.13%)</title><rect x="661.8" y="517" width="1.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="664.84" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (105,525,503 samples, 0.41%)</title><rect x="228.6" y="693" width="4.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="231.60" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,712,837 samples, 0.13%)</title><rect x="108.0" y="437" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="110.96" y="447.5" ></text>
</g>
<g >
<title>free_unref_page_list (66,783,648 samples, 0.26%)</title><rect x="1173.8" y="757" width="3.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1176.84" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (60,019,925 samples, 0.23%)</title><rect x="203.4" y="341" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.44" y="351.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,738 samples, 0.10%)</title><rect x="232.2" y="213" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="235.21" y="223.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,230,639 samples, 0.10%)</title><rect x="76.2" y="341" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="79.21" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (27,358,818 samples, 0.11%)</title><rect x="236.1" y="229" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="239.14" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32,378,744 samples, 0.12%)</title><rect x="111.9" y="229" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="114.88" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,772,025 samples, 0.13%)</title><rect x="129.9" y="901" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="132.86" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (33,440,064 samples, 0.13%)</title><rect x="180.0" y="469" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,106,661 samples, 0.10%)</title><rect x="36.7" y="437" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="39.73" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (104,890,031 samples, 0.40%)</title><rect x="131.4" y="549" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.39" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (52,542,568 samples, 0.20%)</title><rect x="137.7" y="437" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,372,878 samples, 0.10%)</title><rect x="160.5" y="661" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.54" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,201,674 samples, 0.10%)</title><rect x="158.2" y="469" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="161.17" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (86,133,506 samples, 0.33%)</title><rect x="108.0" y="597" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.96" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="677" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,255,374 samples, 0.10%)</title><rect x="86.2" y="469" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="89.16" y="479.5" ></text>
</g>
<g >
<title>__do_sys_madvise (5,903,177 samples, 0.02%)</title><rect x="246.6" y="869" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="249.59" y="879.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (33,917,650 samples, 0.13%)</title><rect x="1021.2" y="533" width="1.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1024.16" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,897,814 samples, 0.13%)</title><rect x="221.0" y="581" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="223.95" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,417 samples, 0.10%)</title><rect x="82.6" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="85.59" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (32,759,894 samples, 0.13%)</title><rect x="37.9" y="517" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="527.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,430,158 samples, 0.20%)</title><rect x="77.4" y="757" width="2.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="80.40" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (156,098,650 samples, 0.60%)</title><rect x="64.3" y="581" width="7.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="67.25" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,632 samples, 0.10%)</title><rect x="234.9" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.94" y="255.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (33,701,717 samples, 0.13%)</title><rect x="48.5" y="309" width="1.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="51.46" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (105,525,503 samples, 0.41%)</title><rect x="228.6" y="613" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.60" y="623.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT_interface::run_for_batch_matrices (3,052,279,658 samples, 11.77%)</title><rect x="1022.7" y="677" width="138.8" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1025.70" y="687.5" >diff_Nexullance_I..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,255,374 samples, 0.10%)</title><rect x="86.2" y="629" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="89.16" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,917 samples, 0.10%)</title><rect x="190.3" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.30" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,717 samples, 0.10%)</title><rect x="213.2" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.21" y="367.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,917,650 samples, 0.13%)</title><rect x="1021.2" y="645" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1024.16" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (300,649,156 samples, 1.16%)</title><rect x="166.4" y="565" width="13.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.36" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (86,133,506 samples, 0.33%)</title><rect x="108.0" y="517" width="3.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.96" y="527.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,271,110 samples, 0.10%)</title><rect x="35.5" y="581" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="38.54" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,889,025 samples, 0.10%)</title><rect x="228.6" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.60" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (87,587,843 samples, 0.34%)</title><rect x="233.4" y="645" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="773" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,237,850 samples, 0.10%)</title><rect x="131.4" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.39" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,255,374 samples, 0.10%)</title><rect x="86.2" y="693" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="89.16" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,642,068 samples, 0.13%)</title><rect x="227.1" y="533" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="230.11" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="325" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (34,022,617 samples, 0.13%)</title><rect x="186.4" y="309" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.37" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (139,206,813 samples, 0.54%)</title><rect x="180.0" y="565" width="6.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="575.5" ></text>
</g>
<g >
<title>_PyRun_AnyFileObject (11,092,871,523 samples, 42.76%)</title><rect x="657.0" y="917" width="504.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="659.99" y="927.5" >_PyRun_AnyFileObject</text>
</g>
<g >
<title>[python3.12] (26,201,674 samples, 0.10%)</title><rect x="158.2" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.17" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (32,642,068 samples, 0.13%)</title><rect x="227.1" y="309" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,224,456 samples, 0.10%)</title><rect x="132.6" y="389" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="135.59" y="399.5" ></text>
</g>
<g >
<title>PyObject_Malloc (33,660,553 samples, 0.13%)</title><rect x="660.3" y="757" width="1.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="663.31" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (134,911,879 samples, 0.52%)</title><rect x="194.2" y="837" width="6.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="197.23" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,219,284 samples, 0.10%)</title><rect x="90.1" y="245" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.07" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (52,430,158 samples, 0.20%)</title><rect x="77.4" y="789" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.40" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (27,259,986 samples, 0.11%)</title><rect x="96.0" y="501" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.04" y="511.5" ></text>
</g>
<g >
<title>page_fault (26,216,620 samples, 0.10%)</title><rect x="63.1" y="277" width="1.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="66.06" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (133,615,269 samples, 0.52%)</title><rect x="1172.3" y="949" width="6.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1175.33" y="959.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (26,214,824 samples, 0.10%)</title><rect x="65.9" y="293" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="68.87" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (106,882,167 samples, 0.41%)</title><rect x="71.4" y="453" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="74.35" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (139,206,813 samples, 0.54%)</title><rect x="180.0" y="517" width="6.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="183.04" y="527.5" ></text>
</g>
<g >
<title>free_pages.part.0 (2,218,440 samples, 0.01%)</title><rect x="246.2" y="869" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="249.22" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (32,759,894 samples, 0.13%)</title><rect x="37.9" y="549" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="559.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,064,534 samples, 0.13%)</title><rect x="1018.1" y="549" width="1.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1021.06" y="559.5" ></text>
</g>
<g >
<title>do_anonymous_page (418,336,753 samples, 1.61%)</title><rect x="968.6" y="293" width="19.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="971.57" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,248 samples, 0.10%)</title><rect x="135.0" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.97" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,219 samples, 0.10%)</title><rect x="128.7" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.66" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (34,073,588 samples, 0.13%)</title><rect x="1056.5" y="485" width="1.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1059.54" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,002,791 samples, 0.13%)</title><rect x="136.2" y="581" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.16" y="591.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (32,378,744 samples, 0.12%)</title><rect x="111.9" y="85" width="1.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="114.88" y="95.5" ></text>
</g>
<g >
<title>[python3.12] (33,900,707 samples, 0.13%)</title><rect x="79.8" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.79" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (101,846,406 samples, 0.39%)</title><rect x="98.5" y="389" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,897,814 samples, 0.13%)</title><rect x="221.0" y="725" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="223.95" y="735.5" ></text>
</g>
<g >
<title>_PyObject_Call (251,854,636 samples, 0.97%)</title><rect x="180.0" y="773" width="11.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="183.04" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (308,025,147 samples, 1.19%)</title><rect x="45.5" y="485" width="14.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.47" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,900,707 samples, 0.13%)</title><rect x="79.8" y="677" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="82.79" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (65,321,839 samples, 0.25%)</title><rect x="37.9" y="693" width="3.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="40.92" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,294,972 samples, 0.10%)</title><rect x="185.2" y="229" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.17" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (52,661,992 samples, 0.20%)</title><rect x="154.2" y="389" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.25" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,193 samples, 0.10%)</title><rect x="127.5" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="559.5" ></text>
</g>
<g >
<title>error_entry (34,105,625 samples, 0.13%)</title><rect x="242.8" y="949" width="1.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="245.76" y="959.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_edge&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (33,934,021 samples, 0.13%)</title><rect x="1042.8" y="517" width="1.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1045.77" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,917 samples, 0.10%)</title><rect x="190.3" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.30" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (104,711,912 samples, 0.40%)</title><rect x="81.4" y="677" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.40" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="805" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="815.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (104,993,205 samples, 0.40%)</title><rect x="90.1" y="741" width="4.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="93.07" y="751.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (112,378,838 samples, 0.43%)</title><rect x="106.8" y="901" width="5.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="109.76" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,477 samples, 0.10%)</title><rect x="133.8" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.78" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,224,456 samples, 0.10%)</title><rect x="132.6" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.59" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,255,374 samples, 0.10%)</title><rect x="86.2" y="453" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="89.16" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (395,314,471 samples, 1.52%)</title><rect x="111.9" y="901" width="18.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="911.5" ></text>
</g>
<g >
<title>PyObject_GetIter (26,215,379 samples, 0.10%)</title><rect x="31.8" y="245" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="34.77" y="255.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (138,167,571 samples, 0.53%)</title><rect x="227.1" y="757" width="6.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="230.11" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,680 samples, 0.10%)</title><rect x="151.5" y="277" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="154.51" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,965 samples, 0.10%)</title><rect x="105.6" y="197" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.57" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (34,085,153 samples, 0.13%)</title><rect x="1033.5" y="581" width="1.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1036.49" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (34,002,791 samples, 0.13%)</title><rect x="136.2" y="309" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.16" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (125,571,187 samples, 0.48%)</title><rect x="45.5" y="421" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.47" y="431.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, diff_Nexullance_IT_interface, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (3,052,279,658 samples, 11.77%)</title><rect x="1022.7" y="757" width="138.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1025.70" y="767.5" >pybind11::cpp_fun..</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (33,999,157 samples, 0.13%)</title><rect x="101.6" y="245" width="1.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="104.63" y="255.5" ></text>
</g>
<g >
<title>boost::source&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (33,696,041 samples, 0.13%)</title><rect x="15.5" y="965" width="1.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.47" y="975.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (112,378,838 samples, 0.43%)</title><rect x="106.8" y="821" width="5.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="109.76" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,772,594 samples, 0.11%)</title><rect x="97.3" y="517" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="100.28" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,542,568 samples, 0.20%)</title><rect x="137.7" y="469" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,372,878 samples, 0.10%)</title><rect x="160.5" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.54" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (419,992,435 samples, 1.62%)</title><rect x="44.0" y="581" width="19.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,772,025 samples, 0.13%)</title><rect x="129.9" y="885" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="132.86" y="895.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT::diff_Nexullance_IT (33,613,858 samples, 0.13%)</title><rect x="1022.7" y="645" width="1.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1025.70" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="197" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="207.5" ></text>
</g>
<g >
<title>LLVMPY_FinalizeObject (33,772,025 samples, 0.13%)</title><rect x="129.9" y="805" width="1.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="132.86" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,296 samples, 0.10%)</title><rect x="210.8" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="213.82" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,712,837 samples, 0.13%)</title><rect x="108.0" y="357" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.96" y="367.5" ></text>
</g>
<g >
<title>do_page_fault (34,060,297 samples, 0.13%)</title><rect x="676.6" y="341" width="1.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="679.60" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (34,057,586 samples, 0.13%)</title><rect x="206.2" y="277" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="209.17" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (33,995,731 samples, 0.13%)</title><rect x="1019.6" y="613" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1022.61" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,772,594 samples, 0.11%)</title><rect x="97.3" y="277" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="100.28" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,255,374 samples, 0.10%)</title><rect x="86.2" y="773" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="89.16" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,216,729 samples, 0.10%)</title><rect x="240.0" y="869" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="243.02" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (112,647,823 samples, 0.43%)</title><rect x="186.4" y="645" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.37" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,237,850 samples, 0.10%)</title><rect x="131.4" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.39" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,652 samples, 0.10%)</title><rect x="50.0" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.99" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (133,112,806 samples, 0.51%)</title><rect x="71.4" y="613" width="6.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="74.35" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (156,098,650 samples, 0.60%)</title><rect x="64.3" y="485" width="7.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="67.25" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="229" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,773,921 samples, 0.30%)</title><rect x="91.3" y="405" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="94.27" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (78,646,250 samples, 0.30%)</title><rect x="59.5" y="517" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.48" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (53,471,225 samples, 0.21%)</title><rect x="94.8" y="725" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="97.85" y="735.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (26,212,519 samples, 0.10%)</title><rect x="149.1" y="69" width="1.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="152.13" y="79.5" ></text>
</g>
<g >
<title>[python3.12] (52,548,971 samples, 0.20%)</title><rect x="196.8" y="341" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.78" y="351.5" ></text>
</g>
<g >
<title>do_page_fault (32,759,894 samples, 0.13%)</title><rect x="37.9" y="293" width="1.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="40.92" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,589,208 samples, 0.13%)</title><rect x="164.8" y="613" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="167.83" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,296 samples, 0.10%)</title><rect x="210.8" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,680 samples, 0.10%)</title><rect x="151.5" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.51" y="415.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,632 samples, 0.10%)</title><rect x="234.9" y="261" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="237.94" y="271.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (161,490,949 samples, 0.62%)</title><rect x="29.4" y="869" width="7.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="32.39" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (927,983,972 samples, 3.58%)</title><rect x="44.0" y="949" width="42.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="959.5" >[py..</text>
</g>
<g >
<title>[python3.12] (104,993,205 samples, 0.40%)</title><rect x="90.1" y="869" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (52,430,158 samples, 0.20%)</title><rect x="77.4" y="517" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.40" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,178,164 samples, 0.10%)</title><rect x="91.3" y="309" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="94.27" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,351 samples, 0.10%)</title><rect x="174.8" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.80" y="287.5" ></text>
</g>
<g >
<title>PyObject_Malloc (33,995,910 samples, 0.13%)</title><rect x="661.8" y="645" width="1.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="664.84" y="655.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (78,647,213 samples, 0.30%)</title><rect x="29.4" y="357" width="3.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="32.39" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="597" width="5.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1164.53" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (34,014,393 samples, 0.13%)</title><rect x="233.4" y="469" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,332,066 samples, 0.10%)</title><rect x="196.8" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.78" y="287.5" ></text>
</g>
<g >
<title>PyDict_SetItem (26,209,888 samples, 0.10%)</title><rect x="215.6" y="245" width="1.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="218.60" y="255.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (33,589,208 samples, 0.13%)</title><rect x="164.8" y="757" width="1.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="167.83" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="709" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (136,176,340 samples, 0.52%)</title><rect x="213.2" y="517" width="6.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="216.21" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="901" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.36" y="911.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,813 samples, 0.10%)</title><rect x="103.2" y="373" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="106.18" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="709" width="5.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1164.53" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (112,647,823 samples, 0.43%)</title><rect x="186.4" y="485" width="5.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="189.37" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (65,321,839 samples, 0.25%)</title><rect x="37.9" y="677" width="3.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="40.92" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="757" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.36" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,759,894 samples, 0.13%)</title><rect x="37.9" y="597" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.92" y="607.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,064,534 samples, 0.13%)</title><rect x="1018.1" y="565" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1021.06" y="575.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (68,066,874 samples, 0.26%)</title><rect x="1106.0" y="501" width="3.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1108.98" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (27,259,986 samples, 0.11%)</title><rect x="96.0" y="309" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.04" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,620 samples, 0.10%)</title><rect x="63.1" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,687 samples, 0.10%)</title><rect x="166.4" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.36" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,841,371 samples, 0.13%)</title><rect x="225.6" y="773" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="228.57" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (134,911,879 samples, 0.52%)</title><rect x="194.2" y="805" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.23" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,848 samples, 0.10%)</title><rect x="659.1" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="662.11" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="885" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.36" y="895.5" ></text>
</g>
<g >
<title>__do_page_fault (27,554,181 samples, 0.11%)</title><rect x="675.3" y="405" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="678.35" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (31,913,533 samples, 0.12%)</title><rect x="238.6" y="229" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="241.57" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (94,077,511 samples, 0.36%)</title><rect x="203.4" y="485" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="206.44" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (156,098,650 samples, 0.60%)</title><rect x="64.3" y="517" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.25" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (104,890,031 samples, 0.40%)</title><rect x="131.4" y="565" width="4.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="134.39" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,206,261 samples, 0.10%)</title><rect x="229.8" y="357" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="232.82" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,210,174 samples, 0.10%)</title><rect x="85.0" y="261" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="87.97" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,193 samples, 0.10%)</title><rect x="127.5" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (128,061,219 samples, 0.49%)</title><rect x="98.5" y="629" width="5.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.54" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (52,420,669 samples, 0.20%)</title><rect x="109.5" y="405" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.49" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (72,894,303 samples, 0.28%)</title><rect x="657.0" y="597" width="3.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="659.99" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,687 samples, 0.10%)</title><rect x="166.4" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.36" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,995,731 samples, 0.13%)</title><rect x="1019.6" y="581" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1022.61" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (139,206,813 samples, 0.54%)</title><rect x="180.0" y="501" width="6.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="183.04" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,214,813 samples, 0.10%)</title><rect x="103.2" y="469" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="106.18" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (58,106,080 samples, 0.22%)</title><rect x="237.4" y="469" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="240.38" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,682,634 samples, 0.20%)</title><rect x="104.4" y="629" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.37" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (58,106,080 samples, 0.22%)</title><rect x="237.4" y="581" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="240.38" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (112,647,823 samples, 0.43%)</title><rect x="186.4" y="437" width="5.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="189.37" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (87,587,843 samples, 0.34%)</title><rect x="233.4" y="677" width="4.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="236.40" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (78,773,921 samples, 0.30%)</title><rect x="91.3" y="437" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.27" y="447.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (133,615,269 samples, 0.52%)</title><rect x="1172.3" y="821" width="6.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1175.33" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (136,176,340 samples, 0.52%)</title><rect x="213.2" y="661" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.21" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (315,428,076 samples, 1.22%)</title><rect x="63.1" y="789" width="14.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="66.06" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (105,766,749 samples, 0.41%)</title><rect x="181.6" y="453" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.56" y="463.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (134,911,879 samples, 0.52%)</title><rect x="194.2" y="741" width="6.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="197.23" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,381 samples, 0.10%)</title><rect x="81.4" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.40" y="319.5" ></text>
</g>
<g >
<title>strnlen_user (16,774,674 samples, 0.06%)</title><rect x="1171.6" y="869" width="0.7" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1174.56" y="879.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,372,878 samples, 0.10%)</title><rect x="160.5" y="357" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="163.54" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.36" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,227,014 samples, 0.10%)</title><rect x="126.3" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.28" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (156,098,650 samples, 0.60%)</title><rect x="64.3" y="629" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.25" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (419,992,435 samples, 1.62%)</title><rect x="44.0" y="773" width="19.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="46.96" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (136,176,340 samples, 0.52%)</title><rect x="213.2" y="629" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.21" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (11,092,871,523 samples, 42.76%)</title><rect x="657.0" y="885" width="504.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="659.99" y="895.5" >[python3.12]</text>
</g>
<g >
<title>__handle_mm_fault (504,421,756 samples, 1.94%)</title><rect x="964.7" y="309" width="22.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="967.65" y="319.5" >_..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (136,176,340 samples, 0.52%)</title><rect x="213.2" y="437" width="6.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="216.21" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,897,814 samples, 0.13%)</title><rect x="221.0" y="741" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="223.95" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (56,572,626 samples, 0.22%)</title><rect x="33.0" y="597" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.96" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (251,854,636 samples, 0.97%)</title><rect x="180.0" y="757" width="11.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="767.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,470,669 samples, 0.10%)</title><rect x="104.4" y="373" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="107.37" y="383.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (106,232,596 samples, 0.41%)</title><rect x="81.3" y="693" width="4.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="84.33" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (35,686,722 samples, 0.14%)</title><rect x="64.3" y="373" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.25" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (26,182,305 samples, 0.10%)</title><rect x="184.0" y="229" width="1.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="186.98" y="239.5" ></text>
</g>
<g >
<title>_PyObject_Call (300,649,156 samples, 1.16%)</title><rect x="166.4" y="789" width="13.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="169.36" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,296 samples, 0.10%)</title><rect x="210.8" y="533" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="213.82" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (138,167,571 samples, 0.53%)</title><rect x="227.1" y="741" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="230.11" y="751.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,430,158 samples, 0.20%)</title><rect x="77.4" y="773" width="2.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="80.40" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,639 samples, 0.10%)</title><rect x="76.2" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.21" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,214,274 samples, 0.10%)</title><rect x="28.2" y="725" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.19" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (59,326,980 samples, 0.23%)</title><rect x="11.2" y="965" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="14.22" y="975.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (26,159,496 samples, 0.10%)</title><rect x="87.4" y="949" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="90.36" y="959.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,002,791 samples, 0.13%)</title><rect x="136.2" y="661" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="139.16" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,245,332 samples, 0.10%)</title><rect x="106.8" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="703.5" ></text>
</g>
<g >
<title>__handle_mm_fault (32,759,894 samples, 0.13%)</title><rect x="37.9" y="229" width="1.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="40.92" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (32,642,068 samples, 0.13%)</title><rect x="227.1" y="421" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (188,843,341 samples, 0.73%)</title><rect x="210.8" y="773" width="8.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="213.82" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,106,661 samples, 0.10%)</title><rect x="36.7" y="293" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="39.73" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (109,961,623 samples, 0.42%)</title><rect x="214.4" y="341" width="5.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.41" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (104,890,031 samples, 0.40%)</title><rect x="131.4" y="613" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.39" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,078,940 samples, 0.10%)</title><rect x="83.8" y="405" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="86.78" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (34,014,393 samples, 0.13%)</title><rect x="233.4" y="293" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (34,045,535 samples, 0.13%)</title><rect x="1150.8" y="565" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1153.79" y="575.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (101,597,829 samples, 0.39%)</title><rect x="1067.3" y="517" width="4.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1070.35" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (112,378,838 samples, 0.43%)</title><rect x="106.8" y="789" width="5.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="109.76" y="799.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (27,259,986 samples, 0.11%)</title><rect x="96.0" y="469" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="99.04" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (229,841,116 samples, 0.89%)</title><rect x="200.4" y="821" width="10.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (58,106,080 samples, 0.22%)</title><rect x="237.4" y="597" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="240.38" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (33,841,371 samples, 0.13%)</title><rect x="225.6" y="661" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="228.57" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (32,924,554 samples, 0.13%)</title><rect x="654.0" y="789" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="656.97" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_vma (365,901,720 samples, 1.41%)</title><rect x="968.6" y="277" width="16.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="971.57" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (562,639,549 samples, 2.17%)</title><rect x="629.9" y="885" width="25.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="632.87" y="895.5" >[..</text>
</g>
<g >
<title>[python3.12] (165,072,034 samples, 0.64%)</title><rect x="142.8" y="277" width="7.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.81" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,379 samples, 0.10%)</title><rect x="31.8" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="34.77" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,078,940 samples, 0.10%)</title><rect x="83.8" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.78" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (58,106,080 samples, 0.22%)</title><rect x="237.4" y="677" width="2.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="240.38" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (112,378,838 samples, 0.43%)</title><rect x="106.8" y="805" width="5.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="109.76" y="815.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (72,894,303 samples, 0.28%)</title><rect x="657.0" y="661" width="3.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="659.99" y="671.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (34,237,141 samples, 0.13%)</title><rect x="799.4" y="293" width="1.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="802.36" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (86,133,506 samples, 0.33%)</title><rect x="108.0" y="549" width="3.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="110.96" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_read (26,212,519 samples, 0.10%)</title><rect x="149.1" y="181" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="152.13" y="191.5" ></text>
</g>
<g >
<title>boost::scoped_array&lt;unsigned long&gt;::~scoped_array (33,704,090 samples, 0.13%)</title><rect x="1113.7" y="517" width="1.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1116.71" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (27,772,594 samples, 0.11%)</title><rect x="97.3" y="613" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="100.28" y="623.5" ></text>
</g>
<g >
<title>do_exit (133,615,269 samples, 0.52%)</title><rect x="1172.3" y="917" width="6.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1175.33" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="773" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="783.5" ></text>
</g>
<g >
<title>terminate_walk (104,051,402 samples, 0.40%)</title><rect x="168.9" y="133" width="4.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="171.88" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,296 samples, 0.10%)</title><rect x="210.8" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (195,992,634 samples, 0.76%)</title><rect x="201.9" y="629" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.91" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,717 samples, 0.10%)</title><rect x="213.2" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.21" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (315,428,076 samples, 1.22%)</title><rect x="63.1" y="805" width="14.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="815.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (33,620,864 samples, 0.13%)</title><rect x="156.6" y="277" width="1.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="159.64" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,729 samples, 0.10%)</title><rect x="240.0" y="677" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="243.02" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (34,085,153 samples, 0.13%)</title><rect x="1033.5" y="597" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1036.49" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,255,374 samples, 0.10%)</title><rect x="86.2" y="597" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="89.16" y="607.5" ></text>
</g>
<g >
<title>PyArray_CopyObject (67,411,753 samples, 0.26%)</title><rect x="40.9" y="773" width="3.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="43.89" y="783.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,213,738 samples, 0.10%)</title><rect x="232.2" y="325" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="235.21" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt;::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, true&gt; (34,185,799 samples, 0.13%)</title><rect x="1099.8" y="485" width="1.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1102.78" y="495.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,106,661 samples, 0.10%)</title><rect x="36.7" y="357" width="1.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="39.73" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,453,705 samples, 0.10%)</title><rect x="212.0" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.01" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (27,554,181 samples, 0.11%)</title><rect x="675.3" y="421" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="678.35" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,212,417 samples, 0.10%)</title><rect x="82.6" y="453" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="85.59" y="463.5" ></text>
</g>
<g >
<title>do_anonymous_page (67,990,178 samples, 0.26%)</title><rect x="67.1" y="133" width="3.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="70.07" y="143.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,453,705 samples, 0.10%)</title><rect x="212.0" y="501" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="215.01" y="511.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (26,211,838 samples, 0.10%)</title><rect x="150.3" y="165" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="153.32" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (52,661,992 samples, 0.20%)</title><rect x="154.2" y="357" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.25" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,378,744 samples, 0.12%)</title><rect x="111.9" y="501" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="114.88" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (129,891,724 samples, 0.50%)</title><rect x="64.3" y="437" width="5.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="67.25" y="447.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (60,019,925 samples, 0.23%)</title><rect x="203.4" y="389" width="2.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="206.44" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="575.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (68,357,004 samples, 0.26%)</title><rect x="1098.2" y="517" width="3.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1101.23" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (251,854,636 samples, 0.97%)</title><rect x="180.0" y="837" width="11.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="183.04" y="847.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (26,205,687 samples, 0.10%)</title><rect x="166.4" y="165" width="1.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="169.36" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (33,620,864 samples, 0.13%)</title><rect x="156.6" y="565" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.64" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (33,440,064 samples, 0.13%)</title><rect x="180.0" y="357" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,652 samples, 0.10%)</title><rect x="50.0" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.99" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="357" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="367.5" ></text>
</g>
<g >
<title>PyUFunc_AddLoop (46,518,056 samples, 0.18%)</title><rect x="52.4" y="309" width="2.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="55.39" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,548,971 samples, 0.20%)</title><rect x="196.8" y="357" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="199.78" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,255,374 samples, 0.10%)</title><rect x="86.2" y="869" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="89.16" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,216,729 samples, 0.10%)</title><rect x="240.0" y="613" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="243.02" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,334 samples, 0.10%)</title><rect x="191.5" y="725" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.49" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (52,542,568 samples, 0.20%)</title><rect x="137.7" y="533" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,453,705 samples, 0.10%)</title><rect x="212.0" y="469" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="215.01" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,680 samples, 0.10%)</title><rect x="151.5" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="154.51" y="383.5" ></text>
</g>
<g >
<title>change_pte_range (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="661" width="1.6" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1169.94" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,682,634 samples, 0.20%)</title><rect x="104.4" y="757" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="107.37" y="767.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (363,770,650 samples, 1.40%)</title><rect x="140.1" y="453" width="16.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="143.10" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (32,642,068 samples, 0.13%)</title><rect x="227.1" y="501" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="511.5" ></text>
</g>
<g >
<title>do_anonymous_page (27,554,181 samples, 0.11%)</title><rect x="675.3" y="341" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="678.35" y="351.5" ></text>
</g>
<g >
<title>unmap_page_range (133,615,269 samples, 0.52%)</title><rect x="1172.3" y="837" width="6.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1175.33" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (52,682,634 samples, 0.20%)</title><rect x="104.4" y="885" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.37" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (419,992,435 samples, 1.62%)</title><rect x="44.0" y="629" width="19.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.96" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (136,176,340 samples, 0.52%)</title><rect x="213.2" y="613" width="6.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="216.21" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,206,926 samples, 0.10%)</title><rect x="70.2" y="421" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="73.16" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (298,001,679 samples, 1.15%)</title><rect x="641.9" y="837" width="13.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="644.91" y="847.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5,076,349 samples, 0.02%)</title><rect x="623.6" y="933" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="626.59" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,334 samples, 0.10%)</title><rect x="191.5" y="837" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.49" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (33,321,038 samples, 0.13%)</title><rect x="44.0" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="789" width="5.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1164.53" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,453,705 samples, 0.10%)</title><rect x="212.0" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="215.01" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,059,701 samples, 0.13%)</title><rect x="207.7" y="437" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.72" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,917 samples, 0.10%)</title><rect x="190.3" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.30" y="255.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,216,729 samples, 0.10%)</title><rect x="240.0" y="837" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="243.02" y="847.5" ></text>
</g>
<g >
<title>page_fault (34,064,534 samples, 0.13%)</title><rect x="1018.1" y="629" width="1.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1021.06" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,479 samples, 0.10%)</title><rect x="231.0" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.01" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (334,238,364 samples, 1.29%)</title><rect x="164.8" y="821" width="15.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="167.83" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,773,921 samples, 0.30%)</title><rect x="91.3" y="581" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="94.27" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (476,135,756 samples, 1.84%)</title><rect x="137.7" y="805" width="21.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="140.71" y="815.5" >P..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,245,332 samples, 0.10%)</title><rect x="106.8" y="517" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="109.76" y="527.5" ></text>
</g>
<g >
<title>clear_page_erms (298,429,503 samples, 1.15%)</title><rect x="968.6" y="229" width="13.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="971.57" y="239.5" ></text>
</g>
<g >
<title>__vfs_read (32,378,744 samples, 0.12%)</title><rect x="111.9" y="149" width="1.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="114.88" y="159.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,430,158 samples, 0.20%)</title><rect x="77.4" y="613" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="80.40" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back (32,608,546 samples, 0.13%)</title><rect x="1158.5" y="613" width="1.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1161.50" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,078,940 samples, 0.10%)</title><rect x="83.8" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.78" y="463.5" ></text>
</g>
<g >
<title>[missing.cpython-312-x86_64-linux-gnu.so] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="725" width="1.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="90.36" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,245,332 samples, 0.10%)</title><rect x="106.8" y="677" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="687.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (34,237,141 samples, 0.13%)</title><rect x="799.4" y="277" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="802.36" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (229,841,116 samples, 0.89%)</title><rect x="200.4" y="789" width="10.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="203.37" y="799.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (33,949,474 samples, 0.13%)</title><rect x="1127.6" y="597" width="1.6" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1130.62" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (32,642,068 samples, 0.13%)</title><rect x="227.1" y="565" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,224,456 samples, 0.10%)</title><rect x="132.6" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.59" y="271.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,214,248 samples, 0.10%)</title><rect x="135.0" y="405" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="137.97" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (363,770,650 samples, 1.40%)</title><rect x="140.1" y="485" width="16.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.10" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="639.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,159,496 samples, 0.10%)</title><rect x="87.4" y="741" width="1.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="90.36" y="751.5" ></text>
</g>
<g >
<title>_Py_HashPointer (26,213,193 samples, 0.10%)</title><rect x="127.5" y="229" width="1.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="130.47" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,477 samples, 0.10%)</title><rect x="133.8" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.78" y="463.5" ></text>
</g>
<g >
<title>add_and_return_legacy_wrapping_ufunc_loop (46,518,056 samples, 0.18%)</title><rect x="52.4" y="325" width="2.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="55.39" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.36" y="671.5" ></text>
</g>
<g >
<title>lookup_fast (26,211,838 samples, 0.10%)</title><rect x="150.3" y="133" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="153.32" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,047 samples, 0.10%)</title><rect x="61.9" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.87" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,284 samples, 0.10%)</title><rect x="90.1" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (104,993,205 samples, 0.40%)</title><rect x="90.1" y="853" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="93.07" y="863.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (33,638,641 samples, 0.13%)</title><rect x="1044.3" y="517" width="1.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1047.32" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,271,110 samples, 0.10%)</title><rect x="35.5" y="661" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="38.54" y="671.5" ></text>
</g>
<g >
<title>Py_InitializeFromConfig (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="901" width="5.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1164.53" y="911.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (34,125,612 samples, 0.13%)</title><rect x="1118.3" y="597" width="1.6" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1121.32" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,642,068 samples, 0.13%)</title><rect x="227.1" y="453" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="230.11" y="463.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (33,841,371 samples, 0.13%)</title><rect x="225.6" y="645" width="1.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="228.57" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (134,911,879 samples, 0.52%)</title><rect x="194.2" y="789" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.23" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,699,665 samples, 0.13%)</title><rect x="22.8" y="965" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="25.79" y="975.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5,076,349 samples, 0.02%)</title><rect x="623.6" y="901" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="626.59" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (128,061,219 samples, 0.49%)</title><rect x="98.5" y="805" width="5.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,813 samples, 0.10%)</title><rect x="103.2" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.18" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,178,164 samples, 0.10%)</title><rect x="91.3" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.27" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (33,915,462 samples, 0.13%)</title><rect x="152.7" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.71" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,542,568 samples, 0.20%)</title><rect x="137.7" y="757" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="140.71" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (128,061,219 samples, 0.49%)</title><rect x="98.5" y="837" width="5.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.54" y="847.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,470,669 samples, 0.10%)</title><rect x="104.4" y="453" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.37" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,213,738 samples, 0.10%)</title><rect x="232.2" y="389" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="235.21" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (251,854,636 samples, 0.97%)</title><rect x="180.0" y="725" width="11.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="183.04" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (30,467,069 samples, 0.12%)</title><rect x="33.0" y="389" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="35.96" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (78,647,213 samples, 0.30%)</title><rect x="29.4" y="645" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,372,878 samples, 0.10%)</title><rect x="160.5" y="613" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="163.54" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,639 samples, 0.10%)</title><rect x="76.2" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.21" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,002,791 samples, 0.13%)</title><rect x="136.2" y="341" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="139.16" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (101,846,406 samples, 0.39%)</title><rect x="98.5" y="581" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (188,843,341 samples, 0.73%)</title><rect x="210.8" y="709" width="8.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="213.82" y="719.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (30,467,069 samples, 0.12%)</title><rect x="33.0" y="405" width="1.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="35.96" y="415.5" ></text>
</g>
<g >
<title>do_anonymous_page (26,216,620 samples, 0.10%)</title><rect x="63.1" y="181" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="66.06" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (26,294,972 samples, 0.10%)</title><rect x="185.2" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.17" y="255.5" ></text>
</g>
<g >
<title>PyObject_Malloc (34,059,701 samples, 0.13%)</title><rect x="207.7" y="389" width="1.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="210.72" y="399.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (34,125,612 samples, 0.13%)</title><rect x="1118.3" y="549" width="1.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1121.32" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,106,661 samples, 0.10%)</title><rect x="36.7" y="405" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.73" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (106,232,596 samples, 0.41%)</title><rect x="81.3" y="757" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.33" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (52,430,203 samples, 0.20%)</title><rect x="59.5" y="341" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.48" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (78,647,213 samples, 0.30%)</title><rect x="29.4" y="597" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="607.5" ></text>
</g>
<g >
<title>do_user_addr_fault (33,620,864 samples, 0.13%)</title><rect x="156.6" y="85" width="1.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="159.64" y="95.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,729 samples, 0.10%)</title><rect x="240.0" y="661" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="243.02" y="671.5" ></text>
</g>
<g >
<title>__handle_mm_fault (26,216,620 samples, 0.10%)</title><rect x="63.1" y="197" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="66.06" y="207.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,106,661 samples, 0.10%)</title><rect x="36.7" y="533" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.73" y="543.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (5,903,177 samples, 0.02%)</title><rect x="246.6" y="821" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="249.59" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (56,572,626 samples, 0.22%)</title><rect x="33.0" y="421" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.96" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,216,620 samples, 0.10%)</title><rect x="63.1" y="629" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="66.06" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (104,993,205 samples, 0.40%)</title><rect x="90.1" y="789" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (32,642,068 samples, 0.13%)</title><rect x="227.1" y="325" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="789" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,296 samples, 0.10%)</title><rect x="210.8" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (104,993,205 samples, 0.40%)</title><rect x="90.1" y="821" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="93.07" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,680 samples, 0.10%)</title><rect x="151.5" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.51" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (101,516,537 samples, 0.39%)</title><rect x="222.5" y="805" width="4.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="225.50" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (250,980,516 samples, 0.97%)</title><rect x="140.1" y="389" width="11.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="143.10" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,372,878 samples, 0.10%)</title><rect x="160.5" y="757" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="163.54" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (33,321,038 samples, 0.13%)</title><rect x="44.0" y="421" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (182,315,270 samples, 0.70%)</title><rect x="63.1" y="645" width="8.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="66.06" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (34,002,791 samples, 0.13%)</title><rect x="136.2" y="645" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.16" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,296 samples, 0.10%)</title><rect x="210.8" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,470,669 samples, 0.10%)</title><rect x="104.4" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.37" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (726,254,566 samples, 2.80%)</title><rect x="200.4" y="917" width="33.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="927.5" >[p..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (81,243,819 samples, 0.31%)</title><rect x="94.8" y="821" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.85" y="831.5" ></text>
</g>
<g >
<title>[anon] (159,669,896 samples, 0.62%)</title><rect x="18.5" y="981" width="7.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="21.55" y="991.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (68,127,238 samples, 0.26%)</title><rect x="207.7" y="565" width="3.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="210.72" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (58,106,080 samples, 0.22%)</title><rect x="237.4" y="661" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="240.38" y="671.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (104,051,402 samples, 0.40%)</title><rect x="168.9" y="149" width="4.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="171.88" y="159.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,216,620 samples, 0.10%)</title><rect x="63.1" y="501" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="66.06" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (104,993,205 samples, 0.40%)</title><rect x="90.1" y="901" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,299,537 samples, 0.10%)</title><rect x="214.4" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.41" y="255.5" ></text>
</g>
<g >
<title>path_openat (26,214,717 samples, 0.10%)</title><rect x="213.2" y="133" width="1.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="216.21" y="143.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,321,038 samples, 0.13%)</title><rect x="44.0" y="357" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="46.96" y="367.5" ></text>
</g>
<g >
<title>do_page_fault (32,561,945 samples, 0.13%)</title><rect x="39.4" y="261" width="1.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="42.41" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (821,751,376 samples, 3.17%)</title><rect x="44.0" y="837" width="37.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.96" y="847.5" >_Py..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,211,838 samples, 0.10%)</title><rect x="150.3" y="277" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="153.32" y="287.5" ></text>
</g>
<g >
<title>double_multiply (33,660,553 samples, 0.13%)</title><rect x="660.3" y="789" width="1.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="663.31" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="757" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1164.53" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (52,595,757 samples, 0.20%)</title><rect x="92.5" y="357" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.46" y="367.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,213,477 samples, 0.10%)</title><rect x="133.8" y="485" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="136.78" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (52,542,568 samples, 0.20%)</title><rect x="137.7" y="645" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,866 samples, 0.10%)</title><rect x="110.7" y="293" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="113.68" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (34,046,671 samples, 0.13%)</title><rect x="1119.9" y="597" width="1.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1122.87" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (342,869,059 samples, 1.32%)</title><rect x="111.9" y="565" width="15.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.88" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,193 samples, 0.10%)</title><rect x="127.5" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (78,773,921 samples, 0.30%)</title><rect x="91.3" y="517" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.27" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (68,037,615 samples, 0.26%)</title><rect x="1136.9" y="517" width="3.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1139.89" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (86,133,506 samples, 0.33%)</title><rect x="108.0" y="741" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.96" y="751.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (25,875,311 samples, 0.10%)</title><rect x="159.4" y="805" width="1.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="162.37" y="815.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (101,965,174 samples, 0.39%)</title><rect x="1087.4" y="437" width="4.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1090.41" y="447.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (26,216,620 samples, 0.10%)</title><rect x="63.1" y="133" width="1.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="66.06" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,479 samples, 0.10%)</title><rect x="231.0" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.01" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;float, unsigned long&gt; &gt; (34,042,117 samples, 0.13%)</title><rect x="1155.4" y="581" width="1.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1158.42" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,674 samples, 0.10%)</title><rect x="158.2" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.17" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (72,894,303 samples, 0.28%)</title><rect x="657.0" y="677" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="659.99" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,214,274 samples, 0.10%)</title><rect x="28.2" y="549" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.19" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,470,669 samples, 0.10%)</title><rect x="104.4" y="389" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.37" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (65,321,839 samples, 0.25%)</title><rect x="37.9" y="805" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (72,894,303 samples, 0.28%)</title><rect x="657.0" y="789" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="659.99" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (34,059,701 samples, 0.13%)</title><rect x="207.7" y="501" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.72" y="511.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,059,701 samples, 0.13%)</title><rect x="207.7" y="277" width="1.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="210.72" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (29,065,627 samples, 0.11%)</title><rect x="167.6" y="277" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.55" y="287.5" ></text>
</g>
<g >
<title>vfs_statx (32,793,665 samples, 0.13%)</title><rect x="124.8" y="213" width="1.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="127.79" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (67,877,904 samples, 0.26%)</title><rect x="1144.6" y="517" width="3.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1147.61" y="527.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,430,158 samples, 0.20%)</title><rect x="77.4" y="709" width="2.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="80.40" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,620 samples, 0.10%)</title><rect x="63.1" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,445,412 samples, 0.20%)</title><rect x="127.5" y="725" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.47" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (145,693,923 samples, 0.56%)</title><rect x="233.4" y="901" width="6.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="236.40" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (33,712,837 samples, 0.13%)</title><rect x="108.0" y="389" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.96" y="399.5" ></text>
</g>
<g >
<title>do_page_fault (135,689,289 samples, 0.52%)</title><rect x="794.7" y="389" width="6.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="797.74" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,334 samples, 0.10%)</title><rect x="191.5" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.49" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (29,065,627 samples, 0.11%)</title><rect x="167.6" y="261" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.55" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,589,208 samples, 0.13%)</title><rect x="164.8" y="645" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.83" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,477 samples, 0.10%)</title><rect x="133.8" y="341" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="136.78" y="351.5" ></text>
</g>
<g >
<title>page_fault (34,023,571 samples, 0.13%)</title><rect x="163.3" y="901" width="1.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="166.29" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (58,106,080 samples, 0.22%)</title><rect x="237.4" y="693" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="240.38" y="703.5" ></text>
</g>
<g >
<title>PySequence_Tuple (33,897,814 samples, 0.13%)</title><rect x="221.0" y="805" width="1.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="223.95" y="815.5" ></text>
</g>
<g >
<title>__dlopen (33,620,864 samples, 0.13%)</title><rect x="156.6" y="309" width="1.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="159.64" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,230,639 samples, 0.10%)</title><rect x="76.2" y="453" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="79.21" y="463.5" ></text>
</g>
<g >
<title>page_fault (254,540,690 samples, 0.98%)</title><rect x="1178.4" y="981" width="11.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1181.42" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="213" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (26,216,620 samples, 0.10%)</title><rect x="63.1" y="213" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="66.06" y="223.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,682,634 samples, 0.20%)</title><rect x="104.4" y="645" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.37" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,453,705 samples, 0.10%)</title><rect x="212.0" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.01" y="447.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (34,022,617 samples, 0.13%)</title><rect x="186.4" y="293" width="1.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="189.37" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (33,897,814 samples, 0.13%)</title><rect x="221.0" y="661" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="223.95" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (134,911,879 samples, 0.52%)</title><rect x="194.2" y="613" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.23" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (781,206,718 samples, 3.01%)</title><rect x="164.8" y="933" width="35.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="943.5" >[py..</text>
</g>
<g >
<title>[python3.12] (33,321,038 samples, 0.13%)</title><rect x="44.0" y="437" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (106,232,596 samples, 0.41%)</title><rect x="81.3" y="725" width="4.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="84.33" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,470,669 samples, 0.10%)</title><rect x="104.4" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.37" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (58,106,080 samples, 0.22%)</title><rect x="237.4" y="501" width="2.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="240.38" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (27,772,594 samples, 0.11%)</title><rect x="97.3" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.28" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,106,661 samples, 0.10%)</title><rect x="36.7" y="885" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="39.73" y="895.5" ></text>
</g>
<g >
<title>page_fault (34,060,297 samples, 0.13%)</title><rect x="676.6" y="357" width="1.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="679.60" y="367.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (32,793,665 samples, 0.13%)</title><rect x="124.8" y="101" width="1.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="127.79" y="111.5" ></text>
</g>
<g >
<title>[python3.12] (188,843,341 samples, 0.73%)</title><rect x="210.8" y="805" width="8.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,652 samples, 0.10%)</title><rect x="50.0" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.99" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="469" width="5.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1164.53" y="479.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::verify_heap (68,125,050 samples, 0.26%)</title><rect x="1059.6" y="501" width="3.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1062.64" y="511.5" ></text>
</g>
<g >
<title>PyObject_Malloc (34,060,297 samples, 0.13%)</title><rect x="676.6" y="405" width="1.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="679.60" y="415.5" ></text>
</g>
<g >
<title>do_page_fault (26,205,687 samples, 0.10%)</title><rect x="166.4" y="277" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="169.36" y="287.5" ></text>
</g>
<g >
<title>_PyObject_Call (87,587,843 samples, 0.34%)</title><rect x="233.4" y="805" width="4.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="236.40" y="815.5" ></text>
</g>
<g >
<title>page_evictable (26,216,620 samples, 0.10%)</title><rect x="63.1" y="101" width="1.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="66.06" y="111.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (78,788,462 samples, 0.30%)</title><rect x="196.8" y="549" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.78" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,813 samples, 0.10%)</title><rect x="103.2" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.18" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,738 samples, 0.10%)</title><rect x="232.2" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="235.21" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,296 samples, 0.10%)</title><rect x="210.8" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="255.5" ></text>
</g>
<g >
<title>do_page_fault (26,216,620 samples, 0.10%)</title><rect x="63.1" y="261" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="66.06" y="271.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,216,047 samples, 0.10%)</title><rect x="61.9" y="293" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="64.87" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,008 samples, 0.10%)</title><rect x="59.5" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.48" y="319.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (67,494,245 samples, 0.26%)</title><rect x="1055.0" y="517" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1058.02" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,219 samples, 0.10%)</title><rect x="128.7" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.66" y="591.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,227,014 samples, 0.10%)</title><rect x="126.3" y="437" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="129.28" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (106,882,167 samples, 0.41%)</title><rect x="71.4" y="485" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.35" y="495.5" ></text>
</g>
<g >
<title>_PyObject_NewVar (32,561,945 samples, 0.13%)</title><rect x="39.4" y="309" width="1.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="42.41" y="319.5" ></text>
</g>
<g >
<title>_int_free (30,798,276 samples, 0.12%)</title><rect x="58.1" y="277" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="61.08" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_allocate (34,104,407 samples, 0.13%)</title><rect x="1135.3" y="565" width="1.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1138.34" y="575.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,193 samples, 0.10%)</title><rect x="127.5" y="373" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="130.47" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,759,894 samples, 0.13%)</title><rect x="37.9" y="661" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="40.92" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (33,841,371 samples, 0.13%)</title><rect x="225.6" y="629" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="228.57" y="639.5" ></text>
</g>
<g >
<title>sync_regs (33,589,208 samples, 0.13%)</title><rect x="164.8" y="293" width="1.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="167.83" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,453,705 samples, 0.10%)</title><rect x="212.0" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.01" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,212,417 samples, 0.10%)</title><rect x="82.6" y="421" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.59" y="431.5" ></text>
</g>
<g >
<title>__do_page_fault (26,205,687 samples, 0.10%)</title><rect x="166.4" y="261" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="169.36" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (29,065,627 samples, 0.11%)</title><rect x="167.6" y="213" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="170.55" y="223.5" ></text>
</g>
<g >
<title>_PyObject_Call (105,525,503 samples, 0.41%)</title><rect x="228.6" y="629" width="4.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="231.60" y="639.5" ></text>
</g>
<g >
<title>checked_request2size (34,104,407 samples, 0.13%)</title><rect x="1135.3" y="485" width="1.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1138.34" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,239,491 samples, 0.10%)</title><rect x="199.2" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.17" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (133,112,806 samples, 0.51%)</title><rect x="71.4" y="565" width="6.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.35" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,712,837 samples, 0.13%)</title><rect x="108.0" y="373" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="110.96" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (35,686,722 samples, 0.14%)</title><rect x="64.3" y="341" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.25" y="351.5" ></text>
</g>
<g >
<title>PyNumber_Remainder (26,210,174 samples, 0.10%)</title><rect x="85.0" y="357" width="1.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="87.97" y="367.5" ></text>
</g>
<g >
<title>smp_call_function_many (5,903,177 samples, 0.02%)</title><rect x="246.6" y="773" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="249.59" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,193 samples, 0.10%)</title><rect x="127.5" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="591.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (33,939,472 samples, 0.13%)</title><rect x="1025.8" y="565" width="1.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1028.76" y="575.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,232,219 samples, 0.10%)</title><rect x="128.7" y="357" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="131.66" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,889,025 samples, 0.10%)</title><rect x="228.6" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.60" y="399.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,965 samples, 0.10%)</title><rect x="105.6" y="405" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="108.57" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (33,900,707 samples, 0.13%)</title><rect x="79.8" y="565" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.79" y="575.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,216,729 samples, 0.10%)</title><rect x="240.0" y="645" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="243.02" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (106,232,596 samples, 0.41%)</title><rect x="81.3" y="741" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.33" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (34,014,393 samples, 0.13%)</title><rect x="233.4" y="565" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (300,649,156 samples, 1.16%)</title><rect x="166.4" y="693" width="13.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="169.36" y="703.5" ></text>
</g>
<g >
<title>generic_file_read_iter (32,378,744 samples, 0.12%)</title><rect x="111.9" y="101" width="1.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="114.88" y="111.5" ></text>
</g>
<g >
<title>[python3.12] (33,848,482 samples, 0.13%)</title><rect x="200.4" y="549" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="559.5" ></text>
</g>
<g >
<title>PyArray_ToList (67,990,178 samples, 0.26%)</title><rect x="67.1" y="261" width="3.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="70.07" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,106,661 samples, 0.10%)</title><rect x="36.7" y="709" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="39.73" y="719.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (26,182,305 samples, 0.10%)</title><rect x="184.0" y="133" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="186.98" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (135,414,351 samples, 0.52%)</title><rect x="221.0" y="821" width="6.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="223.95" y="831.5" ></text>
</g>
<g >
<title>PyArray_AssignRawScalar (67,411,753 samples, 0.26%)</title><rect x="40.9" y="757" width="3.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="43.89" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (105,525,503 samples, 0.41%)</title><rect x="228.6" y="645" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="231.60" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,647,213 samples, 0.30%)</title><rect x="29.4" y="501" width="3.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="32.39" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,813 samples, 0.10%)</title><rect x="103.2" y="533" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.18" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (86,437,906 samples, 0.33%)</title><rect x="186.4" y="357" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.37" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (33,876,457 samples, 0.13%)</title><rect x="1084.3" y="469" width="1.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1087.33" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,216,729 samples, 0.10%)</title><rect x="240.0" y="693" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="243.02" y="703.5" ></text>
</g>
<g >
<title>unmap_vmas (133,615,269 samples, 0.52%)</title><rect x="1172.3" y="869" width="6.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1175.33" y="879.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,213,193 samples, 0.10%)</title><rect x="127.5" y="453" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="130.47" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (150,812,745 samples, 0.58%)</title><rect x="1171.6" y="965" width="6.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1174.56" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,875,311 samples, 0.10%)</title><rect x="159.4" y="437" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="162.37" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (56,123,417 samples, 0.22%)</title><rect x="194.2" y="533" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.23" y="543.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (33,841,371 samples, 0.13%)</title><rect x="225.6" y="741" width="1.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="228.57" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,682,634 samples, 0.20%)</title><rect x="104.4" y="565" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.37" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,687 samples, 0.10%)</title><rect x="166.4" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.36" y="479.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5,076,349 samples, 0.02%)</title><rect x="623.6" y="917" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="626.59" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (33,944,347 samples, 0.13%)</title><rect x="100.1" y="245" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.09" y="255.5" ></text>
</g>
<g >
<title>change_protection_range (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="677" width="1.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1169.94" y="687.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long*&gt;::allocator&lt;unsigned long&gt; (33,555,776 samples, 0.13%)</title><rect x="1129.2" y="517" width="1.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1132.16" y="527.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (33,811,863 samples, 0.13%)</title><rect x="1041.2" y="517" width="1.6" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1044.24" y="527.5" ></text>
</g>
<g >
<title>llvm::Function::dropAllReferences (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="853" width="1.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1169.94" y="863.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,064,534 samples, 0.13%)</title><rect x="1018.1" y="581" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1021.06" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::push_back (237,930,967 samples, 0.92%)</title><rect x="1133.8" y="597" width="10.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1136.79" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,255,374 samples, 0.10%)</title><rect x="86.2" y="277" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="89.16" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,248 samples, 0.10%)</title><rect x="135.0" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.97" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,717 samples, 0.10%)</title><rect x="213.2" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.21" y="271.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,211,965 samples, 0.10%)</title><rect x="105.6" y="421" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="108.57" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (34,060,297 samples, 0.13%)</title><rect x="676.6" y="389" width="1.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="679.60" y="399.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (5,903,177 samples, 0.02%)</title><rect x="246.6" y="805" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="249.59" y="815.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,214,274 samples, 0.10%)</title><rect x="28.2" y="853" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.19" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (104,711,912 samples, 0.40%)</title><rect x="81.4" y="629" width="4.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="84.40" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (87,587,843 samples, 0.34%)</title><rect x="233.4" y="757" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="767.5" ></text>
</g>
<g >
<title>search_binary_handler (16,774,674 samples, 0.06%)</title><rect x="1171.6" y="917" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1174.56" y="927.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (33,974,914 samples, 0.13%)</title><rect x="1030.4" y="597" width="1.5" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1033.40" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator= (34,034,341 samples, 0.13%)</title><rect x="1132.2" y="597" width="1.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1135.24" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (32,759,894 samples, 0.13%)</title><rect x="37.9" y="421" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (58,106,080 samples, 0.22%)</title><rect x="237.4" y="549" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="240.38" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (87,587,843 samples, 0.34%)</title><rect x="233.4" y="709" width="4.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="236.40" y="719.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (274,443,469 samples, 1.06%)</title><rect x="167.6" y="437" width="12.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="170.55" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,372,878 samples, 0.10%)</title><rect x="160.5" y="677" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="163.54" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (78,646,250 samples, 0.30%)</title><rect x="59.5" y="437" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.48" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (423,593,188 samples, 1.63%)</title><rect x="140.1" y="757" width="19.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.10" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (136,176,340 samples, 0.52%)</title><rect x="213.2" y="565" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.21" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (54,955,410 samples, 0.21%)</title><rect x="176.0" y="373" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.99" y="383.5" ></text>
</g>
<g >
<title>page_fault (26,205,687 samples, 0.10%)</title><rect x="166.4" y="293" width="1.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="169.36" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="229" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="239.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (134,911,879 samples, 0.52%)</title><rect x="194.2" y="597" width="6.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="197.23" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,620,864 samples, 0.13%)</title><rect x="156.6" y="437" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="159.64" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (58,106,080 samples, 0.22%)</title><rect x="237.4" y="485" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="240.38" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,542,568 samples, 0.20%)</title><rect x="137.7" y="485" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="140.71" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,213,296 samples, 0.10%)</title><rect x="210.8" y="517" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="213.82" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,195 samples, 0.10%)</title><rect x="60.7" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.67" y="303.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,216,479 samples, 0.10%)</title><rect x="231.0" y="261" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="234.01" y="271.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,271,110 samples, 0.10%)</title><rect x="35.5" y="709" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.54" y="719.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,239,491 samples, 0.10%)</title><rect x="199.2" y="277" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="202.17" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,239 samples, 0.10%)</title><rect x="94.8" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (109,407,846 samples, 0.42%)</title><rect x="54.5" y="389" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.50" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,219 samples, 0.10%)</title><rect x="128.7" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.66" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,493,181 samples, 0.13%)</title><rect x="140.1" y="293" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.10" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,773,921 samples, 0.30%)</title><rect x="91.3" y="501" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="94.27" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,729 samples, 0.10%)</title><rect x="240.0" y="885" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="243.02" y="895.5" ></text>
</g>
<g >
<title>__do_page_fault (33,620,864 samples, 0.13%)</title><rect x="156.6" y="101" width="1.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="159.64" y="111.5" ></text>
</g>
<g >
<title>_PyObject_Call (56,572,626 samples, 0.22%)</title><rect x="33.0" y="485" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.96" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (53,471,225 samples, 0.21%)</title><rect x="94.8" y="757" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="97.85" y="767.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,462,306 samples, 0.20%)</title><rect x="131.4" y="485" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="134.39" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (33,589,208 samples, 0.13%)</title><rect x="164.8" y="517" width="1.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="167.83" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,232,219 samples, 0.10%)</title><rect x="128.7" y="629" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.66" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,213,296 samples, 0.10%)</title><rect x="210.8" y="549" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="213.82" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (34,054,352 samples, 0.13%)</title><rect x="17.0" y="965" width="1.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="20.00" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (423,593,188 samples, 1.63%)</title><rect x="140.1" y="693" width="19.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.10" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (195,992,634 samples, 0.76%)</title><rect x="201.9" y="581" width="8.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="204.91" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,224,456 samples, 0.10%)</title><rect x="132.6" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.59" y="303.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,632 samples, 0.10%)</title><rect x="234.9" y="357" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="237.94" y="367.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,620,864 samples, 0.13%)</title><rect x="156.6" y="357" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="159.64" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (56,572,626 samples, 0.22%)</title><rect x="33.0" y="741" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="35.96" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (726,254,566 samples, 2.80%)</title><rect x="200.4" y="901" width="33.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="911.5" >[p..</text>
</g>
<g >
<title>__x64_sys_openat (26,214,717 samples, 0.10%)</title><rect x="213.2" y="181" width="1.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="216.21" y="191.5" ></text>
</g>
<g >
<title>llvm::Module::dropAllReferences (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="869" width="1.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1169.94" y="879.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (138,892,822 samples, 0.54%)</title><rect x="131.4" y="693" width="6.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="134.39" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,213,193 samples, 0.10%)</title><rect x="127.5" y="693" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="130.47" y="703.5" ></text>
</g>
<g >
<title>find_vma (33,961,963 samples, 0.13%)</title><rect x="963.1" y="325" width="1.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="966.11" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,803 samples, 0.10%)</title><rect x="109.5" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.49" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (78,773,921 samples, 0.30%)</title><rect x="91.3" y="725" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.27" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,759,894 samples, 0.13%)</title><rect x="37.9" y="613" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="40.92" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,542,568 samples, 0.20%)</title><rect x="137.7" y="629" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="140.71" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,813 samples, 0.10%)</title><rect x="103.2" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.18" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,542,568 samples, 0.20%)</title><rect x="137.7" y="405" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.71" y="415.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (26,216,620 samples, 0.10%)</title><rect x="63.1" y="325" width="1.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="66.06" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,213,738 samples, 0.10%)</title><rect x="232.2" y="485" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="235.21" y="495.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,067,537 samples, 0.13%)</title><rect x="209.3" y="421" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="212.27" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (52,542,568 samples, 0.20%)</title><rect x="137.7" y="549" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (101,846,406 samples, 0.39%)</title><rect x="98.5" y="533" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="101.54" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (32,378,744 samples, 0.12%)</title><rect x="111.9" y="213" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="114.88" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (284,263,301 samples, 1.10%)</title><rect x="113.3" y="421" width="13.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.35" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,106,661 samples, 0.10%)</title><rect x="36.7" y="757" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="39.73" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,632 samples, 0.10%)</title><rect x="234.9" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.94" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (65,321,839 samples, 0.25%)</title><rect x="37.9" y="933" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="943.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (109,407,846 samples, 0.42%)</title><rect x="54.5" y="373" width="5.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="57.50" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,232,219 samples, 0.10%)</title><rect x="128.7" y="613" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="131.66" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,379 samples, 0.10%)</title><rect x="31.8" y="261" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="34.77" y="271.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,206,261 samples, 0.10%)</title><rect x="229.8" y="325" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="232.82" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,652 samples, 0.10%)</title><rect x="50.0" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.99" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (32,642,068 samples, 0.13%)</title><rect x="227.1" y="389" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (112,378,838 samples, 0.43%)</title><rect x="106.8" y="869" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="109.76" y="879.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,245,332 samples, 0.10%)</title><rect x="106.8" y="469" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="109.76" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (67,983,303 samples, 0.26%)</title><rect x="161.7" y="949" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.74" y="959.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (5,903,177 samples, 0.02%)</title><rect x="246.6" y="837" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="249.59" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,385,368 samples, 0.10%)</title><rect x="92.5" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.46" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (138,167,571 samples, 0.53%)</title><rect x="227.1" y="837" width="6.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="230.11" y="847.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (33,620,864 samples, 0.13%)</title><rect x="156.6" y="213" width="1.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="159.64" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,813 samples, 0.10%)</title><rect x="103.2" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.18" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (182,315,270 samples, 0.70%)</title><rect x="63.1" y="661" width="8.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="66.06" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,965 samples, 0.10%)</title><rect x="105.6" y="229" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="108.57" y="239.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,232,219 samples, 0.10%)</title><rect x="128.7" y="469" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="131.66" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (136,176,340 samples, 0.52%)</title><rect x="213.2" y="469" width="6.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="216.21" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (504,421,756 samples, 1.94%)</title><rect x="964.7" y="325" width="22.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="967.65" y="335.5" >h..</text>
</g>
<g >
<title>[python3.12] (106,882,167 samples, 0.41%)</title><rect x="71.4" y="421" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.35" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (646,294,839 samples, 2.49%)</title><rect x="164.8" y="885" width="29.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.83" y="895.5" >_P..</text>
</g>
<g >
<title>PyEval_EvalCode (32,642,068 samples, 0.13%)</title><rect x="227.1" y="469" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="230.11" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (56,572,626 samples, 0.22%)</title><rect x="33.0" y="469" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="35.96" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (52,431,834 samples, 0.20%)</title><rect x="29.4" y="261" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (33,900,707 samples, 0.13%)</title><rect x="79.8" y="725" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.79" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,372,878 samples, 0.10%)</title><rect x="160.5" y="293" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="163.54" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,106,661 samples, 0.10%)</title><rect x="36.7" y="821" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.73" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (99,367,535 samples, 0.38%)</title><rect x="45.5" y="373" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.47" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (7,934,037,009 samples, 30.58%)</title><rect x="661.8" y="757" width="360.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="664.84" y="767.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>[python3.12] (88,904,846 samples, 0.34%)</title><rect x="176.0" y="389" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.99" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,926 samples, 0.10%)</title><rect x="70.2" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.16" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,470,669 samples, 0.10%)</title><rect x="104.4" y="341" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="107.37" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (32,642,068 samples, 0.13%)</title><rect x="227.1" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="495.5" ></text>
</g>
<g >
<title>_int_free (32,656,545 samples, 0.13%)</title><rect x="24.3" y="965" width="1.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="27.33" y="975.5" ></text>
</g>
<g >
<title>PyObject_Malloc (26,213,477 samples, 0.10%)</title><rect x="133.8" y="245" width="1.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="136.78" y="255.5" ></text>
</g>
<g >
<title>PyNumber_Multiply (26,213,296 samples, 0.10%)</title><rect x="210.8" y="277" width="1.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="213.82" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (67,411,753 samples, 0.26%)</title><rect x="40.9" y="837" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.89" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back (33,997,796 samples, 0.13%)</title><rect x="1053.5" y="501" width="1.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1056.47" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="351.5" ></text>
</g>
<g >
<title>_PyCode_New (32,759,894 samples, 0.13%)</title><rect x="37.9" y="357" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="40.92" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="709" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (133,112,806 samples, 0.51%)</title><rect x="71.4" y="661" width="6.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="74.35" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (52,462,306 samples, 0.20%)</title><rect x="131.4" y="437" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.39" y="447.5" ></text>
</g>
<g >
<title>vmacache_find (33,961,963 samples, 0.13%)</title><rect x="963.1" y="309" width="1.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="966.11" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~deque (67,739,456 samples, 0.26%)</title><rect x="1129.2" y="581" width="3.0" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1132.16" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,227,014 samples, 0.10%)</title><rect x="126.3" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.28" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (78,788,462 samples, 0.30%)</title><rect x="196.8" y="517" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.78" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (138,167,571 samples, 0.53%)</title><rect x="227.1" y="725" width="6.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="230.11" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,205,803 samples, 0.10%)</title><rect x="109.5" y="309" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="112.49" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,182,305 samples, 0.10%)</title><rect x="184.0" y="261" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="186.98" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,078,940 samples, 0.10%)</title><rect x="83.8" y="341" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="86.78" y="351.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisUsage (33,772,025 samples, 0.13%)</title><rect x="129.9" y="645" width="1.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="132.86" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,949,436 samples, 0.13%)</title><rect x="178.5" y="341" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="181.49" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (134,911,879 samples, 0.52%)</title><rect x="194.2" y="757" width="6.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="197.23" y="767.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,274 samples, 0.10%)</title><rect x="28.2" y="357" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="31.19" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,211,239 samples, 0.10%)</title><rect x="94.8" y="517" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="97.85" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (56,572,626 samples, 0.22%)</title><rect x="33.0" y="725" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="35.96" y="735.5" ></text>
</g>
<g >
<title>_PyObject_Call (133,112,806 samples, 0.51%)</title><rect x="71.4" y="597" width="6.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="74.35" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (300,649,156 samples, 1.16%)</title><rect x="166.4" y="501" width="13.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.36" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,245,332 samples, 0.10%)</title><rect x="106.8" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,245,332 samples, 0.10%)</title><rect x="106.8" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (104,711,912 samples, 0.40%)</title><rect x="81.4" y="581" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.40" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,687 samples, 0.10%)</title><rect x="166.4" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.36" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (32,642,068 samples, 0.13%)</title><rect x="227.1" y="277" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,711,912 samples, 0.40%)</title><rect x="81.4" y="613" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="84.40" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (6,863,829,578 samples, 26.46%)</title><rect x="676.6" y="469" width="312.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="679.60" y="479.5" >_PyFunction_Vectorcall</text>
</g>
<g >
<title>[python3.12] (52,542,568 samples, 0.20%)</title><rect x="137.7" y="613" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.71" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (104,890,031 samples, 0.40%)</title><rect x="131.4" y="645" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.39" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,381 samples, 0.10%)</title><rect x="81.4" y="341" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="84.40" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (105,766,749 samples, 0.41%)</title><rect x="181.6" y="437" width="4.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="184.56" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (139,206,813 samples, 0.54%)</title><rect x="180.0" y="677" width="6.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="183.04" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,224,456 samples, 0.10%)</title><rect x="132.6" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.59" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,453,705 samples, 0.10%)</title><rect x="212.0" y="533" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="215.01" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (133,112,806 samples, 0.51%)</title><rect x="71.4" y="677" width="6.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.35" y="687.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::dummy_property_map, boost::detail::dummy_pmap_reference, unsigned long, unsigned long&gt; (33,796,347 samples, 0.13%)</title><rect x="1109.1" y="501" width="1.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1112.07" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (52,682,634 samples, 0.20%)</title><rect x="104.4" y="853" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.37" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (56,572,626 samples, 0.22%)</title><rect x="33.0" y="693" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="35.96" y="703.5" ></text>
</g>
<g >
<title>PySequence_Tuple (54,955,410 samples, 0.21%)</title><rect x="176.0" y="357" width="2.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="178.99" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (33,949,436 samples, 0.13%)</title><rect x="178.5" y="261" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.49" y="271.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,900,707 samples, 0.13%)</title><rect x="79.8" y="437" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="82.79" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,195 samples, 0.10%)</title><rect x="60.7" y="325" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="63.67" y="335.5" ></text>
</g>
<g >
<title>InitOperators (46,518,056 samples, 0.18%)</title><rect x="52.4" y="357" width="2.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="55.39" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (315,428,076 samples, 1.22%)</title><rect x="63.1" y="693" width="14.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (34,046,671 samples, 0.13%)</title><rect x="1119.9" y="549" width="1.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1122.87" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (65,321,839 samples, 0.25%)</title><rect x="37.9" y="821" width="3.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="40.92" y="831.5" ></text>
</g>
<g >
<title>do_page_fault (67,990,178 samples, 0.26%)</title><rect x="67.1" y="213" width="3.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="70.07" y="223.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,321,038 samples, 0.13%)</title><rect x="44.0" y="453" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.96" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (187,705,223 samples, 0.72%)</title><rect x="28.2" y="965" width="8.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="31.19" y="975.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,965 samples, 0.10%)</title><rect x="105.6" y="213" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="108.57" y="223.5" ></text>
</g>
<g >
<title>Py_RunMain (26,255,374 samples, 0.10%)</title><rect x="86.2" y="965" width="1.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="89.16" y="975.5" ></text>
</g>
<g >
<title>PyList_Sort (26,211,334 samples, 0.10%)</title><rect x="191.5" y="533" width="1.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="194.49" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (363,770,650 samples, 1.40%)</title><rect x="140.1" y="597" width="16.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="143.10" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (53,471,225 samples, 0.21%)</title><rect x="94.8" y="629" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="97.85" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (342,869,059 samples, 1.32%)</title><rect x="111.9" y="709" width="15.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="719.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (67,877,904 samples, 0.26%)</title><rect x="1144.6" y="565" width="3.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1147.61" y="575.5" ></text>
</g>
<g >
<title>PyObject_Malloc (27,554,181 samples, 0.11%)</title><rect x="675.3" y="485" width="1.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="678.35" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (25,875,311 samples, 0.10%)</title><rect x="159.4" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.37" y="367.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,211,965 samples, 0.10%)</title><rect x="105.6" y="325" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="108.57" y="335.5" ></text>
</g>
<g >
<title>__do_page_fault (67,990,178 samples, 0.26%)</title><rect x="67.1" y="197" width="3.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="70.07" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,193 samples, 0.10%)</title><rect x="127.5" y="645" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.47" y="655.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (26,372,878 samples, 0.10%)</title><rect x="160.5" y="149" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="163.54" y="159.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,417 samples, 0.10%)</title><rect x="82.6" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.59" y="255.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,227,014 samples, 0.10%)</title><rect x="126.3" y="261" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="129.28" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (300,649,156 samples, 1.16%)</title><rect x="166.4" y="629" width="13.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.36" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,385,368 samples, 0.10%)</title><rect x="92.5" y="277" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="95.46" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,620,864 samples, 0.13%)</title><rect x="156.6" y="533" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="159.64" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Deque_base (33,555,776 samples, 0.13%)</title><rect x="1129.2" y="565" width="1.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1132.16" y="575.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,255,374 samples, 0.10%)</title><rect x="86.2" y="661" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="89.16" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (32,561,945 samples, 0.13%)</title><rect x="39.4" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.41" y="383.5" ></text>
</g>
<g >
<title>_PyObject_NewVar (32,759,894 samples, 0.13%)</title><rect x="37.9" y="341" width="1.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="40.92" y="351.5" ></text>
</g>
<g >
<title>_start (11,941,256,794 samples, 46.03%)</title><rect x="625.3" y="981" width="543.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="628.35" y="991.5" >_start</text>
</g>
<g >
<title>[python3.12] (32,642,068 samples, 0.13%)</title><rect x="227.1" y="629" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="639.5" ></text>
</g>
<g >
<title>task_numa_work (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="725" width="1.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1169.94" y="735.5" ></text>
</g>
<g >
<title>__GI___xstat (32,793,665 samples, 0.13%)</title><rect x="124.8" y="293" width="1.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="127.79" y="303.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,445,412 samples, 0.20%)</title><rect x="127.5" y="709" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="130.47" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (7,662,828,843 samples, 29.54%)</title><rect x="668.0" y="613" width="348.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="671.02" y="623.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,213,193 samples, 0.10%)</title><rect x="127.5" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="351.5" ></text>
</g>
<g >
<title>PyArg_ParseTupleAndKeywords (26,215,008 samples, 0.10%)</title><rect x="59.5" y="325" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="62.48" y="335.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (135,693,214 samples, 0.52%)</title><rect x="1072.0" y="517" width="6.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1074.97" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,620 samples, 0.10%)</title><rect x="63.1" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,453,705 samples, 0.10%)</title><rect x="212.0" y="325" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="215.01" y="335.5" ></text>
</g>
<g >
<title>page_fault (34,059,701 samples, 0.13%)</title><rect x="207.7" y="357" width="1.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="210.72" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (79,311,765 samples, 0.31%)</title><rect x="228.6" y="549" width="3.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="231.60" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,245,332 samples, 0.10%)</title><rect x="106.8" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,378,744 samples, 0.12%)</title><rect x="111.9" y="485" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.88" y="495.5" ></text>
</g>
<g >
<title>pagecache_get_page (32,378,744 samples, 0.12%)</title><rect x="111.9" y="69" width="1.4" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="114.88" y="79.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (58,106,080 samples, 0.22%)</title><rect x="237.4" y="853" width="2.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="240.38" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,019,925 samples, 0.23%)</title><rect x="203.4" y="309" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="206.44" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,773,921 samples, 0.30%)</title><rect x="91.3" y="677" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="94.27" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (58,106,080 samples, 0.22%)</title><rect x="237.4" y="869" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="240.38" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (300,649,156 samples, 1.16%)</title><rect x="166.4" y="533" width="13.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.36" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,105,557 samples, 0.10%)</title><rect x="34.3" y="373" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="37.35" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (129,891,724 samples, 0.50%)</title><rect x="64.3" y="405" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="67.25" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (67,411,753 samples, 0.26%)</title><rect x="40.9" y="901" width="3.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="43.89" y="911.5" ></text>
</g>
<g >
<title>_PyObject_Call (726,254,566 samples, 2.80%)</title><rect x="200.4" y="933" width="33.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="203.37" y="943.5" >_P..</text>
</g>
<g >
<title>[python3.12] (52,445,412 samples, 0.20%)</title><rect x="127.5" y="869" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="879.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (293,739,428 samples, 1.13%)</title><rect x="1003.2" y="389" width="13.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1006.19" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (315,428,076 samples, 1.22%)</title><rect x="63.1" y="741" width="14.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="66.06" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (528,383,945 samples, 2.04%)</title><rect x="137.7" y="869" width="24.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.71" y="879.5" >_..</text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="933" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (610,289,739 samples, 2.35%)</title><rect x="988.8" y="485" width="27.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="991.79" y="495.5" >[..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (53,471,225 samples, 0.21%)</title><rect x="94.8" y="661" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="97.85" y="671.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (66,668,354 samples, 0.26%)</title><rect x="1047.4" y="485" width="3.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1050.37" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,453,705 samples, 0.10%)</title><rect x="212.0" y="389" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="215.01" y="399.5" ></text>
</g>
<g >
<title>_int_malloc (33,848,482 samples, 0.13%)</title><rect x="200.4" y="437" width="1.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="203.37" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (136,176,340 samples, 0.52%)</title><rect x="213.2" y="485" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.21" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (138,892,822 samples, 0.54%)</title><rect x="131.4" y="837" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.39" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (112,647,823 samples, 0.43%)</title><rect x="186.4" y="533" width="5.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="189.37" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,528,058 samples, 0.10%)</title><rect x="51.2" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.18" y="351.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,213,477 samples, 0.10%)</title><rect x="133.8" y="325" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="136.78" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (284,263,301 samples, 1.10%)</title><rect x="113.3" y="469" width="13.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.35" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (34,008,987 samples, 0.13%)</title><rect x="1160.0" y="613" width="1.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1162.98" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,372,878 samples, 0.10%)</title><rect x="160.5" y="565" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.54" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (99,367,535 samples, 0.38%)</title><rect x="45.5" y="389" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.47" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (25,875,311 samples, 0.10%)</title><rect x="159.4" y="245" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.37" y="255.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,078,940 samples, 0.10%)</title><rect x="83.8" y="469" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="86.78" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (161,490,949 samples, 0.62%)</title><rect x="29.4" y="853" width="7.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="32.39" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,848 samples, 0.10%)</title><rect x="659.1" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="662.11" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,219 samples, 0.10%)</title><rect x="128.7" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.66" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (187,705,223 samples, 0.72%)</title><rect x="28.2" y="949" width="8.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="31.19" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (67,990,178 samples, 0.26%)</title><rect x="67.1" y="277" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.07" y="287.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (101,965,174 samples, 0.39%)</title><rect x="1087.4" y="469" width="4.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1090.41" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,216,047 samples, 0.10%)</title><rect x="61.9" y="229" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="64.87" y="239.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (67,411,753 samples, 0.26%)</title><rect x="40.9" y="821" width="3.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="43.89" y="831.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,057,586 samples, 0.13%)</title><rect x="206.2" y="389" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="209.17" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,848,482 samples, 0.13%)</title><rect x="200.4" y="597" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,248 samples, 0.10%)</title><rect x="135.0" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.97" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,219 samples, 0.10%)</title><rect x="128.7" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.66" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,274 samples, 0.10%)</title><rect x="28.2" y="325" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="31.19" y="335.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (33,772,025 samples, 0.13%)</title><rect x="129.9" y="933" width="1.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="132.86" y="943.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,321,038 samples, 0.13%)</title><rect x="44.0" y="517" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="46.96" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,248 samples, 0.10%)</title><rect x="135.0" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.97" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,178,164 samples, 0.10%)</title><rect x="91.3" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.27" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (72,894,303 samples, 0.28%)</title><rect x="657.0" y="757" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="659.99" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,479 samples, 0.10%)</title><rect x="231.0" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.01" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,674 samples, 0.10%)</title><rect x="158.2" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.17" y="591.5" ></text>
</g>
<g >
<title>__do_page_fault (34,059,701 samples, 0.13%)</title><rect x="207.7" y="325" width="1.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="210.72" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,067,537 samples, 0.13%)</title><rect x="209.3" y="437" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="212.27" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (32,642,068 samples, 0.13%)</title><rect x="227.1" y="597" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (188,843,341 samples, 0.73%)</title><rect x="210.8" y="821" width="8.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="213.82" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,230,639 samples, 0.10%)</title><rect x="76.2" y="437" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.21" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (25,875,311 samples, 0.10%)</title><rect x="159.4" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.37" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="917" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1164.53" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (134,911,879 samples, 0.52%)</title><rect x="194.2" y="725" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.23" y="735.5" ></text>
</g>
<g >
<title>_PyObject_Call (72,894,303 samples, 0.28%)</title><rect x="657.0" y="533" width="3.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="659.99" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,646,250 samples, 0.30%)</title><rect x="59.5" y="389" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="62.48" y="399.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (54,955,410 samples, 0.21%)</title><rect x="176.0" y="245" width="2.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="178.99" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (53,471,225 samples, 0.21%)</title><rect x="94.8" y="677" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="687.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (52,435,033 samples, 0.20%)</title><rect x="985.2" y="261" width="2.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="988.21" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,580 samples, 0.10%)</title><rect x="147.9" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.94" y="255.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (26,106,661 samples, 0.10%)</title><rect x="36.7" y="949" width="1.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="39.73" y="959.5" ></text>
</g>
<g >
<title>PyGC_Collect (99,449,154 samples, 0.38%)</title><rect x="625.3" y="901" width="4.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="628.35" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (65,321,839 samples, 0.25%)</title><rect x="37.9" y="725" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="735.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (26,271,110 samples, 0.10%)</title><rect x="35.5" y="373" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="38.54" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,248 samples, 0.10%)</title><rect x="135.0" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.97" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (109,407,846 samples, 0.42%)</title><rect x="54.5" y="357" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.50" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,255,374 samples, 0.10%)</title><rect x="86.2" y="565" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="89.16" y="575.5" ></text>
</g>
<g >
<title>do_anonymous_page (26,205,687 samples, 0.10%)</title><rect x="166.4" y="197" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="169.36" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,738 samples, 0.10%)</title><rect x="232.2" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="235.21" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (419,992,435 samples, 1.62%)</title><rect x="44.0" y="725" width="19.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="757" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,255,374 samples, 0.10%)</title><rect x="86.2" y="677" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="89.16" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="421" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,591,189 samples, 0.13%)</title><rect x="655.5" y="853" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="658.46" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,866 samples, 0.10%)</title><rect x="110.7" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.68" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,729 samples, 0.10%)</title><rect x="240.0" y="805" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="243.02" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (34,002,791 samples, 0.13%)</title><rect x="136.2" y="357" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.16" y="367.5" ></text>
</g>
<g >
<title>__do_page_fault (135,689,289 samples, 0.52%)</title><rect x="794.7" y="373" width="6.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="797.74" y="383.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,321,038 samples, 0.13%)</title><rect x="44.0" y="325" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="46.96" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (363,770,650 samples, 1.40%)</title><rect x="140.1" y="581" width="16.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.10" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,900,707 samples, 0.13%)</title><rect x="79.8" y="517" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.79" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (316,642,045 samples, 1.22%)</title><rect x="111.9" y="549" width="14.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="114.88" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (112,647,823 samples, 0.43%)</title><rect x="186.4" y="549" width="5.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="189.37" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,216,729 samples, 0.10%)</title><rect x="240.0" y="773" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="243.02" y="783.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (133,112,806 samples, 0.51%)</title><rect x="71.4" y="549" width="6.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="74.35" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,216,479 samples, 0.10%)</title><rect x="231.0" y="229" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="234.01" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (128,061,219 samples, 0.49%)</title><rect x="98.5" y="789" width="5.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="799.5" ></text>
</g>
<g >
<title>_int_malloc (33,995,910 samples, 0.13%)</title><rect x="661.8" y="613" width="1.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="664.84" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,106,661 samples, 0.10%)</title><rect x="36.7" y="693" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.73" y="703.5" ></text>
</g>
<g >
<title>PyObject_Malloc (32,759,894 samples, 0.13%)</title><rect x="37.9" y="325" width="1.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="40.92" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (229,841,116 samples, 0.89%)</title><rect x="200.4" y="725" width="10.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="735.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (33,995,731 samples, 0.13%)</title><rect x="1019.6" y="597" width="1.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1022.61" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,245,332 samples, 0.10%)</title><rect x="106.8" y="597" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="109.76" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,417 samples, 0.10%)</title><rect x="82.6" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.59" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,284 samples, 0.10%)</title><rect x="90.1" y="709" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="719.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (34,059,701 samples, 0.13%)</title><rect x="207.7" y="405" width="1.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="210.72" y="415.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (33,939,472 samples, 0.13%)</title><rect x="1025.8" y="549" width="1.5" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1028.76" y="559.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="773" width="1.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1169.94" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,245,332 samples, 0.10%)</title><rect x="106.8" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,926 samples, 0.10%)</title><rect x="70.2" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.16" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::push_back (33,613,858 samples, 0.13%)</title><rect x="1022.7" y="581" width="1.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1025.70" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,803 samples, 0.10%)</title><rect x="109.5" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.49" y="255.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (27,772,594 samples, 0.11%)</title><rect x="97.3" y="533" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="100.28" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (106,232,596 samples, 0.41%)</title><rect x="81.3" y="853" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.33" y="863.5" ></text>
</g>
<g >
<title>alloc_pages_vma (33,995,910 samples, 0.13%)</title><rect x="661.8" y="485" width="1.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="664.84" y="495.5" ></text>
</g>
<g >
<title>do_page_fault (33,620,864 samples, 0.13%)</title><rect x="156.6" y="117" width="1.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="159.64" y="127.5" ></text>
</g>
<g >
<title>copy_page (33,620,864 samples, 0.13%)</title><rect x="156.6" y="37" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="159.64" y="47.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,652 samples, 0.10%)</title><rect x="50.0" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.99" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (25,875,311 samples, 0.10%)</title><rect x="159.4" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.37" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (7,934,037,009 samples, 30.58%)</title><rect x="661.8" y="773" width="360.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="664.84" y="783.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (32,378,744 samples, 0.12%)</title><rect x="111.9" y="517" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,453,705 samples, 0.10%)</title><rect x="212.0" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.01" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (133,112,806 samples, 0.51%)</title><rect x="71.4" y="645" width="6.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.35" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::construct&lt;std::pair&lt;float const, unsigned long&gt;, std::pair&lt;float, unsigned long&gt; &gt; (34,042,117 samples, 0.13%)</title><rect x="1155.4" y="533" width="1.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1158.42" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (588,086,995 samples, 2.27%)</title><rect x="200.4" y="885" width="26.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="203.37" y="895.5" >P..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (128,061,219 samples, 0.49%)</title><rect x="98.5" y="709" width="5.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.54" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (423,593,188 samples, 1.63%)</title><rect x="140.1" y="709" width="19.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.10" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="645" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1164.53" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (33,772,025 samples, 0.13%)</title><rect x="129.9" y="949" width="1.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="132.86" y="959.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (134,911,879 samples, 0.52%)</title><rect x="194.2" y="773" width="6.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="197.23" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,470,669 samples, 0.10%)</title><rect x="104.4" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.37" y="335.5" ></text>
</g>
<g >
<title>__do_page_fault (34,023,571 samples, 0.13%)</title><rect x="163.3" y="869" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="166.29" y="879.5" ></text>
</g>
<g >
<title>_PyCodec_Lookup (33,897,814 samples, 0.13%)</title><rect x="221.0" y="613" width="1.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="223.95" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (33,712,837 samples, 0.13%)</title><rect x="108.0" y="309" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.96" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,245,332 samples, 0.10%)</title><rect x="106.8" y="757" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="767.5" ></text>
</g>
<g >
<title>ksys_read (26,212,519 samples, 0.10%)</title><rect x="149.1" y="165" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="152.13" y="175.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,430,158 samples, 0.20%)</title><rect x="77.4" y="661" width="2.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="80.40" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,239 samples, 0.10%)</title><rect x="94.8" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="399.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (34,237,141 samples, 0.13%)</title><rect x="799.4" y="261" width="1.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="802.36" y="271.5" ></text>
</g>
<g >
<title>_PyObject_Call (128,061,219 samples, 0.49%)</title><rect x="98.5" y="693" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="101.54" y="703.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4,287,558 samples, 0.02%)</title><rect x="246.3" y="885" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="249.33" y="895.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (32,561,945 samples, 0.13%)</title><rect x="39.4" y="501" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="42.41" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (419,992,435 samples, 1.62%)</title><rect x="44.0" y="741" width="19.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.96" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (34,002,791 samples, 0.13%)</title><rect x="136.2" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.16" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (138,892,822 samples, 0.54%)</title><rect x="131.4" y="773" width="6.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="134.39" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (32,561,945 samples, 0.13%)</title><rect x="39.4" y="565" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.41" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,479 samples, 0.10%)</title><rect x="231.0" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.01" y="303.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (33,841,371 samples, 0.13%)</title><rect x="225.6" y="597" width="1.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="228.57" y="607.5" ></text>
</g>
<g >
<title>PyObject_Free (66,172,944 samples, 0.26%)</title><rect x="651.0" y="789" width="3.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="653.96" y="799.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,212,417 samples, 0.10%)</title><rect x="82.6" y="293" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="85.59" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (34,002,791 samples, 0.13%)</title><rect x="136.2" y="421" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.16" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,493,181 samples, 0.13%)</title><rect x="140.1" y="277" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.10" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,642,068 samples, 0.13%)</title><rect x="227.1" y="661" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="230.11" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (342,869,059 samples, 1.32%)</title><rect x="111.9" y="693" width="15.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="114.88" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,866 samples, 0.10%)</title><rect x="110.7" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.68" y="271.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (26,889,025 samples, 0.10%)</title><rect x="228.6" y="325" width="1.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="231.60" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (528,383,945 samples, 2.04%)</title><rect x="137.7" y="885" width="24.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="140.71" y="895.5" >_..</text>
</g>
<g >
<title>PyObject_Vectorcall (60,128,142 samples, 0.23%)</title><rect x="151.5" y="421" width="2.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="154.51" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (293,122,691 samples, 1.13%)</title><rect x="98.5" y="949" width="13.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (315,428,076 samples, 1.22%)</title><rect x="63.1" y="709" width="14.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,470,669 samples, 0.10%)</title><rect x="104.4" y="485" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="107.37" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (99,367,535 samples, 0.38%)</title><rect x="45.5" y="405" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.47" y="415.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,334 samples, 0.10%)</title><rect x="191.5" y="597" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="194.49" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (27,772,594 samples, 0.11%)</title><rect x="97.3" y="645" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="100.28" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,216,620 samples, 0.10%)</title><rect x="63.1" y="597" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="66.06" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallFunctionObjArgs (27,259,986 samples, 0.11%)</title><rect x="96.0" y="325" width="1.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="99.04" y="335.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (821,751,376 samples, 3.17%)</title><rect x="44.0" y="853" width="37.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="46.96" y="863.5" >PyE..</text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (33,758,586 samples, 0.13%)</title><rect x="1149.3" y="565" width="1.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1152.25" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,542,568 samples, 0.20%)</title><rect x="137.7" y="453" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="140.71" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (52,430,158 samples, 0.20%)</title><rect x="77.4" y="805" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.40" y="815.5" ></text>
</g>
<g >
<title>alloc_empty_file (26,214,717 samples, 0.10%)</title><rect x="213.2" y="117" width="1.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="216.21" y="127.5" ></text>
</g>
<g >
<title>[python3.12] (32,759,894 samples, 0.13%)</title><rect x="37.9" y="453" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (106,882,167 samples, 0.41%)</title><rect x="71.4" y="501" width="4.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="74.35" y="511.5" ></text>
</g>
<g >
<title>boost::source&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (34,151,053 samples, 0.13%)</title><rect x="1112.2" y="501" width="1.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1115.16" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,105,557 samples, 0.10%)</title><rect x="34.3" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="37.35" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (106,882,167 samples, 0.41%)</title><rect x="71.4" y="389" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.35" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,210,381 samples, 0.10%)</title><rect x="81.4" y="501" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="84.40" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,205,803 samples, 0.10%)</title><rect x="109.5" y="389" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.49" y="399.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,227,014 samples, 0.10%)</title><rect x="126.3" y="309" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="129.28" y="319.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (34,046,671 samples, 0.13%)</title><rect x="1119.9" y="581" width="1.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1122.87" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,917 samples, 0.10%)</title><rect x="190.3" y="293" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="193.30" y="303.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (423,593,188 samples, 1.63%)</title><rect x="140.1" y="629" width="19.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="143.10" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (34,059,701 samples, 0.13%)</title><rect x="207.7" y="469" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.72" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,159,496 samples, 0.10%)</title><rect x="87.4" y="565" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.36" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,372,878 samples, 0.10%)</title><rect x="160.5" y="581" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="163.54" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="463.5" ></text>
</g>
<g >
<title>walk_component (32,793,665 samples, 0.13%)</title><rect x="124.8" y="133" width="1.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="127.79" y="143.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,193 samples, 0.10%)</title><rect x="127.5" y="517" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.47" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (65,321,839 samples, 0.25%)</title><rect x="37.9" y="885" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.92" y="895.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::dispatcher (3,052,279,658 samples, 11.77%)</title><rect x="1022.7" y="773" width="138.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1025.70" y="783.5" >pybind11::cpp_fun..</text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="213" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="223.5" ></text>
</g>
<g >
<title>_PyObject_Call (195,992,634 samples, 0.76%)</title><rect x="201.9" y="645" width="8.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="204.91" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (104,711,912 samples, 0.40%)</title><rect x="81.4" y="549" width="4.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="84.40" y="559.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,227,014 samples, 0.10%)</title><rect x="126.3" y="549" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="129.28" y="559.5" ></text>
</g>
<g >
<title>do_anonymous_page (32,759,894 samples, 0.13%)</title><rect x="37.9" y="213" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="40.92" y="223.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (135,414,351 samples, 0.52%)</title><rect x="221.0" y="853" width="6.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="223.95" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (33,848,482 samples, 0.13%)</title><rect x="200.4" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator- (32,608,546 samples, 0.13%)</title><rect x="1158.5" y="597" width="1.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1161.50" y="607.5" ></text>
</g>
<g >
<title>PyImport_Import (26,159,496 samples, 0.10%)</title><rect x="87.4" y="933" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="90.36" y="943.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,148,828 samples, 0.13%)</title><rect x="1126.1" y="597" width="1.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1129.07" y="607.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;std::pair&lt;float const, unsigned long&gt; &gt;*&amp;, std::_Rb_tree_node_base*&amp;, true&gt; (33,752,545 samples, 0.13%)</title><rect x="1157.0" y="565" width="1.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1159.96" y="575.5" ></text>
</g>
<g >
<title>handle_mm_fault (26,889,025 samples, 0.10%)</title><rect x="228.6" y="229" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="231.60" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (549,934,679 samples, 2.12%)</title><rect x="991.5" y="437" width="25.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="994.53" y="447.5" >_..</text>
</g>
<g >
<title>PyObject_Vectorcall (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="501" width="5.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1164.53" y="511.5" ></text>
</g>
<g >
<title>PyInit__multiarray_umath (46,518,056 samples, 0.18%)</title><rect x="52.4" y="389" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.39" y="399.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (78,647,213 samples, 0.30%)</title><rect x="29.4" y="469" width="3.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="32.39" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (78,788,462 samples, 0.30%)</title><rect x="196.8" y="437" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.78" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (251,854,636 samples, 0.97%)</title><rect x="180.0" y="789" width="11.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="183.04" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (250,980,516 samples, 0.97%)</title><rect x="140.1" y="357" width="11.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.10" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (34,034,341 samples, 0.13%)</title><rect x="1132.2" y="581" width="1.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1135.24" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (112,647,823 samples, 0.43%)</title><rect x="186.4" y="661" width="5.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="189.37" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (109,961,623 samples, 0.42%)</title><rect x="214.4" y="373" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.41" y="383.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (134,911,879 samples, 0.52%)</title><rect x="194.2" y="565" width="6.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="197.23" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (34,057,586 samples, 0.13%)</title><rect x="206.2" y="293" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="209.17" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,661,992 samples, 0.20%)</title><rect x="154.2" y="229" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="157.25" y="239.5" ></text>
</g>
<g >
<title>_PyObject_Call (284,263,301 samples, 1.10%)</title><rect x="113.3" y="453" width="13.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="116.35" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (342,869,059 samples, 1.32%)</title><rect x="111.9" y="869" width="15.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="114.88" y="879.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,216,729 samples, 0.10%)</title><rect x="240.0" y="901" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="243.02" y="911.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (27,772,594 samples, 0.11%)</title><rect x="97.3" y="325" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="100.28" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,106,661 samples, 0.10%)</title><rect x="36.7" y="629" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="39.73" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,900,707 samples, 0.13%)</title><rect x="79.8" y="421" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.79" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (94,077,511 samples, 0.36%)</title><rect x="203.4" y="453" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.44" y="463.5" ></text>
</g>
<g >
<title>operator new (34,104,407 samples, 0.13%)</title><rect x="1135.3" y="517" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1138.34" y="527.5" ></text>
</g>
<g >
<title>PyObject_Malloc (32,561,945 samples, 0.13%)</title><rect x="39.4" y="293" width="1.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="42.41" y="303.5" ></text>
</g>
<g >
<title>release_pages (100,244,031 samples, 0.39%)</title><rect x="1173.8" y="773" width="4.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1176.84" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (101,846,406 samples, 0.39%)</title><rect x="98.5" y="597" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="101.54" y="607.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (87,587,843 samples, 0.34%)</title><rect x="233.4" y="629" width="4.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="236.40" y="639.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,174 samples, 0.10%)</title><rect x="85.0" y="453" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="87.97" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (395,314,471 samples, 1.52%)</title><rect x="111.9" y="949" width="18.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="114.88" y="959.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (112,647,823 samples, 0.43%)</title><rect x="186.4" y="629" width="5.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="189.37" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,243 samples, 0.10%)</title><rect x="173.6" y="197" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.61" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,674 samples, 0.10%)</title><rect x="158.2" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.17" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,321,038 samples, 0.13%)</title><rect x="44.0" y="469" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.96" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,470,669 samples, 0.10%)</title><rect x="104.4" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.37" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (33,900,707 samples, 0.13%)</title><rect x="79.8" y="661" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.79" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,215,195 samples, 0.10%)</title><rect x="60.7" y="277" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="63.67" y="287.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,271,110 samples, 0.10%)</title><rect x="35.5" y="485" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="38.54" y="495.5" ></text>
</g>
<g >
<title>__handle_mm_fault (27,554,181 samples, 0.11%)</title><rect x="675.3" y="357" width="1.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="678.35" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (128,061,219 samples, 0.49%)</title><rect x="98.5" y="773" width="5.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (34,002,791 samples, 0.13%)</title><rect x="136.2" y="565" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.16" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,965 samples, 0.10%)</title><rect x="105.6" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.57" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (182,453,960 samples, 0.70%)</title><rect x="51.2" y="405" width="8.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.18" y="415.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (549,934,679 samples, 2.12%)</title><rect x="991.5" y="469" width="25.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="994.53" y="479.5" >P..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (56,572,626 samples, 0.22%)</title><rect x="33.0" y="501" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.96" y="511.5" ></text>
</g>
<g >
<title>llvm::MCJIT::finalizeObject (33,772,025 samples, 0.13%)</title><rect x="129.9" y="789" width="1.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="132.86" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,192,547 samples, 0.10%)</title><rect x="237.4" y="277" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="240.38" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,014,393 samples, 0.13%)</title><rect x="233.4" y="421" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="236.40" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,340,571 samples, 0.10%)</title><rect x="789.2" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="792.25" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (65,321,839 samples, 0.25%)</title><rect x="37.9" y="901" width="3.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="40.92" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (171,910,652 samples, 0.66%)</title><rect x="233.4" y="949" width="7.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="959.5" ></text>
</g>
<g >
<title>_PyObject_Call (81,243,819 samples, 0.31%)</title><rect x="94.8" y="885" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="97.85" y="895.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,002,791 samples, 0.13%)</title><rect x="136.2" y="549" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="139.16" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,561,945 samples, 0.13%)</title><rect x="39.4" y="581" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.41" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (34,008,987 samples, 0.13%)</title><rect x="1160.0" y="597" width="1.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1162.98" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,632 samples, 0.10%)</title><rect x="234.9" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.94" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (78,647,213 samples, 0.30%)</title><rect x="29.4" y="453" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,445,412 samples, 0.20%)</title><rect x="127.5" y="741" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="130.47" y="751.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,214,632 samples, 0.10%)</title><rect x="234.9" y="421" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="237.94" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,334 samples, 0.10%)</title><rect x="191.5" y="741" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.49" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,219,284 samples, 0.10%)</title><rect x="90.1" y="469" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.07" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,209,917 samples, 0.10%)</title><rect x="190.3" y="373" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="193.30" y="383.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (100,244,031 samples, 0.39%)</title><rect x="1173.8" y="805" width="4.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1176.84" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (112,647,823 samples, 0.43%)</title><rect x="186.4" y="501" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.37" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (104,890,031 samples, 0.40%)</title><rect x="131.4" y="533" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.39" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,773,921 samples, 0.30%)</title><rect x="91.3" y="709" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="94.27" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,682,634 samples, 0.20%)</title><rect x="104.4" y="741" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.37" y="751.5" ></text>
</g>
<g >
<title>do_group_exit (133,615,269 samples, 0.52%)</title><rect x="1172.3" y="933" width="6.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1175.33" y="943.5" ></text>
</g>
<g >
<title>do_page_fault (34,064,534 samples, 0.13%)</title><rect x="1018.1" y="613" width="1.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1021.06" y="623.5" ></text>
</g>
<g >
<title>alloc_pages_vma (101,452,148 samples, 0.39%)</title><rect x="794.7" y="293" width="4.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="797.74" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (105,766,749 samples, 0.41%)</title><rect x="181.6" y="421" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.56" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (52,430,158 samples, 0.20%)</title><rect x="77.4" y="581" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.40" y="591.5" ></text>
</g>
<g >
<title>PyImport_Import (25,875,311 samples, 0.10%)</title><rect x="159.4" y="565" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="162.37" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (33,712,837 samples, 0.13%)</title><rect x="108.0" y="325" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.96" y="335.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (58,106,080 samples, 0.22%)</title><rect x="237.4" y="741" width="2.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="240.38" y="751.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,227,014 samples, 0.10%)</title><rect x="126.3" y="485" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="129.28" y="495.5" ></text>
</g>
<g >
<title>_PyCode_New (35,686,722 samples, 0.14%)</title><rect x="64.3" y="293" width="1.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="67.25" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (7,474,119,317 samples, 28.81%)</title><rect x="676.6" y="501" width="339.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="679.60" y="511.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,213,738 samples, 0.10%)</title><rect x="232.2" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="235.21" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (156,098,650 samples, 0.60%)</title><rect x="64.3" y="453" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.25" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (363,770,650 samples, 1.40%)</title><rect x="140.1" y="469" width="16.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.10" y="479.5" ></text>
</g>
<g >
<title>clear_page_erms (32,759,894 samples, 0.13%)</title><rect x="37.9" y="149" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="40.92" y="159.5" ></text>
</g>
<g >
<title>page_fault (32,759,894 samples, 0.13%)</title><rect x="37.9" y="309" width="1.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="40.92" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (128,061,219 samples, 0.49%)</title><rect x="98.5" y="885" width="5.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="101.54" y="895.5" ></text>
</g>
<g >
<title>[_ctypes.cpython-312-x86_64-linux-gnu.so] (33,772,025 samples, 0.13%)</title><rect x="129.9" y="853" width="1.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="132.86" y="863.5" ></text>
</g>
<g >
<title>rmqueue (67,472,217 samples, 0.26%)</title><rect x="982.1" y="229" width="3.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="985.14" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,237,850 samples, 0.10%)</title><rect x="131.4" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.39" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (34,067,537 samples, 0.13%)</title><rect x="209.3" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.27" y="495.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (26,889,025 samples, 0.10%)</title><rect x="228.6" y="181" width="1.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="231.60" y="191.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,389 samples, 0.10%)</title><rect x="93.7" y="261" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="96.66" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,639 samples, 0.10%)</title><rect x="76.2" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.21" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,509,425 samples, 0.20%)</title><rect x="214.4" y="277" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.41" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (53,471,225 samples, 0.21%)</title><rect x="94.8" y="581" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,321,038 samples, 0.13%)</title><rect x="44.0" y="485" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="46.96" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="629" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.36" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (106,882,167 samples, 0.41%)</title><rect x="71.4" y="277" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.35" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (33,900,707 samples, 0.13%)</title><rect x="79.8" y="357" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.79" y="367.5" ></text>
</g>
<g >
<title>PyDict_SetItem (27,259,986 samples, 0.11%)</title><rect x="96.0" y="245" width="1.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="99.04" y="255.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (94,077,511 samples, 0.36%)</title><rect x="203.4" y="421" width="4.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="206.44" y="431.5" ></text>
</g>
<g >
<title>_PyRun_AnyFileObject (26,255,374 samples, 0.10%)</title><rect x="86.2" y="949" width="1.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="89.16" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,381 samples, 0.10%)</title><rect x="81.4" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.40" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (65,321,839 samples, 0.25%)</title><rect x="37.9" y="789" width="3.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="40.92" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,259,986 samples, 0.11%)</title><rect x="96.0" y="277" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.04" y="287.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (31,913,533 samples, 0.12%)</title><rect x="238.6" y="261" width="1.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="241.57" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (32,561,945 samples, 0.13%)</title><rect x="39.4" y="389" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.41" y="399.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (342,869,059 samples, 1.32%)</title><rect x="111.9" y="837" width="15.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="114.88" y="847.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (128,061,219 samples, 0.49%)</title><rect x="98.5" y="613" width="5.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="101.54" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,381 samples, 0.10%)</title><rect x="81.4" y="325" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="84.40" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (135,744,322 samples, 0.52%)</title><rect x="1136.9" y="533" width="6.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1139.89" y="543.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,528,058 samples, 0.10%)</title><rect x="51.2" y="357" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="54.18" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,470,669 samples, 0.10%)</title><rect x="104.4" y="469" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.37" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,632 samples, 0.10%)</title><rect x="234.9" y="309" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="237.94" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,193 samples, 0.10%)</title><rect x="127.5" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="399.5" ></text>
</g>
<g >
<title>get_page_from_freelist (67,990,178 samples, 0.26%)</title><rect x="67.1" y="85" width="3.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="70.07" y="95.5" ></text>
</g>
<g >
<title>npy_alloc_cache_dim (33,917,650 samples, 0.13%)</title><rect x="1021.2" y="597" width="1.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1024.16" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,682,634 samples, 0.20%)</title><rect x="104.4" y="661" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="107.37" y="671.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (1,661,271,073 samples, 6.40%)</title><rect x="1041.2" y="533" width="75.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1044.24" y="543.5" >boost::d..</text>
</g>
<g >
<title>[python3.12] (104,993,205 samples, 0.40%)</title><rect x="90.1" y="805" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,239,491 samples, 0.10%)</title><rect x="199.2" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.17" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (56,572,626 samples, 0.22%)</title><rect x="33.0" y="565" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="35.96" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,381 samples, 0.10%)</title><rect x="81.4" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.40" y="431.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::out_edge_list (34,171,205 samples, 0.13%)</title><rect x="1098.2" y="501" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1101.23" y="511.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator* (33,939,472 samples, 0.13%)</title><rect x="1025.8" y="613" width="1.5" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1028.76" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,159,496 samples, 0.10%)</title><rect x="87.4" y="613" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="90.36" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="837" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1164.53" y="847.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (138,892,822 samples, 0.54%)</title><rect x="131.4" y="901" width="6.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="134.39" y="911.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,900,707 samples, 0.13%)</title><rect x="79.8" y="309" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="82.79" y="319.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (33,353,363 samples, 0.13%)</title><rect x="1016.5" y="613" width="1.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1019.55" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,639 samples, 0.10%)</title><rect x="76.2" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.21" y="335.5" ></text>
</g>
<g >
<title>PyLong_FromLong (67,990,178 samples, 0.26%)</title><rect x="67.1" y="245" width="3.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="70.07" y="255.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (78,647,213 samples, 0.30%)</title><rect x="29.4" y="421" width="3.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="32.39" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,255,374 samples, 0.10%)</title><rect x="86.2" y="853" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="89.16" y="863.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,875,311 samples, 0.10%)</title><rect x="159.4" y="661" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="162.37" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,105,557 samples, 0.10%)</title><rect x="34.3" y="325" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="37.35" y="335.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (25,875,311 samples, 0.10%)</title><rect x="159.4" y="613" width="1.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="162.37" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="741" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,841,371 samples, 0.13%)</title><rect x="225.6" y="613" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="228.57" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,888 samples, 0.10%)</title><rect x="215.6" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="218.60" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (94,205,002 samples, 0.36%)</title><rect x="65.9" y="341" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.87" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (101,846,406 samples, 0.39%)</title><rect x="98.5" y="485" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.54" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,632 samples, 0.10%)</title><rect x="234.9" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.94" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (136,176,340 samples, 0.52%)</title><rect x="213.2" y="645" width="6.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="216.21" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (52,667,001 samples, 0.20%)</title><rect x="210.8" y="645" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (87,587,843 samples, 0.34%)</title><rect x="233.4" y="661" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,358,818 samples, 0.11%)</title><rect x="236.1" y="309" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="239.14" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (138,892,822 samples, 0.54%)</title><rect x="131.4" y="789" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.39" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,528,058 samples, 0.10%)</title><rect x="51.2" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="54.18" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,284 samples, 0.10%)</title><rect x="90.1" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,652 samples, 0.10%)</title><rect x="50.0" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.99" y="399.5" ></text>
</g>
<g >
<title>__do_page_fault (32,759,894 samples, 0.13%)</title><rect x="37.9" y="277" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="40.92" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (32,561,945 samples, 0.13%)</title><rect x="39.4" y="357" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.41" y="367.5" ></text>
</g>
<g >
<title>PyDict_GetItemWithError (26,213,193 samples, 0.10%)</title><rect x="127.5" y="261" width="1.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="130.47" y="271.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (27,772,594 samples, 0.11%)</title><rect x="97.3" y="501" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="100.28" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,232,219 samples, 0.10%)</title><rect x="128.7" y="309" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.66" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="725" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (86,437,906 samples, 0.33%)</title><rect x="186.4" y="421" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.37" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="901" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (33,900,707 samples, 0.13%)</title><rect x="79.8" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.79" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (104,051,402 samples, 0.40%)</title><rect x="168.9" y="261" width="4.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="171.88" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_execve (16,774,674 samples, 0.06%)</title><rect x="1171.6" y="949" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1174.56" y="959.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (133,112,806 samples, 0.51%)</title><rect x="71.4" y="629" width="6.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="74.35" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (27,358,818 samples, 0.11%)</title><rect x="236.1" y="165" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="239.14" y="175.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,917 samples, 0.10%)</title><rect x="190.3" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="193.30" y="367.5" ></text>
</g>
<g >
<title>PyObject_Dir (26,211,334 samples, 0.10%)</title><rect x="191.5" y="549" width="1.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="194.49" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="869" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1164.53" y="879.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (11,092,871,523 samples, 42.76%)</title><rect x="657.0" y="901" width="504.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="659.99" y="911.5" >_PyRun_SimpleFileObject</text>
</g>
<g >
<title>[python3.12] (165,410,734 samples, 0.64%)</title><rect x="647.9" y="821" width="7.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="650.94" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,561,945 samples, 0.13%)</title><rect x="39.4" y="517" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.41" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_read (26,212,519 samples, 0.10%)</title><rect x="149.1" y="245" width="1.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="152.13" y="255.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,759,894 samples, 0.13%)</title><rect x="37.9" y="629" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="40.92" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,214,274 samples, 0.10%)</title><rect x="28.2" y="581" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="31.19" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (94,077,511 samples, 0.36%)</title><rect x="203.4" y="549" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.44" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,219 samples, 0.10%)</title><rect x="128.7" y="229" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.66" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (57,010,314 samples, 0.22%)</title><rect x="56.9" y="293" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.89" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,106,661 samples, 0.10%)</title><rect x="36.7" y="421" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="39.73" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (342,869,059 samples, 1.32%)</title><rect x="111.9" y="645" width="15.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.88" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (33,900,707 samples, 0.13%)</title><rect x="79.8" y="629" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.79" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,589,208 samples, 0.13%)</title><rect x="164.8" y="629" width="1.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="167.83" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,477 samples, 0.10%)</title><rect x="133.8" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.78" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (56,123,417 samples, 0.22%)</title><rect x="194.2" y="549" width="2.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="197.23" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (31,913,533 samples, 0.12%)</title><rect x="238.6" y="389" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="241.57" y="399.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (27,259,986 samples, 0.11%)</title><rect x="96.0" y="261" width="1.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="99.04" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="773" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,014,393 samples, 0.13%)</title><rect x="233.4" y="581" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="236.40" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (33,638,641 samples, 0.13%)</title><rect x="1044.3" y="485" width="1.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1047.32" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (106,882,167 samples, 0.41%)</title><rect x="71.4" y="437" width="4.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="74.35" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (52,430,158 samples, 0.20%)</title><rect x="77.4" y="725" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.40" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (251,854,636 samples, 0.97%)</title><rect x="180.0" y="741" width="11.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="751.5" ></text>
</g>
<g >
<title>error_entry (34,014,393 samples, 0.13%)</title><rect x="233.4" y="245" width="1.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="236.40" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (78,647,213 samples, 0.30%)</title><rect x="29.4" y="341" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="351.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,219,284 samples, 0.10%)</title><rect x="90.1" y="293" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="93.07" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (27,358,818 samples, 0.11%)</title><rect x="236.1" y="325" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="239.14" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (139,206,813 samples, 0.54%)</title><rect x="180.0" y="661" width="6.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,245,332 samples, 0.10%)</title><rect x="106.8" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (53,471,225 samples, 0.21%)</title><rect x="94.8" y="709" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,381 samples, 0.10%)</title><rect x="81.4" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.40" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,059,701 samples, 0.13%)</title><rect x="207.7" y="421" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.72" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (32,759,894 samples, 0.13%)</title><rect x="37.9" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,462,306 samples, 0.20%)</title><rect x="131.4" y="421" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="134.39" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,440,064 samples, 0.13%)</title><rect x="180.0" y="405" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (27,772,594 samples, 0.11%)</title><rect x="97.3" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.28" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,060,297 samples, 0.13%)</title><rect x="676.6" y="293" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="679.60" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,417 samples, 0.10%)</title><rect x="82.6" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.59" y="319.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (132,733,592 samples, 0.51%)</title><rect x="37.9" y="965" width="6.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="40.92" y="975.5" ></text>
</g>
<g >
<title>_PyCode_New (52,542,568 samples, 0.20%)</title><rect x="137.7" y="309" width="2.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="140.71" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,210,389 samples, 0.10%)</title><rect x="93.7" y="293" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="96.66" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,216,620 samples, 0.10%)</title><rect x="63.1" y="453" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="66.06" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (72,894,303 samples, 0.28%)</title><rect x="657.0" y="741" width="3.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="659.99" y="751.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,431,834 samples, 0.20%)</title><rect x="29.4" y="309" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="32.39" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (32,793,665 samples, 0.13%)</title><rect x="124.8" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.79" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (34,002,791 samples, 0.13%)</title><rect x="136.2" y="389" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.16" y="399.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="677" width="5.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1164.53" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,875,311 samples, 0.10%)</title><rect x="159.4" y="485" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="162.37" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (56,572,626 samples, 0.22%)</title><rect x="33.0" y="645" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="35.96" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (112,378,838 samples, 0.43%)</title><rect x="106.8" y="933" width="5.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="109.76" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,227,014 samples, 0.10%)</title><rect x="126.3" y="405" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="129.28" y="415.5" ></text>
</g>
<g >
<title>PyIter_Next (27,358,818 samples, 0.11%)</title><rect x="236.1" y="341" width="1.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="239.14" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,372,878 samples, 0.10%)</title><rect x="160.5" y="789" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="163.54" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (25,875,311 samples, 0.10%)</title><rect x="159.4" y="229" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.37" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (448,321,331 samples, 1.73%)</title><rect x="996.2" y="421" width="20.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="999.16" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,239,491 samples, 0.10%)</title><rect x="199.2" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.17" y="271.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (34,127,900 samples, 0.13%)</title><rect x="1140.0" y="501" width="1.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1142.98" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (58,106,080 samples, 0.22%)</title><rect x="237.4" y="629" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="240.38" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (423,593,188 samples, 1.63%)</title><rect x="140.1" y="645" width="19.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.10" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (27,259,986 samples, 0.11%)</title><rect x="96.0" y="293" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.04" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (104,890,031 samples, 0.40%)</title><rect x="131.4" y="597" width="4.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="134.39" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,078,940 samples, 0.10%)</title><rect x="83.8" y="389" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="86.78" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,848,482 samples, 0.13%)</title><rect x="200.4" y="613" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (25,875,311 samples, 0.10%)</title><rect x="159.4" y="645" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.37" y="655.5" ></text>
</g>
<g >
<title>initumath (251,469,636 samples, 0.97%)</title><rect x="113.3" y="389" width="11.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="116.35" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,212,243 samples, 0.10%)</title><rect x="173.6" y="277" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="176.61" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (32,378,744 samples, 0.12%)</title><rect x="111.9" y="421" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="431.5" ></text>
</g>
<g >
<title>PyObject_Malloc (29,065,627 samples, 0.11%)</title><rect x="167.6" y="229" width="1.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="170.55" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (67,877,904 samples, 0.26%)</title><rect x="1144.6" y="533" width="3.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1147.61" y="543.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,219,284 samples, 0.10%)</title><rect x="90.1" y="341" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="93.07" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="341" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,219,284 samples, 0.10%)</title><rect x="90.1" y="533" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="93.07" y="543.5" ></text>
</g>
<g >
<title>create_elf_tables (16,774,674 samples, 0.06%)</title><rect x="1171.6" y="885" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1174.56" y="895.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,900,707 samples, 0.13%)</title><rect x="79.8" y="581" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.79" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (118,950,747 samples, 0.46%)</title><rect x="1161.5" y="485" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1164.53" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (68,127,238 samples, 0.26%)</title><rect x="207.7" y="549" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.72" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,284 samples, 0.10%)</title><rect x="90.1" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (33,591,189 samples, 0.13%)</title><rect x="655.5" y="821" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="658.46" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (79,471,777 samples, 0.31%)</title><rect x="181.6" y="309" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.56" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,216,047 samples, 0.10%)</title><rect x="61.9" y="245" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="64.87" y="255.5" ></text>
</g>
<g >
<title>do_anonymous_page (26,889,025 samples, 0.10%)</title><rect x="228.6" y="197" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="231.60" y="207.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (365,901,720 samples, 1.41%)</title><rect x="968.6" y="261" width="16.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="971.57" y="271.5" ></text>
</g>
<g >
<title>PyObject_Malloc (26,205,687 samples, 0.10%)</title><rect x="166.4" y="341" width="1.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="169.36" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,274 samples, 0.10%)</title><rect x="28.2" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="31.19" y="495.5" ></text>
</g>
<g >
<title>llvm::SymbolTableListTraits&lt;llvm::Instruction&gt;::setSymTabObject&lt;llvm::Function*&gt; (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="821" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1169.94" y="831.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (33,440,064 samples, 0.13%)</title><rect x="180.0" y="341" width="1.6" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="183.04" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,230,639 samples, 0.10%)</title><rect x="76.2" y="373" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="79.21" y="383.5" ></text>
</g>
<g >
<title>PyNumber_Remainder (26,213,738 samples, 0.10%)</title><rect x="232.2" y="357" width="1.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="235.21" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (419,992,435 samples, 1.62%)</title><rect x="44.0" y="597" width="19.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.96" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (217,487,335 samples, 0.84%)</title><rect x="141.6" y="325" width="9.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.62" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,296 samples, 0.10%)</title><rect x="210.8" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="495.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,738 samples, 0.10%)</title><rect x="232.2" y="405" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="235.21" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (105,766,749 samples, 0.41%)</title><rect x="181.6" y="485" width="4.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="184.56" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (31,913,533 samples, 0.12%)</title><rect x="238.6" y="277" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="241.57" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (53,471,225 samples, 0.21%)</title><rect x="94.8" y="645" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (72,894,303 samples, 0.28%)</title><rect x="657.0" y="693" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="659.99" y="703.5" ></text>
</g>
<g >
<title>finish_task_switch (8,189,639 samples, 0.03%)</title><rect x="246.2" y="933" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="249.17" y="943.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (53,573,450 samples, 0.21%)</title><rect x="234.9" y="453" width="2.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="237.94" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (138,892,822 samples, 0.54%)</title><rect x="131.4" y="741" width="6.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="134.39" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,772,594 samples, 0.11%)</title><rect x="97.3" y="597" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="100.28" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,159,496 samples, 0.10%)</title><rect x="87.4" y="421" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="90.36" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,193 samples, 0.10%)</title><rect x="127.5" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,372,878 samples, 0.10%)</title><rect x="160.5" y="389" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="163.54" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (34,014,393 samples, 0.13%)</title><rect x="233.4" y="261" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="271.5" ></text>
</g>
<g >
<title>_PyObject_Call (106,232,596 samples, 0.41%)</title><rect x="81.3" y="773" width="4.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.33" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,227,014 samples, 0.10%)</title><rect x="126.3" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.28" y="431.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (57,452,198 samples, 0.22%)</title><rect x="216.8" y="277" width="2.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="219.80" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (138,892,822 samples, 0.54%)</title><rect x="131.4" y="709" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.39" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (105,766,749 samples, 0.41%)</title><rect x="181.6" y="389" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.56" y="399.5" ></text>
</g>
<g >
<title>boost::tuples::tuple&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type&gt;::tuple (33,972,841 samples, 0.13%)</title><rect x="1124.5" y="581" width="1.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1127.52" y="591.5" ></text>
</g>
<g >
<title>_PyCode_New (66,434,186 samples, 0.26%)</title><rect x="47.0" y="325" width="3.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="49.97" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,334 samples, 0.10%)</title><rect x="191.5" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.49" y="655.5" ></text>
</g>
<g >
<title>schedule_tail (14,938,652 samples, 0.06%)</title><rect x="245.9" y="949" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="248.86" y="959.5" ></text>
</g>
<g >
<title>change_protection (33,754,632 samples, 0.13%)</title><rect x="1166.9" y="693" width="1.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1169.94" y="703.5" ></text>
</g>
<g >
<title>alloc_pages_vma (32,759,894 samples, 0.13%)</title><rect x="37.9" y="197" width="1.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="40.92" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,219 samples, 0.10%)</title><rect x="128.7" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.66" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,232,219 samples, 0.10%)</title><rect x="128.7" y="549" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.66" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (78,788,462 samples, 0.30%)</title><rect x="196.8" y="453" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.78" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,875,311 samples, 0.10%)</title><rect x="159.4" y="725" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="162.37" y="735.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,192,547 samples, 0.10%)</title><rect x="237.4" y="357" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="240.38" y="367.5" ></text>
</g>
<g >
<title>[_ctypes.cpython-312-x86_64-linux-gnu.so] (33,772,025 samples, 0.13%)</title><rect x="129.9" y="869" width="1.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="132.86" y="879.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,213,738 samples, 0.10%)</title><rect x="232.2" y="261" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="235.21" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,674 samples, 0.10%)</title><rect x="158.2" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.17" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,372,878 samples, 0.10%)</title><rect x="160.5" y="325" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="163.54" y="335.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,493,181 samples, 0.13%)</title><rect x="140.1" y="261" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="143.10" y="271.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (300,649,156 samples, 1.16%)</title><rect x="166.4" y="549" width="13.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="169.36" y="559.5" ></text>
</g>
<g >
<title>PyImport_Import (26,159,496 samples, 0.10%)</title><rect x="87.4" y="693" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="90.36" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (135,219,839 samples, 0.52%)</title><rect x="29.4" y="757" width="6.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="32.39" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (54,955,410 samples, 0.21%)</title><rect x="176.0" y="213" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.99" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (34,014,393 samples, 0.13%)</title><rect x="233.4" y="277" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="287.5" ></text>
</g>
<g >
<title>vfs_statx (104,051,402 samples, 0.40%)</title><rect x="168.9" y="197" width="4.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="171.88" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (78,647,213 samples, 0.30%)</title><rect x="29.4" y="389" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="399.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,294,972 samples, 0.10%)</title><rect x="185.2" y="309" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="188.17" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,245,332 samples, 0.10%)</title><rect x="106.8" y="613" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="109.76" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,201,674 samples, 0.10%)</title><rect x="158.2" y="453" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="161.17" y="463.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (27,358,818 samples, 0.11%)</title><rect x="236.1" y="421" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="239.14" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (33,638,641 samples, 0.13%)</title><rect x="1044.3" y="501" width="1.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1047.32" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="869" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.36" y="879.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (33,083,095 samples, 0.13%)</title><rect x="1048.9" y="469" width="1.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1051.90" y="479.5" ></text>
</g>
<g >
<title>__alloc_file (26,214,717 samples, 0.10%)</title><rect x="213.2" y="101" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="216.21" y="111.5" ></text>
</g>
<g >
<title>[python3.12] (26,227,014 samples, 0.10%)</title><rect x="126.3" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.28" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (86,133,506 samples, 0.33%)</title><rect x="108.0" y="469" width="3.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="110.96" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (78,647,213 samples, 0.30%)</title><rect x="29.4" y="725" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,271,110 samples, 0.10%)</title><rect x="35.5" y="517" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="38.54" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,431,834 samples, 0.20%)</title><rect x="29.4" y="293" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (105,525,503 samples, 0.41%)</title><rect x="228.6" y="709" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.60" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (68,037,615 samples, 0.26%)</title><rect x="1136.9" y="453" width="3.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1139.89" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,470,669 samples, 0.10%)</title><rect x="104.4" y="309" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="107.37" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,793,665 samples, 0.13%)</title><rect x="124.8" y="389" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="127.79" y="399.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (33,897,814 samples, 0.13%)</title><rect x="221.0" y="709" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="223.95" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,788,462 samples, 0.30%)</title><rect x="196.8" y="501" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="199.78" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (27,259,986 samples, 0.11%)</title><rect x="96.0" y="389" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="99.04" y="399.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,620,864 samples, 0.13%)</title><rect x="156.6" y="549" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="159.64" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,647,213 samples, 0.30%)</title><rect x="29.4" y="565" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="32.39" y="575.5" ></text>
</g>
<g >
<title>do_user_addr_fault (32,759,894 samples, 0.13%)</title><rect x="37.9" y="261" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="40.92" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (34,099,466 samples, 0.13%)</title><rect x="1143.1" y="549" width="1.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1146.06" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,245,332 samples, 0.10%)</title><rect x="106.8" y="725" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="109.76" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,192,547 samples, 0.10%)</title><rect x="237.4" y="325" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="240.38" y="335.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (4,063,061,654 samples, 15.66%)</title><rect x="804.0" y="405" width="184.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="806.99" y="415.5" >[libz.so.1.2.11]</text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,214,717 samples, 0.10%)</title><rect x="213.2" y="309" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="216.21" y="319.5" ></text>
</g>
<g >
<title>[dtypes.cpython-312-x86_64-linux-gnu.so] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="341" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="39.73" y="351.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,178,164 samples, 0.10%)</title><rect x="91.3" y="389" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="94.27" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (395,314,471 samples, 1.52%)</title><rect x="111.9" y="885" width="18.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,674 samples, 0.10%)</title><rect x="158.2" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.17" y="527.5" ></text>
</g>
<g >
<title>_aligned_strided_to_strided_size1_srcstride0 (67,411,753 samples, 0.26%)</title><rect x="40.9" y="725" width="3.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="43.89" y="735.5" ></text>
</g>
<g >
<title>handle_mm_fault (33,995,910 samples, 0.13%)</title><rect x="661.8" y="533" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="664.84" y="543.5" ></text>
</g>
<g >
<title>new_sync_read (26,212,519 samples, 0.10%)</title><rect x="149.1" y="117" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="152.13" y="127.5" ></text>
</g>
<g >
<title>__GI___snprintf (251,469,636 samples, 0.97%)</title><rect x="113.3" y="357" width="11.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="116.35" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (135,219,839 samples, 0.52%)</title><rect x="29.4" y="773" width="6.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="32.39" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (78,646,250 samples, 0.30%)</title><rect x="59.5" y="357" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.48" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_emplace_equal&lt;std::pair&lt;float, unsigned long&gt; &gt; (67,794,662 samples, 0.26%)</title><rect x="1155.4" y="597" width="3.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1158.42" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,213,296 samples, 0.10%)</title><rect x="210.8" y="405" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="213.82" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,620 samples, 0.10%)</title><rect x="63.1" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,788,462 samples, 0.30%)</title><rect x="196.8" y="405" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.78" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (33,420,657 samples, 0.13%)</title><rect x="1055.0" y="485" width="1.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1058.02" y="495.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (27,259,986 samples, 0.11%)</title><rect x="96.0" y="453" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="99.04" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (27,772,594 samples, 0.11%)</title><rect x="97.3" y="437" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="100.28" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (109,961,623 samples, 0.42%)</title><rect x="214.4" y="293" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.41" y="303.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (105,766,749 samples, 0.41%)</title><rect x="181.6" y="405" width="4.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="184.56" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,773,921 samples, 0.30%)</title><rect x="91.3" y="597" width="3.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="94.27" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,178,164 samples, 0.10%)</title><rect x="91.3" y="357" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="94.27" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (34,014,393 samples, 0.13%)</title><rect x="233.4" y="309" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.40" y="319.5" ></text>
</g>
<g >
<title>schedule (5,076,349 samples, 0.02%)</title><rect x="623.6" y="885" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="626.59" y="895.5" ></text>
</g>
<g >
<title>_PyObject_Call (86,133,506 samples, 0.33%)</title><rect x="108.0" y="693" width="3.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.96" y="703.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,060,297 samples, 0.13%)</title><rect x="676.6" y="309" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="679.60" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,047 samples, 0.10%)</title><rect x="61.9" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.87" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (138,892,822 samples, 0.54%)</title><rect x="131.4" y="821" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.39" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,462,306 samples, 0.20%)</title><rect x="131.4" y="405" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.39" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (161,490,949 samples, 0.62%)</title><rect x="29.4" y="837" width="7.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.39" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (54,955,410 samples, 0.21%)</title><rect x="176.0" y="197" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.99" y="207.5" ></text>
</g>
<g >
<title>native_write_msr (4,666,742 samples, 0.02%)</title><rect x="623.6" y="773" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="626.59" y="783.5" ></text>
</g>
<g >
<title>blas_thread_server (8,287,943,597 samples, 31.95%)</title><rect x="246.9" y="949" width="376.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="249.86" y="959.5" >blas_thread_server</text>
</g>
<g >
<title>[python3.12] (99,367,535 samples, 0.38%)</title><rect x="45.5" y="341" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.47" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,296 samples, 0.10%)</title><rect x="210.8" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.82" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,216,047 samples, 0.10%)</title><rect x="61.9" y="341" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="64.87" y="351.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::top (34,035,500 samples, 0.13%)</title><rect x="1058.1" y="517" width="1.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1061.09" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,105,557 samples, 0.10%)</title><rect x="34.3" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="37.35" y="399.5" ></text>
</g>
<g >
<title>std::make_pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (34,185,799 samples, 0.13%)</title><rect x="1099.8" y="501" width="1.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1102.78" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (104,890,031 samples, 0.40%)</title><rect x="131.4" y="629" width="4.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="134.39" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="901" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="911.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,712,837 samples, 0.13%)</title><rect x="108.0" y="405" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="110.96" y="415.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,595,757 samples, 0.20%)</title><rect x="92.5" y="389" width="2.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="95.46" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,453,705 samples, 0.10%)</title><rect x="212.0" y="597" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="215.01" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (26,159,496 samples, 0.10%)</title><rect x="87.4" y="677" width="1.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="90.36" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (105,525,503 samples, 0.41%)</title><rect x="228.6" y="581" width="4.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="231.60" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (27,772,594 samples, 0.11%)</title><rect x="97.3" y="581" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="100.28" y="591.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_all_s_d (33,613,858 samples, 0.13%)</title><rect x="1022.7" y="613" width="1.5" height="15.0" fill="rgb(230,117,27)" rx="2" ry="2" />
<text  x="1025.70" y="623.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (418,684,457 samples, 1.61%)</title><rect x="200.4" y="853" width="19.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="203.37" y="863.5" ></text>
</g>
<g >
<title>_PyObject_Call (27,772,594 samples, 0.11%)</title><rect x="97.3" y="709" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="100.28" y="719.5" ></text>
</g>
<g >
<title>page_fault (33,620,864 samples, 0.13%)</title><rect x="156.6" y="133" width="1.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="159.64" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,248 samples, 0.10%)</title><rect x="135.0" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.97" y="303.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (94,077,511 samples, 0.36%)</title><rect x="203.4" y="565" width="4.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="206.44" y="575.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (34,059,701 samples, 0.13%)</title><rect x="207.7" y="213" width="1.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="210.72" y="223.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,561,945 samples, 0.13%)</title><rect x="39.4" y="469" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="42.41" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (284,263,301 samples, 1.10%)</title><rect x="113.3" y="517" width="13.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="116.35" y="527.5" ></text>
</g>
<g >
<title>PyArray_Where (33,915,462 samples, 0.13%)</title><rect x="152.7" y="341" width="1.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="155.71" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (32,378,744 samples, 0.12%)</title><rect x="111.9" y="325" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,284 samples, 0.10%)</title><rect x="90.1" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.07" y="639.5" ></text>
</g>
<g >
<title>dispatcher_vectorcall (33,915,462 samples, 0.13%)</title><rect x="152.7" y="405" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="155.71" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (81,243,819 samples, 0.31%)</title><rect x="94.8" y="933" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="943.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,661,992 samples, 0.20%)</title><rect x="154.2" y="293" width="2.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="157.25" y="303.5" ></text>
</g>
<g >
<title>PyDict_GetItemWithError (33,536,604 samples, 0.13%)</title><rect x="623.8" y="965" width="1.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="626.82" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call (27,772,594 samples, 0.11%)</title><rect x="97.3" y="405" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="100.28" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,245,332 samples, 0.10%)</title><rect x="106.8" y="421" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="109.76" y="431.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (26,255,374 samples, 0.10%)</title><rect x="86.2" y="933" width="1.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="89.16" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (30,467,069 samples, 0.12%)</title><rect x="33.0" y="293" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="35.96" y="303.5" ></text>
</g>
<g >
<title>__do_sys_newstat (32,793,665 samples, 0.13%)</title><rect x="124.8" y="229" width="1.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="127.79" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (86,133,506 samples, 0.33%)</title><rect x="108.0" y="709" width="3.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.96" y="719.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,023,571 samples, 0.13%)</title><rect x="163.3" y="821" width="1.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="166.29" y="831.5" ></text>
</g>
<g >
<title>__do_page_fault (606,426,096 samples, 2.34%)</title><rect x="960.0" y="357" width="27.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="963.01" y="367.5" >_..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,271,110 samples, 0.10%)</title><rect x="35.5" y="645" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="38.54" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,334 samples, 0.10%)</title><rect x="191.5" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.49" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (138,167,571 samples, 0.53%)</title><rect x="227.1" y="853" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.11" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (105,525,503 samples, 0.41%)</title><rect x="228.6" y="661" width="4.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="231.60" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (133,112,806 samples, 0.51%)</title><rect x="71.4" y="533" width="6.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="74.35" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,682,634 samples, 0.20%)</title><rect x="104.4" y="869" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="107.37" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (284,263,301 samples, 1.10%)</title><rect x="113.3" y="533" width="13.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.35" y="543.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::swap_heap_elements (67,899,390 samples, 0.26%)</title><rect x="1168.5" y="981" width="3.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1171.47" y="991.5" ></text>
</g>
<g >
<title>do_user_addr_fault (606,426,096 samples, 2.34%)</title><rect x="960.0" y="341" width="27.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="963.01" y="351.5" >d..</text>
</g>
<g >
<title>[python3.12] (315,428,076 samples, 1.22%)</title><rect x="63.1" y="773" width="14.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.06" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="389" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="399.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (251,469,636 samples, 0.97%)</title><rect x="113.3" y="341" width="11.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="116.35" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,917 samples, 0.10%)</title><rect x="190.3" y="229" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.30" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.36" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,239 samples, 0.10%)</title><rect x="94.8" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,372,878 samples, 0.10%)</title><rect x="160.5" y="437" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="163.54" y="447.5" ></text>
</g>
<g >
<title>_PyUnicode_ScanIdentifier (26,216,047 samples, 0.10%)</title><rect x="61.9" y="197" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="64.87" y="207.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,214,274 samples, 0.10%)</title><rect x="28.2" y="789" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="31.19" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (134,911,879 samples, 0.52%)</title><rect x="194.2" y="869" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.23" y="879.5" ></text>
</g>
<g >
<title>do_page_fault (34,059,701 samples, 0.13%)</title><rect x="207.7" y="341" width="1.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="210.72" y="351.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (26,205,687 samples, 0.10%)</title><rect x="166.4" y="357" width="1.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="169.36" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,674 samples, 0.10%)</title><rect x="158.2" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.17" y="383.5" ></text>
</g>
<g >
<title>llvm::TargetPassConfig::addIRPasses (33,772,025 samples, 0.13%)</title><rect x="129.9" y="693" width="1.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="132.86" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (341,346,185 samples, 1.32%)</title><rect x="44.0" y="533" width="15.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="46.96" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (105,525,503 samples, 0.41%)</title><rect x="228.6" y="597" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.60" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,351 samples, 0.10%)</title><rect x="174.8" y="261" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.80" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (56,123,417 samples, 0.22%)</title><rect x="194.2" y="293" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="197.23" y="303.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (32,933,349 samples, 0.13%)</title><rect x="45.5" y="325" width="1.5" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="48.47" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (34,127,900 samples, 0.13%)</title><rect x="1140.0" y="517" width="1.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1142.98" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,212,519 samples, 0.10%)</title><rect x="149.1" y="213" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="152.13" y="223.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (32,378,744 samples, 0.12%)</title><rect x="111.9" y="117" width="1.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="114.88" y="127.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,255,374 samples, 0.10%)</title><rect x="86.2" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="89.16" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,205,803 samples, 0.10%)</title><rect x="109.5" y="293" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.49" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,201,674 samples, 0.10%)</title><rect x="158.2" y="549" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="161.17" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (423,593,188 samples, 1.63%)</title><rect x="140.1" y="725" width="19.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.10" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,667,001 samples, 0.20%)</title><rect x="210.8" y="613" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="213.82" y="623.5" ></text>
</g>
<g >
<title>llvm::TargetPassConfig::addPass (33,772,025 samples, 0.13%)</title><rect x="129.9" y="677" width="1.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="132.86" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,561,945 samples, 0.13%)</title><rect x="39.4" y="613" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="42.41" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,002,791 samples, 0.13%)</title><rect x="136.2" y="373" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="139.16" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,239 samples, 0.10%)</title><rect x="94.8" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,548,971 samples, 0.20%)</title><rect x="196.8" y="309" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.78" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (105,525,503 samples, 0.41%)</title><rect x="228.6" y="565" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="231.60" y="575.5" ></text>
</g>
<g >
<title>get_page_from_freelist (27,554,181 samples, 0.11%)</title><rect x="675.3" y="293" width="1.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="678.35" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (112,647,823 samples, 0.43%)</title><rect x="186.4" y="469" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.37" y="479.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; (1,762,986,463 samples, 6.80%)</title><rect x="1038.1" y="597" width="80.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1041.13" y="607.5" >boost::di..</text>
</g>
<g >
<title>[python3.12] (65,321,839 samples, 0.25%)</title><rect x="37.9" y="741" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="751.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (138,892,822 samples, 0.54%)</title><rect x="131.4" y="933" width="6.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="134.39" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,174 samples, 0.10%)</title><rect x="85.0" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.97" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (726,254,566 samples, 2.80%)</title><rect x="200.4" y="949" width="33.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="203.37" y="959.5" >_P..</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (72,894,303 samples, 0.28%)</title><rect x="657.0" y="805" width="3.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="659.99" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,813 samples, 0.10%)</title><rect x="103.2" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.18" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (300,649,156 samples, 1.16%)</title><rect x="166.4" y="597" width="13.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.36" y="607.5" ></text>
</g>
<g >
<title>llvm::PassRegistry::enumerateWith (33,772,025 samples, 0.13%)</title><rect x="129.9" y="613" width="1.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="132.86" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call (528,383,945 samples, 2.04%)</title><rect x="137.7" y="853" width="24.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="140.71" y="863.5" >_..</text>
</g>
<g >
<title>[python3.12] (26,245,332 samples, 0.10%)</title><rect x="106.8" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.76" y="335.5" ></text>
</g>
<g >
<title>do_filp_open (26,214,717 samples, 0.10%)</title><rect x="213.2" y="149" width="1.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="216.21" y="159.5" ></text>
</g>
<g >
<title>_PyObject_Call (72,894,303 samples, 0.28%)</title><rect x="657.0" y="709" width="3.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="659.99" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (34,059,701 samples, 0.13%)</title><rect x="207.7" y="485" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.72" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (33,848,482 samples, 0.13%)</title><rect x="200.4" y="581" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.37" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,014,393 samples, 0.13%)</title><rect x="233.4" y="533" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="236.40" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (58,106,080 samples, 0.22%)</title><rect x="237.4" y="533" width="2.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="240.38" y="543.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,430,158 samples, 0.20%)</title><rect x="77.4" y="821" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="80.40" y="831.5" ></text>
</g>
<g >
<title>__handle_mm_fault (26,889,025 samples, 0.10%)</title><rect x="228.6" y="213" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="231.60" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (52,682,634 samples, 0.20%)</title><rect x="104.4" y="597" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.37" y="607.5" ></text>
</g>
<g >
<title>dlopen_doit (33,620,864 samples, 0.13%)</title><rect x="156.6" y="245" width="1.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="159.64" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (237,710,546 samples, 0.92%)</title><rect x="1081.2" y="501" width="10.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1084.23" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,239,491 samples, 0.10%)</title><rect x="199.2" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.17" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_check_len (33,613,858 samples, 0.13%)</title><rect x="1022.7" y="549" width="1.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1025.70" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,381 samples, 0.10%)</title><rect x="81.4" y="469" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="84.40" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (10,986,316,667 samples, 42.35%)</title><rect x="661.8" y="805" width="499.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="664.84" y="815.5" >_PyObject_MakeTpCall</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,227,014 samples, 0.10%)</title><rect x="126.3" y="325" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="129.28" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (56,123,417 samples, 0.22%)</title><rect x="194.2" y="373" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="197.23" y="383.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.0 (33,460,383 samples, 0.13%)</title><rect x="1176.9" y="757" width="1.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1179.88" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (33,613,903 samples, 0.13%)</title><rect x="1051.9" y="501" width="1.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1054.94" y="511.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,248 samples, 0.10%)</title><rect x="135.0" y="357" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="137.97" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,274 samples, 0.10%)</title><rect x="28.2" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.19" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (342,869,059 samples, 1.32%)</title><rect x="111.9" y="725" width="15.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="735.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,212,680 samples, 0.10%)</title><rect x="151.5" y="325" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="154.51" y="335.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (67,359,350 samples, 0.26%)</title><rect x="1064.3" y="517" width="3.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1067.28" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,949,436 samples, 0.13%)</title><rect x="178.5" y="245" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="181.49" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (134,911,879 samples, 0.52%)</title><rect x="194.2" y="693" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.23" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (78,647,213 samples, 0.30%)</title><rect x="29.4" y="661" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="671.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (32,759,894 samples, 0.13%)</title><rect x="37.9" y="181" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="40.92" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="229" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (27,358,818 samples, 0.11%)</title><rect x="236.1" y="389" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="239.14" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (138,892,822 samples, 0.54%)</title><rect x="131.4" y="725" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.39" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,106,661 samples, 0.10%)</title><rect x="36.7" y="853" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="39.73" y="863.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,620,864 samples, 0.13%)</title><rect x="156.6" y="597" width="1.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="159.64" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,159,496 samples, 0.10%)</title><rect x="87.4" y="645" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.36" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (30,467,069 samples, 0.12%)</title><rect x="33.0" y="373" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="35.96" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="885" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (419,992,435 samples, 1.62%)</title><rect x="44.0" y="757" width="19.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.96" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (53,573,450 samples, 0.21%)</title><rect x="234.9" y="485" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.94" y="495.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,866 samples, 0.10%)</title><rect x="110.7" y="389" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="113.68" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (112,652,529 samples, 0.43%)</title><rect x="144.0" y="261" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="147.01" y="271.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,230,639 samples, 0.10%)</title><rect x="76.2" y="485" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="79.21" y="495.5" ></text>
</g>
<g >
<title>_int_free (32,924,554 samples, 0.13%)</title><rect x="654.0" y="757" width="1.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="656.97" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (104,711,912 samples, 0.40%)</title><rect x="81.4" y="597" width="4.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.40" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (31,913,533 samples, 0.12%)</title><rect x="238.6" y="373" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="241.57" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,057,586 samples, 0.13%)</title><rect x="206.2" y="325" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.17" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,159,496 samples, 0.10%)</title><rect x="87.4" y="789" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="90.36" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,589,208 samples, 0.13%)</title><rect x="164.8" y="549" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.83" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,213,296 samples, 0.10%)</title><rect x="210.8" y="565" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="213.82" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (104,711,912 samples, 0.40%)</title><rect x="81.4" y="645" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.40" y="655.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (78,646,250 samples, 0.30%)</title><rect x="59.5" y="469" width="3.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="62.48" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (99,449,154 samples, 0.38%)</title><rect x="625.3" y="885" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="628.35" y="895.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (109,961,623 samples, 0.42%)</title><rect x="214.4" y="325" width="5.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="217.41" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,203,652 samples, 0.10%)</title><rect x="50.0" y="309" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="52.99" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (78,647,213 samples, 0.30%)</title><rect x="29.4" y="437" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.39" y="447.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (33,638,641 samples, 0.13%)</title><rect x="1044.3" y="469" width="1.5" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1047.32" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,106,661 samples, 0.10%)</title><rect x="36.7" y="565" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="39.73" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (104,051,402 samples, 0.40%)</title><rect x="168.9" y="229" width="4.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="171.88" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (217,487,335 samples, 0.84%)</title><rect x="141.6" y="309" width="9.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.62" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (34,057,586 samples, 0.13%)</title><rect x="206.2" y="357" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="209.17" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,642,068 samples, 0.13%)</title><rect x="227.1" y="709" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="230.11" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (342,869,059 samples, 1.32%)</title><rect x="111.9" y="597" width="15.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.88" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (53,471,225 samples, 0.21%)</title><rect x="94.8" y="597" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="97.85" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,378,744 samples, 0.12%)</title><rect x="111.9" y="373" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="114.88" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (86,133,506 samples, 0.33%)</title><rect x="108.0" y="629" width="3.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.96" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,255,374 samples, 0.10%)</title><rect x="86.2" y="789" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.16" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (139,206,813 samples, 0.54%)</title><rect x="180.0" y="597" width="6.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.04" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (274,443,469 samples, 1.06%)</title><rect x="167.6" y="421" width="12.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="170.55" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,372,878 samples, 0.10%)</title><rect x="160.5" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.54" y="607.5" ></text>
</g>
<g >
<title>PyList_Append (33,848,482 samples, 0.13%)</title><rect x="200.4" y="501" width="1.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="203.37" y="511.5" ></text>
</g>
<g >
<title>gentype_alloc (33,660,553 samples, 0.13%)</title><rect x="660.3" y="773" width="1.5" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="663.31" y="783.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,421,594 samples, 0.20%)</title><rect x="173.6" y="357" width="2.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="176.61" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,271,110 samples, 0.10%)</title><rect x="35.5" y="741" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="38.54" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,219,284 samples, 0.10%)</title><rect x="90.1" y="677" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.07" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,647,213 samples, 0.30%)</title><rect x="29.4" y="549" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="32.39" y="559.5" ></text>
</g>
<g >
<title>do_page_fault (26,889,025 samples, 0.10%)</title><rect x="228.6" y="277" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="231.60" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,271,110 samples, 0.10%)</title><rect x="35.5" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.54" y="335.5" ></text>
</g>
<g >
<title>PyDict_SetItem (26,212,243 samples, 0.10%)</title><rect x="173.6" y="181" width="1.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="176.61" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,193 samples, 0.10%)</title><rect x="127.5" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.47" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,772,594 samples, 0.11%)</title><rect x="97.3" y="421" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="100.28" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (138,892,822 samples, 0.54%)</title><rect x="131.4" y="677" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.39" y="687.5" ></text>
</g>
<g >
<title>try_to_unmap (34,023,571 samples, 0.13%)</title><rect x="163.3" y="757" width="1.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="166.29" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,106,661 samples, 0.10%)</title><rect x="36.7" y="725" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="39.73" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::allocate (34,104,407 samples, 0.13%)</title><rect x="1135.3" y="533" width="1.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1138.34" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,738 samples, 0.10%)</title><rect x="232.2" y="469" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="235.21" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (52,661,992 samples, 0.20%)</title><rect x="154.2" y="309" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.25" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,227,014 samples, 0.10%)</title><rect x="126.3" y="341" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="129.28" y="351.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (251,469,636 samples, 0.97%)</title><rect x="113.3" y="325" width="11.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="116.35" y="335.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,738 samples, 0.10%)</title><rect x="232.2" y="549" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="235.21" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,230,639 samples, 0.10%)</title><rect x="76.2" y="293" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="79.21" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,239 samples, 0.10%)</title><rect x="94.8" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.85" y="415.5" ></text>
</g>
<g >
<title>PyDict_SetItem (33,591,189 samples, 0.13%)</title><rect x="655.5" y="869" width="1.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="658.46" y="879.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;::coeffRef (33,663,318 samples, 0.13%)</title><rect x="1024.2" y="629" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1027.23" y="639.5" ></text>
</g>
<g >
<title>__do_page_fault (26,216,620 samples, 0.10%)</title><rect x="63.1" y="245" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="66.06" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (476,135,756 samples, 1.84%)</title><rect x="137.7" y="789" width="21.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.71" y="799.5" >_..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (104,711,912 samples, 0.40%)</title><rect x="81.4" y="661" width="4.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="84.40" y="671.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4,493,461 samples, 0.02%)</title><rect x="246.3" y="917" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="249.32" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (300,649,156 samples, 1.16%)</title><rect x="166.4" y="645" width="13.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.36" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (32,793,665 samples, 0.13%)</title><rect x="124.8" y="405" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.79" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (138,892,822 samples, 0.54%)</title><rect x="131.4" y="885" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.39" y="895.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,866 samples, 0.10%)</title><rect x="110.7" y="373" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="113.68" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,661 samples, 0.10%)</title><rect x="36.7" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.73" y="591.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (26,889,025 samples, 0.10%)</title><rect x="228.6" y="165" width="1.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="231.60" y="175.5" ></text>
</g>
<g >
<title>_PyObject_GC_New (34,114,537 samples, 0.13%)</title><rect x="663.4" y="613" width="1.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="666.38" y="623.5" ></text>
</g>
<g >
<title>page_fault (27,554,181 samples, 0.11%)</title><rect x="675.3" y="437" width="1.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="678.35" y="447.5" ></text>
</g>
<g >
<title>get_page_from_freelist (33,995,910 samples, 0.13%)</title><rect x="661.8" y="453" width="1.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="664.84" y="463.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (34,060,297 samples, 0.13%)</title><rect x="676.6" y="421" width="1.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="679.60" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (86,133,506 samples, 0.33%)</title><rect x="108.0" y="645" width="3.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="110.96" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (106,232,596 samples, 0.41%)</title><rect x="81.3" y="709" width="4.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="84.33" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (133,117,029 samples, 0.51%)</title><rect x="167.6" y="293" width="6.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.55" y="303.5" ></text>
</g>
<g >
<title>alloc_pages_vma (67,990,178 samples, 0.26%)</title><rect x="67.1" y="117" width="3.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="70.07" y="127.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (78,647,213 samples, 0.30%)</title><rect x="29.4" y="405" width="3.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="32.39" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (32,759,894 samples, 0.13%)</title><rect x="37.9" y="389" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,949,436 samples, 0.13%)</title><rect x="178.5" y="309" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="181.49" y="319.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,632 samples, 0.10%)</title><rect x="234.9" y="373" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="237.94" y="383.5" ></text>
</g>
</g>
</svg>
