<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1254.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1237" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1237" > </text>
<g id="frames">
<g >
<title>_PyEval_EvalFrameDefault (94,408,648 samples, 0.29%)</title><rect x="179.1" y="885" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="182.10" y="895.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;, IT_outputs, , pybind11::name, pybind11::is_method, pybind11::sibling&gt; (102,425,009 samples, 0.32%)</title><rect x="1163.7" y="933" width="3.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1166.66" y="943.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_initialize_map (34,184,372 samples, 0.11%)</title><rect x="1067.3" y="757" width="1.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1070.27" y="767.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (194,293,140 samples, 0.61%)</title><rect x="142.9" y="597" width="7.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="145.90" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (28,272,766 samples, 0.09%)</title><rect x="132.3" y="757" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.32" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,133,890 samples, 0.08%)</title><rect x="133.4" y="773" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="136.36" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (58,854,880 samples, 0.18%)</title><rect x="176.9" y="741" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="179.94" y="751.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,777 samples, 0.08%)</title><rect x="40.4" y="517" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="43.37" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,254,423,979 samples, 3.91%)</title><rect x="113.9" y="1157" width="46.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.93" y="1167.5" >_PyE..</text>
</g>
<g >
<title>[python3.12] (243,638,169 samples, 0.76%)</title><rect x="123.4" y="661" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.37" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::deallocate (33,805,372 samples, 0.11%)</title><rect x="1161.2" y="741" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1164.16" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,115,976 samples, 0.08%)</title><rect x="100.6" y="533" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.63" y="543.5" ></text>
</g>
<g >
<title>_PyObject_LookupSpecial (26,209,711 samples, 0.08%)</title><rect x="128.2" y="469" width="0.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="131.18" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,916 samples, 0.08%)</title><rect x="182.6" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (54,964,377 samples, 0.17%)</title><rect x="88.8" y="805" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="91.85" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (62,147,556 samples, 0.19%)</title><rect x="58.2" y="453" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.18" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,359 samples, 0.08%)</title><rect x="68.4" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.35" y="511.5" ></text>
</g>
<g >
<title>Py_FinalizeEx (68,188,768 samples, 0.21%)</title><rect x="78.1" y="1157" width="2.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="81.14" y="1167.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,215,913 samples, 0.08%)</title><rect x="159.1" y="837" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="162.06" y="847.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (26,005,344 samples, 0.08%)</title><rect x="102.8" y="453" width="0.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="105.77" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,083 samples, 0.08%)</title><rect x="53.1" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.08" y="415.5" ></text>
</g>
<g >
<title>PyDict_MergeFromSeq2 (32,967,666 samples, 0.10%)</title><rect x="733.3" y="805" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="736.30" y="815.5" ></text>
</g>
<g >
<title>boost::optional_detail::aligned_storage&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::ref (34,256,754 samples, 0.11%)</title><rect x="847.0" y="741" width="1.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="849.99" y="751.5" ></text>
</g>
<g >
<title>dlopen_doit (31,739,724 samples, 0.10%)</title><rect x="64.3" y="485" width="1.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="67.30" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,187,720 samples, 0.08%)</title><rect x="86.9" y="661" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="89.92" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,198,130 samples, 0.08%)</title><rect x="122.4" y="693" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.41" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (34,142,413 samples, 0.11%)</title><rect x="103.7" y="949" width="1.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="106.73" y="959.5" ></text>
</g>
<g >
<title>do_user_addr_fault (67,399,663 samples, 0.21%)</title><rect x="259.8" y="613" width="2.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="262.76" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (139,239,082 samples, 0.43%)</title><rect x="105.0" y="1045" width="5.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.98" y="1055.5" ></text>
</g>
<g >
<title>_PyObject_Call (82,891,229 samples, 0.26%)</title><rect x="171.4" y="773" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="174.40" y="783.5" ></text>
</g>
<g >
<title>__do_page_fault (56,166,545 samples, 0.17%)</title><rect x="806.9" y="549" width="2.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="809.95" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,317 samples, 0.08%)</title><rect x="35.6" y="677" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="38.55" y="687.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,215,913 samples, 0.08%)</title><rect x="159.1" y="757" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="162.06" y="767.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,432,438 samples, 0.16%)</title><rect x="188.3" y="949" width="1.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="191.29" y="959.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (112,492,912 samples, 0.35%)</title><rect x="167.3" y="821" width="4.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="170.27" y="831.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,059,182 samples, 0.08%)</title><rect x="728.6" y="597" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="731.62" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (25,810,639 samples, 0.08%)</title><rect x="92.1" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.10" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="949" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (34,212,146 samples, 0.11%)</title><rect x="150.0" y="389" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.04" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,238,318 samples, 0.19%)</title><rect x="105.0" y="709" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="107.98" y="719.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (34,091,857 samples, 0.11%)</title><rect x="967.2" y="597" width="1.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="970.16" y="607.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,432,438 samples, 0.16%)</title><rect x="188.3" y="693" width="1.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="191.29" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (21,830,925 samples, 0.07%)</title><rect x="88.8" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (67,736,617 samples, 0.21%)</title><rect x="1157.4" y="773" width="2.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1160.42" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (94,408,648 samples, 0.29%)</title><rect x="179.1" y="1045" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="1055.5" ></text>
</g>
<g >
<title>IT_outputs::get_routing_table (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="869" width="1.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1166.66" y="879.5" ></text>
</g>
<g >
<title>free_unref_page_commit (15,580,879 samples, 0.05%)</title><rect x="1171.0" y="981" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1173.97" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="917" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (112,492,912 samples, 0.35%)</title><rect x="167.3" y="773" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.27" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (34,036,950 samples, 0.11%)</title><rect x="105.9" y="469" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.94" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (57,347,471 samples, 0.18%)</title><rect x="140.8" y="597" width="2.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="143.80" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,133,890 samples, 0.08%)</title><rect x="133.4" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.36" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (82,891,229 samples, 0.26%)</title><rect x="171.4" y="821" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (183,468,573 samples, 0.57%)</title><rect x="123.4" y="517" width="6.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.37" y="527.5" ></text>
</g>
<g >
<title>_PyDict_GetItemWithError (33,320,178 samples, 0.10%)</title><rect x="85.7" y="469" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="88.70" y="479.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (102,636,967 samples, 0.32%)</title><rect x="940.8" y="725" width="3.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="943.85" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,422,000 samples, 0.16%)</title><rect x="98.7" y="885" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="101.71" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,192,473 samples, 0.11%)</title><rect x="44.8" y="661" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="47.78" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,005,344 samples, 0.08%)</title><rect x="102.8" y="741" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.77" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (57,347,471 samples, 0.18%)</title><rect x="140.8" y="581" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.80" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (328,521,950 samples, 1.02%)</title><rect x="179.1" y="1125" width="12.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="1135.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (34,143,831 samples, 0.11%)</title><rect x="393.3" y="709" width="1.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="396.27" y="719.5" ></text>
</g>
<g >
<title>_aligned_strided_to_strided_size1_srcstride0 (67,790,765 samples, 0.21%)</title><rect x="41.3" y="917" width="2.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="44.33" y="927.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (269,836,299 samples, 0.84%)</title><rect x="122.4" y="725" width="9.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="125.41" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (34,231,120 samples, 0.11%)</title><rect x="1132.4" y="757" width="1.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1135.39" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (434,372,141 samples, 1.35%)</title><rect x="49.5" y="901" width="16.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.50" y="911.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (26,184,488 samples, 0.08%)</title><rect x="741.6" y="581" width="1.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="744.61" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,042,290 samples, 0.11%)</title><rect x="166.0" y="517" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="169.02" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (104,839,935 samples, 0.33%)</title><rect x="124.3" y="469" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.33" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (438,953,368 samples, 1.37%)</title><rect x="142.9" y="917" width="16.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="145.90" y="927.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,190,262 samples, 0.08%)</title><rect x="39.4" y="965" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="42.40" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (104,833,682 samples, 0.33%)</title><rect x="162.2" y="485" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="165.16" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="1125" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="1135.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (58,854,880 samples, 0.18%)</title><rect x="176.9" y="773" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="179.94" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,068,038 samples, 0.11%)</title><rect x="48.2" y="677" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="51.25" y="687.5" ></text>
</g>
<g >
<title>tcache_get (31,739,724 samples, 0.10%)</title><rect x="64.3" y="245" width="1.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="67.30" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="885" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="895.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (240,367,898 samples, 0.75%)</title><rect x="66.4" y="741" width="8.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="69.42" y="751.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (97,371,504 samples, 0.30%)</title><rect x="49.5" y="693" width="3.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="52.50" y="703.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,020,513 samples, 0.08%)</title><rect x="120.3" y="517" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="123.30" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (28,272,766 samples, 0.09%)</title><rect x="132.3" y="741" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="135.32" y="751.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (227,199,597 samples, 0.71%)</title><rect x="53.1" y="661" width="8.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="56.08" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,215,913 samples, 0.08%)</title><rect x="159.1" y="965" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="162.06" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,133,452 samples, 0.10%)</title><rect x="89.7" y="645" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="92.65" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (102,265,232 samples, 0.32%)</title><rect x="1102.3" y="773" width="3.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1105.32" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::vector (102,556,856 samples, 0.32%)</title><rect x="1106.1" y="805" width="3.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1109.08" y="815.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (102,434,400 samples, 0.32%)</title><rect x="1020.9" y="725" width="3.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1023.93" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (240,367,898 samples, 0.75%)</title><rect x="66.4" y="821" width="8.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.42" y="831.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::~unordered_map (67,999,094 samples, 0.21%)</title><rect x="1161.2" y="837" width="2.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1164.16" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,200,261 samples, 0.08%)</title><rect x="184.5" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.50" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,355,002 samples, 0.16%)</title><rect x="110.1" y="821" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="113.10" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,115,976 samples, 0.08%)</title><rect x="100.6" y="901" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.63" y="911.5" ></text>
</g>
<g >
<title>boost::edge&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (34,001,235 samples, 0.11%)</title><rect x="848.2" y="821" width="1.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="851.24" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,531,491 samples, 0.24%)</title><rect x="75.3" y="805" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="78.26" y="815.5" ></text>
</g>
<g >
<title>filename_lookup (145,151,908 samples, 0.45%)</title><rect x="144.7" y="357" width="5.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="147.71" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,142,413 samples, 0.11%)</title><rect x="103.7" y="645" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="106.73" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (68,196,850 samples, 0.21%)</title><rect x="179.1" y="501" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,205,543 samples, 0.08%)</title><rect x="138.8" y="501" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="141.75" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (94,408,648 samples, 0.29%)</title><rect x="179.1" y="853" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (52,355,002 samples, 0.16%)</title><rect x="110.1" y="773" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="783.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (102,318,155 samples, 0.32%)</title><rect x="964.7" y="645" width="3.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="967.65" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (25,115,976 samples, 0.08%)</title><rect x="100.6" y="933" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (2,287,320,364 samples, 7.12%)</title><rect x="735.8" y="869" width="84.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="738.76" y="879.5" >[python3...</text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (60,077,733 samples, 0.19%)</title><rect x="69.3" y="549" width="2.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="72.31" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (34,142,413 samples, 0.11%)</title><rect x="103.7" y="709" width="1.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="106.73" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,207,868 samples, 0.08%)</title><rect x="119.3" y="517" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="122.33" y="527.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (306,503,619 samples, 0.95%)</title><rect x="974.6" y="725" width="11.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="977.64" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::begin (33,852,624 samples, 0.11%)</title><rect x="1101.1" y="773" width="1.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1104.08" y="783.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (179,935,509 samples, 0.56%)</title><rect x="411.2" y="1029" width="6.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="414.17" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (33,621,160 samples, 0.10%)</title><rect x="90.9" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.87" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,178,443 samples, 0.11%)</title><rect x="175.7" y="613" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.69" y="623.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,979,119 samples, 0.11%)</title><rect x="130.1" y="581" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="133.11" y="591.5" ></text>
</g>
<g >
<title>[unknown] (10,181,756,388 samples, 31.71%)</title><rect x="35.6" y="1173" width="374.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="38.55" y="1183.5" >[unknown]</text>
</g>
<g >
<title>[python3.12] (69,172,772 samples, 0.22%)</title><rect x="136.2" y="549" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.21" y="559.5" ></text>
</g>
<g >
<title>__do_page_fault (26,184,488 samples, 0.08%)</title><rect x="741.6" y="517" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="744.61" y="527.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,205,543 samples, 0.08%)</title><rect x="138.8" y="485" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="141.75" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,961 samples, 0.08%)</title><rect x="115.2" y="725" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.19" y="735.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (120,752,675 samples, 0.38%)</title><rect x="810.0" y="597" width="4.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="812.97" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (54,964,377 samples, 0.17%)</title><rect x="88.8" y="725" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="91.85" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,717,016 samples, 0.25%)</title><rect x="167.3" y="549" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="170.27" y="559.5" ></text>
</g>
<g >
<title>nfs_file_read (34,207,635 samples, 0.11%)</title><rect x="814.4" y="373" width="1.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="817.41" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (34,212,146 samples, 0.11%)</title><rect x="150.0" y="469" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.04" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_check_len (33,983,267 samples, 0.11%)</title><rect x="1104.8" y="757" width="1.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1107.83" y="767.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch2&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (4,665,930,170 samples, 14.53%)</title><rect x="862.0" y="773" width="171.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="865.03" y="783.5" >boost::detail::dijkstr..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (355,629,575 samples, 1.11%)</title><rect x="121.3" y="933" width="13.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="124.25" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (2,174,593,621 samples, 6.77%)</title><rect x="738.0" y="709" width="79.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="740.98" y="719.5" >[python3...</text>
</g>
<g >
<title>[python3.12] (26,111,936 samples, 0.08%)</title><rect x="75.3" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.26" y="559.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (34,165,907 samples, 0.11%)</title><rect x="180.4" y="421" width="1.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="183.36" y="431.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_single_source (135,817,078 samples, 0.42%)</title><rect x="822.0" y="805" width="5.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="824.97" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,200,261 samples, 0.08%)</title><rect x="184.5" y="597" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.50" y="607.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (178,160,367 samples, 0.55%)</title><rect x="151.3" y="709" width="6.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="154.30" y="719.5" ></text>
</g>
<g >
<title>do_user_addr_fault (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="533" width="3.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1170.43" y="543.5" ></text>
</g>
<g >
<title>page_fault (31,739,724 samples, 0.10%)</title><rect x="64.3" y="229" width="1.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="67.30" y="239.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (26,232,961 samples, 0.08%)</title><rect x="115.2" y="437" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="118.19" y="447.5" ></text>
</g>
<g >
<title>__pthread_cond_signal (34,231,505 samples, 0.11%)</title><rect x="203.7" y="661" width="1.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="206.65" y="671.5" ></text>
</g>
<g >
<title>PyArray_Scalar (33,275,088 samples, 0.10%)</title><rect x="730.8" y="965" width="1.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="733.82" y="975.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (301,222,919 samples, 0.94%)</title><rect x="121.3" y="821" width="11.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="124.25" y="831.5" ></text>
</g>
<g >
<title>PyArray_ToList (34,108,855 samples, 0.11%)</title><rect x="93.1" y="437" width="1.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="96.05" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,645,686 samples, 0.24%)</title><rect x="188.3" y="1029" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="191.29" y="1039.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,190,262 samples, 0.08%)</title><rect x="39.4" y="469" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.40" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,621,160 samples, 0.10%)</title><rect x="90.9" y="773" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="93.87" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (227,199,597 samples, 0.71%)</title><rect x="53.1" y="581" width="8.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="56.08" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (34,073,660 samples, 0.11%)</title><rect x="723.1" y="997" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="726.06" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,054,307 samples, 0.08%)</title><rect x="43.8" y="1045" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.82" y="1055.5" ></text>
</g>
<g >
<title>[python3.12] (111,608,185 samples, 0.35%)</title><rect x="92.1" y="805" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.10" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (204,716,044 samples, 0.64%)</title><rect x="96.2" y="1141" width="7.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="1151.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,559 samples, 0.08%)</title><rect x="727.7" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="730.66" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (33,503,708 samples, 0.10%)</title><rect x="51.8" y="485" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.85" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (33,865,447 samples, 0.11%)</title><rect x="69.3" y="453" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.31" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,255,543 samples, 0.24%)</title><rect x="110.1" y="917" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="113.10" y="927.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,210,559 samples, 0.08%)</title><rect x="727.7" y="645" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="730.66" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,936 samples, 0.08%)</title><rect x="75.3" y="693" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.26" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (34,036,950 samples, 0.11%)</title><rect x="105.9" y="485" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.94" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,214,028 samples, 0.08%)</title><rect x="77.2" y="437" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="80.18" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (908,053,331 samples, 2.83%)</title><rect x="44.8" y="1157" width="33.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="47.78" y="1167.5" >Py..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,280 samples, 0.08%)</title><rect x="38.4" y="549" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="41.44" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (128,575,815 samples, 0.40%)</title><rect x="44.8" y="885" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="895.5" ></text>
</g>
<g >
<title>get_page_from_freelist (306,286,248 samples, 0.95%)</title><rect x="350.8" y="501" width="11.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="353.79" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,216,455 samples, 0.08%)</title><rect x="188.3" y="501" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.29" y="511.5" ></text>
</g>
<g >
<title>double_add (33,920,397 samples, 0.11%)</title><rect x="729.6" y="965" width="1.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="732.58" y="975.5" ></text>
</g>
<g >
<title>std::multimap&lt;float, unsigned long, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::insert&lt;std::pair&lt;float, unsigned long&gt; &gt; (136,381,490 samples, 0.42%)</title><rect x="1144.9" y="821" width="5.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1147.90" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (240,367,898 samples, 0.75%)</title><rect x="66.4" y="789" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.42" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,631,358 samples, 0.24%)</title><rect x="36.5" y="1045" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="39.51" y="1055.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (76,869,173 samples, 0.24%)</title><rect x="185.5" y="885" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="188.46" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,317 samples, 0.08%)</title><rect x="35.6" y="1061" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="38.55" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="533" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="543.5" ></text>
</g>
<g >
<title>__do_page_fault (31,739,724 samples, 0.10%)</title><rect x="64.3" y="197" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="67.30" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,496,862 samples, 0.16%)</title><rect x="117.4" y="597" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="120.40" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,287,715 samples, 0.10%)</title><rect x="157.8" y="389" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="160.85" y="399.5" ></text>
</g>
<g >
<title>build_c_helpers_dict (32,066,320 samples, 0.10%)</title><rect x="152.5" y="437" width="1.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="155.53" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,916 samples, 0.08%)</title><rect x="182.6" y="741" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="751.5" ></text>
</g>
<g >
<title>new_sync_read (33,774,270 samples, 0.11%)</title><rect x="174.4" y="293" width="1.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="177.45" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,386,620 samples, 0.10%)</title><rect x="121.3" y="597" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="124.25" y="607.5" ></text>
</g>
<g >
<title>_int_free (26,280,415 samples, 0.08%)</title><rect x="737.0" y="757" width="1.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="740.02" y="767.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,036,950 samples, 0.11%)</title><rect x="105.9" y="565" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="108.94" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (33,510,882 samples, 0.10%)</title><rect x="71.5" y="597" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.52" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,422,000 samples, 0.16%)</title><rect x="98.7" y="533" width="1.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="101.71" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,774,270 samples, 0.11%)</title><rect x="174.4" y="789" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="177.45" y="799.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (34,004,867 samples, 0.11%)</title><rect x="1134.9" y="725" width="1.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1137.90" y="735.5" ></text>
</g>
<g >
<title>unmap_page_range (131,919,136 samples, 0.41%)</title><rect x="1176.4" y="1029" width="4.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1179.35" y="1039.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,210,732 samples, 0.08%)</title><rect x="36.5" y="693" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="39.51" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,140,846 samples, 0.11%)</title><rect x="116.1" y="533" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="119.15" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,320,178 samples, 0.10%)</title><rect x="85.7" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.70" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (269,836,299 samples, 0.84%)</title><rect x="122.4" y="757" width="9.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="125.41" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,187,720 samples, 0.08%)</title><rect x="86.9" y="725" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="89.92" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (228,505,286 samples, 0.71%)</title><rect x="142.9" y="853" width="8.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (197,062,549 samples, 0.61%)</title><rect x="160.0" y="981" width="7.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.03" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,420,626 samples, 0.16%)</title><rect x="37.5" y="741" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="40.48" y="751.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,123,073 samples, 0.10%)</title><rect x="101.6" y="773" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="104.55" y="783.5" ></text>
</g>
<g >
<title>operator new (33,701,622 samples, 0.10%)</title><rect x="929.6" y="677" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="932.60" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (120,190,804 samples, 0.37%)</title><rect x="39.4" y="1013" width="4.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="42.40" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (97,371,504 samples, 0.30%)</title><rect x="49.5" y="805" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.50" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,186,266 samples, 0.08%)</title><rect x="183.5" y="613" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.54" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,774,270 samples, 0.11%)</title><rect x="174.4" y="725" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.45" y="735.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (34,207,635 samples, 0.11%)</title><rect x="814.4" y="581" width="1.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="817.41" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallFinalizerFromDealloc (33,775,896 samples, 0.11%)</title><rect x="170.2" y="517" width="1.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="173.16" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,125 samples, 0.08%)</title><rect x="156.9" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.88" y="335.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,213,614 samples, 0.08%)</title><rect x="87.9" y="757" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="90.89" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,215,913 samples, 0.08%)</title><rect x="159.1" y="693" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="162.06" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (5,670,297,534 samples, 17.66%)</title><rect x="191.2" y="1077" width="208.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.18" y="1087.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (67,768,473 samples, 0.21%)</title><rect x="970.9" y="677" width="2.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="973.91" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (34,002,787 samples, 0.11%)</title><rect x="933.4" y="677" width="1.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="936.36" y="687.5" ></text>
</g>
<g >
<title>_int_malloc (34,172,378 samples, 0.11%)</title><rect x="1074.8" y="581" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1077.77" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (76,869,173 samples, 0.24%)</title><rect x="185.5" y="549" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.46" y="559.5" ></text>
</g>
<g >
<title>[_ctypes.cpython-312-x86_64-linux-gnu.so] (31,739,724 samples, 0.10%)</title><rect x="64.3" y="565" width="1.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="67.30" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,059,380 samples, 0.11%)</title><rect x="394.5" y="885" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="397.52" y="895.5" ></text>
</g>
<g >
<title>_PyObject_Call (59,584,631 samples, 0.19%)</title><rect x="93.1" y="549" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.05" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (78,531,491 samples, 0.24%)</title><rect x="75.3" y="837" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.26" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,607 samples, 0.08%)</title><rect x="108.1" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.06" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (34,107,540 samples, 0.11%)</title><rect x="79.4" y="1125" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.39" y="1135.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (197,062,549 samples, 0.61%)</title><rect x="160.0" y="789" width="7.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="163.03" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,187,720 samples, 0.08%)</title><rect x="86.9" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="447.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (26,184,488 samples, 0.08%)</title><rect x="741.6" y="405" width="1.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="744.61" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,315,304 samples, 0.19%)</title><rect x="46.0" y="629" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="49.03" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (94,507,777 samples, 0.29%)</title><rect x="44.8" y="725" width="3.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="47.78" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,346 samples, 0.08%)</title><rect x="37.5" y="645" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.48" y="655.5" ></text>
</g>
<g >
<title>do_user_addr_fault (26,131,714 samples, 0.08%)</title><rect x="80.6" y="1045" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="83.65" y="1055.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,192,473 samples, 0.11%)</title><rect x="44.8" y="549" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="47.78" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="677" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (112,492,912 samples, 0.35%)</title><rect x="167.3" y="661" width="4.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="170.27" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,115,976 samples, 0.08%)</title><rect x="100.6" y="661" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="103.63" y="671.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,945,410 samples, 0.11%)</title><rect x="155.6" y="469" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="158.64" y="479.5" ></text>
</g>
<g >
<title>unmap_page_range (12,600,670 samples, 0.04%)</title><rect x="417.8" y="1013" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="420.78" y="1023.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, false, false&gt;::operator* (34,106,347 samples, 0.11%)</title><rect x="1025.9" y="741" width="1.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1028.94" y="751.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, false, false&gt;::operator++ (34,156,102 samples, 0.11%)</title><rect x="16.3" y="1157" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="19.27" y="1167.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (30,414,171 samples, 0.09%)</title><rect x="738.0" y="693" width="1.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="740.98" y="703.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (104,833,682 samples, 0.33%)</title><rect x="162.2" y="469" width="3.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="165.16" y="479.5" ></text>
</g>
<g >
<title>page_fault (238,981,658 samples, 0.74%)</title><rect x="1181.2" y="1173" width="8.8" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1184.22" y="1183.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,961 samples, 0.08%)</title><rect x="115.2" y="805" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.19" y="815.5" ></text>
</g>
<g >
<title>alloc_pages_vma (33,319,115 samples, 0.10%)</title><rect x="261.0" y="549" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="264.01" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,725,243 samples, 0.33%)</title><rect x="117.4" y="901" width="3.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="120.40" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,280 samples, 0.08%)</title><rect x="38.4" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.44" y="479.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (26,213,248 samples, 0.08%)</title><rect x="190.2" y="693" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="193.21" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,215,913 samples, 0.08%)</title><rect x="159.1" y="1045" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="162.06" y="1055.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::~adj_list_edge_iterator (34,256,754 samples, 0.11%)</title><rect x="847.0" y="821" width="1.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="849.99" y="831.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,200,261 samples, 0.08%)</title><rect x="184.5" y="501" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="187.50" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (197,062,549 samples, 0.61%)</title><rect x="160.0" y="757" width="7.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="163.03" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (55,566,826 samples, 0.17%)</title><rect x="108.1" y="981" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.06" y="991.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (204,148,373 samples, 0.64%)</title><rect x="834.5" y="805" width="7.5" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="837.46" y="815.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,042,290 samples, 0.11%)</title><rect x="166.0" y="469" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="169.02" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (76,869,173 samples, 0.24%)</title><rect x="185.5" y="917" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="188.46" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,054,307 samples, 0.08%)</title><rect x="43.8" y="757" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.82" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (34,207,635 samples, 0.11%)</title><rect x="814.4" y="469" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="817.41" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,133,452 samples, 0.10%)</title><rect x="89.7" y="709" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="92.65" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (78,631,358 samples, 0.24%)</title><rect x="36.5" y="997" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,267 samples, 0.08%)</title><rect x="176.9" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.94" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (318,899,389 samples, 0.99%)</title><rect x="66.4" y="965" width="11.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.42" y="975.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,205,986 samples, 0.08%)</title><rect x="65.5" y="965" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="68.46" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (228,505,286 samples, 0.71%)</title><rect x="142.9" y="645" width="8.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (197,062,549 samples, 0.61%)</title><rect x="160.0" y="821" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,614 samples, 0.08%)</title><rect x="87.9" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.89" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (58,239,049 samples, 0.18%)</title><rect x="100.6" y="1093" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="103.63" y="1103.5" ></text>
</g>
<g >
<title>[python3.12] (519,254,283 samples, 1.62%)</title><rect x="160.0" y="1109" width="19.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="1119.5" ></text>
</g>
<g >
<title>PyUnicode_EncodeFSDefault (28,822,507 samples, 0.09%)</title><rect x="141.8" y="357" width="1.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="144.85" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (227,199,597 samples, 0.71%)</title><rect x="53.1" y="613" width="8.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.08" y="623.5" ></text>
</g>
<g >
<title>_PyAST_Compile (26,201,368 samples, 0.08%)</title><rect x="105.0" y="517" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="107.98" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,133,890 samples, 0.08%)</title><rect x="133.4" y="629" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="136.36" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,916 samples, 0.08%)</title><rect x="182.6" y="773" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="783.5" ></text>
</g>
<g >
<title>PyObject_Malloc (26,131,714 samples, 0.08%)</title><rect x="80.6" y="1125" width="1.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="83.65" y="1135.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,133,890 samples, 0.08%)</title><rect x="133.4" y="501" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="136.36" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,455 samples, 0.08%)</title><rect x="188.3" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.29" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (76,869,173 samples, 0.24%)</title><rect x="185.5" y="469" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.46" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,005,344 samples, 0.08%)</title><rect x="102.8" y="613" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.77" y="623.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,211,916 samples, 0.08%)</title><rect x="182.6" y="613" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="185.57" y="623.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,054,307 samples, 0.08%)</title><rect x="43.8" y="981" width="1.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="46.82" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,621,160 samples, 0.10%)</title><rect x="90.9" y="549" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.87" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (202,723,556 samples, 0.63%)</title><rect x="135.5" y="949" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (183,468,573 samples, 0.57%)</title><rect x="123.4" y="533" width="6.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="126.37" y="543.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,178,443 samples, 0.11%)</title><rect x="175.7" y="533" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="178.69" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,538 samples, 0.08%)</title><rect x="54.0" y="549" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.04" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (21,830,925 samples, 0.07%)</title><rect x="88.8" y="469" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="91.85" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,320,178 samples, 0.10%)</title><rect x="85.7" y="789" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="88.70" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,005,344 samples, 0.08%)</title><rect x="102.8" y="789" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.77" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (30,911,433 samples, 0.10%)</title><rect x="134.3" y="901" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.32" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (34,081,457 samples, 0.11%)</title><rect x="398.3" y="917" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="401.27" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (33,320,178 samples, 0.10%)</title><rect x="85.7" y="997" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.70" y="1007.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,163,057 samples, 0.11%)</title><rect x="918.3" y="693" width="1.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="921.34" y="703.5" ></text>
</g>
<g >
<title>[[heap]] (33,668,712 samples, 0.10%)</title><rect x="10.0" y="1173" width="1.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.01" y="1183.5" ></text>
</g>
<g >
<title>[python3.12] (305,260,913 samples, 0.95%)</title><rect x="53.1" y="821" width="11.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.08" y="831.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,232,961 samples, 0.08%)</title><rect x="115.2" y="709" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="118.19" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (210,448,082 samples, 0.66%)</title><rect x="151.3" y="757" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.30" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,775,896 samples, 0.11%)</title><rect x="170.2" y="549" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="173.16" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,777 samples, 0.08%)</title><rect x="40.4" y="485" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="43.37" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (76,869,173 samples, 0.24%)</title><rect x="185.5" y="933" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.46" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="821" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (305,260,913 samples, 0.95%)</title><rect x="53.1" y="805" width="11.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="56.08" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,187,720 samples, 0.08%)</title><rect x="86.9" y="789" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="89.92" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,068,038 samples, 0.11%)</title><rect x="48.2" y="501" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="51.25" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (20,525,387 samples, 0.06%)</title><rect x="135.5" y="629" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (24,787,709 samples, 0.08%)</title><rect x="143.8" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="146.80" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="981" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (228,505,286 samples, 0.71%)</title><rect x="142.9" y="869" width="8.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.90" y="879.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (170,082,058 samples, 0.53%)</title><rect x="835.7" y="789" width="6.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="838.72" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,916 samples, 0.08%)</title><rect x="182.6" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="479.5" ></text>
</g>
<g >
<title>filename_lookup (26,207,202 samples, 0.08%)</title><rect x="129.1" y="373" width="1.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="132.15" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (34,073,660 samples, 0.11%)</title><rect x="723.1" y="981" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="726.06" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (25,900,541 samples, 0.08%)</title><rect x="112.0" y="789" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.02" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,432,438 samples, 0.16%)</title><rect x="188.3" y="757" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.29" y="767.5" ></text>
</g>
<g >
<title>__do_sys_newstat (26,207,202 samples, 0.08%)</title><rect x="129.1" y="421" width="1.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="132.15" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,005,344 samples, 0.08%)</title><rect x="102.8" y="949" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.77" y="959.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (28,272,766 samples, 0.09%)</title><rect x="132.3" y="517" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="135.32" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,646,613 samples, 0.10%)</title><rect x="177.9" y="501" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="180.91" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (94,408,648 samples, 0.29%)</title><rect x="179.1" y="821" width="3.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="182.10" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (25,644,292 samples, 0.08%)</title><rect x="63.4" y="565" width="0.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="66.35" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (240,367,898 samples, 0.75%)</title><rect x="66.4" y="725" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.42" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (23,069,911 samples, 0.07%)</title><rect x="726.8" y="597" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="729.81" y="607.5" ></text>
</g>
<g >
<title>PyObject_Dir (26,205,986 samples, 0.08%)</title><rect x="65.5" y="741" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="68.46" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,477 samples, 0.08%)</title><rect x="131.4" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.36" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (30,911,433 samples, 0.10%)</title><rect x="134.3" y="709" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.32" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,187,720 samples, 0.08%)</title><rect x="86.9" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="479.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (32,287,715 samples, 0.10%)</title><rect x="157.8" y="709" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="160.85" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (91,801,211 samples, 0.29%)</title><rect x="151.3" y="581" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.30" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="639.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (26,190,477 samples, 0.08%)</title><rect x="131.4" y="613" width="0.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="134.36" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (52,420,626 samples, 0.16%)</title><rect x="37.5" y="901" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.48" y="911.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::get_ptr_impl (68,264,100 samples, 0.21%)</title><rect x="843.2" y="773" width="2.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="846.22" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,386,527 samples, 0.16%)</title><rect x="183.5" y="821" width="2.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="186.54" y="831.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (75,339,652 samples, 0.23%)</title><rect x="726.8" y="821" width="2.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="729.81" y="831.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (69,172,772 samples, 0.22%)</title><rect x="136.2" y="597" width="2.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="139.21" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_erase (34,267,791 samples, 0.11%)</title><rect x="1149.9" y="741" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1152.91" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,771 samples, 0.08%)</title><rect x="153.7" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.71" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,777 samples, 0.08%)</title><rect x="40.4" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.37" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (120,471,651 samples, 0.38%)</title><rect x="96.2" y="1109" width="4.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.20" y="1119.5" ></text>
</g>
<g >
<title>[python3.12] (34,099,759 samples, 0.11%)</title><rect x="46.0" y="517" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.03" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="933" width="3.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1170.43" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (25,115,976 samples, 0.08%)</title><rect x="100.6" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (68,203,714 samples, 0.21%)</title><rect x="1033.5" y="741" width="2.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1036.47" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (197,062,549 samples, 0.61%)</title><rect x="160.0" y="917" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,049,651 samples, 0.21%)</title><rect x="96.2" y="741" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.20" y="751.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_relaxed&gt; (34,222,463 samples, 0.11%)</title><rect x="943.4" y="709" width="1.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="946.36" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,192,473 samples, 0.11%)</title><rect x="44.8" y="645" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.78" y="655.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,320,178 samples, 0.10%)</title><rect x="85.7" y="645" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="88.70" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,287,715 samples, 0.10%)</title><rect x="157.8" y="469" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="160.85" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (33,805,372 samples, 0.11%)</title><rect x="1161.2" y="789" width="1.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1164.16" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (182,198,169 samples, 0.57%)</title><rect x="136.2" y="661" width="6.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.21" y="671.5" ></text>
</g>
<g >
<title>all (32,114,025,607 samples, 100%)</title><rect x="10.0" y="1205" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" ></text>
</g>
<g >
<title>PyRun_StringFlags (26,215,545 samples, 0.08%)</title><rect x="47.3" y="485" width="0.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="50.29" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="517" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,777 samples, 0.08%)</title><rect x="40.4" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.37" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (78,628,651 samples, 0.24%)</title><rect x="125.3" y="453" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.29" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (32,287,715 samples, 0.10%)</title><rect x="157.8" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.85" y="543.5" ></text>
</g>
<g >
<title>do_page_fault (30,414,171 samples, 0.09%)</title><rect x="738.0" y="613" width="1.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="740.98" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,732 samples, 0.08%)</title><rect x="36.5" y="885" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="39.51" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,638,666 samples, 0.24%)</title><rect x="66.4" y="517" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.42" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,190,262 samples, 0.08%)</title><rect x="39.4" y="501" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.40" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,005,344 samples, 0.08%)</title><rect x="102.8" y="885" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.77" y="895.5" ></text>
</g>
<g >
<title>new_sync_read (26,208,267 samples, 0.08%)</title><rect x="176.9" y="325" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="179.94" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25,900,541 samples, 0.08%)</title><rect x="112.0" y="533" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="115.02" y="543.5" ></text>
</g>
<g >
<title>PyLong_AsLong (34,060,093 samples, 0.11%)</title><rect x="11.2" y="1157" width="1.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="14.25" y="1167.5" ></text>
</g>
<g >
<title>[python3.12] (439,736,773 samples, 1.37%)</title><rect x="142.9" y="1045" width="16.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="1055.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (36,691,942 samples, 0.11%)</title><rect x="399.5" y="1141" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="402.53" y="1151.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (197,062,549 samples, 0.61%)</title><rect x="160.0" y="869" width="7.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="163.03" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (20,525,387 samples, 0.06%)</title><rect x="135.5" y="645" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,005,344 samples, 0.08%)</title><rect x="102.8" y="997" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.77" y="1007.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (82,891,229 samples, 0.26%)</title><rect x="171.4" y="837" width="3.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="174.40" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="805" width="1.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1166.66" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethod (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="1045" width="3.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1170.43" y="1055.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,210,732 samples, 0.08%)</title><rect x="36.5" y="805" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="39.51" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (33,521,120 samples, 0.10%)</title><rect x="151.3" y="373" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="154.30" y="383.5" ></text>
</g>
<g >
<title>PyObject_GetItem (33,275,088 samples, 0.10%)</title><rect x="730.8" y="997" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="733.82" y="1007.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (34,081,228 samples, 0.11%)</title><rect x="78.1" y="1109" width="1.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="81.14" y="1119.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (228,505,286 samples, 0.71%)</title><rect x="142.9" y="837" width="8.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.90" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,983 samples, 0.08%)</title><rect x="189.2" y="581" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="192.25" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (58,854,880 samples, 0.18%)</title><rect x="176.9" y="661" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="179.94" y="671.5" ></text>
</g>
<g >
<title>inflate (1,137,964,632 samples, 3.54%)</title><rect x="767.2" y="613" width="41.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="770.20" y="623.5" >inf..</text>
</g>
<g >
<title>start_thread (7,811,912,643 samples, 24.33%)</title><rect x="411.2" y="1157" width="287.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="414.17" y="1167.5" >start_thread</text>
</g>
<g >
<title>PyObject_VectorcallMethod (34,059,380 samples, 0.11%)</title><rect x="394.5" y="821" width="1.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="397.52" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,777 samples, 0.08%)</title><rect x="40.4" y="965" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.37" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call (30,911,433 samples, 0.10%)</title><rect x="134.3" y="757" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="137.32" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,352,219 samples, 0.09%)</title><rect x="109.0" y="517" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.02" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="949" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="959.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (241,606,014 samples, 0.75%)</title><rect x="809.0" y="661" width="8.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="812.01" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (33,775,896 samples, 0.11%)</title><rect x="170.2" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.16" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (112,492,912 samples, 0.35%)</title><rect x="167.3" y="805" width="4.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="170.27" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,248 samples, 0.08%)</title><rect x="190.2" y="709" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.21" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (460,354,818 samples, 1.43%)</title><rect x="117.4" y="981" width="16.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="120.40" y="991.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (26,184,488 samples, 0.08%)</title><rect x="741.6" y="613" width="1.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="744.61" y="623.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (34,175,738 samples, 0.11%)</title><rect x="937.1" y="725" width="1.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="940.11" y="735.5" ></text>
</g>
<g >
<title>python3.12 (32,113,793,055 samples, 100.00%)</title><rect x="10.0" y="1189" width="1180.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="13.01" y="1199.5" >python3.12</text>
</g>
<g >
<title>page_fault (26,184,488 samples, 0.08%)</title><rect x="741.6" y="549" width="1.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="744.61" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (78,638,666 samples, 0.24%)</title><rect x="66.4" y="597" width="2.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="69.42" y="607.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,107,540 samples, 0.11%)</title><rect x="79.4" y="1045" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="82.39" y="1055.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,798 samples, 0.08%)</title><rect x="181.6" y="709" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.61" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (12,059,563,611 samples, 37.55%)</title><rect x="724.3" y="1061" width="443.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="727.31" y="1071.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (52,419,555 samples, 0.16%)</title><rect x="76.2" y="613" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.22" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,212,146 samples, 0.11%)</title><rect x="150.0" y="533" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.04" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size (34,004,867 samples, 0.11%)</title><rect x="1134.9" y="741" width="1.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1137.90" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (60,238,318 samples, 0.19%)</title><rect x="105.0" y="725" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="735.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;, IT_outputs, , pybind11::name, pybind11::is_method, pybind11::sibling&gt; (102,425,009 samples, 0.32%)</title><rect x="1163.7" y="949" width="3.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1166.66" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (25,475,776 samples, 0.08%)</title><rect x="94.3" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.31" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (301,222,919 samples, 0.94%)</title><rect x="121.3" y="789" width="11.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="124.25" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="399.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,162,287 samples, 0.08%)</title><rect x="111.1" y="453" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="114.06" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (355,629,575 samples, 1.11%)</title><rect x="121.3" y="949" width="13.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.25" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (1,834,279,469 samples, 5.71%)</title><rect x="741.6" y="629" width="67.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="744.61" y="639.5" >[python..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size (34,004,867 samples, 0.11%)</title><rect x="1134.9" y="757" width="1.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1137.90" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (182,198,169 samples, 0.57%)</title><rect x="136.2" y="645" width="6.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.21" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (34,207,635 samples, 0.11%)</title><rect x="814.4" y="485" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="817.41" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (76,869,173 samples, 0.24%)</title><rect x="185.5" y="901" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.46" y="911.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (182,198,169 samples, 0.57%)</title><rect x="136.2" y="629" width="6.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="139.21" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,401,334 samples, 0.16%)</title><rect x="86.9" y="933" width="1.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="89.92" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (202,723,556 samples, 0.63%)</title><rect x="135.5" y="821" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="831.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,066,320 samples, 0.10%)</title><rect x="152.5" y="501" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="155.53" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (78,638,666 samples, 0.24%)</title><rect x="66.4" y="549" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.42" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,320,178 samples, 0.10%)</title><rect x="85.7" y="965" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="88.70" y="975.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (33,319,115 samples, 0.10%)</title><rect x="261.0" y="533" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="264.01" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (28,272,766 samples, 0.09%)</title><rect x="132.3" y="565" width="1.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="135.32" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (78,645,686 samples, 0.24%)</title><rect x="188.3" y="1077" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.29" y="1087.5" ></text>
</g>
<g >
<title>[python3.12] (26,198,130 samples, 0.08%)</title><rect x="122.4" y="597" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.41" y="607.5" ></text>
</g>
<g >
<title>page_fault (33,774,270 samples, 0.11%)</title><rect x="174.4" y="197" width="1.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="177.45" y="207.5" ></text>
</g>
<g >
<title>do_anonymous_page (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="485" width="3.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1170.43" y="495.5" ></text>
</g>
<g >
<title>do_mmap (25,900,541 samples, 0.08%)</title><rect x="112.0" y="453" width="1.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="115.02" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (318,899,389 samples, 0.99%)</title><rect x="66.4" y="1045" width="11.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.42" y="1055.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (34,172,378 samples, 0.11%)</title><rect x="1074.8" y="757" width="1.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1077.77" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (94,408,648 samples, 0.29%)</title><rect x="179.1" y="997" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="182.10" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (2,144,179,450 samples, 6.68%)</title><rect x="739.1" y="693" width="78.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="742.10" y="703.5" >[python3...</text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (33,878,158 samples, 0.11%)</title><rect x="823.2" y="773" width="1.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="826.21" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::__normal_iterator (34,192,795 samples, 0.11%)</title><rect x="1073.5" y="789" width="1.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1076.51" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,644,292 samples, 0.08%)</title><rect x="63.4" y="613" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="66.35" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,125 samples, 0.08%)</title><rect x="156.9" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.88" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (32,967,666 samples, 0.10%)</title><rect x="733.3" y="837" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="736.30" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (33,347,243 samples, 0.10%)</title><rect x="1069.8" y="789" width="1.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1072.78" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (31,977,548 samples, 0.10%)</title><rect x="160.0" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,775,896 samples, 0.11%)</title><rect x="170.2" y="453" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="173.16" y="463.5" ></text>
</g>
<g >
<title>new_sync_read (34,207,635 samples, 0.11%)</title><rect x="814.4" y="389" width="1.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="817.41" y="399.5" ></text>
</g>
<g >
<title>boost::optional&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::operator (68,264,100 samples, 0.21%)</title><rect x="843.2" y="789" width="2.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="846.22" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (202,723,556 samples, 0.63%)</title><rect x="135.5" y="965" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="975.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,209,777 samples, 0.08%)</title><rect x="40.4" y="501" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="43.37" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (54,964,377 samples, 0.17%)</title><rect x="88.8" y="933" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="91.85" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="581" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (93,033,323 samples, 0.29%)</title><rect x="175.7" y="997" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="178.69" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (34,042,290 samples, 0.11%)</title><rect x="166.0" y="501" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.02" y="511.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (23,433,938 samples, 0.07%)</title><rect x="107.2" y="677" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="110.19" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,123,073 samples, 0.10%)</title><rect x="101.6" y="869" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="104.55" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (83,672,256 samples, 0.26%)</title><rect x="105.0" y="805" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (120,190,804 samples, 0.37%)</title><rect x="39.4" y="1125" width="4.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="42.40" y="1135.5" ></text>
</g>
<g >
<title>[python3.12] (32,967,666 samples, 0.10%)</title><rect x="733.3" y="789" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="736.30" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,207,202 samples, 0.08%)</title><rect x="129.1" y="469" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="132.15" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (29,352,219 samples, 0.09%)</title><rect x="109.0" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.02" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (55,566,826 samples, 0.17%)</title><rect x="108.1" y="901" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.06" y="911.5" ></text>
</g>
<g >
<title>__vfs_read (33,774,270 samples, 0.11%)</title><rect x="174.4" y="309" width="1.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="177.45" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (34,178,443 samples, 0.11%)</title><rect x="175.7" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.69" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_relocate (33,928,531 samples, 0.11%)</title><rect x="1099.8" y="773" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1102.83" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (76,869,173 samples, 0.24%)</title><rect x="185.5" y="629" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="188.46" y="639.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (34,071,187 samples, 0.11%)</title><rect x="405.9" y="1157" width="1.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="408.92" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (34,237,754 samples, 0.11%)</title><rect x="932.1" y="645" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="935.10" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (83,672,256 samples, 0.26%)</title><rect x="105.0" y="917" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="927.5" ></text>
</g>
<g >
<title>__ieee754_pow_sse2 (34,046,960 samples, 0.11%)</title><rect x="820.7" y="805" width="1.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="823.72" y="815.5" ></text>
</g>
<g >
<title>__handle_mm_fault (35,988,363 samples, 0.11%)</title><rect x="59.1" y="357" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="62.14" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (33,621,160 samples, 0.10%)</title><rect x="90.9" y="709" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.87" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (34,034,859 samples, 0.11%)</title><rect x="732.0" y="981" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="735.05" y="991.5" ></text>
</g>
<g >
<title>__handle_mm_fault (26,131,714 samples, 0.08%)</title><rect x="80.6" y="1013" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="83.65" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (76,869,173 samples, 0.24%)</title><rect x="185.5" y="533" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.46" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (32,287,715 samples, 0.10%)</title><rect x="157.8" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.85" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (195,384,141 samples, 0.61%)</title><rect x="167.3" y="1013" width="7.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="170.27" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_Call (21,830,925 samples, 0.07%)</title><rect x="88.8" y="581" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="91.85" y="591.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (33,497,208 samples, 0.10%)</title><rect x="927.1" y="661" width="1.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="930.11" y="671.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (26,208,267 samples, 0.08%)</title><rect x="176.9" y="309" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="179.94" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (33,607,153 samples, 0.10%)</title><rect x="1157.4" y="741" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1160.42" y="751.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (169,849,633 samples, 0.53%)</title><rect x="1008.4" y="693" width="6.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1011.41" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,364,649 samples, 0.16%)</title><rect x="55.0" y="485" width="1.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="58.00" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (23,433,938 samples, 0.07%)</title><rect x="107.2" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.19" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (34,211,878 samples, 0.11%)</title><rect x="1151.2" y="789" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1154.17" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,644,292 samples, 0.08%)</title><rect x="63.4" y="597" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="66.35" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,320,178 samples, 0.10%)</title><rect x="85.7" y="901" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.70" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,545 samples, 0.08%)</title><rect x="47.3" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="50.29" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,717,016 samples, 0.25%)</title><rect x="167.3" y="517" width="2.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="170.27" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,368 samples, 0.08%)</title><rect x="105.0" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="789" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="799.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (34,142,413 samples, 0.11%)</title><rect x="103.7" y="837" width="1.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="106.73" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::max_size (34,067,986 samples, 0.11%)</title><rect x="1098.6" y="757" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1101.58" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,020,513 samples, 0.08%)</title><rect x="120.3" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.30" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,125 samples, 0.08%)</title><rect x="156.9" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.88" y="351.5" ></text>
</g>
<g >
<title>x86_pmu_enable (3,620,968 samples, 0.01%)</title><rect x="698.0" y="997" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="701.04" y="1007.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,232,961 samples, 0.08%)</title><rect x="115.2" y="533" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="118.19" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,115,976 samples, 0.08%)</title><rect x="100.6" y="741" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.63" y="751.5" ></text>
</g>
<g >
<title>change_protection_range (34,078,551 samples, 0.11%)</title><rect x="915.8" y="565" width="1.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="918.83" y="575.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_not_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (67,643,168 samples, 0.21%)</title><rect x="938.4" y="725" width="2.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="941.36" y="735.5" ></text>
</g>
<g >
<title>clear_page_erms (26,131,714 samples, 0.08%)</title><rect x="80.6" y="933" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="83.65" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="453" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size (34,002,787 samples, 0.11%)</title><rect x="933.4" y="661" width="1.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="936.36" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,646,613 samples, 0.10%)</title><rect x="177.9" y="533" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="180.91" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,059,182 samples, 0.08%)</title><rect x="728.6" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="731.62" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (202,723,556 samples, 0.63%)</title><rect x="135.5" y="1045" width="7.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="138.46" y="1055.5" ></text>
</g>
<g >
<title>[python3.12] (23,433,938 samples, 0.07%)</title><rect x="107.2" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.19" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (2,287,320,364 samples, 7.12%)</title><rect x="735.8" y="853" width="84.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="738.76" y="863.5" >[python3...</text>
</g>
<g >
<title>[python3.12] (32,066,320 samples, 0.10%)</title><rect x="152.5" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.53" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (305,260,913 samples, 0.95%)</title><rect x="53.1" y="725" width="11.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.08" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,267 samples, 0.08%)</title><rect x="176.9" y="533" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.94" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (491,266,251 samples, 1.53%)</title><rect x="117.4" y="1125" width="18.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="1135.5" ></text>
</g>
<g >
<title>do_user_addr_fault (26,207,779 samples, 0.08%)</title><rect x="126.3" y="373" width="0.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="129.26" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,172,378 samples, 0.11%)</title><rect x="1074.8" y="773" width="1.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1077.77" y="783.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,187,720 samples, 0.08%)</title><rect x="86.9" y="597" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="89.92" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (197,062,549 samples, 0.61%)</title><rect x="160.0" y="1013" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (33,492,196 samples, 0.10%)</title><rect x="885.8" y="693" width="1.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="888.81" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (33,320,178 samples, 0.10%)</title><rect x="85.7" y="869" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.70" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (20,525,387 samples, 0.06%)</title><rect x="135.5" y="549" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,422,000 samples, 0.16%)</title><rect x="98.7" y="1013" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.71" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (31,386,620 samples, 0.10%)</title><rect x="121.3" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.25" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="709" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="853" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,777 samples, 0.08%)</title><rect x="40.4" y="933" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.37" y="943.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,005,344 samples, 0.08%)</title><rect x="102.8" y="549" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="105.77" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (269,836,299 samples, 0.84%)</title><rect x="122.4" y="741" width="9.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.41" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (68,196,850 samples, 0.21%)</title><rect x="179.1" y="757" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="767.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (33,918,369 samples, 0.11%)</title><rect x="934.6" y="693" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="937.61" y="703.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (33,497,208 samples, 0.10%)</title><rect x="927.1" y="677" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="930.11" y="687.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (25,900,541 samples, 0.08%)</title><rect x="112.0" y="597" width="1.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="115.02" y="607.5" ></text>
</g>
<g >
<title>do_exit (131,919,136 samples, 0.41%)</title><rect x="1176.4" y="1109" width="4.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1179.35" y="1119.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,232,961 samples, 0.08%)</title><rect x="115.2" y="677" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="118.19" y="687.5" ></text>
</g>
<g >
<title>_Py_read (33,774,270 samples, 0.11%)</title><rect x="174.4" y="437" width="1.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="177.45" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,212,146 samples, 0.11%)</title><rect x="150.0" y="485" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="153.04" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,111,936 samples, 0.08%)</title><rect x="75.3" y="677" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="78.26" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,320,178 samples, 0.10%)</title><rect x="85.7" y="661" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.70" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,936 samples, 0.08%)</title><rect x="75.3" y="613" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.26" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,531,491 samples, 0.24%)</title><rect x="75.3" y="821" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="78.26" y="831.5" ></text>
</g>
<g >
<title>[tzconversion.cpython-312-x86_64-linux-gnu.so] (26,108,433 samples, 0.08%)</title><rect x="113.0" y="1157" width="0.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="115.97" y="1167.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,059,182 samples, 0.08%)</title><rect x="728.6" y="661" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="731.62" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,438 samples, 0.16%)</title><rect x="188.3" y="917" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.29" y="927.5" ></text>
</g>
<g >
<title>__anon_vma_prepare (26,054,307 samples, 0.08%)</title><rect x="43.8" y="421" width="1.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="46.82" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (30,911,433 samples, 0.10%)</title><rect x="134.3" y="917" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="137.32" y="927.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_single_s_d (8,039,599,431 samples, 25.03%)</title><rect x="849.5" y="821" width="295.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="852.49" y="831.5" >compute_all_shortest_paths_single_s_d</text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (34,237,754 samples, 0.11%)</title><rect x="932.1" y="677" width="1.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="935.10" y="687.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (68,203,714 samples, 0.21%)</title><rect x="1033.5" y="725" width="2.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1036.47" y="735.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (68,161,278 samples, 0.21%)</title><rect x="945.9" y="709" width="2.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="948.87" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (34,068,038 samples, 0.11%)</title><rect x="48.2" y="629" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.25" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (68,049,651 samples, 0.21%)</title><rect x="96.2" y="757" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="99.20" y="767.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (23,069,911 samples, 0.07%)</title><rect x="726.8" y="805" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="729.81" y="815.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,777 samples, 0.08%)</title><rect x="40.4" y="629" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="43.37" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (78,717,016 samples, 0.25%)</title><rect x="167.3" y="533" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.27" y="543.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (135,984,870 samples, 0.42%)</title><rect x="999.7" y="677" width="5.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1002.66" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,607 samples, 0.08%)</title><rect x="108.1" y="485" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="111.06" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,107,679 samples, 0.11%)</title><rect x="113.9" y="581" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.93" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (305,260,913 samples, 0.95%)</title><rect x="53.1" y="757" width="11.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="56.08" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,545 samples, 0.08%)</title><rect x="47.3" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="50.29" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt;::deallocate (33,805,372 samples, 0.11%)</title><rect x="1161.2" y="725" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1164.16" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (5,533,834,285 samples, 17.23%)</title><rect x="194.9" y="917" width="203.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.94" y="927.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (25,115,976 samples, 0.08%)</title><rect x="100.6" y="869" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="879.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,422,000 samples, 0.16%)</title><rect x="98.7" y="741" width="1.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="101.71" y="751.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,644,292 samples, 0.08%)</title><rect x="63.4" y="549" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="66.35" y="559.5" ></text>
</g>
<g >
<title>__brk (31,386,620 samples, 0.10%)</title><rect x="121.3" y="373" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="124.25" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,209,777 samples, 0.08%)</title><rect x="40.4" y="709" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="43.37" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,368 samples, 0.08%)</title><rect x="105.0" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,123,073 samples, 0.10%)</title><rect x="101.6" y="917" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="104.55" y="927.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, false, false&gt;::operator++ (34,182,000 samples, 0.11%)</title><rect x="1027.2" y="741" width="1.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1030.20" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (30,911,433 samples, 0.10%)</title><rect x="134.3" y="997" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.32" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (33,341,788 samples, 0.10%)</title><rect x="50.6" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="53.62" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,607 samples, 0.08%)</title><rect x="108.1" y="549" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="111.06" y="559.5" ></text>
</g>
<g >
<title>__do_page_fault (26,186,266 samples, 0.08%)</title><rect x="183.5" y="437" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="186.54" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,645,686 samples, 0.24%)</title><rect x="188.3" y="981" width="2.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="191.29" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,465 samples, 0.08%)</title><rect x="137.8" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.79" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (202,723,556 samples, 0.63%)</title><rect x="135.5" y="725" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="735.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,115,976 samples, 0.08%)</title><rect x="100.6" y="725" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.63" y="735.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (31,739,724 samples, 0.10%)</title><rect x="64.3" y="517" width="1.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="67.30" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (30,911,433 samples, 0.10%)</title><rect x="134.3" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.32" y="623.5" ></text>
</g>
<g >
<title>[algos.cpython-312-x86_64-linux-gnu.so] (26,131,714 samples, 0.08%)</title><rect x="80.6" y="1157" width="1.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="83.65" y="1167.5" ></text>
</g>
<g >
<title>[python3.12] (439,736,773 samples, 1.37%)</title><rect x="142.9" y="1013" width="16.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="383.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (21,830,925 samples, 0.07%)</title><rect x="88.8" y="645" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="91.85" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (34,073,660 samples, 0.11%)</title><rect x="723.1" y="933" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="726.06" y="943.5" ></text>
</g>
<g >
<title>copy_process (36,691,942 samples, 0.11%)</title><rect x="399.5" y="1077" width="1.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="402.53" y="1087.5" ></text>
</g>
<g >
<title>__x64_sys_read (33,521,120 samples, 0.10%)</title><rect x="151.3" y="357" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="154.30" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,125 samples, 0.08%)</title><rect x="156.9" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.88" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="501" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,020,513 samples, 0.08%)</title><rect x="120.3" y="549" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="123.30" y="559.5" ></text>
</g>
<g >
<title>do_anonymous_page (30,414,171 samples, 0.09%)</title><rect x="738.0" y="533" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="740.98" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (83,672,256 samples, 0.26%)</title><rect x="105.0" y="837" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.98" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (21,830,925 samples, 0.07%)</title><rect x="88.8" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,936 samples, 0.08%)</title><rect x="75.3" y="661" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.26" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (5,670,297,534 samples, 17.66%)</title><rect x="191.2" y="1013" width="208.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.18" y="1023.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>PyRun_StringFlags (26,201,368 samples, 0.08%)</title><rect x="105.0" y="549" width="0.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="107.98" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (301,222,919 samples, 0.94%)</title><rect x="121.3" y="805" width="11.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="124.25" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (55,566,826 samples, 0.17%)</title><rect x="108.1" y="613" width="2.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="111.06" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (33,341,788 samples, 0.10%)</title><rect x="50.6" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="53.62" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,986 samples, 0.08%)</title><rect x="65.5" y="773" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.46" y="783.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,265 samples, 0.08%)</title><rect x="165.1" y="421" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="168.05" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (202,723,556 samples, 0.63%)</title><rect x="135.5" y="773" width="7.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="138.46" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,020,513 samples, 0.08%)</title><rect x="120.3" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.30" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,209,777 samples, 0.08%)</title><rect x="40.4" y="661" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="43.37" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,868 samples, 0.08%)</title><rect x="119.3" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.33" y="447.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,400,039 samples, 0.16%)</title><rect x="39.4" y="981" width="1.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="42.40" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,187,720 samples, 0.08%)</title><rect x="86.9" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (2,379,271,060 samples, 7.41%)</title><rect x="733.3" y="965" width="87.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="736.30" y="975.5" >[python3.12]</text>
</g>
<g >
<title>PyIter_Next (57,347,471 samples, 0.18%)</title><rect x="140.8" y="517" width="2.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="143.80" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (75,339,652 samples, 0.23%)</title><rect x="726.8" y="837" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="729.81" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (33,837,096 samples, 0.11%)</title><rect x="1129.9" y="741" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1132.90" y="751.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,798 samples, 0.08%)</title><rect x="181.6" y="725" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="184.61" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (34,251,337 samples, 0.11%)</title><rect x="965.9" y="613" width="1.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="968.90" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,111,936 samples, 0.08%)</title><rect x="75.3" y="629" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="78.26" y="639.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (238,642,308 samples, 0.74%)</title><rect x="948.4" y="725" width="8.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="951.38" y="735.5" ></text>
</g>
<g >
<title>update_process_times (33,775,896 samples, 0.11%)</title><rect x="170.2" y="341" width="1.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="173.16" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,262 samples, 0.08%)</title><rect x="39.4" y="853" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="863.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::cpp_function&lt;IT_outputs, Nexullance_IT_interface, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (9,333,234,366 samples, 29.06%)</title><rect x="820.7" y="885" width="343.0" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="823.72" y="895.5" >pybind11::cpp_function::cpp_function&lt;IT_output..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33,521,120 samples, 0.10%)</title><rect x="151.3" y="389" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="154.30" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (155,467,616 samples, 0.48%)</title><rect x="182.6" y="1061" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,262 samples, 0.08%)</title><rect x="39.4" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="575.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (31,739,724 samples, 0.10%)</title><rect x="64.3" y="453" width="1.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="67.30" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (197,062,549 samples, 0.61%)</title><rect x="160.0" y="1029" width="7.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="163.03" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (34,059,380 samples, 0.11%)</title><rect x="394.5" y="869" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="397.52" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (32,287,715 samples, 0.10%)</title><rect x="157.8" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.85" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,054,307 samples, 0.08%)</title><rect x="43.8" y="1141" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.82" y="1151.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (34,072,953 samples, 0.11%)</title><rect x="404.7" y="1157" width="1.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="407.67" y="1167.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,527 samples, 0.08%)</title><rect x="76.2" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.22" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back (34,105,233 samples, 0.11%)</title><rect x="917.1" y="709" width="1.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="920.08" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (328,521,950 samples, 1.02%)</title><rect x="179.1" y="1141" width="12.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="1151.5" ></text>
</g>
<g >
<title>task_tick_fair (33,775,896 samples, 0.11%)</title><rect x="170.2" y="309" width="1.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="173.16" y="319.5" ></text>
</g>
<g >
<title>smp_call_function_many (175,610,128 samples, 0.55%)</title><rect x="411.3" y="965" width="6.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="414.33" y="975.5" ></text>
</g>
<g >
<title>boost::vertices&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (68,392,904 samples, 0.21%)</title><rect x="1031.0" y="741" width="2.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1033.96" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,916 samples, 0.08%)</title><rect x="182.6" y="501" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="185.57" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (85,395,270 samples, 0.27%)</title><rect x="92.1" y="565" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="95.10" y="575.5" ></text>
</g>
<g >
<title>do_user_addr_fault (26,186,266 samples, 0.08%)</title><rect x="183.5" y="421" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="186.54" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (34,140,846 samples, 0.11%)</title><rect x="116.1" y="837" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.15" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="527.5" ></text>
</g>
<g >
<title>Nexullance_IT::step_2 (9,095,371,234 samples, 28.32%)</title><rect x="827.0" y="837" width="334.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="829.96" y="847.5" >Nexullance_IT::step_2</text>
</g>
<g >
<title>[python3.12] (26,205,986 samples, 0.08%)</title><rect x="65.5" y="709" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.46" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,386,620 samples, 0.10%)</title><rect x="121.3" y="517" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="124.25" y="527.5" ></text>
</g>
<g >
<title>mem_cgroup_page_lruvec (26,184,488 samples, 0.08%)</title><rect x="741.6" y="389" width="1.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="744.61" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,422,000 samples, 0.16%)</title><rect x="98.7" y="1061" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="101.71" y="1071.5" ></text>
</g>
<g >
<title>_dlerror_run (31,739,724 samples, 0.10%)</title><rect x="64.3" y="533" width="1.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="67.30" y="543.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,202,572 samples, 0.08%)</title><rect x="61.4" y="517" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="64.43" y="527.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,215,983 samples, 0.08%)</title><rect x="189.2" y="661" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="192.25" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (145,229,345 samples, 0.45%)</title><rect x="90.9" y="837" width="5.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.87" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,401,334 samples, 0.16%)</title><rect x="86.9" y="1029" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="89.92" y="1039.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (145,229,345 samples, 0.45%)</title><rect x="90.9" y="965" width="5.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="93.87" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,142,413 samples, 0.11%)</title><rect x="103.7" y="725" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.73" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (519,254,283 samples, 1.62%)</title><rect x="160.0" y="1157" width="19.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="163.03" y="1167.5" ></text>
</g>
<g >
<title>[python3.12] (217,494,625 samples, 0.68%)</title><rect x="105.0" y="1093" width="8.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="1103.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,915 samples, 0.08%)</title><rect x="95.2" y="613" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.24" y="623.5" ></text>
</g>
<g >
<title>PyNumber_And (23,069,911 samples, 0.07%)</title><rect x="726.8" y="613" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="729.81" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (318,899,389 samples, 0.99%)</title><rect x="66.4" y="933" width="11.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.42" y="943.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,205,527 samples, 0.08%)</title><rect x="76.2" y="533" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="79.22" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,054,307 samples, 0.08%)</title><rect x="43.8" y="1061" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="46.82" y="1071.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="821" width="1.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1166.66" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (34,030,261 samples, 0.11%)</title><rect x="1044.7" y="741" width="1.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1047.72" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="853" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="863.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,621,160 samples, 0.10%)</title><rect x="90.9" y="613" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="93.87" y="623.5" ></text>
</g>
<g >
<title>PyTraceMalloc_Untrack (26,214,502 samples, 0.08%)</title><rect x="818.8" y="773" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="821.84" y="783.5" ></text>
</g>
<g >
<title>get_page_from_freelist (33,774,270 samples, 0.11%)</title><rect x="174.4" y="53" width="1.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="177.45" y="63.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (228,505,286 samples, 0.71%)</title><rect x="142.9" y="629" width="8.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="145.90" y="639.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (34,140,846 samples, 0.11%)</title><rect x="116.1" y="709" width="1.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="119.15" y="719.5" ></text>
</g>
<g >
<title>__GI___sbrk (31,386,620 samples, 0.10%)</title><rect x="121.3" y="389" width="1.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="124.25" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,438 samples, 0.16%)</title><rect x="188.3" y="853" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.29" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (25,810,639 samples, 0.08%)</title><rect x="92.1" y="533" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.10" y="543.5" ></text>
</g>
<g >
<title>array_setstate (52,246,175 samples, 0.16%)</title><rect x="817.9" y="805" width="1.9" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="820.89" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,355,002 samples, 0.16%)</title><rect x="110.1" y="885" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="113.10" y="895.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (31,386,620 samples, 0.10%)</title><rect x="121.3" y="533" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="124.25" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,216,455 samples, 0.08%)</title><rect x="188.3" y="597" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="191.29" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,200,261 samples, 0.08%)</title><rect x="184.5" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.50" y="527.5" ></text>
</g>
<g >
<title>sysmalloc (33,965,234 samples, 0.11%)</title><rect x="202.4" y="613" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="205.41" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,739,724 samples, 0.10%)</title><rect x="64.3" y="757" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="67.30" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="693" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="853" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,028 samples, 0.08%)</title><rect x="77.2" y="421" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="80.18" y="431.5" ></text>
</g>
<g >
<title>allocate_fake_cpuc (36,691,942 samples, 0.11%)</title><rect x="399.5" y="965" width="1.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="402.53" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="869" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (34,068,038 samples, 0.11%)</title><rect x="48.2" y="693" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.25" y="703.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (34,210,655 samples, 0.11%)</title><rect x="904.6" y="661" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="907.56" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (23,433,938 samples, 0.07%)</title><rect x="107.2" y="581" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.19" y="591.5" ></text>
</g>
<g >
<title>alloc_pages_vma (33,965,234 samples, 0.11%)</title><rect x="202.4" y="485" width="1.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="205.41" y="495.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (34,219,196 samples, 0.11%)</title><rect x="914.6" y="677" width="1.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="917.57" y="687.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (101,745,453 samples, 0.32%)</title><rect x="367.1" y="645" width="3.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="370.05" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (112,492,912 samples, 0.35%)</title><rect x="167.3" y="677" width="4.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="170.27" y="687.5" ></text>
</g>
<g >
<title>inherit_task_group.isra.0.part.0 (36,691,942 samples, 0.11%)</title><rect x="399.5" y="1045" width="1.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="402.53" y="1055.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,207,868 samples, 0.08%)</title><rect x="119.3" y="469" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="122.33" y="479.5" ></text>
</g>
<g >
<title>_int_malloc (34,107,679 samples, 0.11%)</title><rect x="113.9" y="485" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="116.93" y="495.5" ></text>
</g>
<g >
<title>array__reconstruct (34,081,457 samples, 0.11%)</title><rect x="398.3" y="901" width="1.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="401.27" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,168,253 samples, 0.08%)</title><rect x="55.0" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="58.00" y="479.5" ></text>
</g>
<g >
<title>free_unref_page (15,580,879 samples, 0.05%)</title><rect x="1171.0" y="997" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1173.97" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,192,715 samples, 0.08%)</title><rect x="110.1" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,186,266 samples, 0.08%)</title><rect x="183.5" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.54" y="575.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (34,212,146 samples, 0.11%)</title><rect x="150.0" y="453" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="153.04" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,028 samples, 0.08%)</title><rect x="77.2" y="565" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="80.18" y="575.5" ></text>
</g>
<g >
<title>do_page_fault (26,186,266 samples, 0.08%)</title><rect x="183.5" y="453" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="186.54" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,215,913 samples, 0.08%)</title><rect x="159.1" y="789" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="162.06" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (25,115,976 samples, 0.08%)</title><rect x="100.6" y="773" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (120,190,804 samples, 0.37%)</title><rect x="39.4" y="1093" width="4.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="42.40" y="1103.5" ></text>
</g>
<g >
<title>[python3.12] (31,739,724 samples, 0.10%)</title><rect x="64.3" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.30" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (94,481,486 samples, 0.29%)</title><rect x="113.9" y="1045" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.93" y="1055.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (318,899,389 samples, 0.99%)</title><rect x="66.4" y="1029" width="11.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="69.42" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (34,115,669 samples, 0.11%)</title><rect x="740.4" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="743.36" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (67,848,296 samples, 0.21%)</title><rect x="1089.8" y="725" width="2.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1092.82" y="735.5" ></text>
</g>
<g >
<title>_PyObject_Call (94,408,648 samples, 0.29%)</title><rect x="179.1" y="869" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="182.10" y="879.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (33,979,119 samples, 0.11%)</title><rect x="130.1" y="373" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="133.11" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (26,207,779 samples, 0.08%)</title><rect x="126.3" y="357" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="129.26" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (111,608,185 samples, 0.35%)</title><rect x="92.1" y="789" width="4.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="95.10" y="799.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (183,468,573 samples, 0.57%)</title><rect x="123.4" y="581" width="6.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="126.37" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (76,869,173 samples, 0.24%)</title><rect x="185.5" y="837" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.46" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,631,358 samples, 0.24%)</title><rect x="36.5" y="981" width="2.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="39.51" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (269,836,299 samples, 0.84%)</title><rect x="122.4" y="773" width="9.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.41" y="783.5" ></text>
</g>
<g >
<title>PySequence_Fast (33,991,842 samples, 0.11%)</title><rect x="397.0" y="837" width="1.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="400.02" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,133,890 samples, 0.08%)</title><rect x="133.4" y="613" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.36" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (434,372,141 samples, 1.35%)</title><rect x="49.5" y="885" width="16.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.50" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (111,608,185 samples, 0.35%)</title><rect x="92.1" y="773" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.10" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (32,287,715 samples, 0.10%)</title><rect x="157.8" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.85" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (85,395,270 samples, 0.27%)</title><rect x="92.1" y="597" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.10" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="821" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="831.5" ></text>
</g>
<g >
<title>page_fault (26,054,307 samples, 0.08%)</title><rect x="43.8" y="533" width="1.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="46.82" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_erase (34,267,791 samples, 0.11%)</title><rect x="1149.9" y="773" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1152.91" y="783.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,200,261 samples, 0.08%)</title><rect x="184.5" y="581" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="187.50" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,140,846 samples, 0.11%)</title><rect x="116.1" y="853" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="119.15" y="863.5" ></text>
</g>
<g >
<title>__sched_text_start (4,406,313 samples, 0.01%)</title><rect x="698.0" y="1061" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="701.04" y="1071.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,911,433 samples, 0.10%)</title><rect x="134.3" y="933" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.32" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (104,833,682 samples, 0.33%)</title><rect x="162.2" y="501" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="165.16" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (33,133,452 samples, 0.10%)</title><rect x="89.7" y="677" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.65" y="687.5" ></text>
</g>
<g >
<title>array_dealloc (34,034,859 samples, 0.11%)</title><rect x="732.0" y="917" width="1.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="735.05" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (23,433,938 samples, 0.07%)</title><rect x="107.2" y="501" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.19" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (240,367,898 samples, 0.75%)</title><rect x="66.4" y="709" width="8.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="69.42" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,162,287 samples, 0.08%)</title><rect x="111.1" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.06" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (12,059,563,611 samples, 37.55%)</title><rect x="724.3" y="1013" width="443.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="727.31" y="1023.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="997" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="1007.5" ></text>
</g>
<g >
<title>do_anonymous_page (33,774,270 samples, 0.11%)</title><rect x="174.4" y="101" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="177.45" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (34,042,180 samples, 0.11%)</title><rect x="1102.3" y="757" width="1.3" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="1105.32" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (59,584,631 samples, 0.19%)</title><rect x="93.1" y="517" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.05" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="453" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,215,983 samples, 0.08%)</title><rect x="189.2" y="597" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="192.25" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,438 samples, 0.16%)</title><rect x="188.3" y="725" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.29" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="597" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (97,371,504 samples, 0.30%)</title><rect x="49.5" y="757" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.50" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,248 samples, 0.08%)</title><rect x="190.2" y="821" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.21" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="677" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (68,224,887 samples, 0.21%)</title><rect x="1139.9" y="725" width="2.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1142.91" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (33,865,447 samples, 0.11%)</title><rect x="69.3" y="421" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.31" y="431.5" ></text>
</g>
<g >
<title>__update_load_avg_se (33,775,896 samples, 0.11%)</title><rect x="170.2" y="277" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="173.16" y="287.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (85,721,512 samples, 0.27%)</title><rect x="85.7" y="1141" width="3.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="88.70" y="1151.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,645,686 samples, 0.24%)</title><rect x="188.3" y="965" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.29" y="975.5" ></text>
</g>
<g >
<title>boost::optional&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::operator=&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt; (34,175,873 samples, 0.11%)</title><rect x="845.7" y="789" width="1.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="848.73" y="799.5" ></text>
</g>
<g >
<title>do_user_addr_fault (26,184,488 samples, 0.08%)</title><rect x="741.6" y="501" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="744.61" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,202,572 samples, 0.08%)</title><rect x="61.4" y="565" width="1.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="64.43" y="575.5" ></text>
</g>
<g >
<title>capable_wrt_inode_uidgid (26,207,202 samples, 0.08%)</title><rect x="129.1" y="293" width="1.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="132.15" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (60,315,304 samples, 0.19%)</title><rect x="46.0" y="597" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.03" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,028 samples, 0.08%)</title><rect x="77.2" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.18" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,386,527 samples, 0.16%)</title><rect x="183.5" y="805" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="186.54" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,422,000 samples, 0.16%)</title><rect x="98.7" y="421" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.71" y="431.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,108,855 samples, 0.11%)</title><rect x="93.1" y="357" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="96.05" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (23,069,911 samples, 0.07%)</title><rect x="726.8" y="677" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="729.81" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (33,320,178 samples, 0.10%)</title><rect x="85.7" y="981" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.70" y="991.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="789" width="3.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1170.43" y="799.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (34,101,361 samples, 0.11%)</title><rect x="382.0" y="661" width="1.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="385.03" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,187,720 samples, 0.08%)</title><rect x="86.9" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,961 samples, 0.08%)</title><rect x="115.2" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.19" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="575.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (170,929,525 samples, 0.53%)</title><rect x="1112.3" y="741" width="6.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1115.34" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,269,741 samples, 0.16%)</title><rect x="727.7" y="725" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="730.66" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (30,911,433 samples, 0.10%)</title><rect x="134.3" y="981" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="137.32" y="991.5" ></text>
</g>
<g >
<title>ufunc_get_doc (26,020,513 samples, 0.08%)</title><rect x="120.3" y="597" width="1.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="123.30" y="607.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,054,701 samples, 0.11%)</title><rect x="1127.4" y="773" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1130.39" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="1045" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="1055.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (78,717,016 samples, 0.25%)</title><rect x="167.3" y="581" width="2.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="170.27" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (34,059,380 samples, 0.11%)</title><rect x="394.5" y="853" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="397.52" y="863.5" ></text>
</g>
<g >
<title>PyType_GetModuleByDef (26,213,083 samples, 0.08%)</title><rect x="53.1" y="389" width="0.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="56.08" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,775,896 samples, 0.11%)</title><rect x="170.2" y="469" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="173.16" y="479.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (145,151,908 samples, 0.45%)</title><rect x="144.7" y="341" width="5.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="147.71" y="351.5" ></text>
</g>
<g >
<title>PyList_New (26,212,286 samples, 0.08%)</title><rect x="70.6" y="437" width="0.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="73.56" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,913 samples, 0.08%)</title><rect x="159.1" y="597" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="162.06" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~vector (408,977,839 samples, 1.27%)</title><rect x="1109.8" y="805" width="15.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1112.85" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,771 samples, 0.08%)</title><rect x="153.7" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.71" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (203,289,527 samples, 0.63%)</title><rect x="715.6" y="1029" width="7.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="718.59" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (25,115,976 samples, 0.08%)</title><rect x="100.6" y="677" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (200,193,722 samples, 0.62%)</title><rect x="88.8" y="1029" width="7.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="91.85" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (101,771,097 samples, 0.32%)</title><rect x="1153.7" y="741" width="3.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1156.68" y="751.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,432,438 samples, 0.16%)</title><rect x="188.3" y="805" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="191.29" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,054,307 samples, 0.08%)</title><rect x="43.8" y="1125" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.82" y="1135.5" ></text>
</g>
<g >
<title>perf_event_alloc (36,691,942 samples, 0.11%)</title><rect x="399.5" y="1013" width="1.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="402.53" y="1023.5" ></text>
</g>
<g >
<title>ksys_read (26,208,267 samples, 0.08%)</title><rect x="176.9" y="373" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="179.94" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,522,225 samples, 0.10%)</title><rect x="764.7" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="767.71" y="623.5" ></text>
</g>
<g >
<title>do_user_addr_fault (33,979,119 samples, 0.11%)</title><rect x="130.1" y="453" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="133.11" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (145,229,345 samples, 0.45%)</title><rect x="90.9" y="853" width="5.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="93.87" y="863.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms (26,208,148 samples, 0.08%)</title><rect x="60.5" y="405" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="63.46" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,187,720 samples, 0.08%)</title><rect x="86.9" y="549" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,911,433 samples, 0.10%)</title><rect x="134.3" y="773" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.32" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="1077" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="1087.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (57,347,471 samples, 0.18%)</title><rect x="140.8" y="485" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.80" y="495.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (3,751,601 samples, 0.01%)</title><rect x="698.0" y="1029" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="701.04" y="1039.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (908,053,331 samples, 2.83%)</title><rect x="44.8" y="1125" width="33.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="47.78" y="1135.5" >_P..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,216,455 samples, 0.08%)</title><rect x="188.3" y="629" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="191.29" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="645" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,614 samples, 0.08%)</title><rect x="87.9" y="773" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.89" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (34,108,855 samples, 0.11%)</title><rect x="93.1" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.05" y="463.5" ></text>
</g>
<g >
<title>_PyUnicodeWriter_Finish (26,020,513 samples, 0.08%)</title><rect x="120.3" y="453" width="1.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="123.30" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (145,229,345 samples, 0.45%)</title><rect x="90.9" y="917" width="5.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.87" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (32,646,613 samples, 0.10%)</title><rect x="177.9" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.91" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (340,776,389 samples, 1.06%)</title><rect x="1124.9" y="805" width="12.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1127.87" y="815.5" ></text>
</g>
<g >
<title>operator delete (34,149,252 samples, 0.11%)</title><rect x="1131.1" y="725" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1134.14" y="735.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator++ (136,630,887 samples, 0.43%)</title><rect x="842.0" y="805" width="5.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="844.97" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (58,854,880 samples, 0.18%)</title><rect x="176.9" y="821" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.94" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,621,160 samples, 0.10%)</title><rect x="90.9" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.87" y="495.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (175,610,128 samples, 0.55%)</title><rect x="411.3" y="981" width="6.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="414.33" y="991.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_edge&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (33,605,832 samples, 0.10%)</title><rect x="822.0" y="709" width="1.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="824.97" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (57,347,471 samples, 0.18%)</title><rect x="140.8" y="565" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.80" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (78,645,686 samples, 0.24%)</title><rect x="188.3" y="1013" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.29" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (52,355,002 samples, 0.16%)</title><rect x="110.1" y="517" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,269,741 samples, 0.16%)</title><rect x="727.7" y="757" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="730.66" y="767.5" ></text>
</g>
<g >
<title>PyObject_CallFunctionObjArgs (21,830,925 samples, 0.07%)</title><rect x="88.8" y="517" width="0.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="91.85" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (31,386,620 samples, 0.10%)</title><rect x="121.3" y="357" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="124.25" y="367.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,028 samples, 0.08%)</title><rect x="77.2" y="597" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="80.18" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (94,408,648 samples, 0.29%)</title><rect x="179.1" y="949" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="959.5" ></text>
</g>
<g >
<title>_int_malloc (67,987,127 samples, 0.21%)</title><rect x="201.2" y="629" width="2.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="204.16" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (21,830,925 samples, 0.07%)</title><rect x="88.8" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,107,679 samples, 0.11%)</title><rect x="113.9" y="757" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.93" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (25,115,976 samples, 0.08%)</title><rect x="100.6" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="1013" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,190,262 samples, 0.08%)</title><rect x="39.4" y="533" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="42.40" y="543.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (34,107,679 samples, 0.11%)</title><rect x="113.9" y="501" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="116.93" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,732 samples, 0.08%)</title><rect x="36.5" y="901" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="39.51" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="997" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (31,386,620 samples, 0.10%)</title><rect x="121.3" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.25" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (97,371,504 samples, 0.30%)</title><rect x="49.5" y="645" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="52.50" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (5,431,805,106 samples, 16.91%)</title><rect x="194.9" y="853" width="199.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.94" y="863.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,232,961 samples, 0.08%)</title><rect x="115.2" y="837" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.19" y="847.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (136,442,197 samples, 0.42%)</title><rect x="1047.2" y="805" width="5.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1050.23" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="549" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="559.5" ></text>
</g>
<g >
<title>pybind11::detail::argument_loader&lt;IT_outputs const*&gt;::call_impl&lt;std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;, pybind11::cpp_function::cpp_function&lt;std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;, IT_outputs, , pybind11::name, pybind11::is_method, pybind11::sibling&gt; (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="901" width="1.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1166.66" y="911.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (93,033,323 samples, 0.29%)</title><rect x="175.7" y="917" width="3.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="178.69" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (434,372,141 samples, 1.35%)</title><rect x="49.5" y="853" width="16.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="52.50" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,262 samples, 0.08%)</title><rect x="39.4" y="597" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="607.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (318,899,389 samples, 0.99%)</title><rect x="66.4" y="885" width="11.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="69.42" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (52,420,626 samples, 0.16%)</title><rect x="37.5" y="837" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.48" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (197,062,549 samples, 0.61%)</title><rect x="160.0" y="741" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,916 samples, 0.08%)</title><rect x="182.6" y="485" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="185.57" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (55,566,826 samples, 0.17%)</title><rect x="108.1" y="677" width="2.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="111.06" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (33,521,120 samples, 0.10%)</title><rect x="151.3" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.30" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,059,182 samples, 0.08%)</title><rect x="728.6" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="731.62" y="495.5" ></text>
</g>
<g >
<title>__fput (15,580,879 samples, 0.05%)</title><rect x="1171.0" y="1077" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1173.97" y="1087.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (20,525,387 samples, 0.06%)</title><rect x="135.5" y="517" width="0.7" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="138.46" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,527 samples, 0.08%)</title><rect x="76.2" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.22" y="575.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,212,915 samples, 0.08%)</title><rect x="95.2" y="533" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="98.24" y="543.5" ></text>
</g>
<g >
<title>move_to_new_page (35,988,363 samples, 0.11%)</title><rect x="59.1" y="293" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="62.14" y="303.5" ></text>
</g>
<g >
<title>_Py_read (33,521,120 samples, 0.10%)</title><rect x="151.3" y="437" width="1.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="154.30" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="469" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (60,340,640 samples, 0.19%)</title><rect x="113.9" y="853" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="116.93" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,355,002 samples, 0.16%)</title><rect x="110.1" y="469" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="113.10" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,213,614 samples, 0.08%)</title><rect x="87.9" y="837" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="90.89" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (68,196,850 samples, 0.21%)</title><rect x="179.1" y="549" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (5,465,864,486 samples, 17.02%)</title><rect x="194.9" y="901" width="200.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.94" y="911.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (183,468,573 samples, 0.57%)</title><rect x="123.4" y="597" width="6.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.37" y="607.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (34,059,380 samples, 0.11%)</title><rect x="394.5" y="757" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="397.52" y="767.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,248 samples, 0.08%)</title><rect x="190.2" y="885" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="193.21" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,725,243 samples, 0.33%)</title><rect x="117.4" y="773" width="3.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="120.40" y="783.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (305,260,913 samples, 0.95%)</title><rect x="53.1" y="693" width="11.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="56.08" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (33,610,593 samples, 0.10%)</title><rect x="1123.6" y="773" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1126.64" y="783.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,190,262 samples, 0.08%)</title><rect x="39.4" y="901" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.40" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="901" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="911.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,777 samples, 0.08%)</title><rect x="40.4" y="565" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="43.37" y="575.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,212,286 samples, 0.08%)</title><rect x="70.6" y="485" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="73.56" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,162,287 samples, 0.08%)</title><rect x="111.1" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.06" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,200,261 samples, 0.08%)</title><rect x="184.5" y="405" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="187.50" y="415.5" ></text>
</g>
<g >
<title>pybind11::detail::argument_loader&lt;Nexullance_IT_interface*, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int&gt;::call_impl&lt;IT_outputs, pybind11::cpp_function::cpp_function&lt;IT_outputs, Nexullance_IT_interface, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (9,333,234,366 samples, 29.06%)</title><rect x="820.7" y="901" width="343.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="823.72" y="911.5" >pybind11::detail::argument_loader&lt;Nexullance_I..</text>
</g>
<g >
<title>[python3.12] (67,969,799 samples, 0.21%)</title><rect x="395.8" y="885" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="398.78" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,262 samples, 0.08%)</title><rect x="39.4" y="677" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::~_Rb_tree (34,267,791 samples, 0.11%)</title><rect x="1149.9" y="805" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1152.91" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (60,077,733 samples, 0.19%)</title><rect x="69.3" y="501" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.31" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,133,890 samples, 0.08%)</title><rect x="133.4" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.36" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,215,913 samples, 0.08%)</title><rect x="159.1" y="661" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="162.06" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (31,977,548 samples, 0.10%)</title><rect x="160.0" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="607.5" ></text>
</g>
<g >
<title>dl_open_worker (31,739,724 samples, 0.10%)</title><rect x="64.3" y="437" width="1.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="67.30" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="565" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="575.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (4,358,348,882 samples, 13.57%)</title><rect x="864.5" y="741" width="160.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="867.55" y="751.5" >boost::dijkstra_shor..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,142,413 samples, 0.11%)</title><rect x="103.7" y="901" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="106.73" y="911.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; const&amp;&gt; (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="677" width="1.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1166.66" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (54,964,377 samples, 0.17%)</title><rect x="88.8" y="965" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (33,775,896 samples, 0.11%)</title><rect x="170.2" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.16" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="725" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1170.43" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (34,025,411 samples, 0.11%)</title><rect x="72.8" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.75" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (33,945,410 samples, 0.11%)</title><rect x="155.6" y="437" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.64" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,036,950 samples, 0.11%)</title><rect x="105.9" y="501" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.94" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (33,774,270 samples, 0.11%)</title><rect x="174.4" y="373" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="177.45" y="383.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (60,158,031 samples, 0.19%)</title><rect x="154.7" y="533" width="2.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="157.67" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,422,000 samples, 0.16%)</title><rect x="98.7" y="597" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.71" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (200,193,722 samples, 0.62%)</title><rect x="88.8" y="1013" width="7.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="91.85" y="1023.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::front (34,194,451 samples, 0.11%)</title><rect x="1064.8" y="789" width="1.2" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1067.76" y="799.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (34,230,355 samples, 0.11%)</title><rect x="1014.6" y="709" width="1.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1017.65" y="719.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_not_relaxed&gt; (34,105,472 samples, 0.11%)</title><rect x="939.6" y="709" width="1.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="942.59" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (75,339,652 samples, 0.23%)</title><rect x="726.8" y="901" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="729.81" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (31,977,548 samples, 0.10%)</title><rect x="160.0" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="639.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (135,988,694 samples, 0.42%)</title><rect x="952.1" y="693" width="5.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="955.15" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (240,367,898 samples, 0.75%)</title><rect x="66.4" y="853" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.42" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (34,192,473 samples, 0.11%)</title><rect x="44.8" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="495.5" ></text>
</g>
<g >
<title>do_anonymous_page (33,979,119 samples, 0.11%)</title><rect x="130.1" y="405" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="133.11" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (31,386,620 samples, 0.10%)</title><rect x="121.3" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.25" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (55,566,826 samples, 0.17%)</title><rect x="108.1" y="709" width="2.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="111.06" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,732 samples, 0.08%)</title><rect x="36.5" y="501" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="39.51" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (68,224,327 samples, 0.21%)</title><rect x="1084.8" y="773" width="2.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1087.81" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (228,505,286 samples, 0.71%)</title><rect x="142.9" y="789" width="8.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="789" width="1.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1166.66" y="799.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (94,408,648 samples, 0.29%)</title><rect x="179.1" y="789" width="3.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="182.10" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,029 samples, 0.08%)</title><rect x="161.2" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.20" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (145,151,908 samples, 0.45%)</title><rect x="144.7" y="421" width="5.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="147.71" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (5,670,297,534 samples, 17.66%)</title><rect x="191.2" y="1141" width="208.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.18" y="1151.5" >[python3.12]</text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,059,380 samples, 0.11%)</title><rect x="394.5" y="805" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="397.52" y="815.5" ></text>
</g>
<g >
<title>_dl_map_object (26,054,307 samples, 0.08%)</title><rect x="43.8" y="597" width="1.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="46.82" y="607.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (34,043,578 samples, 0.11%)</title><rect x="1053.5" y="789" width="1.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1056.50" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_get_Node_allocator (34,267,791 samples, 0.11%)</title><rect x="1149.9" y="693" width="1.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1152.91" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (55,566,826 samples, 0.17%)</title><rect x="108.1" y="997" width="2.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="111.06" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (20,525,387 samples, 0.06%)</title><rect x="135.5" y="613" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (542,577,147 samples, 1.69%)</title><rect x="704.4" y="1093" width="19.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="707.37" y="1103.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (340,677,476 samples, 1.06%)</title><rect x="957.1" y="725" width="12.6" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="960.15" y="735.5" ></text>
</g>
<g >
<title>_PyRun_AnyFileObject (12,059,563,611 samples, 37.55%)</title><rect x="724.3" y="1109" width="443.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="727.31" y="1119.5" >_PyRun_AnyFileObject</text>
</g>
<g >
<title>[python3.12] (34,192,473 samples, 0.11%)</title><rect x="44.8" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="623.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (271,935,488 samples, 0.85%)</title><rect x="1004.7" y="709" width="9.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1007.66" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (94,408,648 samples, 0.29%)</title><rect x="179.1" y="805" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="182.10" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (28,272,766 samples, 0.09%)</title><rect x="132.3" y="709" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="135.32" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,190,262 samples, 0.08%)</title><rect x="39.4" y="453" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="42.40" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="613" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (68,049,651 samples, 0.21%)</title><rect x="96.2" y="917" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="99.20" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (25,115,976 samples, 0.08%)</title><rect x="100.6" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="591.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (31,739,724 samples, 0.10%)</title><rect x="64.3" y="661" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="67.30" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,422,000 samples, 0.16%)</title><rect x="98.7" y="773" width="1.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="101.71" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (25,115,976 samples, 0.08%)</title><rect x="100.6" y="965" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="975.5" ></text>
</g>
<g >
<title>do_page_fault (67,399,663 samples, 0.21%)</title><rect x="259.8" y="645" width="2.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="262.76" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,438 samples, 0.16%)</title><rect x="188.3" y="837" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.29" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (25,810,639 samples, 0.08%)</title><rect x="92.1" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.10" y="479.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,186,619 samples, 0.11%)</title><rect x="922.1" y="693" width="1.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="925.10" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,621 samples, 0.08%)</title><rect x="154.7" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.67" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,913 samples, 0.08%)</title><rect x="159.1" y="645" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.06" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,005,344 samples, 0.08%)</title><rect x="102.8" y="709" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.77" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,028 samples, 0.08%)</title><rect x="77.2" y="485" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="80.18" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,355,002 samples, 0.16%)</title><rect x="110.1" y="837" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="113.10" y="847.5" ></text>
</g>
<g >
<title>copy_page (35,988,363 samples, 0.11%)</title><rect x="59.1" y="261" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="62.14" y="271.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (1,137,964,632 samples, 3.54%)</title><rect x="767.2" y="597" width="41.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="770.20" y="607.5" >[li..</text>
</g>
<g >
<title>[python3.12] (26,190,477 samples, 0.08%)</title><rect x="131.4" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.36" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (25,810,639 samples, 0.08%)</title><rect x="92.1" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.10" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,190,262 samples, 0.08%)</title><rect x="39.4" y="549" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.40" y="559.5" ></text>
</g>
<g >
<title>std::plus&lt;float&gt;::operator (34,123,655 samples, 0.11%)</title><rect x="1019.7" y="709" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1022.67" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,527 samples, 0.08%)</title><rect x="76.2" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.22" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (305,260,913 samples, 0.95%)</title><rect x="53.1" y="789" width="11.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.08" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,915 samples, 0.08%)</title><rect x="95.2" y="549" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.24" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,215,913 samples, 0.08%)</title><rect x="159.1" y="549" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="162.06" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (52,355,002 samples, 0.16%)</title><rect x="110.1" y="581" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,916 samples, 0.08%)</title><rect x="182.6" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,798 samples, 0.08%)</title><rect x="181.6" y="661" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.61" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,317 samples, 0.08%)</title><rect x="35.6" y="933" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="38.55" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,133,452 samples, 0.10%)</title><rect x="89.7" y="581" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="92.65" y="591.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (26,111,936 samples, 0.08%)</title><rect x="75.3" y="421" width="0.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="78.26" y="431.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (2,920,436,397 samples, 9.09%)</title><rect x="263.5" y="661" width="107.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="266.48" y="671.5" >[libz.so.1.2...</text>
</g>
<g >
<title>[python3.12] (26,059,182 samples, 0.08%)</title><rect x="728.6" y="677" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="731.62" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="597" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,916 samples, 0.08%)</title><rect x="182.6" y="677" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (202,723,556 samples, 0.63%)</title><rect x="135.5" y="917" width="7.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="138.46" y="927.5" ></text>
</g>
<g >
<title>_PyObject_Call (104,725,243 samples, 0.33%)</title><rect x="117.4" y="757" width="3.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="120.40" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,238,318 samples, 0.19%)</title><rect x="105.0" y="581" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.98" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,202,572 samples, 0.08%)</title><rect x="61.4" y="469" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="64.43" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::operator++ (34,213,641 samples, 0.11%)</title><rect x="858.3" y="805" width="1.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="861.27" y="815.5" ></text>
</g>
<g >
<title>_PyObject_Call (82,891,229 samples, 0.26%)</title><rect x="171.4" y="613" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="174.40" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (34,066,465 samples, 0.11%)</title><rect x="840.7" y="741" width="1.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="843.71" y="751.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,232,961 samples, 0.08%)</title><rect x="115.2" y="821" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="118.19" y="831.5" ></text>
</g>
<g >
<title>alloc_pages_vma (306,286,248 samples, 0.95%)</title><rect x="350.8" y="533" width="11.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="353.79" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,420,626 samples, 0.16%)</title><rect x="37.5" y="869" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="40.48" y="879.5" ></text>
</g>
<g >
<title>finish_task_switch (4,406,313 samples, 0.01%)</title><rect x="698.0" y="1045" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="701.04" y="1055.5" ></text>
</g>
<g >
<title>do_page_fault (31,739,724 samples, 0.10%)</title><rect x="64.3" y="213" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="67.30" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,262 samples, 0.08%)</title><rect x="39.4" y="821" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="831.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,646,613 samples, 0.10%)</title><rect x="177.9" y="549" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="180.91" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="725" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,983 samples, 0.08%)</title><rect x="189.2" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.25" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,020,513 samples, 0.08%)</title><rect x="120.3" y="661" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.30" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,054,307 samples, 0.08%)</title><rect x="43.8" y="853" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="46.82" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (34,073,660 samples, 0.11%)</title><rect x="723.1" y="965" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="726.06" y="975.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,420,626 samples, 0.16%)</title><rect x="37.5" y="885" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="40.48" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,646,613 samples, 0.10%)</title><rect x="177.9" y="517" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="180.91" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,005,344 samples, 0.08%)</title><rect x="102.8" y="725" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="105.77" y="735.5" ></text>
</g>
<g >
<title>native_write_msr (7,457,249 samples, 0.02%)</title><rect x="410.9" y="1045" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="413.89" y="1055.5" ></text>
</g>
<g >
<title>[python3.12] (26,059,182 samples, 0.08%)</title><rect x="728.6" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="731.62" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,913 samples, 0.08%)</title><rect x="159.1" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.06" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (76,869,173 samples, 0.24%)</title><rect x="185.5" y="677" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.46" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,028 samples, 0.08%)</title><rect x="77.2" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.18" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (228,505,286 samples, 0.71%)</title><rect x="142.9" y="821" width="8.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.90" y="831.5" ></text>
</g>
<g >
<title>__vfs_read (26,208,267 samples, 0.08%)</title><rect x="176.9" y="341" width="1.0" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="179.94" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,631,358 samples, 0.24%)</title><rect x="36.5" y="1061" width="2.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="39.51" y="1071.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (93,033,323 samples, 0.29%)</title><rect x="175.7" y="1061" width="3.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="178.69" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (94,481,486 samples, 0.29%)</title><rect x="113.9" y="1013" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.93" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,186,266 samples, 0.08%)</title><rect x="183.5" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.54" y="527.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,187,720 samples, 0.08%)</title><rect x="86.9" y="581" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="89.92" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (28,272,766 samples, 0.09%)</title><rect x="132.3" y="693" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="135.32" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,915 samples, 0.08%)</title><rect x="95.2" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.24" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,107,679 samples, 0.11%)</title><rect x="113.9" y="661" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.93" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (197,062,549 samples, 0.61%)</title><rect x="160.0" y="725" width="7.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="163.03" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,798 samples, 0.08%)</title><rect x="181.6" y="677" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.61" y="687.5" ></text>
</g>
<g >
<title>call_init (31,739,724 samples, 0.10%)</title><rect x="64.3" y="373" width="1.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="67.30" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (26,054,307 samples, 0.08%)</title><rect x="43.8" y="517" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="46.82" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (57,347,471 samples, 0.18%)</title><rect x="140.8" y="469" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.80" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (5,262,573,715 samples, 16.39%)</title><rect x="201.2" y="821" width="193.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.16" y="831.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (34,036,950 samples, 0.11%)</title><rect x="105.9" y="533" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.94" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,238,318 samples, 0.19%)</title><rect x="105.0" y="645" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.98" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,774,270 samples, 0.11%)</title><rect x="174.4" y="565" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="177.45" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (55,566,826 samples, 0.17%)</title><rect x="108.1" y="629" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.06" y="639.5" ></text>
</g>
<g >
<title>get_page_from_freelist (33,979,119 samples, 0.11%)</title><rect x="130.1" y="357" width="1.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="133.11" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (5,670,297,534 samples, 17.66%)</title><rect x="191.2" y="981" width="208.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.18" y="991.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (52,432,438 samples, 0.16%)</title><rect x="188.3" y="709" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.29" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (94,481,486 samples, 0.29%)</title><rect x="113.9" y="1077" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.93" y="1087.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (26,207,202 samples, 0.08%)</title><rect x="129.1" y="341" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="132.15" y="351.5" ></text>
</g>
<g >
<title>_PyAST_Compile (26,205,527 samples, 0.08%)</title><rect x="76.2" y="469" width="1.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="79.22" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,020,513 samples, 0.08%)</title><rect x="120.3" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.30" y="511.5" ></text>
</g>
<g >
<title>page_fault (33,965,234 samples, 0.11%)</title><rect x="202.4" y="597" width="1.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="205.41" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (34,207,635 samples, 0.11%)</title><rect x="814.4" y="597" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="817.41" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (34,107,679 samples, 0.11%)</title><rect x="113.9" y="725" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.93" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (94,408,648 samples, 0.29%)</title><rect x="179.1" y="1061" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="182.10" y="1071.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,213,614 samples, 0.08%)</title><rect x="87.9" y="517" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="90.89" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,739,724 samples, 0.10%)</title><rect x="64.3" y="677" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="67.30" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,644,292 samples, 0.08%)</title><rect x="63.4" y="485" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="66.35" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,916 samples, 0.08%)</title><rect x="182.6" y="709" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="185.57" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (94,408,648 samples, 0.29%)</title><rect x="179.1" y="901" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="182.10" y="911.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (68,228,064 samples, 0.21%)</title><rect x="960.9" y="677" width="2.5" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="963.89" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,798 samples, 0.08%)</title><rect x="181.6" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.61" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,248 samples, 0.08%)</title><rect x="190.2" y="773" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.21" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (210,448,082 samples, 0.66%)</title><rect x="151.3" y="869" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.30" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="725" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="735.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,209,777 samples, 0.08%)</title><rect x="40.4" y="885" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="43.37" y="895.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (67,885,655 samples, 0.21%)</title><rect x="1092.3" y="693" width="2.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1095.32" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,986 samples, 0.08%)</title><rect x="65.5" y="885" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.46" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="789" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="799.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5,503,490 samples, 0.02%)</title><rect x="698.0" y="1125" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="701.00" y="1135.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (25,900,541 samples, 0.08%)</title><rect x="112.0" y="501" width="1.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="115.02" y="511.5" ></text>
</g>
<g >
<title>vfs_read (33,521,120 samples, 0.10%)</title><rect x="151.3" y="325" width="1.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="154.30" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,005,344 samples, 0.08%)</title><rect x="102.8" y="1093" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.77" y="1103.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (32,646,613 samples, 0.10%)</title><rect x="177.9" y="597" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="180.91" y="607.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (68,196,850 samples, 0.21%)</title><rect x="179.1" y="533" width="2.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="182.10" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (460,354,818 samples, 1.43%)</title><rect x="117.4" y="997" width="16.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="120.40" y="1007.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (30,911,433 samples, 0.10%)</title><rect x="134.3" y="869" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="137.32" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (112,492,912 samples, 0.35%)</title><rect x="167.3" y="629" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.27" y="639.5" ></text>
</g>
<g >
<title>task_work_run (15,580,879 samples, 0.05%)</title><rect x="1171.0" y="1109" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1173.97" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (34,127,788 samples, 0.11%)</title><rect x="1034.7" y="693" width="1.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="1037.72" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (28,272,766 samples, 0.09%)</title><rect x="132.3" y="645" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.32" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (12,059,563,611 samples, 37.55%)</title><rect x="724.3" y="1029" width="443.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="727.31" y="1039.5" >PyEval_EvalCode</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,049,651 samples, 0.21%)</title><rect x="96.2" y="901" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.20" y="911.5" ></text>
</g>
<g >
<title>do_page_fault (26,207,779 samples, 0.08%)</title><rect x="126.3" y="405" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="129.26" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,422,000 samples, 0.16%)</title><rect x="98.7" y="1029" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.71" y="1039.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,432,438 samples, 0.16%)</title><rect x="188.3" y="869" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="191.29" y="879.5" ></text>
</g>
<g >
<title>PyObject_GC_Del (33,621,160 samples, 0.10%)</title><rect x="90.9" y="469" width="1.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="93.87" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,192,473 samples, 0.11%)</title><rect x="44.8" y="517" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="47.78" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (28,272,766 samples, 0.09%)</title><rect x="132.3" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.32" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,543 samples, 0.08%)</title><rect x="138.8" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.75" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,432,438 samples, 0.16%)</title><rect x="188.3" y="901" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="191.29" y="911.5" ></text>
</g>
<g >
<title>walk_component (145,151,908 samples, 0.45%)</title><rect x="144.7" y="309" width="5.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="147.71" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (34,192,473 samples, 0.11%)</title><rect x="44.8" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_read (34,207,635 samples, 0.11%)</title><rect x="814.4" y="517" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="817.41" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,262 samples, 0.08%)</title><rect x="39.4" y="885" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="895.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,209,777 samples, 0.08%)</title><rect x="40.4" y="773" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="43.37" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (34,034,859 samples, 0.11%)</title><rect x="732.0" y="933" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="735.05" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (192,536,179 samples, 0.60%)</title><rect x="411.2" y="1109" width="7.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="414.17" y="1119.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (111,608,185 samples, 0.35%)</title><rect x="92.1" y="677" width="4.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="95.10" y="687.5" ></text>
</g>
<g >
<title>task_work_run (34,078,551 samples, 0.11%)</title><rect x="915.8" y="629" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="918.83" y="639.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,208,317 samples, 0.08%)</title><rect x="35.6" y="917" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.55" y="927.5" ></text>
</g>
<g >
<title>__pyx_pymod_exec__batch (28,272,766 samples, 0.09%)</title><rect x="132.3" y="805" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="135.32" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (49,141,232 samples, 0.15%)</title><rect x="142.9" y="437" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (78,255,543 samples, 0.24%)</title><rect x="110.1" y="1061" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (76,869,173 samples, 0.24%)</title><rect x="185.5" y="661" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.46" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="741" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="751.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (68,343,194 samples, 0.21%)</title><rect x="965.9" y="629" width="2.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="968.90" y="639.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (34,030,261 samples, 0.11%)</title><rect x="1044.7" y="693" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1047.72" y="703.5" ></text>
</g>
<g >
<title>blas_thread_server (7,619,239,988 samples, 23.73%)</title><rect x="418.2" y="1141" width="280.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="421.24" y="1151.5" >blas_thread_server</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33,774,270 samples, 0.11%)</title><rect x="174.4" y="389" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="177.45" y="399.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (102,461,967 samples, 0.32%)</title><rect x="902.1" y="677" width="3.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="905.05" y="687.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (67,848,296 samples, 0.21%)</title><rect x="1089.8" y="693" width="2.5" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1092.82" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (25,644,292 samples, 0.08%)</title><rect x="63.4" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.35" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,133,890 samples, 0.08%)</title><rect x="133.4" y="821" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.36" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,771 samples, 0.08%)</title><rect x="153.7" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.71" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (25,475,776 samples, 0.08%)</title><rect x="94.3" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.31" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,774,270 samples, 0.11%)</title><rect x="174.4" y="645" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.45" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,115,206 samples, 0.11%)</title><rect x="74.0" y="485" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="77.00" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,049,094 samples, 0.11%)</title><rect x="97.5" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.45" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,049,651 samples, 0.21%)</title><rect x="96.2" y="1029" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.20" y="1039.5" ></text>
</g>
<g >
<title>alloc_pages_vma (30,414,171 samples, 0.09%)</title><rect x="738.0" y="517" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="740.98" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (34,066,465 samples, 0.11%)</title><rect x="840.7" y="709" width="1.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="843.71" y="719.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (217,447,692 samples, 0.68%)</title><rect x="123.4" y="645" width="8.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="126.37" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (34,115,206 samples, 0.11%)</title><rect x="74.0" y="501" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.00" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,142,413 samples, 0.11%)</title><rect x="103.7" y="885" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.73" y="895.5" ></text>
</g>
<g >
<title>__handle_mm_fault (26,054,307 samples, 0.08%)</title><rect x="43.8" y="453" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="46.82" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,320,178 samples, 0.10%)</title><rect x="85.7" y="773" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.70" y="783.5" ></text>
</g>
<g >
<title>__dlopen (26,054,307 samples, 0.08%)</title><rect x="43.8" y="725" width="1.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="46.82" y="735.5" ></text>
</g>
<g >
<title>do_page_fault (34,108,855 samples, 0.11%)</title><rect x="93.1" y="405" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="96.05" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,572 samples, 0.08%)</title><rect x="61.4" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.43" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (33,320,178 samples, 0.10%)</title><rect x="85.7" y="805" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.70" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,386,527 samples, 0.16%)</title><rect x="183.5" y="645" width="2.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="186.54" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (69,172,772 samples, 0.22%)</title><rect x="136.2" y="517" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="139.21" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (94,481,486 samples, 0.29%)</title><rect x="113.9" y="1061" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="116.93" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,572 samples, 0.08%)</title><rect x="61.4" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.43" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (306,286,248 samples, 0.95%)</title><rect x="350.8" y="517" width="11.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="353.79" y="527.5" ></text>
</g>
<g >
<title>_dl_map_segments (25,900,541 samples, 0.08%)</title><rect x="112.0" y="581" width="1.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="115.02" y="591.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (12,059,563,611 samples, 37.55%)</title><rect x="724.3" y="1093" width="443.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="727.31" y="1103.5" >_PyRun_SimpleFileObject</text>
</g>
<g >
<title>[python3.12] (34,107,679 samples, 0.11%)</title><rect x="113.9" y="629" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.93" y="639.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (34,091,857 samples, 0.11%)</title><rect x="967.2" y="613" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="970.16" y="623.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (60,077,733 samples, 0.19%)</title><rect x="69.3" y="533" width="2.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="72.31" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,205,543 samples, 0.08%)</title><rect x="138.8" y="469" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="141.75" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (33,837,096 samples, 0.11%)</title><rect x="1129.9" y="709" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1132.90" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (5,262,573,715 samples, 16.39%)</title><rect x="201.2" y="805" width="193.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.16" y="815.5" >[python3.12]</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="741" width="1.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1166.66" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,140,846 samples, 0.11%)</title><rect x="116.1" y="629" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="119.15" y="639.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (34,029,743 samples, 0.11%)</title><rect x="765.9" y="613" width="1.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="768.95" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,212,280 samples, 0.08%)</title><rect x="38.4" y="629" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="41.44" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (91,801,211 samples, 0.29%)</title><rect x="151.3" y="661" width="3.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="154.30" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,200,261 samples, 0.08%)</title><rect x="184.5" y="565" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="187.50" y="575.5" ></text>
</g>
<g >
<title>boost::optional_detail::aligned_storage&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::ref (34,175,873 samples, 0.11%)</title><rect x="845.7" y="725" width="1.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="848.73" y="735.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (76,869,173 samples, 0.24%)</title><rect x="185.5" y="517" width="2.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="188.46" y="527.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (29,472,383 samples, 0.09%)</title><rect x="139.7" y="533" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="142.71" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="965" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="975.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (104,725,243 samples, 0.33%)</title><rect x="117.4" y="789" width="3.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="120.40" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (97,371,504 samples, 0.30%)</title><rect x="49.5" y="565" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="52.50" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,140,846 samples, 0.11%)</title><rect x="116.1" y="789" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="119.15" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,645,686 samples, 0.24%)</title><rect x="188.3" y="1061" width="2.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="191.29" y="1071.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (68,196,850 samples, 0.21%)</title><rect x="179.1" y="645" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="182.10" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (20,525,387 samples, 0.06%)</title><rect x="135.5" y="565" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,986 samples, 0.08%)</title><rect x="65.5" y="933" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.46" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,572 samples, 0.08%)</title><rect x="61.4" y="597" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.43" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (28,272,766 samples, 0.09%)</title><rect x="132.3" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.32" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (33,621,160 samples, 0.10%)</title><rect x="90.9" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.87" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (23,433,938 samples, 0.07%)</title><rect x="107.2" y="661" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.19" y="671.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (34,048,539 samples, 0.11%)</title><rect x="262.2" y="661" width="1.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="265.23" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,644,292 samples, 0.08%)</title><rect x="63.4" y="533" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="66.35" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,213,614 samples, 0.08%)</title><rect x="87.9" y="613" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="90.89" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (228,505,286 samples, 0.71%)</title><rect x="142.9" y="613" width="8.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.90" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (228,505,286 samples, 0.71%)</title><rect x="142.9" y="693" width="8.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.90" y="703.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,210,732 samples, 0.08%)</title><rect x="36.5" y="869" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.51" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (58,854,880 samples, 0.18%)</title><rect x="176.9" y="693" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.94" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,777 samples, 0.08%)</title><rect x="40.4" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.37" y="559.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,212,280 samples, 0.08%)</title><rect x="38.4" y="533" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="41.44" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (68,049,651 samples, 0.21%)</title><rect x="96.2" y="549" width="2.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="99.20" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,320,178 samples, 0.10%)</title><rect x="85.7" y="1045" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.70" y="1055.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,111,936 samples, 0.08%)</title><rect x="75.3" y="581" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="78.26" y="591.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,190,262 samples, 0.08%)</title><rect x="39.4" y="629" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="42.40" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,186,266 samples, 0.08%)</title><rect x="183.5" y="549" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.54" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (34,059,380 samples, 0.11%)</title><rect x="394.5" y="837" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="397.52" y="847.5" ></text>
</g>
<g >
<title>__do_page_fault (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="549" width="3.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1170.43" y="559.5" ></text>
</g>
<g >
<title>flush_tlb_batched_pending (5,750,268 samples, 0.02%)</title><rect x="417.8" y="997" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="420.78" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (91,801,211 samples, 0.29%)</title><rect x="151.3" y="549" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.30" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (91,801,211 samples, 0.29%)</title><rect x="151.3" y="565" width="3.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="154.30" y="575.5" ></text>
</g>
<g >
<title>PyDict_SetItemString (32,066,320 samples, 0.10%)</title><rect x="152.5" y="421" width="1.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="155.53" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (5,533,834,285 samples, 17.23%)</title><rect x="194.9" y="933" width="203.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.94" y="943.5" >[python3.12]</text>
</g>
<g >
<title>PyImport_ImportModule (26,054,307 samples, 0.08%)</title><rect x="43.8" y="949" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="46.82" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,725,243 samples, 0.33%)</title><rect x="117.4" y="693" width="3.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="120.40" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; &gt; (34,172,378 samples, 0.11%)</title><rect x="1074.8" y="789" width="1.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1077.77" y="799.5" ></text>
</g>
<g >
<title>_int_malloc (31,386,620 samples, 0.10%)</title><rect x="121.3" y="453" width="1.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="124.25" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (33,663,867 samples, 0.10%)</title><rect x="908.3" y="693" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="911.33" y="703.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,200,261 samples, 0.08%)</title><rect x="184.5" y="485" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="187.50" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,598,443 samples, 0.24%)</title><rect x="182.6" y="917" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="185.57" y="927.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (271,913,219 samples, 0.85%)</title><rect x="383.3" y="645" width="10.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="386.28" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,452 samples, 0.08%)</title><rect x="62.4" y="517" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="65.39" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,496,862 samples, 0.16%)</title><rect x="117.4" y="661" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (355,629,575 samples, 1.11%)</title><rect x="121.3" y="917" width="13.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.25" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,115,976 samples, 0.08%)</title><rect x="100.6" y="821" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.63" y="831.5" ></text>
</g>
<g >
<title>_PyObject_Call (83,672,256 samples, 0.26%)</title><rect x="105.0" y="821" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.98" y="831.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (55,566,826 samples, 0.17%)</title><rect x="108.1" y="853" width="2.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="111.06" y="863.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (4,631,664,600 samples, 14.42%)</title><rect x="863.3" y="757" width="170.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="866.29" y="767.5" >boost::dijkstra_shorte..</text>
</g>
<g >
<title>PyEval_EvalCode (26,133,890 samples, 0.08%)</title><rect x="133.4" y="693" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="136.36" y="703.5" ></text>
</g>
<g >
<title>std::multimap&lt;float, unsigned long, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::~multimap (34,267,791 samples, 0.11%)</title><rect x="1149.9" y="821" width="1.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1152.91" y="831.5" ></text>
</g>
<g >
<title>boost::tuples::tie&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (204,035,554 samples, 0.64%)</title><rect x="1056.0" y="805" width="7.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1059.01" y="815.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (68,287,476 samples, 0.21%)</title><rect x="1172.8" y="1157" width="2.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1175.79" y="1167.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (59,584,631 samples, 0.19%)</title><rect x="93.1" y="501" width="2.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="96.05" y="511.5" ></text>
</g>
<g >
<title>PyObject_Malloc (30,414,171 samples, 0.09%)</title><rect x="738.0" y="677" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="740.98" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (34,178,443 samples, 0.11%)</title><rect x="175.7" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.69" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (642,460,329 samples, 2.00%)</title><rect x="135.5" y="1093" width="23.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="138.46" y="1103.5" >P..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,255,543 samples, 0.24%)</title><rect x="110.1" y="1013" width="2.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="113.10" y="1023.5" ></text>
</g>
<g >
<title>dlopen_doit (26,054,307 samples, 0.08%)</title><rect x="43.8" y="661" width="1.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="46.82" y="671.5" ></text>
</g>
<g >
<title>tick_sched_timer (33,775,896 samples, 0.11%)</title><rect x="170.2" y="373" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="173.16" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="469" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="479.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (23,433,938 samples, 0.07%)</title><rect x="107.2" y="741" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="110.19" y="751.5" ></text>
</g>
<g >
<title>change_pte_range (34,078,551 samples, 0.11%)</title><rect x="915.8" y="549" width="1.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="918.83" y="559.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,140,846 samples, 0.11%)</title><rect x="116.1" y="517" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="119.15" y="527.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (7,457,249 samples, 0.02%)</title><rect x="410.9" y="1109" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="413.89" y="1119.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,187,720 samples, 0.08%)</title><rect x="86.9" y="885" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="89.92" y="895.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (128,575,815 samples, 0.40%)</title><rect x="44.8" y="757" width="4.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="47.78" y="767.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (55,566,826 samples, 0.17%)</title><rect x="108.1" y="885" width="2.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="111.06" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (5,670,297,534 samples, 17.66%)</title><rect x="191.2" y="1029" width="208.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.18" y="1039.5" >[python3.12]</text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (104,833,682 samples, 0.33%)</title><rect x="162.2" y="533" width="3.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="165.16" y="543.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt; (34,077,558 samples, 0.11%)</title><rect x="1029.7" y="741" width="1.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1032.71" y="751.5" ></text>
</g>
<g >
<title>_PyCode_New (34,142,413 samples, 0.11%)</title><rect x="103.7" y="501" width="1.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="106.73" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (94,408,648 samples, 0.29%)</title><rect x="179.1" y="1013" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="182.10" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_CallMethod (5,262,573,715 samples, 16.39%)</title><rect x="201.2" y="837" width="193.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="204.16" y="847.5" >_PyObject_CallMethod</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (28,272,766 samples, 0.09%)</title><rect x="132.3" y="773" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="135.32" y="783.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,205,986 samples, 0.08%)</title><rect x="65.5" y="949" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="68.46" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,125 samples, 0.08%)</title><rect x="156.9" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.88" y="303.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,420,626 samples, 0.16%)</title><rect x="37.5" y="805" width="1.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="40.48" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,208,267 samples, 0.08%)</title><rect x="176.9" y="421" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="179.94" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,059,182 samples, 0.08%)</title><rect x="728.6" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="731.62" y="591.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,123,073 samples, 0.10%)</title><rect x="101.6" y="981" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="104.55" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (59,584,631 samples, 0.19%)</title><rect x="93.1" y="533" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.05" y="543.5" ></text>
</g>
<g >
<title>__do_page_fault (35,988,363 samples, 0.11%)</title><rect x="59.1" y="405" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="62.14" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (31,739,724 samples, 0.10%)</title><rect x="64.3" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.30" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,028 samples, 0.08%)</title><rect x="77.2" y="581" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.18" y="591.5" ></text>
</g>
<g >
<title>generic_file_read_iter (34,207,635 samples, 0.11%)</title><rect x="814.4" y="357" width="1.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="817.41" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (78,645,686 samples, 0.24%)</title><rect x="188.3" y="997" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.29" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,262 samples, 0.08%)</title><rect x="39.4" y="741" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="661" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,187,720 samples, 0.08%)</title><rect x="86.9" y="677" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="89.92" y="687.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_examine_edge&gt; (68,354,378 samples, 0.21%)</title><rect x="874.6" y="709" width="2.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="877.58" y="719.5" ></text>
</g>
<g >
<title>__do_page_fault (33,774,270 samples, 0.11%)</title><rect x="174.4" y="165" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="177.45" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::deque (68,235,396 samples, 0.21%)</title><rect x="1066.0" y="789" width="2.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1069.02" y="799.5" ></text>
</g>
<g >
<title>PyNumber_Remainder (24,901,898 samples, 0.08%)</title><rect x="819.8" y="917" width="0.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="822.81" y="927.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,208,317 samples, 0.08%)</title><rect x="35.6" y="837" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="38.55" y="847.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,190,477 samples, 0.08%)</title><rect x="131.4" y="517" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="134.36" y="527.5" ></text>
</g>
<g >
<title>_PyObject_LookupAttr (26,196,396 samples, 0.08%)</title><rect x="56.0" y="469" width="0.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="58.97" y="479.5" ></text>
</g>
<g >
<title>__handle_mm_fault (56,166,545 samples, 0.17%)</title><rect x="806.9" y="501" width="2.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="809.95" y="511.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,111,936 samples, 0.08%)</title><rect x="75.3" y="485" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="78.26" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (34,203,714 samples, 0.11%)</title><rect x="1117.4" y="661" width="1.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1120.36" y="671.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.0 (4,325,381 samples, 0.01%)</title><rect x="411.2" y="981" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="414.17" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (58,239,049 samples, 0.18%)</title><rect x="100.6" y="1029" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="1039.5" ></text>
</g>
<g >
<title>ret_from_fork (14,561,776 samples, 0.05%)</title><rect x="410.6" y="1157" width="0.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="413.63" y="1167.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (58,854,880 samples, 0.18%)</title><rect x="176.9" y="645" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="179.94" y="655.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (5,670,297,534 samples, 17.66%)</title><rect x="191.2" y="997" width="208.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="194.18" y="1007.5" >PyObject_Vectorcall</text>
</g>
<g >
<title>_PyFunction_Vectorcall (83,672,256 samples, 0.26%)</title><rect x="105.0" y="981" width="3.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="107.98" y="991.5" ></text>
</g>
<g >
<title>inode_permission (26,207,202 samples, 0.08%)</title><rect x="129.1" y="325" width="1.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="132.15" y="335.5" ></text>
</g>
<g >
<title>user_path_at_empty (26,207,202 samples, 0.08%)</title><rect x="129.1" y="389" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="132.15" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (78,631,358 samples, 0.24%)</title><rect x="36.5" y="1109" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="1119.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,967,666 samples, 0.10%)</title><rect x="733.3" y="853" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="736.30" y="863.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,190,262 samples, 0.08%)</title><rect x="39.4" y="581" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="42.40" y="591.5" ></text>
</g>
<g >
<title>do_page_fault (476,862,152 samples, 1.48%)</title><rect x="349.5" y="629" width="17.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="352.53" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (23,069,911 samples, 0.07%)</title><rect x="726.8" y="629" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="729.81" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (112,492,912 samples, 0.35%)</title><rect x="167.3" y="709" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.27" y="719.5" ></text>
</g>
<g >
<title>gentype_alloc (33,275,088 samples, 0.10%)</title><rect x="730.8" y="949" width="1.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="733.82" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,868 samples, 0.08%)</title><rect x="119.3" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.33" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,280 samples, 0.08%)</title><rect x="38.4" y="661" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.44" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (30,526,008 samples, 0.10%)</title><rect x="49.5" y="517" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="52.50" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,029 samples, 0.08%)</title><rect x="161.2" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.20" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,140,846 samples, 0.11%)</title><rect x="116.1" y="549" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.15" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,936 samples, 0.08%)</title><rect x="75.3" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.26" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,777 samples, 0.08%)</title><rect x="40.4" y="677" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.37" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,422,000 samples, 0.16%)</title><rect x="98.7" y="837" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.71" y="847.5" ></text>
</g>
<g >
<title>[[stack]] (442,957,104 samples, 1.38%)</title><rect x="11.2" y="1173" width="16.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="14.25" y="1183.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,205,527 samples, 0.08%)</title><rect x="76.2" y="597" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.22" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (200,193,722 samples, 0.62%)</title><rect x="88.8" y="1061" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,262 samples, 0.08%)</title><rect x="39.4" y="869" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="879.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,254,570 samples, 0.08%)</title><rect x="117.4" y="501" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="120.40" y="511.5" ></text>
</g>
<g >
<title>vfs_read (33,774,270 samples, 0.11%)</title><rect x="174.4" y="325" width="1.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="177.45" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (33,979,119 samples, 0.11%)</title><rect x="130.1" y="565" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="575.5" ></text>
</g>
<g >
<title>PyList_Sort (26,205,986 samples, 0.08%)</title><rect x="65.5" y="725" width="0.9" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="68.46" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,526,008 samples, 0.10%)</title><rect x="49.5" y="501" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="52.50" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (97,371,504 samples, 0.30%)</title><rect x="49.5" y="629" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.50" y="639.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (33,933,915 samples, 0.11%)</title><rect x="1091.1" y="629" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1094.07" y="639.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,214,452 samples, 0.08%)</title><rect x="62.4" y="661" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="65.39" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,267 samples, 0.08%)</title><rect x="176.9" y="549" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="179.94" y="559.5" ></text>
</g>
<g >
<title>perf_try_init_event (36,691,942 samples, 0.11%)</title><rect x="399.5" y="997" width="1.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="402.53" y="1007.5" ></text>
</g>
<g >
<title>PyArray_ToList (34,053,623 samples, 0.11%)</title><rect x="56.9" y="453" width="1.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="59.93" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,621 samples, 0.08%)</title><rect x="154.7" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.67" y="431.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (170,699,463 samples, 0.53%)</title><rect x="979.6" y="709" width="6.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="982.63" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (67,984,927 samples, 0.21%)</title><rect x="912.1" y="693" width="2.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="915.08" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (578,835,864 samples, 1.80%)</title><rect x="1081.1" y="789" width="21.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1084.05" y="799.5" >s..</text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (34,217,141 samples, 0.11%)</title><rect x="907.1" y="661" width="1.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="910.07" y="671.5" ></text>
</g>
<g >
<title>clear_page_erms (31,319,746 samples, 0.10%)</title><rect x="806.9" y="421" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="809.95" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (249,876,264 samples, 0.78%)</title><rect x="179.1" y="1109" width="9.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="182.10" y="1119.5" ></text>
</g>
<g >
<title>alloc_pages_vma (33,774,270 samples, 0.11%)</title><rect x="174.4" y="85" width="1.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="177.45" y="95.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,059,380 samples, 0.11%)</title><rect x="394.5" y="789" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="397.52" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (32,287,715 samples, 0.10%)</title><rect x="157.8" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.85" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,142,413 samples, 0.11%)</title><rect x="103.7" y="789" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.73" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="645" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="655.5" ></text>
</g>
<g >
<title>PyObject_Malloc (67,987,127 samples, 0.21%)</title><rect x="201.2" y="661" width="2.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="204.16" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (111,608,185 samples, 0.35%)</title><rect x="92.1" y="709" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.10" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (908,053,331 samples, 2.83%)</title><rect x="44.8" y="1093" width="33.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.78" y="1103.5" >_P..</text>
</g>
<g >
<title>PyEval_EvalCode (25,115,976 samples, 0.08%)</title><rect x="100.6" y="837" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="103.63" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,133,890 samples, 0.08%)</title><rect x="133.4" y="757" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="136.36" y="767.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (54,964,377 samples, 0.17%)</title><rect x="88.8" y="853" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="91.85" y="863.5" ></text>
</g>
<g >
<title>generic_file_read_iter (33,774,270 samples, 0.11%)</title><rect x="174.4" y="261" width="1.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="177.45" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,248 samples, 0.08%)</title><rect x="190.2" y="757" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.21" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,916 samples, 0.08%)</title><rect x="182.6" y="805" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="815.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,215,913 samples, 0.08%)</title><rect x="159.1" y="933" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="162.06" y="943.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (33,584,094 samples, 0.10%)</title><rect x="25.0" y="1157" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="28.04" y="1167.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (93,033,323 samples, 0.29%)</title><rect x="175.7" y="869" width="3.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="178.69" y="879.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,732 samples, 0.08%)</title><rect x="36.5" y="549" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="39.51" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (174,773,976 samples, 0.54%)</title><rect x="55.0" y="565" width="6.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="58.00" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,171,983 samples, 0.11%)</title><rect x="910.8" y="677" width="1.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="913.82" y="687.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (28,272,766 samples, 0.09%)</title><rect x="132.3" y="629" width="1.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="135.32" y="639.5" ></text>
</g>
<g >
<title>_PyObject_Call (28,272,766 samples, 0.09%)</title><rect x="132.3" y="677" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="135.32" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (34,193,722 samples, 0.11%)</title><rect x="1162.4" y="821" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1165.41" y="831.5" ></text>
</g>
<g >
<title>PySequence_List (26,210,732 samples, 0.08%)</title><rect x="36.5" y="325" width="1.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="39.51" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (128,575,815 samples, 0.40%)</title><rect x="44.8" y="821" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="47.78" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,936 samples, 0.08%)</title><rect x="75.3" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.26" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (26,054,307 samples, 0.08%)</title><rect x="43.8" y="1157" width="1.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="46.82" y="1167.5" ></text>
</g>
<g >
<title>native_write_msr (3,508,225 samples, 0.01%)</title><rect x="698.0" y="965" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="701.05" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (34,207,635 samples, 0.11%)</title><rect x="814.4" y="565" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="817.41" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,190,262 samples, 0.08%)</title><rect x="39.4" y="933" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="42.40" y="943.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (33,605,832 samples, 0.10%)</title><rect x="822.0" y="741" width="1.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="824.97" y="751.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,208,267 samples, 0.08%)</title><rect x="176.9" y="597" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="179.94" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,054,307 samples, 0.08%)</title><rect x="43.8" y="789" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.82" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,320,178 samples, 0.10%)</title><rect x="85.7" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.70" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (78,631,358 samples, 0.24%)</title><rect x="36.5" y="1013" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="1023.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,107,679 samples, 0.11%)</title><rect x="113.9" y="405" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="116.93" y="415.5" ></text>
</g>
<g >
<title>handle_mm_fault (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="517" width="3.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1170.43" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallFunctionObjArgs (23,433,938 samples, 0.07%)</title><rect x="107.2" y="549" width="0.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="110.19" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,196,850 samples, 0.21%)</title><rect x="179.1" y="709" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="182.10" y="719.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (25,900,541 samples, 0.08%)</title><rect x="112.0" y="693" width="1.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="115.02" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (62,147,556 samples, 0.19%)</title><rect x="58.2" y="469" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.18" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,477 samples, 0.08%)</title><rect x="131.4" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.36" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="1013" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="1023.5" ></text>
</g>
<g >
<title>update_get_addr (34,081,457 samples, 0.11%)</title><rect x="398.3" y="869" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="401.27" y="879.5" ></text>
</g>
<g >
<title>do_user_addr_fault (476,862,152 samples, 1.48%)</title><rect x="349.5" y="597" width="17.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="352.53" y="607.5" ></text>
</g>
<g >
<title>vfs_read (34,207,635 samples, 0.11%)</title><rect x="814.4" y="421" width="1.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="817.41" y="431.5" ></text>
</g>
<g >
<title>__do_page_fault (26,054,307 samples, 0.08%)</title><rect x="43.8" y="501" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="46.82" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,739,724 samples, 0.10%)</title><rect x="64.3" y="613" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="67.30" y="623.5" ></text>
</g>
<g >
<title>_dl_init (31,739,724 samples, 0.10%)</title><rect x="64.3" y="405" width="1.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="67.30" y="415.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,216,455 samples, 0.08%)</title><rect x="188.3" y="661" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="191.29" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (76,869,173 samples, 0.24%)</title><rect x="185.5" y="741" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.46" y="751.5" ></text>
</g>
<g >
<title>__mmap64 (25,900,541 samples, 0.08%)</title><rect x="112.0" y="565" width="1.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="115.02" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (210,448,082 samples, 0.66%)</title><rect x="151.3" y="837" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.30" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,142,413 samples, 0.11%)</title><rect x="103.7" y="981" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="106.73" y="991.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (3,620,968 samples, 0.01%)</title><rect x="698.0" y="1013" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="701.04" y="1023.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (94,481,486 samples, 0.29%)</title><rect x="113.9" y="1093" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="116.93" y="1103.5" ></text>
</g>
<g >
<title>PyThread_acquire_lock_timed (26,211,684 samples, 0.08%)</title><rect x="742.6" y="613" width="0.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="745.57" y="623.5" ></text>
</g>
<g >
<title>do_user_addr_fault (33,965,234 samples, 0.11%)</title><rect x="202.4" y="549" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="205.41" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (83,672,256 samples, 0.26%)</title><rect x="105.0" y="933" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,125 samples, 0.08%)</title><rect x="156.9" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.88" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,059,182 samples, 0.08%)</title><rect x="728.6" y="549" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="731.62" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (67,736,617 samples, 0.21%)</title><rect x="1157.4" y="805" width="2.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1160.42" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (21,830,925 samples, 0.07%)</title><rect x="88.8" y="613" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,868 samples, 0.08%)</title><rect x="119.3" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.33" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (145,151,908 samples, 0.45%)</title><rect x="144.7" y="453" width="5.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="147.71" y="463.5" ></text>
</g>
<g >
<title>migrate_misplaced_page (35,988,363 samples, 0.11%)</title><rect x="59.1" y="325" width="1.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="62.14" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,187,720 samples, 0.08%)</title><rect x="86.9" y="773" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (34,099,759 samples, 0.11%)</title><rect x="46.0" y="469" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.03" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (34,239,785 samples, 0.11%)</title><rect x="1103.6" y="725" width="1.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1106.57" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (111,608,185 samples, 0.35%)</title><rect x="92.1" y="693" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.10" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (155,467,616 samples, 0.48%)</title><rect x="182.6" y="949" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="959.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,401,334 samples, 0.16%)</title><rect x="86.9" y="1013" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="89.92" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,916 samples, 0.08%)</title><rect x="182.6" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="447.5" ></text>
</g>
<g >
<title>[internals.cpython-312-x86_64-linux-gnu.so] (26,201,125 samples, 0.08%)</title><rect x="156.9" y="549" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="159.88" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (52,386,527 samples, 0.16%)</title><rect x="183.5" y="885" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.54" y="895.5" ></text>
</g>
<g >
<title>_PyObject_Call (58,239,049 samples, 0.18%)</title><rect x="100.6" y="1061" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.63" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (195,384,141 samples, 0.61%)</title><rect x="167.3" y="1029" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.27" y="1039.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (31,739,724 samples, 0.10%)</title><rect x="64.3" y="501" width="1.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="67.30" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (128,575,815 samples, 0.40%)</title><rect x="44.8" y="869" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="47.78" y="879.5" ></text>
</g>
<g >
<title>vfs_statx (145,151,908 samples, 0.45%)</title><rect x="144.7" y="389" width="5.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="147.71" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (642,460,329 samples, 2.00%)</title><rect x="135.5" y="1077" width="23.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="138.46" y="1087.5" >_..</text>
</g>
<g >
<title>[python3.12] (26,212,280 samples, 0.08%)</title><rect x="38.4" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.44" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,545 samples, 0.08%)</title><rect x="47.3" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="50.29" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,631,358 samples, 0.24%)</title><rect x="36.5" y="1029" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.51" y="1039.5" ></text>
</g>
<g >
<title>__GI___libc_read (33,521,120 samples, 0.10%)</title><rect x="151.3" y="405" width="1.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="154.30" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="805" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="709" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="719.5" ></text>
</g>
<g >
<title>__do_page_fault (34,107,540 samples, 0.11%)</title><rect x="79.4" y="1061" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="82.39" y="1071.5" ></text>
</g>
<g >
<title>pybind11::detail::map_caster&lt;std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;, std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;::cast&lt;std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt; &gt; (68,425,510 samples, 0.21%)</title><rect x="1164.9" y="917" width="2.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1167.91" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (5,262,573,715 samples, 16.39%)</title><rect x="201.2" y="773" width="193.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.16" y="783.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (31,739,724 samples, 0.10%)</title><rect x="64.3" y="725" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.30" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (34,212,146 samples, 0.11%)</title><rect x="150.0" y="373" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.04" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (434,372,141 samples, 1.35%)</title><rect x="49.5" y="869" width="16.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="52.50" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (68,196,850 samples, 0.21%)</title><rect x="179.1" y="693" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,211,798 samples, 0.08%)</title><rect x="181.6" y="757" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="184.61" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,868 samples, 0.08%)</title><rect x="119.3" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.33" y="655.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (6,850,402 samples, 0.02%)</title><rect x="418.0" y="997" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="420.99" y="1007.5" ></text>
</g>
<g >
<title>PyDict_GetItemWithError (25,921,141 samples, 0.08%)</title><rect x="34.6" y="1157" width="1.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="37.60" y="1167.5" ></text>
</g>
<g >
<title>PyObject_CallFunctionObjArgs (26,020,513 samples, 0.08%)</title><rect x="120.3" y="581" width="1.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="123.30" y="591.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (33,775,896 samples, 0.11%)</title><rect x="170.2" y="405" width="1.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="173.16" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="805" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1170.43" y="815.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::queue&lt;std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, void&gt; (68,235,396 samples, 0.21%)</title><rect x="1066.0" y="805" width="2.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1069.02" y="815.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;::_Vector_base (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="613" width="1.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1166.66" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (240,367,898 samples, 0.75%)</title><rect x="66.4" y="837" width="8.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="69.42" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,936 samples, 0.08%)</title><rect x="75.3" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.26" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,073,660 samples, 0.11%)</title><rect x="723.1" y="1013" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="726.06" y="1023.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (2,354,369,162 samples, 7.33%)</title><rect x="733.3" y="933" width="86.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="736.30" y="943.5" >PyObject_V..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (55,566,826 samples, 0.17%)</title><rect x="108.1" y="597" width="2.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="111.06" y="607.5" ></text>
</g>
<g >
<title>operator new (34,056,183 samples, 0.11%)</title><rect x="1141.2" y="709" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1144.16" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (104,725,243 samples, 0.33%)</title><rect x="117.4" y="821" width="3.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="120.40" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_ptr (68,205,334 samples, 0.21%)</title><rect x="1154.9" y="693" width="2.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1157.92" y="703.5" ></text>
</g>
<g >
<title>_dl_open (31,739,724 samples, 0.10%)</title><rect x="64.3" y="469" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="67.30" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (83,672,256 samples, 0.26%)</title><rect x="105.0" y="965" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.98" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (31,977,548 samples, 0.10%)</title><rect x="160.0" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="543.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (136,463,226 samples, 0.42%)</title><rect x="980.9" y="693" width="5.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="983.88" y="703.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,196,850 samples, 0.21%)</title><rect x="179.1" y="581" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="182.10" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,020,513 samples, 0.08%)</title><rect x="120.3" y="533" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="123.30" y="543.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,419,555 samples, 0.16%)</title><rect x="76.2" y="709" width="1.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="79.22" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (112,492,912 samples, 0.35%)</title><rect x="167.3" y="725" width="4.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="170.27" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (34,034,859 samples, 0.11%)</title><rect x="732.0" y="997" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="735.05" y="1007.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,133,890 samples, 0.08%)</title><rect x="133.4" y="661" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="136.36" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,386,527 samples, 0.16%)</title><rect x="183.5" y="869" width="2.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="186.54" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (55,677,926 samples, 0.17%)</title><rect x="138.8" y="565" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.75" y="575.5" ></text>
</g>
<g >
<title>migrate_page (26,207,779 samples, 0.08%)</title><rect x="126.3" y="261" width="0.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="129.26" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (60,077,733 samples, 0.19%)</title><rect x="69.3" y="565" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.31" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (58,854,880 samples, 0.18%)</title><rect x="176.9" y="789" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.94" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,232,961 samples, 0.08%)</title><rect x="115.2" y="757" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="118.19" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (94,481,486 samples, 0.29%)</title><rect x="113.9" y="917" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.93" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::begin (33,988,187 samples, 0.11%)</title><rect x="1068.5" y="805" width="1.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1071.53" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (23,433,938 samples, 0.07%)</title><rect x="107.2" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.19" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (24,901,898 samples, 0.08%)</title><rect x="819.8" y="885" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="822.81" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,317 samples, 0.08%)</title><rect x="35.6" y="853" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="38.55" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,187,720 samples, 0.08%)</title><rect x="86.9" y="853" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="89.92" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,317 samples, 0.08%)</title><rect x="35.6" y="949" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="38.55" y="959.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,005,344 samples, 0.08%)</title><rect x="102.8" y="1077" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="105.77" y="1087.5" ></text>
</g>
<g >
<title>[python3.12] (25,644,292 samples, 0.08%)</title><rect x="63.4" y="645" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.35" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (434,372,141 samples, 1.35%)</title><rect x="49.5" y="917" width="16.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.50" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (30,911,433 samples, 0.10%)</title><rect x="134.3" y="885" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.32" y="895.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (34,068,038 samples, 0.11%)</title><rect x="48.2" y="485" width="1.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="51.25" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (68,224,887 samples, 0.21%)</title><rect x="1139.9" y="757" width="2.5" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1142.91" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (20,525,387 samples, 0.06%)</title><rect x="135.5" y="677" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="581" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (86,359,156 samples, 0.27%)</title><rect x="154.7" y="613" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="157.67" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,232,961 samples, 0.08%)</title><rect x="115.2" y="789" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="118.19" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,320,178 samples, 0.10%)</title><rect x="85.7" y="709" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.70" y="719.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,211,916 samples, 0.08%)</title><rect x="182.6" y="421" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="185.57" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (240,367,898 samples, 0.75%)</title><rect x="66.4" y="613" width="8.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.42" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="1093" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="1103.5" ></text>
</g>
<g >
<title>[python3.12] (26,186,266 samples, 0.08%)</title><rect x="183.5" y="597" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.54" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,187,720 samples, 0.08%)</title><rect x="86.9" y="837" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (52,355,002 samples, 0.16%)</title><rect x="110.1" y="789" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="581" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="591.5" ></text>
</g>
<g >
<title>dl_open_worker (25,900,541 samples, 0.08%)</title><rect x="112.0" y="629" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="115.02" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,631,358 samples, 0.24%)</title><rect x="36.5" y="965" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="39.51" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (439,736,773 samples, 1.37%)</title><rect x="142.9" y="981" width="16.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.90" y="991.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,315,304 samples, 0.19%)</title><rect x="46.0" y="661" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="49.03" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (25,900,541 samples, 0.08%)</title><rect x="112.0" y="885" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.02" y="895.5" ></text>
</g>
<g >
<title>rmqueue (30,414,171 samples, 0.09%)</title><rect x="738.0" y="469" width="1.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="740.98" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (57,347,471 samples, 0.18%)</title><rect x="140.8" y="389" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.80" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,621,160 samples, 0.10%)</title><rect x="90.9" y="741" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="93.87" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,368 samples, 0.08%)</title><rect x="105.0" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,777 samples, 0.08%)</title><rect x="40.4" y="901" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="43.37" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,986 samples, 0.08%)</title><rect x="65.5" y="997" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.46" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,798 samples, 0.08%)</title><rect x="181.6" y="773" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.61" y="783.5" ></text>
</g>
<g >
<title>boost::optional_detail::aligned_storage&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::address (34,161,706 samples, 0.11%)</title><rect x="843.2" y="757" width="1.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="846.22" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,005,344 samples, 0.08%)</title><rect x="102.8" y="677" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.77" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="613" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1170.43" y="623.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (272,066,282 samples, 0.85%)</title><rect x="1037.2" y="789" width="10.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1040.24" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,900,541 samples, 0.08%)</title><rect x="112.0" y="805" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="115.02" y="815.5" ></text>
</g>
<g >
<title>__GI___libc_read (33,521,120 samples, 0.10%)</title><rect x="151.3" y="421" width="1.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="154.30" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="693" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="703.5" ></text>
</g>
<g >
<title>_PyObject_Call (58,854,880 samples, 0.18%)</title><rect x="176.9" y="837" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="179.94" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3,273,324 samples, 0.01%)</title><rect x="697.9" y="1061" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="700.88" y="1071.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (509,571,902 samples, 1.59%)</title><rect x="374.5" y="725" width="18.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="377.55" y="735.5" ></text>
</g>
<g >
<title>memset_erms (36,691,942 samples, 0.11%)</title><rect x="399.5" y="949" width="1.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="402.53" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="447.5" ></text>
</g>
<g >
<title>PyObject_Free (26,280,415 samples, 0.08%)</title><rect x="737.0" y="773" width="1.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="740.02" y="783.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,422,000 samples, 0.16%)</title><rect x="98.7" y="437" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="101.71" y="447.5" ></text>
</g>
<g >
<title>clear_page_erms (33,965,234 samples, 0.11%)</title><rect x="202.4" y="437" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="205.41" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (55,566,826 samples, 0.17%)</title><rect x="108.1" y="741" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.06" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (78,717,016 samples, 0.25%)</title><rect x="167.3" y="565" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.27" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (52,269,741 samples, 0.16%)</title><rect x="727.7" y="693" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="730.66" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (68,049,651 samples, 0.21%)</title><rect x="96.2" y="949" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="99.20" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (29,472,383 samples, 0.09%)</title><rect x="139.7" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.71" y="447.5" ></text>
</g>
<g >
<title>boost::iterators::operator==&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (34,190,914 samples, 0.11%)</title><rect x="842.0" y="789" width="1.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="844.97" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,133,890 samples, 0.08%)</title><rect x="133.4" y="565" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="136.36" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (167,733,615 samples, 0.52%)</title><rect x="698.2" y="1061" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="701.21" y="1071.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,133,452 samples, 0.10%)</title><rect x="89.7" y="565" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="92.65" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,005,344 samples, 0.08%)</title><rect x="102.8" y="485" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.77" y="495.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,210,732 samples, 0.08%)</title><rect x="36.5" y="661" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="39.51" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,005,344 samples, 0.08%)</title><rect x="102.8" y="1061" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.77" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (33,510,882 samples, 0.10%)</title><rect x="71.5" y="549" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.52" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,496,862 samples, 0.16%)</title><rect x="117.4" y="677" width="1.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="120.40" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (170,101,519 samples, 0.53%)</title><rect x="1151.2" y="805" width="6.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1154.17" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (58,239,049 samples, 0.18%)</title><rect x="100.6" y="1109" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="1119.5" ></text>
</g>
<g >
<title>operator new (33,668,712 samples, 0.10%)</title><rect x="10.0" y="1157" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="13.01" y="1167.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,355,002 samples, 0.16%)</title><rect x="110.1" y="501" width="1.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="113.10" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (60,238,318 samples, 0.19%)</title><rect x="105.0" y="741" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="107.98" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (52,355,002 samples, 0.16%)</title><rect x="110.1" y="533" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (183,468,573 samples, 0.57%)</title><rect x="123.4" y="613" width="6.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="126.37" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (33,920,397 samples, 0.11%)</title><rect x="729.6" y="981" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="732.58" y="991.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (26,216,455 samples, 0.08%)</title><rect x="188.3" y="485" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="191.29" y="495.5" ></text>
</g>
<g >
<title>handle_mm_fault (56,166,545 samples, 0.17%)</title><rect x="806.9" y="517" width="2.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="809.95" y="527.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (3,273,324 samples, 0.01%)</title><rect x="697.9" y="1109" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="700.88" y="1119.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,732 samples, 0.08%)</title><rect x="36.5" y="773" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="39.51" y="783.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (585,747,737 samples, 1.82%)</title><rect x="113.9" y="1141" width="21.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="116.93" y="1151.5" >P..</text>
</g>
<g >
<title>[python3.12] (2,235,074,189 samples, 6.96%)</title><rect x="735.8" y="821" width="82.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="738.76" y="831.5" >[python3...</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,352,219 samples, 0.09%)</title><rect x="109.0" y="453" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.02" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,059,182 samples, 0.08%)</title><rect x="728.6" y="613" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="731.62" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (29,352,219 samples, 0.09%)</title><rect x="109.0" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.02" y="575.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,028 samples, 0.08%)</title><rect x="77.2" y="549" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="80.18" y="559.5" ></text>
</g>
<g >
<title>do_page_fault (35,988,363 samples, 0.11%)</title><rect x="59.1" y="421" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="62.14" y="431.5" ></text>
</g>
<g >
<title>calculate_sigpending (4,453,756 samples, 0.01%)</title><rect x="410.7" y="1125" width="0.1" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="413.67" y="1135.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (34,149,252 samples, 0.11%)</title><rect x="1131.1" y="757" width="1.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1134.14" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (52,496,862 samples, 0.16%)</title><rect x="117.4" y="549" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,386,527 samples, 0.16%)</title><rect x="183.5" y="693" width="2.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="186.54" y="703.5" ></text>
</g>
<g >
<title>__memset_erms (26,215,545 samples, 0.08%)</title><rect x="47.3" y="405" width="0.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="50.29" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (33,621,160 samples, 0.10%)</title><rect x="90.9" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.87" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,280 samples, 0.08%)</title><rect x="38.4" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.44" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (34,171,983 samples, 0.11%)</title><rect x="910.8" y="661" width="1.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="913.82" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,216,455 samples, 0.08%)</title><rect x="188.3" y="565" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="191.29" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (165,085,001 samples, 0.51%)</title><rect x="161.2" y="597" width="6.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="164.20" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size (34,002,787 samples, 0.11%)</title><rect x="933.4" y="645" width="1.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="936.36" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,531,491 samples, 0.24%)</title><rect x="75.3" y="725" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="78.26" y="735.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (33,837,096 samples, 0.11%)</title><rect x="1129.9" y="773" width="1.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1132.90" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,621,160 samples, 0.10%)</title><rect x="90.9" y="805" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="93.87" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,868 samples, 0.08%)</title><rect x="119.3" y="549" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.33" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (28,272,766 samples, 0.09%)</title><rect x="132.3" y="597" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="135.32" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,142,413 samples, 0.11%)</title><rect x="103.7" y="805" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.73" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,115,976 samples, 0.08%)</title><rect x="100.6" y="917" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="103.63" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (32,967,666 samples, 0.10%)</title><rect x="733.3" y="757" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="736.30" y="767.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,320,178 samples, 0.10%)</title><rect x="85.7" y="853" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="88.70" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,248 samples, 0.08%)</title><rect x="190.2" y="869" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.21" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (853,623,091 samples, 2.66%)</title><rect x="81.6" y="1157" width="31.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.61" y="1167.5" >[p..</text>
</g>
<g >
<title>do_user_addr_fault (31,739,724 samples, 0.10%)</title><rect x="64.3" y="181" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="67.30" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (68,196,850 samples, 0.21%)</title><rect x="179.1" y="469" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,198,130 samples, 0.08%)</title><rect x="122.4" y="613" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.41" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,916 samples, 0.08%)</title><rect x="182.6" y="629" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="185.57" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (29,472,383 samples, 0.09%)</title><rect x="139.7" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.71" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (240,367,898 samples, 0.75%)</title><rect x="66.4" y="629" width="8.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="69.42" y="639.5" ></text>
</g>
<g >
<title>__GI___libc_read (34,207,635 samples, 0.11%)</title><rect x="814.4" y="501" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="817.41" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (34,050,468 samples, 0.11%)</title><rect x="905.8" y="677" width="1.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="908.82" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,422,000 samples, 0.16%)</title><rect x="98.7" y="405" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.71" y="415.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (34,271,175 samples, 0.11%)</title><rect x="1046.0" y="757" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1048.97" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,614 samples, 0.08%)</title><rect x="87.9" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.89" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (34,107,679 samples, 0.11%)</title><rect x="113.9" y="693" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.93" y="703.5" ></text>
</g>
<g >
<title>free_pipe_info (15,580,879 samples, 0.05%)</title><rect x="1171.0" y="1029" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1173.97" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="837" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,142,413 samples, 0.11%)</title><rect x="103.7" y="1045" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.73" y="1055.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (32,786,257 samples, 0.10%)</title><rect x="1180.0" y="997" width="1.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1183.00" y="1007.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,190,262 samples, 0.08%)</title><rect x="39.4" y="805" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="42.40" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,238,318 samples, 0.19%)</title><rect x="105.0" y="661" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.98" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,034,859 samples, 0.11%)</title><rect x="732.0" y="965" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="735.05" y="975.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,108,855 samples, 0.11%)</title><rect x="93.1" y="373" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="96.05" y="383.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (33,605,832 samples, 0.10%)</title><rect x="822.0" y="725" width="1.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="824.97" y="735.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (26,054,307 samples, 0.08%)</title><rect x="43.8" y="693" width="1.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="46.82" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (131,042,711 samples, 0.41%)</title><rect x="161.2" y="565" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.20" y="575.5" ></text>
</g>
<g >
<title>boost::tuples::tuple&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type&gt;::tuple (204,035,554 samples, 0.64%)</title><rect x="1056.0" y="789" width="7.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1059.01" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (240,367,898 samples, 0.75%)</title><rect x="66.4" y="693" width="8.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.42" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (249,876,264 samples, 0.78%)</title><rect x="179.1" y="1093" width="9.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="182.10" y="1103.5" ></text>
</g>
<g >
<title>[python3.12] (120,190,804 samples, 0.37%)</title><rect x="39.4" y="1029" width="4.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="1039.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,215,913 samples, 0.08%)</title><rect x="159.1" y="613" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="162.06" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,401,334 samples, 0.16%)</title><rect x="86.9" y="965" width="1.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="89.92" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,286 samples, 0.08%)</title><rect x="70.6" y="453" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="73.56" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (128,575,815 samples, 0.40%)</title><rect x="44.8" y="949" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="47.78" y="959.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,142,413 samples, 0.11%)</title><rect x="103.7" y="821" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="106.73" y="831.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,238,318 samples, 0.19%)</title><rect x="105.0" y="597" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="107.98" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (28,272,766 samples, 0.09%)</title><rect x="132.3" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.32" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (57,347,471 samples, 0.18%)</title><rect x="140.8" y="501" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.80" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,936 samples, 0.08%)</title><rect x="75.3" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.26" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,432,438 samples, 0.16%)</title><rect x="188.3" y="933" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="191.29" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (32,066,320 samples, 0.10%)</title><rect x="152.5" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.53" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="661" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1170.43" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_read (33,774,270 samples, 0.11%)</title><rect x="174.4" y="357" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="177.45" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (69,172,772 samples, 0.22%)</title><rect x="136.2" y="501" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.21" y="511.5" ></text>
</g>
<g >
<title>advise_stack_range (192,536,179 samples, 0.60%)</title><rect x="411.2" y="1141" width="7.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="414.17" y="1151.5" ></text>
</g>
<g >
<title>[python3.12] (26,054,307 samples, 0.08%)</title><rect x="43.8" y="869" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.82" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,432,438 samples, 0.16%)</title><rect x="188.3" y="885" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.29" y="895.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (33,774,270 samples, 0.11%)</title><rect x="174.4" y="277" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="177.45" y="287.5" ></text>
</g>
<g >
<title>__free_pages (15,580,879 samples, 0.05%)</title><rect x="1171.0" y="1013" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1173.97" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (68,140,617 samples, 0.21%)</title><rect x="72.8" y="565" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.75" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,422,000 samples, 0.16%)</title><rect x="98.7" y="549" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.71" y="559.5" ></text>
</g>
<g >
<title>PySlice_Unpack (53,915,329 samples, 0.17%)</title><rect x="27.5" y="1157" width="2.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="30.52" y="1167.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,916 samples, 0.08%)</title><rect x="182.6" y="581" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (34,178,443 samples, 0.11%)</title><rect x="175.7" y="821" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.69" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,638,666 samples, 0.24%)</title><rect x="66.4" y="565" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="69.42" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (94,408,648 samples, 0.29%)</title><rect x="179.1" y="981" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="991.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,355,002 samples, 0.16%)</title><rect x="110.1" y="725" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="113.10" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,213,614 samples, 0.08%)</title><rect x="87.9" y="725" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="90.89" y="735.5" ></text>
</g>
<g >
<title>try_charge (136,376,493 samples, 0.42%)</title><rect x="362.0" y="501" width="5.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="365.04" y="511.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_all_s_d (135,817,078 samples, 0.42%)</title><rect x="822.0" y="821" width="5.0" height="15.0" fill="rgb(230,117,27)" rx="2" ry="2" />
<text  x="824.97" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (192,536,179 samples, 0.60%)</title><rect x="411.2" y="1093" width="7.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="414.17" y="1103.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,287,715 samples, 0.10%)</title><rect x="157.8" y="581" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="160.85" y="591.5" ></text>
</g>
<g >
<title>PyObject_Dir (26,210,732 samples, 0.08%)</title><rect x="36.5" y="453" width="1.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="39.51" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (21,830,925 samples, 0.07%)</title><rect x="88.8" y="677" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,614 samples, 0.08%)</title><rect x="87.9" y="677" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.89" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (243,638,169 samples, 0.76%)</title><rect x="123.4" y="693" width="8.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="126.37" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,083 samples, 0.08%)</title><rect x="53.1" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.08" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (34,239,785 samples, 0.11%)</title><rect x="1103.6" y="693" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1106.57" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (135,808,908 samples, 0.42%)</title><rect x="1138.7" y="789" width="4.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1141.65" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,614 samples, 0.08%)</title><rect x="87.9" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.89" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (33,320,178 samples, 0.10%)</title><rect x="85.7" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.70" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,777 samples, 0.08%)</title><rect x="40.4" y="597" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.37" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (33,320,178 samples, 0.10%)</title><rect x="85.7" y="885" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.70" y="895.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (102,418,501 samples, 0.32%)</title><rect x="1138.7" y="773" width="3.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1141.65" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (102,416,733 samples, 0.32%)</title><rect x="930.8" y="693" width="3.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="933.84" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (60,158,031 samples, 0.19%)</title><rect x="154.7" y="517" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.67" y="527.5" ></text>
</g>
<g >
<title>__GI___clone (36,691,942 samples, 0.11%)</title><rect x="399.5" y="1157" width="1.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="402.53" y="1167.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (62,147,556 samples, 0.19%)</title><rect x="58.2" y="485" width="2.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="61.18" y="495.5" ></text>
</g>
<g >
<title>PyImport_Import (26,054,307 samples, 0.08%)</title><rect x="43.8" y="933" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="46.82" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="709" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (60,315,304 samples, 0.19%)</title><rect x="46.0" y="677" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.03" y="687.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (33,774,270 samples, 0.11%)</title><rect x="174.4" y="213" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="177.45" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (26,186,266 samples, 0.08%)</title><rect x="183.5" y="629" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.54" y="639.5" ></text>
</g>
<g >
<title>__handle_mm_fault (26,184,488 samples, 0.08%)</title><rect x="741.6" y="469" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="744.61" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,510,882 samples, 0.10%)</title><rect x="71.5" y="565" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="74.52" y="575.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (32,786,257 samples, 0.10%)</title><rect x="1180.0" y="981" width="1.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1183.00" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (104,725,243 samples, 0.33%)</title><rect x="117.4" y="949" width="3.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="120.40" y="959.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (25,115,976 samples, 0.08%)</title><rect x="100.6" y="981" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="103.63" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (34,211,878 samples, 0.11%)</title><rect x="1151.2" y="773" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1154.17" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (5,670,297,534 samples, 17.66%)</title><rect x="191.2" y="1125" width="208.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.18" y="1135.5" >[python3.12]</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,911,433 samples, 0.10%)</title><rect x="134.3" y="853" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.32" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,133,890 samples, 0.08%)</title><rect x="133.4" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.36" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (111,608,185 samples, 0.35%)</title><rect x="92.1" y="757" width="4.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="95.10" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (55,566,826 samples, 0.17%)</title><rect x="108.1" y="757" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="111.06" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,133,890 samples, 0.08%)</title><rect x="133.4" y="645" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.36" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (120,190,804 samples, 0.37%)</title><rect x="39.4" y="1109" width="4.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="1119.5" ></text>
</g>
<g >
<title>[python3.12] (145,229,345 samples, 0.45%)</title><rect x="90.9" y="869" width="5.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.87" y="879.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,216,455 samples, 0.08%)</title><rect x="188.3" y="517" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="191.29" y="527.5" ></text>
</g>
<g >
<title>____fput (15,580,879 samples, 0.05%)</title><rect x="1171.0" y="1093" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1173.97" y="1103.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,125 samples, 0.08%)</title><rect x="156.9" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.88" y="383.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (34,053,623 samples, 0.11%)</title><rect x="56.9" y="485" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="59.93" y="495.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (26,208,267 samples, 0.08%)</title><rect x="176.9" y="277" width="1.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="179.94" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Deque_base (68,235,396 samples, 0.21%)</title><rect x="1066.0" y="773" width="2.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1069.02" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (54,964,377 samples, 0.17%)</title><rect x="88.8" y="757" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,187,720 samples, 0.08%)</title><rect x="86.9" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,420,626 samples, 0.16%)</title><rect x="37.5" y="709" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="40.48" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,059,182 samples, 0.08%)</title><rect x="728.6" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="731.62" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (68,140,617 samples, 0.21%)</title><rect x="72.8" y="581" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.75" y="591.5" ></text>
</g>
<g >
<title>dispatcher_vectorcall (33,979,119 samples, 0.11%)</title><rect x="130.1" y="597" width="1.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="133.11" y="607.5" ></text>
</g>
<g >
<title>clear_page_erms (33,319,115 samples, 0.10%)</title><rect x="261.0" y="501" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="264.01" y="511.5" ></text>
</g>
<g >
<title>call_init (31,739,724 samples, 0.10%)</title><rect x="64.3" y="389" width="1.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="67.30" y="399.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator++ (136,630,887 samples, 0.43%)</title><rect x="842.0" y="821" width="5.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="844.97" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (93,033,323 samples, 0.29%)</title><rect x="175.7" y="1029" width="3.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="178.69" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (32,646,613 samples, 0.10%)</title><rect x="177.9" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.91" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,142,413 samples, 0.11%)</title><rect x="103.7" y="677" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="106.73" y="687.5" ></text>
</g>
<g >
<title>__Pyx_Import.constprop.57 (28,272,766 samples, 0.09%)</title><rect x="132.3" y="789" width="1.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="135.32" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="757" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,133,890 samples, 0.08%)</title><rect x="133.4" y="725" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.36" y="735.5" ></text>
</g>
<g >
<title>ksys_read (34,207,635 samples, 0.11%)</title><rect x="814.4" y="437" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="817.41" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,186,266 samples, 0.08%)</title><rect x="183.5" y="533" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.54" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,572 samples, 0.08%)</title><rect x="61.4" y="613" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.43" y="623.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::vertex_set (34,213,752 samples, 0.11%)</title><rect x="1031.0" y="725" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1033.96" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (228,505,286 samples, 0.71%)</title><rect x="142.9" y="661" width="8.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,020,513 samples, 0.08%)</title><rect x="120.3" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.30" y="495.5" ></text>
</g>
<g >
<title>__do_sys_newstat (145,151,908 samples, 0.45%)</title><rect x="144.7" y="405" width="5.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="147.71" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (55,566,826 samples, 0.17%)</title><rect x="108.1" y="693" width="2.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="111.06" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (52,420,626 samples, 0.16%)</title><rect x="37.5" y="821" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.48" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,607 samples, 0.08%)</title><rect x="108.1" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.06" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_deallocate_node (33,805,372 samples, 0.11%)</title><rect x="1161.2" y="773" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1164.16" y="783.5" ></text>
</g>
<g >
<title>_int_malloc (26,201,368 samples, 0.08%)</title><rect x="105.0" y="389" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="107.98" y="399.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,452 samples, 0.08%)</title><rect x="62.4" y="613" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="65.39" y="623.5" ></text>
</g>
<g >
<title>page_fault (56,166,545 samples, 0.17%)</title><rect x="806.9" y="581" width="2.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="809.95" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,572 samples, 0.08%)</title><rect x="61.4" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.43" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,123,073 samples, 0.10%)</title><rect x="101.6" y="677" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="104.55" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,158,031 samples, 0.19%)</title><rect x="154.7" y="485" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="157.67" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,123,073 samples, 0.10%)</title><rect x="101.6" y="741" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="104.55" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (57,347,471 samples, 0.18%)</title><rect x="140.8" y="405" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.80" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (82,891,229 samples, 0.26%)</title><rect x="171.4" y="597" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="607.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (3,273,324 samples, 0.01%)</title><rect x="697.9" y="1125" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="700.88" y="1135.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,913 samples, 0.08%)</title><rect x="159.1" y="741" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.06" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (210,448,082 samples, 0.66%)</title><rect x="151.3" y="773" width="7.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.30" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="1013" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="1023.5" ></text>
</g>
<g >
<title>get_page_from_freelist (34,107,679 samples, 0.11%)</title><rect x="113.9" y="325" width="1.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="116.93" y="335.5" ></text>
</g>
<g >
<title>do_numa_page (26,207,779 samples, 0.08%)</title><rect x="126.3" y="325" width="0.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="129.26" y="335.5" ></text>
</g>
<g >
<title>perf_event_init_task (36,691,942 samples, 0.11%)</title><rect x="399.5" y="1061" width="1.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="402.53" y="1071.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,967,666 samples, 0.10%)</title><rect x="733.3" y="725" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="736.30" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,238,318 samples, 0.19%)</title><rect x="105.0" y="677" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="107.98" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (66,845,496 samples, 0.21%)</title><rect x="50.6" y="533" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="53.62" y="543.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (238,727,895 samples, 0.74%)</title><rect x="1109.8" y="789" width="8.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1112.85" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (34,212,146 samples, 0.11%)</title><rect x="150.0" y="501" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.04" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="1093" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="1103.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,205,986 samples, 0.08%)</title><rect x="65.5" y="901" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="68.46" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,142,413 samples, 0.11%)</title><rect x="103.7" y="629" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.73" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (318,899,389 samples, 0.99%)</title><rect x="66.4" y="997" width="11.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="69.42" y="1007.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,133,890 samples, 0.08%)</title><rect x="133.4" y="805" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="136.36" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (33,621,160 samples, 0.10%)</title><rect x="90.9" y="725" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.87" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (145,229,345 samples, 0.45%)</title><rect x="90.9" y="981" width="5.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.87" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (194,293,140 samples, 0.61%)</title><rect x="142.9" y="581" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="591.5" ></text>
</g>
<g >
<title>operator new (33,837,096 samples, 0.11%)</title><rect x="1129.9" y="725" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1132.90" y="735.5" ></text>
</g>
<g >
<title>std::make_pair&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt; (34,179,152 samples, 0.11%)</title><rect x="1032.2" y="725" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1035.22" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,777 samples, 0.08%)</title><rect x="40.4" y="869" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.37" y="879.5" ></text>
</g>
<g >
<title>exit_mmap (131,919,136 samples, 0.41%)</title><rect x="1176.4" y="1077" width="4.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1179.35" y="1087.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (94,481,486 samples, 0.29%)</title><rect x="113.9" y="965" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="116.93" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (33,133,452 samples, 0.10%)</title><rect x="89.7" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.65" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,320,178 samples, 0.10%)</title><rect x="85.7" y="613" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="88.70" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (57,347,471 samples, 0.18%)</title><rect x="140.8" y="533" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.80" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (136,118,355 samples, 0.42%)</title><rect x="929.6" y="709" width="5.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="932.60" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (33,320,178 samples, 0.10%)</title><rect x="85.7" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.70" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,148 samples, 0.08%)</title><rect x="60.5" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.46" y="463.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (68,192,991 samples, 0.21%)</title><rect x="370.8" y="661" width="2.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="373.79" y="671.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (34,066,465 samples, 0.11%)</title><rect x="840.7" y="757" width="1.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="843.71" y="767.5" ></text>
</g>
<g >
<title>operator new (33,933,915 samples, 0.11%)</title><rect x="1091.1" y="645" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1094.07" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,125 samples, 0.08%)</title><rect x="156.9" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.88" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (202,723,556 samples, 0.63%)</title><rect x="135.5" y="789" width="7.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="138.46" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (240,367,898 samples, 0.75%)</title><rect x="66.4" y="773" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.42" y="783.5" ></text>
</g>
<g >
<title>_dl_open (25,900,541 samples, 0.08%)</title><rect x="112.0" y="661" width="1.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="115.02" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,614 samples, 0.08%)</title><rect x="87.9" y="917" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.89" y="927.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::operator[] (170,101,519 samples, 0.53%)</title><rect x="1151.2" y="821" width="6.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1154.17" y="831.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,213,248 samples, 0.08%)</title><rect x="190.2" y="949" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="193.21" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_v (68,205,334 samples, 0.21%)</title><rect x="1154.9" y="725" width="2.5" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="1157.92" y="735.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (589,153,942 samples, 1.83%)</title><rect x="44.8" y="1045" width="21.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="47.78" y="1055.5" >P..</text>
</g>
<g >
<title>PyObject_GetAttr (26,020,513 samples, 0.08%)</title><rect x="120.3" y="613" width="1.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="123.30" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (68,337,118 samples, 0.21%)</title><rect x="1121.1" y="773" width="2.5" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1124.13" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,644,292 samples, 0.08%)</title><rect x="63.4" y="469" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="66.35" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (34,291,594 samples, 0.11%)</title><rect x="928.3" y="693" width="1.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="931.34" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (134,472,130 samples, 0.42%)</title><rect x="699.4" y="1045" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="702.43" y="1055.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,798 samples, 0.08%)</title><rect x="181.6" y="629" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.61" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (32,287,715 samples, 0.10%)</title><rect x="157.8" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.85" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="997" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="1007.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (68,104,179 samples, 0.21%)</title><rect x="977.1" y="709" width="2.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="980.12" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (33,510,882 samples, 0.10%)</title><rect x="71.5" y="533" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.52" y="543.5" ></text>
</g>
<g >
<title>handle_mm_fault (67,399,663 samples, 0.21%)</title><rect x="259.8" y="597" width="2.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="262.76" y="607.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (26,054,307 samples, 0.08%)</title><rect x="43.8" y="677" width="1.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="46.82" y="687.5" ></text>
</g>
<g >
<title>sysmalloc (31,386,620 samples, 0.10%)</title><rect x="121.3" y="437" width="1.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="124.25" y="447.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,208,148 samples, 0.08%)</title><rect x="60.5" y="517" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="63.46" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (34,068,038 samples, 0.11%)</title><rect x="48.2" y="709" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.25" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,190,262 samples, 0.08%)</title><rect x="39.4" y="485" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="42.40" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (52,269,741 samples, 0.16%)</title><rect x="727.7" y="773" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="730.66" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,054,307 samples, 0.08%)</title><rect x="43.8" y="1077" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.82" y="1087.5" ></text>
</g>
<g >
<title>__do_page_fault (34,034,859 samples, 0.11%)</title><rect x="732.0" y="869" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="735.05" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,915 samples, 0.08%)</title><rect x="95.2" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.24" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (36,691,942 samples, 0.11%)</title><rect x="399.5" y="1125" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="402.53" y="1135.5" ></text>
</g>
<g >
<title>PyDescr_NewMember (26,208,148 samples, 0.08%)</title><rect x="60.5" y="437" width="0.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="63.46" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (83,672,256 samples, 0.26%)</title><rect x="105.0" y="789" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::push_back (817,894,481 samples, 2.55%)</title><rect x="1076.0" y="805" width="30.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1079.03" y="815.5" >st..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (55,566,826 samples, 0.17%)</title><rect x="108.1" y="789" width="2.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="111.06" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,521,120 samples, 0.10%)</title><rect x="151.3" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.30" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,192,473 samples, 0.11%)</title><rect x="44.8" y="533" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="47.78" y="543.5" ></text>
</g>
<g >
<title>alloc_pages_vma (33,979,119 samples, 0.11%)</title><rect x="130.1" y="389" width="1.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="133.11" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,042,290 samples, 0.11%)</title><rect x="166.0" y="453" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.02" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,107,679 samples, 0.11%)</title><rect x="113.9" y="677" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="116.93" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="501" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (58,854,880 samples, 0.18%)</title><rect x="176.9" y="805" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.94" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (34,068,038 samples, 0.11%)</title><rect x="48.2" y="565" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.25" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (217,494,625 samples, 0.68%)</title><rect x="105.0" y="1077" width="8.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="1087.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,621,160 samples, 0.10%)</title><rect x="90.9" y="565" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="93.87" y="575.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (26,212,010 samples, 0.08%)</title><rect x="127.2" y="437" width="1.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="130.22" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,510,882 samples, 0.10%)</title><rect x="71.5" y="485" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.52" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (32,287,715 samples, 0.10%)</title><rect x="157.8" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.85" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::empty (67,529,580 samples, 0.21%)</title><rect x="1069.8" y="805" width="2.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1072.78" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (305,260,913 samples, 0.95%)</title><rect x="53.1" y="709" width="11.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.08" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="773" width="1.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1166.66" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (434,372,141 samples, 1.35%)</title><rect x="49.5" y="997" width="16.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.50" y="1007.5" ></text>
</g>
<g >
<title>PyObject_Malloc (26,186,266 samples, 0.08%)</title><rect x="183.5" y="485" width="1.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="186.54" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (23,069,911 samples, 0.07%)</title><rect x="726.8" y="789" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="729.81" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,059,182 samples, 0.08%)</title><rect x="728.6" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="731.62" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (25,115,976 samples, 0.08%)</title><rect x="100.6" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (509,571,902 samples, 1.59%)</title><rect x="374.5" y="693" width="18.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="377.55" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (24,901,898 samples, 0.08%)</title><rect x="819.8" y="933" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="822.81" y="943.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,246,175 samples, 0.16%)</title><rect x="817.9" y="837" width="1.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="820.89" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (104,725,243 samples, 0.33%)</title><rect x="117.4" y="869" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="879.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,209,777 samples, 0.08%)</title><rect x="40.4" y="741" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="43.37" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,386,527 samples, 0.16%)</title><rect x="183.5" y="741" width="2.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="186.54" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (54,964,377 samples, 0.17%)</title><rect x="88.8" y="789" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="91.85" y="799.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (26,186,266 samples, 0.08%)</title><rect x="183.5" y="501" width="1.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="186.54" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (34,081,228 samples, 0.11%)</title><rect x="78.1" y="1125" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.14" y="1135.5" ></text>
</g>
<g >
<title>handle_mm_fault (33,774,270 samples, 0.11%)</title><rect x="174.4" y="133" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="177.45" y="143.5" ></text>
</g>
<g >
<title>_PyUnicode_XStrip (26,215,913 samples, 0.08%)</title><rect x="159.1" y="485" width="0.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="162.06" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,638,666 samples, 0.24%)</title><rect x="66.4" y="533" width="2.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="69.42" y="543.5" ></text>
</g>
<g >
<title>do_page_fault (33,774,270 samples, 0.11%)</title><rect x="174.4" y="181" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="177.45" y="191.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (85,721,512 samples, 0.27%)</title><rect x="85.7" y="1109" width="3.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="88.70" y="1119.5" ></text>
</g>
<g >
<title>do_user_addr_fault (30,414,171 samples, 0.09%)</title><rect x="738.0" y="581" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="740.98" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,133,890 samples, 0.08%)</title><rect x="133.4" y="789" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.36" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (68,393,840 samples, 0.21%)</title><rect x="909.6" y="693" width="2.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="912.56" y="703.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (33,774,270 samples, 0.11%)</title><rect x="174.4" y="245" width="1.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="177.45" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,621 samples, 0.08%)</title><rect x="154.7" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.67" y="463.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (102,408,999 samples, 0.32%)</title><rect x="17.5" y="1157" width="3.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="20.52" y="1167.5" ></text>
</g>
<g >
<title>[python3.12] (197,062,549 samples, 0.61%)</title><rect x="160.0" y="885" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="895.5" ></text>
</g>
<g >
<title>_PyStructSequence_NewType (26,208,148 samples, 0.08%)</title><rect x="60.5" y="485" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="63.46" y="495.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (170,082,058 samples, 0.53%)</title><rect x="835.7" y="773" width="6.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="838.72" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="837" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="847.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (34,034,859 samples, 0.11%)</title><rect x="732.0" y="821" width="1.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="735.05" y="831.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (68,370,758 samples, 0.21%)</title><rect x="1015.9" y="709" width="2.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1018.90" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,028 samples, 0.08%)</title><rect x="77.2" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.18" y="415.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,208,317 samples, 0.08%)</title><rect x="35.6" y="501" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="38.55" y="511.5" ></text>
</g>
<g >
<title>PyUnicode_FindChar (26,215,913 samples, 0.08%)</title><rect x="159.1" y="469" width="0.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="162.06" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (82,891,229 samples, 0.26%)</title><rect x="171.4" y="741" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="751.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,115,976 samples, 0.08%)</title><rect x="100.6" y="949" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="103.63" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (55,566,826 samples, 0.17%)</title><rect x="108.1" y="805" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.06" y="815.5" ></text>
</g>
<g >
<title>Py_RunMain (12,769,874,373 samples, 39.76%)</title><rect x="698.2" y="1125" width="469.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="701.21" y="1135.5" >Py_RunMain</text>
</g>
<g >
<title>PyObject_CallOneArg (34,178,443 samples, 0.11%)</title><rect x="175.7" y="805" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="178.69" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (66,845,496 samples, 0.21%)</title><rect x="50.6" y="501" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="53.62" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,068,038 samples, 0.11%)</title><rect x="48.2" y="597" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="51.25" y="607.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (26,054,307 samples, 0.08%)</title><rect x="43.8" y="629" width="1.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="46.82" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,054,307 samples, 0.08%)</title><rect x="43.8" y="997" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.82" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,913 samples, 0.08%)</title><rect x="159.1" y="1061" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.06" y="1071.5" ></text>
</g>
<g >
<title>__remove_shared_vm_struct (25,900,541 samples, 0.08%)</title><rect x="112.0" y="357" width="1.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="115.02" y="367.5" ></text>
</g>
<g >
<title>alloc_pages_vma (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="469" width="3.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1170.43" y="479.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (101,836,947 samples, 0.32%)</title><rect x="1010.9" y="677" width="3.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1013.91" y="687.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,979,119 samples, 0.11%)</title><rect x="130.1" y="613" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="133.11" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="773" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="783.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (34,237,807 samples, 0.11%)</title><rect x="1063.5" y="805" width="1.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1066.51" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (34,036,950 samples, 0.11%)</title><rect x="105.9" y="549" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.94" y="559.5" ></text>
</g>
<g >
<title>array_subscript (33,275,088 samples, 0.10%)</title><rect x="730.8" y="981" width="1.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="733.82" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (52,425,621 samples, 0.16%)</title><rect x="53.1" y="565" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.08" y="575.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (33,965,234 samples, 0.11%)</title><rect x="202.4" y="469" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="205.41" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (78,638,666 samples, 0.24%)</title><rect x="66.4" y="581" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.42" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_put_node (34,267,791 samples, 0.11%)</title><rect x="1149.9" y="709" width="1.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1152.91" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,186,266 samples, 0.08%)</title><rect x="183.5" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.54" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,774,270 samples, 0.11%)</title><rect x="174.4" y="821" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="177.45" y="831.5" ></text>
</g>
<g >
<title>_PyObject_Call (94,481,486 samples, 0.29%)</title><rect x="113.9" y="933" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="116.93" y="943.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,142,413 samples, 0.11%)</title><rect x="103.7" y="1061" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="106.73" y="1071.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (139,239,082 samples, 0.43%)</title><rect x="105.0" y="1061" width="5.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="107.98" y="1071.5" ></text>
</g>
<g >
<title>do_group_exit (131,919,136 samples, 0.41%)</title><rect x="1176.4" y="1125" width="4.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1179.35" y="1135.5" ></text>
</g>
<g >
<title>_int_malloc (25,833,337 samples, 0.08%)</title><rect x="33.6" y="1157" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="36.65" y="1167.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="821" width="3.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1170.43" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,215,913 samples, 0.08%)</title><rect x="159.1" y="869" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="162.06" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,986 samples, 0.08%)</title><rect x="65.5" y="693" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.46" y="703.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (306,263,563 samples, 0.95%)</title><rect x="1036.0" y="805" width="11.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1038.98" y="815.5" ></text>
</g>
<g >
<title>pybind11::detail::argument_loader&lt;IT_outputs const*&gt;::call&lt;std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;, IT_outputs, , pybind11::name, pybind11::is_method, pybind11::sibling&gt; (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="917" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1166.66" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (76,869,173 samples, 0.24%)</title><rect x="185.5" y="869" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="188.46" y="879.5" ></text>
</g>
<g >
<title>__handle_mm_fault (30,414,171 samples, 0.09%)</title><rect x="738.0" y="549" width="1.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="740.98" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="549" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_eq (34,129,464 samples, 0.11%)</title><rect x="1158.7" y="741" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1161.66" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="581" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,732 samples, 0.08%)</title><rect x="36.5" y="677" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="39.51" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (30,911,433 samples, 0.10%)</title><rect x="134.3" y="661" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="137.32" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,614 samples, 0.08%)</title><rect x="87.9" y="533" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.89" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (76,869,173 samples, 0.24%)</title><rect x="185.5" y="581" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="188.46" y="591.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (26,214,607 samples, 0.08%)</title><rect x="108.1" y="405" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="111.06" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (55,566,826 samples, 0.17%)</title><rect x="108.1" y="773" width="2.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="111.06" y="783.5" ></text>
</g>
<g >
<title>do_page_fault (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="565" width="3.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1170.43" y="575.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (67,757,006 samples, 0.21%)</title><rect x="1002.2" y="661" width="2.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1005.17" y="671.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (101,797,440 samples, 0.32%)</title><rect x="969.7" y="725" width="3.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="972.66" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (5,670,297,534 samples, 17.66%)</title><rect x="191.2" y="1045" width="208.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.18" y="1055.5" >[python3.12]</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,913 samples, 0.08%)</title><rect x="159.1" y="949" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="162.06" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,133,890 samples, 0.08%)</title><rect x="133.4" y="581" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="136.36" y="591.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (204,987,297 samples, 0.64%)</title><rect x="1111.1" y="757" width="7.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1114.09" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (195,384,141 samples, 0.61%)</title><rect x="167.3" y="885" width="7.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="170.27" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned long&gt;, unsigned long&gt;::_S_select_on_copy (34,202,944 samples, 0.11%)</title><rect x="1137.4" y="789" width="1.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1140.40" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (135,733,951 samples, 0.42%)</title><rect x="1089.8" y="741" width="5.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1092.82" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (2,235,074,189 samples, 6.96%)</title><rect x="735.8" y="837" width="82.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="738.76" y="847.5" >[python3...</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (67,736,617 samples, 0.21%)</title><rect x="1157.4" y="757" width="2.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1160.42" y="767.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,341,788 samples, 0.10%)</title><rect x="50.6" y="469" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="53.62" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~allocator (33,610,593 samples, 0.10%)</title><rect x="1123.6" y="757" width="1.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1126.64" y="767.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (31,739,724 samples, 0.10%)</title><rect x="64.3" y="741" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="67.30" y="751.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (33,918,442 samples, 0.11%)</title><rect x="947.1" y="693" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="950.13" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (128,575,815 samples, 0.40%)</title><rect x="44.8" y="741" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="47.78" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (75,339,652 samples, 0.23%)</title><rect x="726.8" y="949" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="729.81" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,125 samples, 0.08%)</title><rect x="156.9" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.88" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,214,028 samples, 0.08%)</title><rect x="77.2" y="453" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="80.18" y="463.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (33,771,876 samples, 0.11%)</title><rect x="1042.2" y="757" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1045.24" y="767.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (24,846,799 samples, 0.08%)</title><rect x="808.1" y="453" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="811.10" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (28,272,766 samples, 0.09%)</title><rect x="132.3" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.32" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,054,307 samples, 0.08%)</title><rect x="43.8" y="741" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.82" y="751.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (6,850,402 samples, 0.02%)</title><rect x="418.0" y="965" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="420.99" y="975.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (200,193,722 samples, 0.62%)</title><rect x="88.8" y="1141" width="7.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="91.85" y="1151.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,621,160 samples, 0.10%)</title><rect x="90.9" y="629" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.87" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,140,846 samples, 0.11%)</title><rect x="116.1" y="725" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="119.15" y="735.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (642,460,329 samples, 2.00%)</title><rect x="135.5" y="1061" width="23.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="138.46" y="1071.5" >P..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,900,541 samples, 0.08%)</title><rect x="112.0" y="869" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="115.02" y="879.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,739,724 samples, 0.10%)</title><rect x="64.3" y="773" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="67.30" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (112,492,912 samples, 0.35%)</title><rect x="167.3" y="645" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.27" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (82,891,229 samples, 0.26%)</title><rect x="171.4" y="533" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="543.5" ></text>
</g>
<g >
<title>__do_page_fault (34,108,855 samples, 0.11%)</title><rect x="93.1" y="389" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="96.05" y="399.5" ></text>
</g>
<g >
<title>raw_array_assign_scalar (67,790,765 samples, 0.21%)</title><rect x="41.3" y="933" width="2.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="44.33" y="943.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (33,774,270 samples, 0.11%)</title><rect x="174.4" y="69" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="177.45" y="79.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,215,913 samples, 0.08%)</title><rect x="159.1" y="581" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="162.06" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (26,207,202 samples, 0.08%)</title><rect x="129.1" y="437" width="1.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="132.15" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (83,672,256 samples, 0.26%)</title><rect x="105.0" y="1013" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="107.98" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,775,896 samples, 0.11%)</title><rect x="170.2" y="581" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="173.16" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (52,496,862 samples, 0.16%)</title><rect x="117.4" y="581" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="591.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (1,458,369,191 samples, 4.54%)</title><rect x="204.9" y="677" width="53.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="207.91" y="687.5" >[libz..</text>
</g>
<g >
<title>[python3.12] (32,287,715 samples, 0.10%)</title><rect x="157.8" y="677" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.85" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,232,961 samples, 0.08%)</title><rect x="115.2" y="773" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.19" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,054,307 samples, 0.08%)</title><rect x="43.8" y="821" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="46.82" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="517" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,614 samples, 0.08%)</title><rect x="87.9" y="741" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.89" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (30,526,008 samples, 0.10%)</title><rect x="49.5" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.50" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,115,976 samples, 0.08%)</title><rect x="100.6" y="885" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.63" y="895.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (68,287,476 samples, 0.21%)</title><rect x="1172.8" y="1173" width="2.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1175.79" y="1183.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (30,911,433 samples, 0.10%)</title><rect x="134.3" y="821" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="137.32" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,432,438 samples, 0.16%)</title><rect x="188.3" y="773" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="191.29" y="783.5" ></text>
</g>
<g >
<title>unlink_file_vma (25,900,541 samples, 0.08%)</title><rect x="112.0" y="373" width="1.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="115.02" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (86,359,156 samples, 0.27%)</title><rect x="154.7" y="645" width="3.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="157.67" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (94,481,486 samples, 0.29%)</title><rect x="113.9" y="997" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="116.93" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (33,510,882 samples, 0.10%)</title><rect x="71.5" y="453" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.52" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (145,229,345 samples, 0.45%)</title><rect x="90.9" y="933" width="5.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="93.87" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (59,584,631 samples, 0.19%)</title><rect x="93.1" y="485" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.05" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,192,473 samples, 0.11%)</title><rect x="44.8" y="709" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="47.78" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (52,420,626 samples, 0.16%)</title><rect x="37.5" y="725" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.48" y="735.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,355,002 samples, 0.16%)</title><rect x="110.1" y="565" width="1.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="113.10" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (434,372,141 samples, 1.35%)</title><rect x="49.5" y="965" width="16.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.50" y="975.5" ></text>
</g>
<g >
<title>PyObject_CallFunctionObjArgs (32,287,715 samples, 0.10%)</title><rect x="157.8" y="517" width="1.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="160.85" y="527.5" ></text>
</g>
<g >
<title>native_flush_tlb (4,325,381 samples, 0.01%)</title><rect x="411.2" y="965" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="414.17" y="975.5" ></text>
</g>
<g >
<title>change_protection (34,078,551 samples, 0.11%)</title><rect x="915.8" y="581" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="918.83" y="591.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::front (34,194,451 samples, 0.11%)</title><rect x="1064.8" y="805" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1067.76" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (25,115,976 samples, 0.08%)</title><rect x="100.6" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="575.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,107,679 samples, 0.11%)</title><rect x="113.9" y="565" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="116.93" y="575.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (29,472,383 samples, 0.09%)</title><rect x="139.7" y="549" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="142.71" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,401,334 samples, 0.16%)</title><rect x="86.9" y="1045" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="89.92" y="1055.5" ></text>
</g>
<g >
<title>[python3.12] (60,238,318 samples, 0.19%)</title><rect x="105.0" y="693" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="981" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1170.43" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (67,455,994 samples, 0.21%)</title><rect x="880.8" y="693" width="2.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="883.84" y="703.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (34,194,451 samples, 0.11%)</title><rect x="1064.8" y="773" width="1.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1067.76" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (4,718,857,982 samples, 14.69%)</title><rect x="201.2" y="725" width="173.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="204.16" y="735.5" >_PyFunction_Vectorcall</text>
</g>
<g >
<title>mmput (131,919,136 samples, 0.41%)</title><rect x="1176.4" y="1093" width="4.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1179.35" y="1103.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,346 samples, 0.08%)</title><rect x="37.5" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.48" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (34,165,907 samples, 0.11%)</title><rect x="180.4" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.36" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (5,670,297,534 samples, 17.66%)</title><rect x="191.2" y="1109" width="208.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.18" y="1119.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,538 samples, 0.08%)</title><rect x="54.0" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.04" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (29,352,219 samples, 0.09%)</title><rect x="109.0" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.02" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (200,193,722 samples, 0.62%)</title><rect x="88.8" y="1109" width="7.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="91.85" y="1119.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,190,262 samples, 0.08%)</title><rect x="39.4" y="709" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.40" y="719.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,386,527 samples, 0.16%)</title><rect x="183.5" y="725" width="2.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="186.54" y="735.5" ></text>
</g>
<g >
<title>_Py_read (34,207,635 samples, 0.11%)</title><rect x="814.4" y="533" width="1.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="817.41" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,280 samples, 0.08%)</title><rect x="38.4" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.44" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,262 samples, 0.08%)</title><rect x="39.4" y="661" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="671.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (33,529,631 samples, 0.10%)</title><rect x="973.4" y="725" width="1.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="976.40" y="735.5" ></text>
</g>
<g >
<title>handle_mm_fault (26,184,488 samples, 0.08%)</title><rect x="741.6" y="485" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="744.61" y="495.5" ></text>
</g>
<g >
<title>PyObject_GetItem (32,646,613 samples, 0.10%)</title><rect x="177.9" y="629" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="180.91" y="639.5" ></text>
</g>
<g >
<title>PyArray_CopyObject (67,790,765 samples, 0.21%)</title><rect x="41.3" y="965" width="2.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="44.33" y="975.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (68,049,651 samples, 0.21%)</title><rect x="96.2" y="629" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="99.20" y="639.5" ></text>
</g>
<g >
<title>boost::source&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (34,258,284 samples, 0.11%)</title><rect x="21.3" y="1157" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="24.28" y="1167.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,125 samples, 0.08%)</title><rect x="156.9" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.88" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (195,384,141 samples, 0.61%)</title><rect x="167.3" y="933" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.27" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (23,069,911 samples, 0.07%)</title><rect x="726.8" y="757" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="729.81" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_read (26,208,267 samples, 0.08%)</title><rect x="176.9" y="389" width="1.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="179.94" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (76,869,173 samples, 0.24%)</title><rect x="185.5" y="821" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.46" y="831.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (31,739,724 samples, 0.10%)</title><rect x="64.3" y="261" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="67.30" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (54,964,377 samples, 0.17%)</title><rect x="88.8" y="837" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15,580,879 samples, 0.05%)</title><rect x="1171.0" y="1157" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1173.97" y="1167.5" ></text>
</g>
<g >
<title>_PyObject_Call (668,676,242 samples, 2.08%)</title><rect x="135.5" y="1141" width="24.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="138.46" y="1151.5" >_..</text>
</g>
<g >
<title>[python3.12] (28,272,766 samples, 0.09%)</title><rect x="132.3" y="725" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.32" y="735.5" ></text>
</g>
<g >
<title>tcache_get (34,237,754 samples, 0.11%)</title><rect x="932.1" y="597" width="1.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="935.10" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_erase (34,267,791 samples, 0.11%)</title><rect x="1149.9" y="757" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1152.91" y="767.5" ></text>
</g>
<g >
<title>__rb_erase_color (25,900,541 samples, 0.08%)</title><rect x="112.0" y="325" width="1.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="115.02" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,208,317 samples, 0.08%)</title><rect x="35.6" y="981" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="38.55" y="991.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,213,083 samples, 0.08%)</title><rect x="53.1" y="533" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="56.08" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (23,069,911 samples, 0.07%)</title><rect x="726.8" y="741" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="729.81" y="751.5" ></text>
</g>
<g >
<title>array_where (33,979,119 samples, 0.11%)</title><rect x="130.1" y="549" width="1.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.11" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (94,481,486 samples, 0.29%)</title><rect x="113.9" y="1109" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.93" y="1119.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,202,572 samples, 0.08%)</title><rect x="61.4" y="629" width="1.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="64.43" y="639.5" ></text>
</g>
<g >
<title>PyInterpreterState_Delete (34,081,228 samples, 0.11%)</title><rect x="78.1" y="1141" width="1.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="81.14" y="1151.5" ></text>
</g>
<g >
<title>[python3.12] (34,025,411 samples, 0.11%)</title><rect x="72.8" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.75" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (4,684,863,639 samples, 14.59%)</title><rect x="201.2" y="693" width="172.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.16" y="703.5" >[python3.12]</text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (34,067,986 samples, 0.11%)</title><rect x="1098.6" y="741" width="1.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1101.58" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,190,477 samples, 0.08%)</title><rect x="131.4" y="581" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.36" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (210,448,082 samples, 0.66%)</title><rect x="151.3" y="725" width="7.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="154.30" y="735.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (21,830,925 samples, 0.07%)</title><rect x="88.8" y="453" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="91.85" y="463.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,208,317 samples, 0.08%)</title><rect x="35.6" y="613" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="38.55" y="623.5" ></text>
</g>
<g >
<title>down_write (26,054,307 samples, 0.08%)</title><rect x="43.8" y="405" width="1.0" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="46.82" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (269,836,299 samples, 0.84%)</title><rect x="122.4" y="709" width="9.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="125.41" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,005,344 samples, 0.08%)</title><rect x="102.8" y="645" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.77" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (202,723,556 samples, 0.63%)</title><rect x="135.5" y="837" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="847.5" ></text>
</g>
<g >
<title>PyEval_RestoreThread (26,111,936 samples, 0.08%)</title><rect x="75.3" y="437" width="0.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="78.26" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (30,911,433 samples, 0.10%)</title><rect x="134.3" y="693" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="137.32" y="703.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (32,287,715 samples, 0.10%)</title><rect x="157.8" y="373" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="160.85" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (28,272,766 samples, 0.09%)</title><rect x="132.3" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.32" y="431.5" ></text>
</g>
<g >
<title>vma_interval_tree_remove (25,900,541 samples, 0.08%)</title><rect x="112.0" y="341" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="115.02" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,320,178 samples, 0.10%)</title><rect x="85.7" y="933" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="88.70" y="943.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,213,614 samples, 0.08%)</title><rect x="87.9" y="661" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="90.89" y="671.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::operator[] (67,736,617 samples, 0.21%)</title><rect x="1157.4" y="821" width="2.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1160.42" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="773" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (34,178,443 samples, 0.11%)</title><rect x="175.7" y="741" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.69" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (75,339,652 samples, 0.23%)</title><rect x="726.8" y="885" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="729.81" y="895.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;::_M_create_storage (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1166.66" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,190,262 samples, 0.08%)</title><rect x="39.4" y="837" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="42.40" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (33,133,452 samples, 0.10%)</title><rect x="89.7" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.65" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (58,854,880 samples, 0.18%)</title><rect x="176.9" y="709" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="179.94" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,281,432 samples, 0.11%)</title><rect x="1128.6" y="773" width="1.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1131.64" y="783.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,068,038 samples, 0.11%)</title><rect x="48.2" y="725" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="51.25" y="735.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,646,613 samples, 0.10%)</title><rect x="177.9" y="469" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="180.91" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (34,013,702 samples, 0.11%)</title><rect x="860.8" y="773" width="1.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="863.78" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (33,621,160 samples, 0.10%)</title><rect x="90.9" y="661" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.87" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (68,196,850 samples, 0.21%)</title><rect x="179.1" y="661" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,187,720 samples, 0.08%)</title><rect x="86.9" y="693" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="703.5" ></text>
</g>
<g >
<title>PyType_GenericAlloc (34,107,679 samples, 0.11%)</title><rect x="113.9" y="517" width="1.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="116.93" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,068,038 samples, 0.11%)</title><rect x="48.2" y="613" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="51.25" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (31,739,724 samples, 0.10%)</title><rect x="64.3" y="805" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.30" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,774,270 samples, 0.11%)</title><rect x="174.4" y="901" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.45" y="911.5" ></text>
</g>
<g >
<title>_PyObject_Call (200,193,722 samples, 0.62%)</title><rect x="88.8" y="1077" width="7.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="91.85" y="1087.5" ></text>
</g>
<g >
<title>_PyObject_Call (104,725,243 samples, 0.33%)</title><rect x="117.4" y="885" width="3.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="120.40" y="895.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,108,855 samples, 0.11%)</title><rect x="93.1" y="341" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="96.05" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (202,723,556 samples, 0.63%)</title><rect x="135.5" y="981" width="7.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="138.46" y="991.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,900,541 samples, 0.08%)</title><rect x="112.0" y="837" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="115.02" y="847.5" ></text>
</g>
<g >
<title>do_anonymous_page (56,166,545 samples, 0.17%)</title><rect x="806.9" y="485" width="2.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="809.95" y="495.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (34,164,831 samples, 0.11%)</title><rect x="962.1" y="661" width="1.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="965.14" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (83,672,256 samples, 0.26%)</title><rect x="105.0" y="757" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.98" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (202,723,556 samples, 0.63%)</title><rect x="135.5" y="901" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,346 samples, 0.08%)</title><rect x="37.5" y="581" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.48" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,916 samples, 0.08%)</title><rect x="182.6" y="661" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,422,000 samples, 0.16%)</title><rect x="98.7" y="581" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="101.71" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,054,307 samples, 0.08%)</title><rect x="43.8" y="885" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.82" y="895.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,049,651 samples, 0.21%)</title><rect x="96.2" y="1013" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="99.20" y="1023.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,205,986 samples, 0.08%)</title><rect x="65.5" y="1013" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="68.46" y="1023.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,320,178 samples, 0.10%)</title><rect x="85.7" y="581" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="88.70" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (135,733,951 samples, 0.42%)</title><rect x="1089.8" y="757" width="5.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1092.82" y="767.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::~allocator (34,253,335 samples, 0.11%)</title><rect x="1143.6" y="773" width="1.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1146.64" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,732 samples, 0.08%)</title><rect x="36.5" y="517" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="39.51" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,125 samples, 0.08%)</title><rect x="156.9" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.88" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (34,172,378 samples, 0.11%)</title><rect x="1074.8" y="677" width="1.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1077.77" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (34,237,754 samples, 0.11%)</title><rect x="932.1" y="613" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="935.10" y="623.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,192,715 samples, 0.08%)</title><rect x="110.1" y="453" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="113.10" y="463.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (68,333,088 samples, 0.21%)</title><rect x="824.5" y="757" width="2.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="827.45" y="767.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,123,073 samples, 0.10%)</title><rect x="101.6" y="693" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="104.55" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (2,235,074,189 samples, 6.96%)</title><rect x="735.8" y="805" width="82.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="738.76" y="815.5" >[python3...</text>
</g>
<g >
<title>_Py_read (26,208,267 samples, 0.08%)</title><rect x="176.9" y="469" width="1.0" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="179.94" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,320,178 samples, 0.10%)</title><rect x="85.7" y="1029" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.70" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (170,929,525 samples, 0.53%)</title><rect x="1112.3" y="725" width="6.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1115.34" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (5,670,297,534 samples, 17.66%)</title><rect x="191.2" y="949" width="208.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.18" y="959.5" >[python3.12]</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (75,339,652 samples, 0.23%)</title><rect x="726.8" y="917" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="729.81" y="927.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="965" width="3.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1170.43" y="975.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (104,725,243 samples, 0.33%)</title><rect x="117.4" y="709" width="3.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="120.40" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (491,266,251 samples, 1.53%)</title><rect x="117.4" y="1013" width="18.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="1023.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (34,166,472 samples, 0.11%)</title><rect x="23.8" y="1157" width="1.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="26.78" y="1167.5" ></text>
</g>
<g >
<title>[python3.12] (26,187,720 samples, 0.08%)</title><rect x="86.9" y="629" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,645,686 samples, 0.24%)</title><rect x="188.3" y="1093" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="191.29" y="1103.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,248 samples, 0.08%)</title><rect x="190.2" y="917" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.21" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (23,069,911 samples, 0.07%)</title><rect x="726.8" y="693" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="729.81" y="703.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::swap_heap_elements (204,463,276 samples, 0.64%)</title><rect x="899.6" y="693" width="7.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="902.56" y="703.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (34,066,465 samples, 0.11%)</title><rect x="840.7" y="693" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="843.71" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,254,570 samples, 0.08%)</title><rect x="117.4" y="485" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="120.40" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::push_back (33,878,158 samples, 0.11%)</title><rect x="823.2" y="789" width="1.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="826.21" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (228,505,286 samples, 0.71%)</title><rect x="142.9" y="677" width="8.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="145.90" y="687.5" ></text>
</g>
<g >
<title>_PyCode_New (33,123,073 samples, 0.10%)</title><rect x="101.6" y="485" width="1.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="104.55" y="495.5" ></text>
</g>
<g >
<title>pybind11::detail::accessor&lt;pybind11::detail::accessor_policies::generic_item&gt;::operator=&lt;pybind11::object&gt; (68,425,510 samples, 0.21%)</title><rect x="1164.9" y="901" width="2.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1167.91" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (52,416,641 samples, 0.16%)</title><rect x="125.3" y="437" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.29" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,614 samples, 0.08%)</title><rect x="87.9" y="821" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.89" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_check_len (136,645,067 samples, 0.43%)</title><rect x="1094.8" y="773" width="5.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1097.81" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (34,034,859 samples, 0.11%)</title><rect x="732.0" y="949" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="735.05" y="959.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,341,788 samples, 0.10%)</title><rect x="50.6" y="485" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="53.62" y="495.5" ></text>
</g>
<g >
<title>llvm::DebugCounter::registerCounter (31,739,724 samples, 0.10%)</title><rect x="64.3" y="341" width="1.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="67.30" y="351.5" ></text>
</g>
<g >
<title>alloc_pages_vma (26,186,266 samples, 0.08%)</title><rect x="183.5" y="357" width="1.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="186.54" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,187,720 samples, 0.08%)</title><rect x="86.9" y="805" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="815.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33,319,115 samples, 0.10%)</title><rect x="261.0" y="581" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="264.01" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (52,269,741 samples, 0.16%)</title><rect x="727.7" y="709" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="730.66" y="719.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,200,261 samples, 0.08%)</title><rect x="184.5" y="437" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="187.50" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,286 samples, 0.08%)</title><rect x="70.6" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.56" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="709" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1170.43" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (197,062,549 samples, 0.61%)</title><rect x="160.0" y="933" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="943.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (202,723,556 samples, 0.63%)</title><rect x="135.5" y="885" width="7.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="138.46" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (52,419,555 samples, 0.16%)</title><rect x="76.2" y="629" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.22" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,190,262 samples, 0.08%)</title><rect x="39.4" y="789" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.40" y="799.5" ></text>
</g>
<g >
<title>_dlerror_run (26,054,307 samples, 0.08%)</title><rect x="43.8" y="709" width="1.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="46.82" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (202,723,556 samples, 0.63%)</title><rect x="135.5" y="869" width="7.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="138.46" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (49,141,232 samples, 0.15%)</title><rect x="142.9" y="469" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,717,016 samples, 0.25%)</title><rect x="167.3" y="501" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="170.27" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,913 samples, 0.08%)</title><rect x="159.1" y="1093" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.06" y="1103.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (97,371,504 samples, 0.30%)</title><rect x="49.5" y="661" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="52.50" y="671.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,916 samples, 0.08%)</title><rect x="182.6" y="549" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="185.57" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (23,433,938 samples, 0.07%)</title><rect x="107.2" y="725" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.19" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,178,443 samples, 0.11%)</title><rect x="175.7" y="469" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.69" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,133,452 samples, 0.10%)</title><rect x="89.7" y="501" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="92.65" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (91,801,211 samples, 0.29%)</title><rect x="151.3" y="629" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="154.30" y="639.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,732 samples, 0.08%)</title><rect x="36.5" y="597" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="39.51" y="607.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (67,885,655 samples, 0.21%)</title><rect x="1092.3" y="677" width="2.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1095.32" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,140,846 samples, 0.11%)</title><rect x="116.1" y="597" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="119.15" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (52,420,626 samples, 0.16%)</title><rect x="37.5" y="757" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.48" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,115,976 samples, 0.08%)</title><rect x="100.6" y="597" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.63" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (52,401,334 samples, 0.16%)</title><rect x="86.9" y="1093" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="1103.5" ></text>
</g>
<g >
<title>[python3.12] (120,190,804 samples, 0.37%)</title><rect x="39.4" y="1141" width="4.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="1151.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,232,961 samples, 0.08%)</title><rect x="115.2" y="693" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.19" y="703.5" ></text>
</g>
<g >
<title>boost::optional_detail::aligned_storage&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::ptr_ref (34,102,394 samples, 0.11%)</title><rect x="844.5" y="757" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="847.48" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (197,062,549 samples, 0.61%)</title><rect x="160.0" y="773" width="7.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.03" y="783.5" ></text>
</g>
<g >
<title>PyDict_SetItem (26,213,771 samples, 0.08%)</title><rect x="153.7" y="437" width="1.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="156.71" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (25,115,976 samples, 0.08%)</title><rect x="100.6" y="709" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,029 samples, 0.08%)</title><rect x="161.2" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.20" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,777 samples, 0.08%)</title><rect x="40.4" y="725" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="43.37" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,028 samples, 0.08%)</title><rect x="77.2" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.18" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (83,672,256 samples, 0.26%)</title><rect x="105.0" y="853" width="3.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="107.98" y="863.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (272,066,282 samples, 0.85%)</title><rect x="1037.2" y="773" width="10.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1040.24" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (34,099,759 samples, 0.11%)</title><rect x="46.0" y="485" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.03" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;unsigned long, unsigned long&amp;, unsigned long*&gt;::_Deque_iterator (34,194,451 samples, 0.11%)</title><rect x="1064.8" y="757" width="1.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1067.76" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (52,401,334 samples, 0.16%)</title><rect x="86.9" y="997" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="917" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,190,477 samples, 0.08%)</title><rect x="131.4" y="533" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.36" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,777 samples, 0.08%)</title><rect x="40.4" y="645" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="43.37" y="655.5" ></text>
</g>
<g >
<title>array_assign_subscript (67,790,765 samples, 0.21%)</title><rect x="41.3" y="981" width="2.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="44.33" y="991.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (34,140,846 samples, 0.11%)</title><rect x="116.1" y="677" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="119.15" y="687.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (179,935,509 samples, 0.56%)</title><rect x="411.2" y="997" width="6.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="414.17" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,510,882 samples, 0.10%)</title><rect x="71.5" y="517" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="74.52" y="527.5" ></text>
</g>
<g >
<title>__mmap64 (25,900,541 samples, 0.08%)</title><rect x="112.0" y="549" width="1.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="115.02" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (31,739,724 samples, 0.10%)</title><rect x="64.3" y="709" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="67.30" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,262 samples, 0.08%)</title><rect x="39.4" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,711 samples, 0.08%)</title><rect x="128.2" y="485" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.18" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (97,371,504 samples, 0.30%)</title><rect x="49.5" y="597" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.50" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (34,178,443 samples, 0.11%)</title><rect x="175.7" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.69" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (210,448,082 samples, 0.66%)</title><rect x="151.3" y="821" width="7.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="154.30" y="831.5" ></text>
</g>
<g >
<title>handle_mm_fault (26,054,307 samples, 0.08%)</title><rect x="43.8" y="469" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="46.82" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (68,196,850 samples, 0.21%)</title><rect x="179.1" y="677" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,916 samples, 0.08%)</title><rect x="182.6" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,005,344 samples, 0.08%)</title><rect x="102.8" y="821" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.77" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,774,270 samples, 0.11%)</title><rect x="174.4" y="661" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="177.45" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (228,505,286 samples, 0.71%)</title><rect x="142.9" y="725" width="8.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (508,542,012 samples, 1.58%)</title><rect x="705.6" y="1061" width="18.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="708.62" y="1071.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (75,339,652 samples, 0.23%)</title><rect x="726.8" y="965" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="729.81" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_clone (36,691,942 samples, 0.11%)</title><rect x="399.5" y="1109" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="402.53" y="1119.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (34,143,831 samples, 0.11%)</title><rect x="393.3" y="757" width="1.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="396.27" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,005,344 samples, 0.08%)</title><rect x="102.8" y="661" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="105.77" y="671.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (33,775,896 samples, 0.11%)</title><rect x="170.2" y="437" width="1.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="173.16" y="447.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (34,081,228 samples, 0.11%)</title><rect x="78.1" y="1093" width="1.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="81.14" y="1103.5" ></text>
</g>
<g >
<title>[python3.12] (55,566,826 samples, 0.17%)</title><rect x="108.1" y="1013" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.06" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (33,133,452 samples, 0.10%)</title><rect x="89.7" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.65" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,777 samples, 0.08%)</title><rect x="40.4" y="613" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.37" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (120,190,804 samples, 0.37%)</title><rect x="39.4" y="997" width="4.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.40" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,346 samples, 0.08%)</title><rect x="37.5" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.48" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (83,672,256 samples, 0.26%)</title><rect x="105.0" y="773" width="3.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="107.98" y="783.5" ></text>
</g>
<g >
<title>_PyRuntime (26,209,320 samples, 0.08%)</title><rect x="409.7" y="1173" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="412.67" y="1183.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (318,899,389 samples, 0.99%)</title><rect x="66.4" y="917" width="11.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="69.42" y="927.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (32,786,257 samples, 0.10%)</title><rect x="1180.0" y="917" width="1.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1183.00" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (32,287,715 samples, 0.10%)</title><rect x="157.8" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.85" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,068,038 samples, 0.11%)</title><rect x="48.2" y="517" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="51.25" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,777 samples, 0.08%)</title><rect x="40.4" y="757" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.37" y="767.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (145,229,345 samples, 0.45%)</title><rect x="90.9" y="821" width="5.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="93.87" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="639.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (57,347,471 samples, 0.18%)</title><rect x="140.8" y="421" width="2.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="143.80" y="431.5" ></text>
</g>
<g >
<title>clear_page_erms (272,480,875 samples, 0.85%)</title><rect x="350.8" y="485" width="10.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="353.79" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,531,491 samples, 0.24%)</title><rect x="75.3" y="741" width="2.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="78.26" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,718,857,982 samples, 14.69%)</title><rect x="201.2" y="709" width="173.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="204.16" y="719.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,913 samples, 0.08%)</title><rect x="159.1" y="773" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="162.06" y="783.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (204,293,512 samples, 0.64%)</title><rect x="922.1" y="709" width="7.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="925.10" y="719.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (60,431,665 samples, 0.19%)</title><rect x="815.7" y="581" width="2.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="818.67" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (128,575,815 samples, 0.40%)</title><rect x="44.8" y="901" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,777 samples, 0.08%)</title><rect x="40.4" y="693" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.37" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,207,202 samples, 0.08%)</title><rect x="129.1" y="453" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="132.15" y="463.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (34,207,635 samples, 0.11%)</title><rect x="814.4" y="341" width="1.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="817.41" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (91,801,211 samples, 0.29%)</title><rect x="151.3" y="613" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.30" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,215,913 samples, 0.08%)</title><rect x="159.1" y="517" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="162.06" y="527.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (33,332,682 samples, 0.10%)</title><rect x="882.1" y="677" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="885.10" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (23,433,938 samples, 0.07%)</title><rect x="107.2" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.19" y="447.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (30,414,171 samples, 0.09%)</title><rect x="738.0" y="501" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="740.98" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (210,448,082 samples, 0.66%)</title><rect x="151.3" y="789" width="7.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="154.30" y="799.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (78,255,543 samples, 0.24%)</title><rect x="110.1" y="901" width="2.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="113.10" y="911.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (68,333,088 samples, 0.21%)</title><rect x="824.5" y="773" width="2.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="827.45" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (34,073,660 samples, 0.11%)</title><rect x="723.1" y="885" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="726.06" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,262 samples, 0.08%)</title><rect x="39.4" y="613" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="623.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,207,868 samples, 0.08%)</title><rect x="119.3" y="677" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="122.33" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,614 samples, 0.08%)</title><rect x="87.9" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.89" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="901" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="911.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,178,443 samples, 0.11%)</title><rect x="175.7" y="485" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="178.69" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,916 samples, 0.08%)</title><rect x="182.6" y="837" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="185.57" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (34,158,285 samples, 0.11%)</title><rect x="1054.8" y="757" width="1.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1057.75" y="767.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (104,833,682 samples, 0.33%)</title><rect x="162.2" y="517" width="3.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="165.16" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,211,916 samples, 0.08%)</title><rect x="182.6" y="757" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="185.57" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,042,290 samples, 0.11%)</title><rect x="166.0" y="533" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.02" y="543.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (25,644,292 samples, 0.08%)</title><rect x="63.4" y="517" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="66.35" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="709" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="719.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,320,178 samples, 0.10%)</title><rect x="85.7" y="501" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="88.70" y="511.5" ></text>
</g>
<g >
<title>__GI___clone (7,826,474,419 samples, 24.37%)</title><rect x="410.6" y="1173" width="287.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="413.63" y="1183.5" >__GI___clone</text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (167,733,615 samples, 0.52%)</title><rect x="698.2" y="1077" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="701.21" y="1087.5" ></text>
</g>
<g >
<title>Nexullance_IT_interface::run_IT (9,333,234,366 samples, 29.06%)</title><rect x="820.7" y="869" width="343.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="823.72" y="879.5" >Nexullance_IT_interface::run_IT</text>
</g>
<g >
<title>PyDict_GetItemWithError (30,526,008 samples, 0.10%)</title><rect x="49.5" y="549" width="1.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="52.50" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,346 samples, 0.08%)</title><rect x="37.5" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.48" y="559.5" ></text>
</g>
<g >
<title>PyObject_Dir (26,214,452 samples, 0.08%)</title><rect x="62.4" y="453" width="1.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="65.39" y="463.5" ></text>
</g>
<g >
<title>copy_page_to_iter (26,208,267 samples, 0.08%)</title><rect x="176.9" y="261" width="1.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="179.94" y="271.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (131,042,711 samples, 0.41%)</title><rect x="161.2" y="581" width="4.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="164.20" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,140,846 samples, 0.11%)</title><rect x="116.1" y="805" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="119.15" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,192,473 samples, 0.11%)</title><rect x="44.8" y="581" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="47.78" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,386,620 samples, 0.10%)</title><rect x="121.3" y="741" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="124.25" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,178,443 samples, 0.11%)</title><rect x="175.7" y="677" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="178.69" y="687.5" ></text>
</g>
<g >
<title>migrate_page (35,988,363 samples, 0.11%)</title><rect x="59.1" y="277" width="1.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="62.14" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (34,172,533 samples, 0.11%)</title><rect x="12.5" y="1157" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="15.50" y="1167.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (102,318,091 samples, 0.32%)</title><rect x="923.4" y="693" width="3.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="926.35" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (33,320,178 samples, 0.10%)</title><rect x="85.7" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.70" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,215,983 samples, 0.08%)</title><rect x="189.2" y="629" width="1.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="192.25" y="639.5" ></text>
</g>
<g >
<title>_PyObject_Call (76,869,173 samples, 0.24%)</title><rect x="185.5" y="565" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="188.46" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_allocate (34,150,712 samples, 0.11%)</title><rect x="1088.6" y="773" width="1.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1091.57" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (82,891,229 samples, 0.26%)</title><rect x="171.4" y="629" width="3.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="174.40" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (94,481,486 samples, 0.29%)</title><rect x="113.9" y="981" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.93" y="991.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (34,107,679 samples, 0.11%)</title><rect x="113.9" y="341" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="116.93" y="351.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (75,339,652 samples, 0.23%)</title><rect x="726.8" y="997" width="2.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="729.81" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (251,637,038 samples, 0.78%)</title><rect x="103.7" y="1125" width="9.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.73" y="1135.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5,503,490 samples, 0.02%)</title><rect x="698.0" y="1109" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="701.00" y="1119.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (23,069,911 samples, 0.07%)</title><rect x="726.8" y="773" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="729.81" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (75,339,652 samples, 0.23%)</title><rect x="726.8" y="869" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="729.81" y="879.5" ></text>
</g>
<g >
<title>_PyObject_LookupSpecial (33,994,343 samples, 0.11%)</title><rect x="373.3" y="693" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="376.30" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (34,048,309 samples, 0.11%)</title><rect x="26.3" y="1157" width="1.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="29.27" y="1167.5" ></text>
</g>
<g >
<title>__pow (34,046,960 samples, 0.11%)</title><rect x="820.7" y="821" width="1.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="823.72" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,916 samples, 0.08%)</title><rect x="182.6" y="869" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,125 samples, 0.08%)</title><rect x="156.9" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.88" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (26,186,266 samples, 0.08%)</title><rect x="183.5" y="405" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="186.54" y="415.5" ></text>
</g>
<g >
<title>pybind11::detail::argument_loader&lt;Nexullance_IT_interface*, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int&gt;::call&lt;IT_outputs, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;IT_outputs, Nexullance_IT_interface, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (9,333,234,366 samples, 29.06%)</title><rect x="820.7" y="917" width="343.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="823.72" y="927.5" >pybind11::detail::argument_loader&lt;Nexullance_I..</text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="725" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="735.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4,406,313 samples, 0.01%)</title><rect x="698.0" y="1093" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="701.04" y="1103.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,631,358 samples, 0.24%)</title><rect x="36.5" y="1093" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="39.51" y="1103.5" ></text>
</g>
<g >
<title>_PyObject_LookupAttr (25,115,976 samples, 0.08%)</title><rect x="100.6" y="469" width="1.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="103.63" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (135,733,951 samples, 0.42%)</title><rect x="1089.8" y="773" width="5.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1092.82" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,287,715 samples, 0.10%)</title><rect x="157.8" y="597" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="160.85" y="607.5" ></text>
</g>
<g >
<title>PyList_Append (31,977,548 samples, 0.10%)</title><rect x="160.0" y="517" width="1.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="163.03" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (202,723,556 samples, 0.63%)</title><rect x="135.5" y="741" width="7.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="138.46" y="751.5" ></text>
</g>
<g >
<title>_int_free (34,203,714 samples, 0.11%)</title><rect x="1117.4" y="645" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1120.36" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,115,976 samples, 0.08%)</title><rect x="100.6" y="629" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="103.63" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,833,682 samples, 0.33%)</title><rect x="162.2" y="437" width="3.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.16" y="447.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,167,554 samples, 0.11%)</title><rect x="1093.6" y="645" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1096.55" y="655.5" ></text>
</g>
<g >
<title>schedule (4,406,313 samples, 0.01%)</title><rect x="698.0" y="1077" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="701.04" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="725" width="1.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1166.66" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,248 samples, 0.08%)</title><rect x="190.2" y="853" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.21" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (32,287,715 samples, 0.10%)</title><rect x="157.8" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.85" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (25,900,541 samples, 0.08%)</title><rect x="112.0" y="773" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.02" y="783.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (33,933,915 samples, 0.11%)</title><rect x="1091.1" y="677" width="1.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1094.07" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,913 samples, 0.08%)</title><rect x="159.1" y="917" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.06" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="613" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="623.5" ></text>
</g>
<g >
<title>PyImport_Import (28,272,766 samples, 0.09%)</title><rect x="132.3" y="581" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="135.32" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="757" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,123,073 samples, 0.10%)</title><rect x="101.6" y="853" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="104.55" y="863.5" ></text>
</g>
<g >
<title>Nexullance_IT::~Nexullance_IT (67,999,094 samples, 0.21%)</title><rect x="1161.2" y="853" width="2.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1164.16" y="863.5" ></text>
</g>
<g >
<title>__GI___sbrk (31,386,620 samples, 0.10%)</title><rect x="121.3" y="405" width="1.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="124.25" y="415.5" ></text>
</g>
<g >
<title>alloc_pages_vma (34,107,679 samples, 0.11%)</title><rect x="113.9" y="357" width="1.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="116.93" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,386,527 samples, 0.16%)</title><rect x="183.5" y="661" width="2.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="186.54" y="671.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,042,290 samples, 0.11%)</title><rect x="166.0" y="581" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="169.02" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (228,505,286 samples, 0.71%)</title><rect x="142.9" y="757" width="8.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (197,062,549 samples, 0.61%)</title><rect x="160.0" y="837" width="7.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="163.03" y="847.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (33,390,407 samples, 0.10%)</title><rect x="1142.4" y="773" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1145.42" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (21,830,925 samples, 0.07%)</title><rect x="88.8" y="693" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="703.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (135,864,684 samples, 0.42%)</title><rect x="377.0" y="661" width="5.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="380.03" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_brk (31,386,620 samples, 0.10%)</title><rect x="121.3" y="325" width="1.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="124.25" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (23,433,938 samples, 0.07%)</title><rect x="107.2" y="613" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.19" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,355,002 samples, 0.16%)</title><rect x="110.1" y="853" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="113.10" y="863.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (34,025,705 samples, 0.11%)</title><rect x="839.5" y="757" width="1.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="842.46" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,572 samples, 0.08%)</title><rect x="61.4" y="549" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.43" y="559.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,213,614 samples, 0.08%)</title><rect x="87.9" y="581" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="90.89" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,432,438 samples, 0.16%)</title><rect x="188.3" y="677" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.29" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (155,467,616 samples, 0.48%)</title><rect x="182.6" y="965" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="975.5" ></text>
</g>
<g >
<title>PyDict_SetItem (26,216,455 samples, 0.08%)</title><rect x="188.3" y="469" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="191.29" y="479.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_NewGVN.cpp (31,739,724 samples, 0.10%)</title><rect x="64.3" y="357" width="1.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="67.30" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,005,344 samples, 0.08%)</title><rect x="102.8" y="901" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="105.77" y="911.5" ></text>
</g>
<g >
<title>npy_clear_floatstatus_barrier (33,920,397 samples, 0.11%)</title><rect x="729.6" y="949" width="1.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="732.58" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (318,899,389 samples, 0.99%)</title><rect x="66.4" y="901" width="11.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.42" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,913 samples, 0.08%)</title><rect x="159.1" y="821" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.06" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (104,725,243 samples, 0.33%)</title><rect x="117.4" y="917" width="3.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="120.40" y="927.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,916 samples, 0.08%)</title><rect x="182.6" y="565" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="185.57" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,068,038 samples, 0.11%)</title><rect x="48.2" y="549" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="51.25" y="559.5" ></text>
</g>
<g >
<title>do_page_fault (34,034,859 samples, 0.11%)</title><rect x="732.0" y="885" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="735.05" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (31,977,548 samples, 0.10%)</title><rect x="160.0" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,527 samples, 0.08%)</title><rect x="76.2" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.22" y="415.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (4,718,857,982 samples, 14.69%)</title><rect x="201.2" y="741" width="173.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="204.16" y="751.5" >PyObject_VectorcallMet..</text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (68,182,971 samples, 0.21%)</title><rect x="1039.7" y="757" width="2.5" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1042.73" y="767.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::assign (34,175,873 samples, 0.11%)</title><rect x="845.7" y="773" width="1.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="848.73" y="783.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (55,677,926 samples, 0.17%)</title><rect x="138.8" y="597" width="2.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="141.75" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_drop_node (34,267,791 samples, 0.11%)</title><rect x="1149.9" y="725" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1152.91" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (128,575,815 samples, 0.40%)</title><rect x="44.8" y="853" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_emplace_equal&lt;std::pair&lt;float, unsigned long&gt; &gt; (136,381,490 samples, 0.42%)</title><rect x="1144.9" y="805" width="5.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1147.90" y="815.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,320,178 samples, 0.10%)</title><rect x="85.7" y="725" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.70" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,248 samples, 0.08%)</title><rect x="190.2" y="805" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="193.21" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="1029" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="1039.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (25,115,976 samples, 0.08%)</title><rect x="100.6" y="805" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="103.63" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,215,913 samples, 0.08%)</title><rect x="159.1" y="725" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="162.06" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; const&amp;&gt; (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="661" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1166.66" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (23,069,911 samples, 0.07%)</title><rect x="726.8" y="645" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="729.81" y="655.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (30,414,171 samples, 0.09%)</title><rect x="738.0" y="661" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="740.98" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,531,491 samples, 0.24%)</title><rect x="75.3" y="853" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="78.26" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (30,911,433 samples, 0.10%)</title><rect x="134.3" y="805" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.32" y="815.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (136,311,983 samples, 0.42%)</title><rect x="985.9" y="725" width="5.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="988.90" y="735.5" ></text>
</g>
<g >
<title>_PyObject_Call (305,260,913 samples, 0.95%)</title><rect x="53.1" y="741" width="11.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.08" y="751.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,214,607 samples, 0.08%)</title><rect x="108.1" y="469" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="111.06" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="1109" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="1119.5" ></text>
</g>
<g >
<title>[python3.12] (34,140,846 samples, 0.11%)</title><rect x="116.1" y="485" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.15" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (76,869,173 samples, 0.24%)</title><rect x="185.5" y="789" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="188.46" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (20,525,387 samples, 0.06%)</title><rect x="135.5" y="661" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,267 samples, 0.08%)</title><rect x="176.9" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.94" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,798 samples, 0.08%)</title><rect x="181.6" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.61" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,915 samples, 0.08%)</title><rect x="95.2" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.24" y="527.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (33,510,882 samples, 0.10%)</title><rect x="71.5" y="581" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="74.52" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (34,053,623 samples, 0.11%)</title><rect x="56.9" y="469" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.93" y="479.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (26,212,010 samples, 0.08%)</title><rect x="127.2" y="421" width="1.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="130.22" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (197,062,549 samples, 0.61%)</title><rect x="160.0" y="693" width="7.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="163.03" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,208,317 samples, 0.08%)</title><rect x="35.6" y="1109" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="38.55" y="1119.5" ></text>
</g>
<g >
<title>get_page_from_freelist (33,319,115 samples, 0.10%)</title><rect x="261.0" y="517" width="1.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="264.01" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,961 samples, 0.08%)</title><rect x="115.2" y="661" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.19" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;::vector (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="629" width="1.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1166.66" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,607 samples, 0.08%)</title><rect x="108.1" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.06" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (34,172,378 samples, 0.11%)</title><rect x="1074.8" y="693" width="1.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1077.77" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (33,945,410 samples, 0.11%)</title><rect x="155.6" y="453" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.64" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (120,190,804 samples, 0.37%)</title><rect x="39.4" y="1045" width="4.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="1055.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (82,891,229 samples, 0.26%)</title><rect x="171.4" y="725" width="3.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="174.40" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (227,199,597 samples, 0.71%)</title><rect x="53.1" y="645" width="8.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.08" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,107,679 samples, 0.11%)</title><rect x="113.9" y="837" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="116.93" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (120,190,804 samples, 0.37%)</title><rect x="39.4" y="1077" width="4.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.40" y="1087.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (5,262,573,715 samples, 16.39%)</title><rect x="201.2" y="789" width="193.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="204.16" y="799.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>pipe_release (15,580,879 samples, 0.05%)</title><rect x="1171.0" y="1061" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1173.97" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (26,162,287 samples, 0.08%)</title><rect x="111.1" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.06" y="431.5" ></text>
</g>
<g >
<title>do_anonymous_page (34,107,679 samples, 0.11%)</title><rect x="113.9" y="373" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="116.93" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,777 samples, 0.08%)</title><rect x="40.4" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.37" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,621,160 samples, 0.10%)</title><rect x="90.9" y="645" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="93.87" y="655.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,201,125 samples, 0.08%)</title><rect x="156.9" y="565" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="159.88" y="575.5" ></text>
</g>
<g >
<title>operator new (34,237,754 samples, 0.11%)</title><rect x="932.1" y="629" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="935.10" y="639.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (68,128,193 samples, 0.21%)</title><rect x="859.5" y="805" width="2.5" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="862.52" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (83,672,256 samples, 0.26%)</title><rect x="105.0" y="901" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (128,575,815 samples, 0.40%)</title><rect x="44.8" y="789" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (68,049,651 samples, 0.21%)</title><rect x="96.2" y="1045" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="99.20" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (34,112,631 samples, 0.11%)</title><rect x="1087.3" y="773" width="1.3" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="1090.31" y="783.5" ></text>
</g>
<g >
<title>PyType_GenericAlloc (26,214,607 samples, 0.08%)</title><rect x="108.1" y="421" width="0.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="111.06" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (228,505,286 samples, 0.71%)</title><rect x="142.9" y="773" width="8.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="783.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,422,000 samples, 0.16%)</title><rect x="98.7" y="693" width="1.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="101.71" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (68,196,850 samples, 0.21%)</title><rect x="179.1" y="741" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="182.10" y="751.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (68,394,311 samples, 0.21%)</title><rect x="1116.1" y="693" width="2.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1119.11" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,961 samples, 0.08%)</title><rect x="115.2" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.19" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,115,976 samples, 0.08%)</title><rect x="100.6" y="613" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.63" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,005,344 samples, 0.08%)</title><rect x="102.8" y="693" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="105.77" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,190,262 samples, 0.08%)</title><rect x="39.4" y="917" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.40" y="927.5" ></text>
</g>
<g >
<title>Py_BytesMain (12,866,184,442 samples, 40.06%)</title><rect x="698.2" y="1141" width="472.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="701.21" y="1151.5" >Py_BytesMain</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,210,732 samples, 0.08%)</title><rect x="36.5" y="933" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="39.51" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (34,178,443 samples, 0.11%)</title><rect x="175.7" y="837" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.69" y="847.5" ></text>
</g>
<g >
<title>__do_page_fault (67,399,663 samples, 0.21%)</title><rect x="259.8" y="629" width="2.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="262.76" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (55,566,826 samples, 0.17%)</title><rect x="108.1" y="949" width="2.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="111.06" y="959.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (85,395,270 samples, 0.27%)</title><rect x="92.1" y="581" width="3.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="95.10" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,320,178 samples, 0.10%)</title><rect x="85.7" y="1061" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="88.70" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,083 samples, 0.08%)</title><rect x="53.1" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.08" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,054,307 samples, 0.08%)</title><rect x="43.8" y="1029" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.82" y="1039.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,420,626 samples, 0.16%)</title><rect x="37.5" y="853" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="40.48" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (58,239,049 samples, 0.18%)</title><rect x="100.6" y="1077" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.63" y="1087.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (139,239,082 samples, 0.43%)</title><rect x="105.0" y="1029" width="5.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="107.98" y="1039.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (94,481,486 samples, 0.29%)</title><rect x="113.9" y="1125" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="116.93" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::begin (34,182,337 samples, 0.11%)</title><rect x="1071.0" y="789" width="1.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1074.00" y="799.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (25,900,541 samples, 0.08%)</title><rect x="112.0" y="469" width="1.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="115.02" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,527 samples, 0.08%)</title><rect x="76.2" y="549" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.22" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (69,172,772 samples, 0.22%)</title><rect x="136.2" y="533" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="139.21" y="543.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (67,987,127 samples, 0.21%)</title><rect x="201.2" y="677" width="2.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="204.16" y="687.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (34,165,907 samples, 0.11%)</title><rect x="180.4" y="437" width="1.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="183.36" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (68,049,651 samples, 0.21%)</title><rect x="96.2" y="789" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="99.20" y="799.5" ></text>
</g>
<g >
<title>do_anonymous_page (26,131,714 samples, 0.08%)</title><rect x="80.6" y="997" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="83.65" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (76,869,173 samples, 0.24%)</title><rect x="185.5" y="485" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.46" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,798 samples, 0.08%)</title><rect x="181.6" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.61" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,212,280 samples, 0.08%)</title><rect x="38.4" y="677" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.44" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,438 samples, 0.16%)</title><rect x="188.3" y="789" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.29" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,020,513 samples, 0.08%)</title><rect x="120.3" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.30" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (30,911,433 samples, 0.10%)</title><rect x="134.3" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.32" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; const&amp;&gt; (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="709" width="1.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1166.66" y="719.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (54,964,377 samples, 0.17%)</title><rect x="88.8" y="741" width="2.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="91.85" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,572 samples, 0.08%)</title><rect x="61.4" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.43" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (52,496,862 samples, 0.16%)</title><rect x="117.4" y="565" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (76,869,173 samples, 0.24%)</title><rect x="185.5" y="853" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="188.46" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (34,073,660 samples, 0.11%)</title><rect x="723.1" y="949" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="726.06" y="959.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (23,433,938 samples, 0.07%)</title><rect x="107.2" y="469" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="110.19" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,205,986 samples, 0.08%)</title><rect x="65.5" y="789" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="68.46" y="799.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch1&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (33,605,832 samples, 0.10%)</title><rect x="822.0" y="773" width="1.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="824.97" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (183,468,573 samples, 0.57%)</title><rect x="123.4" y="501" width="6.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.37" y="511.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,419,555 samples, 0.16%)</title><rect x="76.2" y="661" width="1.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="79.22" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,005,344 samples, 0.08%)</title><rect x="102.8" y="773" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.77" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (33,621,160 samples, 0.10%)</title><rect x="90.9" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.87" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,187,720 samples, 0.08%)</title><rect x="86.9" y="869" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="89.92" y="879.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (34,158,285 samples, 0.11%)</title><rect x="1054.8" y="773" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1057.75" y="783.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (25,900,541 samples, 0.08%)</title><rect x="112.0" y="645" width="1.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="115.02" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (60,315,304 samples, 0.19%)</title><rect x="46.0" y="709" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.03" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,125 samples, 0.08%)</title><rect x="156.9" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.88" y="399.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,111,936 samples, 0.08%)</title><rect x="75.3" y="517" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="78.26" y="527.5" ></text>
</g>
<g >
<title>PyUnicode_FSConverter (57,347,471 samples, 0.18%)</title><rect x="140.8" y="373" width="2.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="143.80" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,140,846 samples, 0.11%)</title><rect x="116.1" y="645" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="119.15" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="869" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,187,720 samples, 0.08%)</title><rect x="86.9" y="821" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,005,344 samples, 0.08%)</title><rect x="102.8" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.77" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,208,317 samples, 0.08%)</title><rect x="35.6" y="741" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.55" y="751.5" ></text>
</g>
<g >
<title>page_fault (35,988,363 samples, 0.11%)</title><rect x="59.1" y="437" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="62.14" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (210,448,082 samples, 0.66%)</title><rect x="151.3" y="741" width="7.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="154.30" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (519,254,283 samples, 1.62%)</title><rect x="160.0" y="1141" width="19.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.03" y="1151.5" ></text>
</g>
<g >
<title>PyNumber_Remainder (26,202,572 samples, 0.08%)</title><rect x="61.4" y="661" width="1.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="64.43" y="671.5" ></text>
</g>
<g >
<title>do_page_fault (34,107,679 samples, 0.11%)</title><rect x="113.9" y="453" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="116.93" y="463.5" ></text>
</g>
<g >
<title>x86_pmu_event_init (36,691,942 samples, 0.11%)</title><rect x="399.5" y="981" width="1.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="402.53" y="991.5" ></text>
</g>
<g >
<title>do_page_fault (26,184,488 samples, 0.08%)</title><rect x="741.6" y="533" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="744.61" y="543.5" ></text>
</g>
<g >
<title>user_path_at_empty (145,151,908 samples, 0.45%)</title><rect x="144.7" y="373" width="5.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="147.71" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,775,896 samples, 0.11%)</title><rect x="170.2" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.16" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,986 samples, 0.08%)</title><rect x="65.5" y="981" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.46" y="991.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,187,720 samples, 0.08%)</title><rect x="86.9" y="533" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="89.92" y="543.5" ></text>
</g>
<g >
<title>__do_page_fault (476,862,152 samples, 1.48%)</title><rect x="349.5" y="613" width="17.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="352.53" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (34,066,465 samples, 0.11%)</title><rect x="840.7" y="661" width="1.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="843.71" y="671.5" ></text>
</g>
<g >
<title>handle_mm_fault (26,131,714 samples, 0.08%)</title><rect x="80.6" y="1029" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="83.65" y="1039.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,178,443 samples, 0.11%)</title><rect x="175.7" y="629" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="178.69" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (34,192,473 samples, 0.11%)</title><rect x="44.8" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (97,371,504 samples, 0.30%)</title><rect x="49.5" y="789" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="52.50" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (82,891,229 samples, 0.26%)</title><rect x="171.4" y="581" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (34,030,261 samples, 0.11%)</title><rect x="1044.7" y="709" width="1.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1047.72" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="325" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,192,715 samples, 0.08%)</title><rect x="110.1" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,538 samples, 0.08%)</title><rect x="54.0" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.04" y="511.5" ></text>
</g>
<g >
<title>migrate_pages (26,207,779 samples, 0.08%)</title><rect x="126.3" y="293" width="0.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="129.26" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,621,160 samples, 0.10%)</title><rect x="90.9" y="677" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="93.87" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (21,830,925 samples, 0.07%)</title><rect x="88.8" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,422,000 samples, 0.16%)</title><rect x="98.7" y="853" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.71" y="863.5" ></text>
</g>
<g >
<title>_int_malloc (33,837,096 samples, 0.11%)</title><rect x="1129.9" y="693" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1132.90" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (86,359,156 samples, 0.27%)</title><rect x="154.7" y="677" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="157.67" y="687.5" ></text>
</g>
<g >
<title>__handle_mm_fault (26,186,266 samples, 0.08%)</title><rect x="183.5" y="389" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="186.54" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (509,571,902 samples, 1.59%)</title><rect x="374.5" y="677" width="18.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="377.55" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,983 samples, 0.08%)</title><rect x="189.2" y="549" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.25" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,915 samples, 0.08%)</title><rect x="95.2" y="501" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.24" y="511.5" ></text>
</g>
<g >
<title>migrate_pages (35,988,363 samples, 0.11%)</title><rect x="59.1" y="309" width="1.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="62.14" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,054,307 samples, 0.08%)</title><rect x="43.8" y="1013" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.82" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (161,075,185 samples, 0.50%)</title><rect x="1175.3" y="1173" width="5.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1178.30" y="1183.5" ></text>
</g>
<g >
<title>[python3.12] (60,077,733 samples, 0.19%)</title><rect x="69.3" y="581" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.31" y="591.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,420,626 samples, 0.16%)</title><rect x="37.5" y="773" width="1.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="40.48" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,477 samples, 0.08%)</title><rect x="131.4" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.36" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (60,158,031 samples, 0.19%)</title><rect x="154.7" y="501" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.67" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (60,238,318 samples, 0.19%)</title><rect x="105.0" y="629" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,961 samples, 0.08%)</title><rect x="115.2" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.19" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,915 samples, 0.08%)</title><rect x="95.2" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.24" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (68,049,651 samples, 0.21%)</title><rect x="96.2" y="661" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="99.20" y="671.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (460,354,818 samples, 1.43%)</title><rect x="117.4" y="965" width="16.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="120.40" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (34,172,378 samples, 0.11%)</title><rect x="1074.8" y="709" width="1.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1077.77" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~new_allocator (33,610,593 samples, 0.10%)</title><rect x="1123.6" y="741" width="1.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1126.64" y="751.5" ></text>
</g>
<g >
<title>rmqueue (33,774,270 samples, 0.11%)</title><rect x="174.4" y="37" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="177.45" y="47.5" ></text>
</g>
<g >
<title>[python3.12] (355,629,575 samples, 1.11%)</title><rect x="121.3" y="837" width="13.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.25" y="847.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="453" width="3.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1170.43" y="463.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33,979,119 samples, 0.11%)</title><rect x="130.1" y="421" width="1.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="133.11" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (76,869,173 samples, 0.24%)</title><rect x="185.5" y="693" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="188.46" y="703.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,255,543 samples, 0.24%)</title><rect x="110.1" y="981" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="113.10" y="991.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; (4,734,133,884 samples, 14.74%)</title><rect x="862.0" y="805" width="174.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="865.03" y="815.5" >boost::dijkstra_shorte..</text>
</g>
<g >
<title>[python3.12] (34,107,679 samples, 0.11%)</title><rect x="113.9" y="613" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.93" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (34,172,378 samples, 0.11%)</title><rect x="1074.8" y="629" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1077.77" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (33,805,372 samples, 0.11%)</title><rect x="1161.2" y="821" width="1.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1164.16" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,317 samples, 0.08%)</title><rect x="35.6" y="773" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="38.55" y="783.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,798 samples, 0.08%)</title><rect x="181.6" y="693" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="184.61" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,178,443 samples, 0.11%)</title><rect x="175.7" y="789" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="178.69" y="799.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (102,416,493 samples, 0.32%)</title><rect x="1052.2" y="805" width="3.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1055.25" y="815.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,232,961 samples, 0.08%)</title><rect x="115.2" y="581" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="118.19" y="591.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (68,448,791 samples, 0.21%)</title><rect x="924.6" y="677" width="2.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="927.60" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,107,679 samples, 0.11%)</title><rect x="113.9" y="805" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="116.93" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (34,207,635 samples, 0.11%)</title><rect x="814.4" y="549" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="817.41" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,986 samples, 0.08%)</title><rect x="65.5" y="821" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.46" y="831.5" ></text>
</g>
<g >
<title>PyDataMem_UserFREE (26,214,502 samples, 0.08%)</title><rect x="818.8" y="789" width="1.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="821.84" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,269,741 samples, 0.16%)</title><rect x="727.7" y="741" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="730.66" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (34,192,473 samples, 0.11%)</title><rect x="44.8" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (54,964,377 samples, 0.17%)</title><rect x="88.8" y="869" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,967,666 samples, 0.10%)</title><rect x="733.3" y="773" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="736.30" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,059,182 samples, 0.08%)</title><rect x="728.6" y="533" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="731.62" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (78,255,543 samples, 0.24%)</title><rect x="110.1" y="965" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,049,651 samples, 0.21%)</title><rect x="96.2" y="725" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="99.20" y="735.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,212,915 samples, 0.08%)</title><rect x="95.2" y="485" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="98.24" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,368 samples, 0.08%)</title><rect x="105.0" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (197,062,549 samples, 0.61%)</title><rect x="160.0" y="997" width="7.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="163.03" y="1007.5" ></text>
</g>
<g >
<title>_PyObject_Call (31,386,620 samples, 0.10%)</title><rect x="121.3" y="709" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="124.25" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (908,053,331 samples, 2.83%)</title><rect x="44.8" y="1109" width="33.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="47.78" y="1119.5" >_P..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,239,785 samples, 0.11%)</title><rect x="1103.6" y="757" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1106.57" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,739,724 samples, 0.10%)</title><rect x="64.3" y="693" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="67.30" y="703.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;IT_outputs, Nexullance_IT_interface, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (9,333,234,366 samples, 29.06%)</title><rect x="820.7" y="949" width="343.0" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="823.72" y="959.5" >pybind11::cpp_function::initialize&lt;pybind11::c..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,777 samples, 0.08%)</title><rect x="40.4" y="821" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="43.37" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (34,115,206 samples, 0.11%)</title><rect x="74.0" y="517" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.00" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,205,527 samples, 0.08%)</title><rect x="76.2" y="517" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.22" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,496,862 samples, 0.16%)</title><rect x="117.4" y="629" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="639.5" ></text>
</g>
<g >
<title>_PyObject_Call (145,229,345 samples, 0.45%)</title><rect x="90.9" y="901" width="5.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="93.87" y="911.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (60,077,733 samples, 0.19%)</title><rect x="69.3" y="597" width="2.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="72.31" y="607.5" ></text>
</g>
<g >
<title>boost::relax_target&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::plus&lt;float&gt;, std::less&lt;float&gt; &gt; (816,953,808 samples, 2.54%)</title><rect x="990.9" y="725" width="30.0" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="993.91" y="735.5" >bo..</text>
</g>
<g >
<title>__dlopen (25,900,541 samples, 0.08%)</title><rect x="112.0" y="741" width="1.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="115.02" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (34,253,335 samples, 0.11%)</title><rect x="1143.6" y="805" width="1.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1146.64" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (52,419,555 samples, 0.16%)</title><rect x="76.2" y="693" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.22" y="703.5" ></text>
</g>
<g >
<title>__handle_mm_fault (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="501" width="3.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1170.43" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,140,846 samples, 0.11%)</title><rect x="116.1" y="741" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="119.15" y="751.5" ></text>
</g>
<g >
<title>PyDict_SetItem (26,214,452 samples, 0.08%)</title><rect x="62.4" y="293" width="1.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="65.39" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (34,073,660 samples, 0.11%)</title><rect x="723.1" y="917" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="726.06" y="927.5" ></text>
</g>
<g >
<title>_start (12,881,765,321 samples, 40.11%)</title><rect x="698.2" y="1173" width="473.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="701.21" y="1183.5" >_start</text>
</g>
<g >
<title>__GI___libc_read (33,774,270 samples, 0.11%)</title><rect x="174.4" y="405" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="177.45" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (29,352,219 samples, 0.09%)</title><rect x="109.0" y="581" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="112.02" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (93,033,323 samples, 0.29%)</title><rect x="175.7" y="981" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.69" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (148,565,828 samples, 0.46%)</title><rect x="55.0" y="501" width="5.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="58.00" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,346 samples, 0.08%)</title><rect x="37.5" y="677" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.48" y="687.5" ></text>
</g>
<g >
<title>handle_mm_fault (33,965,234 samples, 0.11%)</title><rect x="202.4" y="533" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="205.41" y="543.5" ></text>
</g>
<g >
<title>Nexullance_IT::step_1 (169,864,038 samples, 0.53%)</title><rect x="820.7" y="837" width="6.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="823.72" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,059,182 samples, 0.08%)</title><rect x="728.6" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="731.62" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (68,196,850 samples, 0.21%)</title><rect x="179.1" y="773" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="182.10" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (33,774,270 samples, 0.11%)</title><rect x="174.4" y="933" width="1.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="177.45" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,267 samples, 0.08%)</title><rect x="176.9" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.94" y="495.5" ></text>
</g>
<g >
<title>__GI___xstat (145,151,908 samples, 0.45%)</title><rect x="144.7" y="469" width="5.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="147.71" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (202,723,556 samples, 0.63%)</title><rect x="135.5" y="1013" width="7.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="138.46" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (101,771,097 samples, 0.32%)</title><rect x="1153.7" y="757" width="3.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1156.68" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,262 samples, 0.08%)</title><rect x="39.4" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,983 samples, 0.08%)</title><rect x="189.2" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.25" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,865,447 samples, 0.11%)</title><rect x="69.3" y="469" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.31" y="479.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,355,002 samples, 0.16%)</title><rect x="110.1" y="613" width="1.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="113.10" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (34,004,585 samples, 0.11%)</title><rect x="888.3" y="677" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="891.29" y="687.5" ></text>
</g>
<g >
<title>page_fault (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="581" width="3.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1170.43" y="591.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (101,797,440 samples, 0.32%)</title><rect x="969.7" y="709" width="3.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="972.66" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (29,352,219 samples, 0.09%)</title><rect x="109.0" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.02" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (2,235,074,189 samples, 6.96%)</title><rect x="735.8" y="789" width="82.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="738.76" y="799.5" >[python3...</text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="965" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="975.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,178,443 samples, 0.11%)</title><rect x="175.7" y="597" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="178.69" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (29,472,383 samples, 0.09%)</title><rect x="139.7" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.71" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,913 samples, 0.08%)</title><rect x="159.1" y="1029" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="162.06" y="1039.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data (34,239,785 samples, 0.11%)</title><rect x="1103.6" y="677" width="1.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1106.57" y="687.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (33,982,089 samples, 0.11%)</title><rect x="873.3" y="725" width="1.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="876.33" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (34,107,540 samples, 0.11%)</title><rect x="79.4" y="1109" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.39" y="1119.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (2,354,369,162 samples, 7.33%)</title><rect x="733.3" y="949" width="86.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="736.30" y="959.5" >_PyEval_Ev..</text>
</g>
<g >
<title>PyArray_Where (33,979,119 samples, 0.11%)</title><rect x="130.1" y="533" width="1.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="133.11" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,798 samples, 0.08%)</title><rect x="181.6" y="741" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.61" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (29,352,219 samples, 0.09%)</title><rect x="109.0" y="533" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="112.02" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="485" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (25,644,292 samples, 0.08%)</title><rect x="63.4" y="501" width="0.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="66.35" y="511.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (34,172,378 samples, 0.11%)</title><rect x="1074.8" y="741" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1077.77" y="751.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; (33,605,832 samples, 0.10%)</title><rect x="822.0" y="789" width="1.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="824.97" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (52,419,555 samples, 0.16%)</title><rect x="76.2" y="677" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.22" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (86,359,156 samples, 0.27%)</title><rect x="154.7" y="629" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="157.67" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (202,723,556 samples, 0.63%)</title><rect x="135.5" y="709" width="7.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="138.46" y="719.5" ></text>
</g>
<g >
<title>_int_malloc (34,813,424 samples, 0.11%)</title><rect x="400.9" y="1157" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="403.87" y="1167.5" ></text>
</g>
<g >
<title>[python3.12] (52,386,527 samples, 0.16%)</title><rect x="183.5" y="789" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.54" y="799.5" ></text>
</g>
<g >
<title>get_page_from_freelist (30,414,171 samples, 0.09%)</title><rect x="738.0" y="485" width="1.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="740.98" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (120,471,651 samples, 0.38%)</title><rect x="96.2" y="1125" width="4.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="99.20" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,239,785 samples, 0.11%)</title><rect x="1103.6" y="741" width="1.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1106.57" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,205,986 samples, 0.08%)</title><rect x="65.5" y="805" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="68.46" y="815.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (34,139,995 samples, 0.11%)</title><rect x="968.4" y="677" width="1.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="971.41" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (112,492,912 samples, 0.35%)</title><rect x="167.3" y="613" width="4.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="170.27" y="623.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (25,900,541 samples, 0.08%)</title><rect x="112.0" y="709" width="1.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="115.02" y="719.5" ></text>
</g>
<g >
<title>__do_sys_madvise (192,536,179 samples, 0.60%)</title><rect x="411.2" y="1061" width="7.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="414.17" y="1071.5" ></text>
</g>
<g >
<title>PySequence_Tuple (34,212,146 samples, 0.11%)</title><rect x="150.0" y="549" width="1.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="153.04" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,527 samples, 0.08%)</title><rect x="76.2" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.22" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (104,725,243 samples, 0.33%)</title><rect x="117.4" y="725" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="735.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,774,270 samples, 0.11%)</title><rect x="174.4" y="885" width="1.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="177.45" y="895.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,211,916 samples, 0.08%)</title><rect x="182.6" y="645" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="185.57" y="655.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (31,739,724 samples, 0.10%)</title><rect x="64.3" y="165" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="67.30" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,913 samples, 0.08%)</title><rect x="159.1" y="709" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.06" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;float const, unsigned long&gt; &gt;::_M_ptr (34,012,322 samples, 0.11%)</title><rect x="1148.7" y="757" width="1.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1151.66" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,208,317 samples, 0.08%)</title><rect x="35.6" y="1045" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="38.55" y="1055.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (58,239,049 samples, 0.18%)</title><rect x="100.6" y="1013" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="103.63" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,215,983 samples, 0.08%)</title><rect x="189.2" y="565" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="192.25" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,213,614 samples, 0.08%)</title><rect x="87.9" y="901" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="90.89" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (30,911,433 samples, 0.10%)</title><rect x="134.3" y="725" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.32" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="607.5" ></text>
</g>
<g >
<title>page_fault (476,862,152 samples, 1.48%)</title><rect x="349.5" y="645" width="17.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="352.53" y="655.5" ></text>
</g>
<g >
<title>ksys_read (33,521,120 samples, 0.10%)</title><rect x="151.3" y="341" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="154.30" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="693" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (68,061,745 samples, 0.21%)</title><rect x="887.0" y="693" width="2.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="890.04" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,054,307 samples, 0.08%)</title><rect x="43.8" y="805" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.82" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (21,830,925 samples, 0.07%)</title><rect x="88.8" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,242,292 samples, 0.08%)</title><rect x="118.4" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.37" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (23,433,938 samples, 0.07%)</title><rect x="107.2" y="421" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.19" y="431.5" ></text>
</g>
<g >
<title>Nexullance_IT::optimize (9,265,235,272 samples, 28.85%)</title><rect x="820.7" y="853" width="340.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="823.72" y="863.5" >Nexullance_IT::optimize</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,205,543 samples, 0.08%)</title><rect x="138.8" y="453" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.75" y="463.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (34,013,702 samples, 0.11%)</title><rect x="860.8" y="789" width="1.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="863.78" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,913 samples, 0.08%)</title><rect x="159.1" y="885" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.06" y="895.5" ></text>
</g>
<g >
<title>recalc_sigpending (3,349,462 samples, 0.01%)</title><rect x="410.7" y="1109" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="413.72" y="1119.5" ></text>
</g>
<g >
<title>[python3.12] (509,571,902 samples, 1.59%)</title><rect x="374.5" y="741" width="18.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="377.55" y="751.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::get_impl (34,175,873 samples, 0.11%)</title><rect x="845.7" y="741" width="1.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="848.73" y="751.5" ></text>
</g>
<g >
<title>boost::optional_detail::aligned_storage&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::ptr_ref (34,256,754 samples, 0.11%)</title><rect x="847.0" y="725" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="849.99" y="735.5" ></text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (34,074,934 samples, 0.11%)</title><rect x="875.8" y="693" width="1.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="878.84" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="965" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="975.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (25,900,541 samples, 0.08%)</title><rect x="112.0" y="485" width="1.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="115.02" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (78,531,491 samples, 0.24%)</title><rect x="75.3" y="773" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.26" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="917" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="927.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,210,559 samples, 0.08%)</title><rect x="727.7" y="677" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="730.66" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,267 samples, 0.08%)</title><rect x="176.9" y="565" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="179.94" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,986 samples, 0.08%)</title><rect x="65.5" y="757" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.46" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (355,629,575 samples, 1.11%)</title><rect x="121.3" y="853" width="13.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.25" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,187,720 samples, 0.08%)</title><rect x="86.9" y="613" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (439,736,773 samples, 1.37%)</title><rect x="142.9" y="1029" width="16.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.90" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (31,386,620 samples, 0.10%)</title><rect x="121.3" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.25" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,187,720 samples, 0.08%)</title><rect x="86.9" y="917" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="89.92" y="927.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (97,371,504 samples, 0.30%)</title><rect x="49.5" y="581" width="3.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="52.50" y="591.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,207,868 samples, 0.08%)</title><rect x="119.3" y="629" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="122.33" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (54,964,377 samples, 0.17%)</title><rect x="88.8" y="885" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="895.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (24,846,799 samples, 0.08%)</title><rect x="808.1" y="469" width="0.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="811.10" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,073,660 samples, 0.11%)</title><rect x="723.1" y="901" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="726.06" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (30,911,433 samples, 0.10%)</title><rect x="134.3" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.32" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (69,172,772 samples, 0.22%)</title><rect x="136.2" y="565" width="2.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="139.21" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,178,443 samples, 0.11%)</title><rect x="175.7" y="693" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.69" y="703.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (34,143,831 samples, 0.11%)</title><rect x="393.3" y="725" width="1.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="396.27" y="735.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (131,919,136 samples, 0.41%)</title><rect x="1176.4" y="1013" width="4.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1179.35" y="1023.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,190,262 samples, 0.08%)</title><rect x="39.4" y="693" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="42.40" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (30,911,433 samples, 0.10%)</title><rect x="134.3" y="965" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.32" y="975.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt; (34,117,592 samples, 0.11%)</title><rect x="1028.5" y="741" width="1.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1031.45" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,614 samples, 0.08%)</title><rect x="87.9" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.89" y="575.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,208,317 samples, 0.08%)</title><rect x="35.6" y="597" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="38.55" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,320,178 samples, 0.10%)</title><rect x="85.7" y="565" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.70" y="575.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (34,078,551 samples, 0.11%)</title><rect x="915.8" y="661" width="1.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="918.83" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (2,174,593,621 samples, 6.77%)</title><rect x="738.0" y="725" width="79.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="740.98" y="735.5" >_PyEval_E..</text>
</g>
<g >
<title>[python3.12] (100,570,336 samples, 0.31%)</title><rect x="700.7" y="1029" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="703.68" y="1039.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (155,467,616 samples, 0.48%)</title><rect x="182.6" y="1045" width="5.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="185.57" y="1055.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (5,670,297,534 samples, 17.66%)</title><rect x="191.2" y="1157" width="208.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="194.18" y="1167.5" >_PyRun_SimpleFileObject</text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pop (987,130,319 samples, 3.07%)</title><rect x="883.3" y="725" width="36.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="886.32" y="735.5" >boo..</text>
</g>
<g >
<title>[python3.12] (243,638,169 samples, 0.76%)</title><rect x="123.4" y="677" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.37" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (31,386,620 samples, 0.10%)</title><rect x="121.3" y="469" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="124.25" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (131,042,711 samples, 0.41%)</title><rect x="161.2" y="549" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.20" y="559.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (26,054,307 samples, 0.08%)</title><rect x="43.8" y="581" width="1.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="46.82" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (29,472,383 samples, 0.09%)</title><rect x="139.7" y="469" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="142.71" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (11,814,930,435 samples, 36.79%)</title><rect x="733.3" y="981" width="434.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="736.30" y="991.5" >[python3.12]</text>
</g>
<g >
<title>PyObject_GetAttr (25,644,292 samples, 0.08%)</title><rect x="63.4" y="581" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="66.35" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (241,606,014 samples, 0.75%)</title><rect x="809.0" y="629" width="8.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="812.01" y="639.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (75,339,652 samples, 0.23%)</title><rect x="726.8" y="853" width="2.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="729.81" y="863.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,254,570 samples, 0.08%)</title><rect x="117.4" y="517" width="1.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="120.40" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (24,901,898 samples, 0.08%)</title><rect x="819.8" y="949" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="822.81" y="959.5" ></text>
</g>
<g >
<title>__vfs_read (34,207,635 samples, 0.11%)</title><rect x="814.4" y="405" width="1.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="817.41" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (55,566,826 samples, 0.17%)</title><rect x="108.1" y="661" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.06" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="613" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (355,629,575 samples, 1.11%)</title><rect x="121.3" y="901" width="13.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="124.25" y="911.5" ></text>
</g>
<g >
<title>task_numa_work (34,078,551 samples, 0.11%)</title><rect x="915.8" y="613" width="1.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="918.83" y="623.5" ></text>
</g>
<g >
<title>generic_file_read_iter (26,208,267 samples, 0.08%)</title><rect x="176.9" y="293" width="1.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="179.94" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,607 samples, 0.08%)</title><rect x="108.1" y="581" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.06" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="1029" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="1039.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,422,000 samples, 0.16%)</title><rect x="98.7" y="917" width="1.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="101.71" y="927.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,208,267 samples, 0.08%)</title><rect x="176.9" y="629" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="179.94" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (20,525,387 samples, 0.06%)</title><rect x="135.5" y="597" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (85,721,512 samples, 0.27%)</title><rect x="85.7" y="1125" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.70" y="1135.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,355,002 samples, 0.16%)</title><rect x="110.1" y="549" width="1.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="113.10" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,559 samples, 0.08%)</title><rect x="727.7" y="661" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="730.66" y="671.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (33,914,381 samples, 0.11%)</title><rect x="1089.8" y="677" width="1.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1092.82" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,346 samples, 0.08%)</title><rect x="37.5" y="597" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.48" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (29,352,219 samples, 0.09%)</title><rect x="109.0" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.02" y="447.5" ></text>
</g>
<g >
<title>get_futex_key (3,273,324 samples, 0.01%)</title><rect x="697.9" y="1013" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="700.88" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,140,846 samples, 0.11%)</title><rect x="116.1" y="469" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="119.15" y="479.5" ></text>
</g>
<g >
<title>inflate (2,988,629,388 samples, 9.31%)</title><rect x="263.5" y="677" width="109.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="266.48" y="687.5" >inflate</text>
</g>
<g >
<title>[python3.12] (33,621,160 samples, 0.10%)</title><rect x="90.9" y="789" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.87" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (31,386,620 samples, 0.10%)</title><rect x="121.3" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.25" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (34,036,950 samples, 0.11%)</title><rect x="105.9" y="453" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.94" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,142,413 samples, 0.11%)</title><rect x="103.7" y="933" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="106.73" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,083 samples, 0.08%)</title><rect x="53.1" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.08" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,005,344 samples, 0.08%)</title><rect x="102.8" y="1109" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="105.77" y="1119.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,187,720 samples, 0.08%)</title><rect x="86.9" y="645" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="89.92" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (170,011,852 samples, 0.53%)</title><rect x="1137.4" y="805" width="6.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1140.40" y="815.5" ></text>
</g>
<g >
<title>_PyObject_ClearManagedDict (34,073,660 samples, 0.11%)</title><rect x="723.1" y="1029" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="726.06" y="1039.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,355,002 samples, 0.16%)</title><rect x="110.1" y="629" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="113.10" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,280 samples, 0.08%)</title><rect x="38.4" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.44" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (28,272,766 samples, 0.09%)</title><rect x="132.3" y="453" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="135.32" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (94,408,648 samples, 0.29%)</title><rect x="179.1" y="1029" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="182.10" y="1039.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,386,620 samples, 0.10%)</title><rect x="121.3" y="725" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="124.25" y="735.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (170,254,145 samples, 0.53%)</title><rect x="998.4" y="709" width="6.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1001.40" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="293" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="303.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,123,073 samples, 0.10%)</title><rect x="101.6" y="661" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="104.55" y="671.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (34,217,141 samples, 0.11%)</title><rect x="907.1" y="693" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="910.07" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,123,073 samples, 0.10%)</title><rect x="101.6" y="757" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="104.55" y="767.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,168,663 samples, 0.11%)</title><rect x="1097.3" y="757" width="1.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1100.32" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,049,651 samples, 0.21%)</title><rect x="96.2" y="885" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="99.20" y="895.5" ></text>
</g>
<g >
<title>change_prot_numa (34,078,551 samples, 0.11%)</title><rect x="915.8" y="597" width="1.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="918.83" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (69,172,772 samples, 0.22%)</title><rect x="136.2" y="581" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.21" y="591.5" ></text>
</g>
<g >
<title>_PyObject_CallMethod (2,174,593,621 samples, 6.77%)</title><rect x="738.0" y="773" width="79.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="740.98" y="783.5" >_PyObject..</text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,621,160 samples, 0.10%)</title><rect x="90.9" y="533" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="93.87" y="543.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (31,739,724 samples, 0.10%)</title><rect x="64.3" y="325" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="67.30" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (33,320,178 samples, 0.10%)</title><rect x="85.7" y="949" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.70" y="959.5" ></text>
</g>
<g >
<title>PySequence_Tuple (57,347,471 samples, 0.18%)</title><rect x="140.8" y="549" width="2.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="143.80" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,209,777 samples, 0.08%)</title><rect x="40.4" y="805" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="43.37" y="815.5" ></text>
</g>
<g >
<title>boost::tuples::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type&gt; &gt;::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const&gt; (136,113,412 samples, 0.42%)</title><rect x="1058.5" y="773" width="5.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1061.50" y="783.5" ></text>
</g>
<g >
<title>pybind11::detail::accessor_policies::generic_item::set (68,425,510 samples, 0.21%)</title><rect x="1164.9" y="885" width="2.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1167.91" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,123,073 samples, 0.10%)</title><rect x="101.6" y="613" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="104.55" y="623.5" ></text>
</g>
<g >
<title>PyIter_Next (34,212,146 samples, 0.11%)</title><rect x="150.0" y="517" width="1.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="153.04" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,368 samples, 0.08%)</title><rect x="105.0" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="447.5" ></text>
</g>
<g >
<title>do_anonymous_page (26,184,488 samples, 0.08%)</title><rect x="741.6" y="453" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="744.61" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="1061" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="1071.5" ></text>
</g>
<g >
<title>PyObject_Malloc (26,184,488 samples, 0.08%)</title><rect x="741.6" y="597" width="1.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="744.61" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,083 samples, 0.08%)</title><rect x="53.1" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.08" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,645,686 samples, 0.24%)</title><rect x="188.3" y="1045" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.29" y="1055.5" ></text>
</g>
<g >
<title>__do_page_fault (33,965,234 samples, 0.11%)</title><rect x="202.4" y="565" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="205.41" y="575.5" ></text>
</g>
<g >
<title>schedule_tail (13,412,063 samples, 0.04%)</title><rect x="410.7" y="1141" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="413.67" y="1151.5" ></text>
</g>
<g >
<title>[python3.12] (93,033,323 samples, 0.29%)</title><rect x="175.7" y="1045" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.69" y="1055.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt;::pair&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::range_detail::integer_iterator&lt;unsigned long&gt;, true&gt; (34,179,152 samples, 0.11%)</title><rect x="1032.2" y="709" width="1.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1035.22" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (491,266,251 samples, 1.53%)</title><rect x="117.4" y="1109" width="18.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="120.40" y="1119.5" ></text>
</g>
<g >
<title>[python3.12] (135,617,881 samples, 0.42%)</title><rect x="718.1" y="1013" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="721.07" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (202,723,556 samples, 0.63%)</title><rect x="135.5" y="997" width="7.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="138.46" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (112,492,912 samples, 0.35%)</title><rect x="167.3" y="837" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.27" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,198,130 samples, 0.08%)</title><rect x="122.4" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.41" y="575.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (85,395,270 samples, 0.27%)</title><rect x="92.1" y="645" width="3.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="95.10" y="655.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,208,317 samples, 0.08%)</title><rect x="35.6" y="661" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="38.55" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,911,433 samples, 0.10%)</title><rect x="134.3" y="549" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.32" y="559.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_down (681,348,456 samples, 2.12%)</title><rect x="889.5" y="709" width="25.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="892.54" y="719.5" >b..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,614 samples, 0.08%)</title><rect x="87.9" y="853" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.89" y="863.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::front (33,834,072 samples, 0.11%)</title><rect x="408.4" y="1157" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="411.43" y="1167.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,178,443 samples, 0.11%)</title><rect x="175.7" y="757" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="178.69" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (52,496,862 samples, 0.16%)</title><rect x="117.4" y="533" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,025,411 samples, 0.11%)</title><rect x="72.8" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.75" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (23,069,911 samples, 0.07%)</title><rect x="726.8" y="661" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="729.81" y="671.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (249,876,264 samples, 0.78%)</title><rect x="179.1" y="1077" width="9.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="182.10" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (33,857,502 samples, 0.11%)</title><rect x="1136.2" y="789" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1139.15" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,005,344 samples, 0.08%)</title><rect x="102.8" y="1125" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.77" y="1135.5" ></text>
</g>
<g >
<title>do_user_addr_fault (56,166,545 samples, 0.17%)</title><rect x="806.9" y="533" width="2.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="809.95" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (94,481,486 samples, 0.29%)</title><rect x="113.9" y="885" width="3.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="116.93" y="895.5" ></text>
</g>
<g >
<title>do_page_fault (26,131,714 samples, 0.08%)</title><rect x="80.6" y="1077" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="83.65" y="1087.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (25,115,976 samples, 0.08%)</title><rect x="100.6" y="549" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="103.63" y="559.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,029 samples, 0.08%)</title><rect x="161.2" y="453" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="164.20" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::allocate (34,150,712 samples, 0.11%)</title><rect x="1088.6" y="741" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1091.57" y="751.5" ></text>
</g>
<g >
<title>log_inline (34,046,960 samples, 0.11%)</title><rect x="820.7" y="789" width="1.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="823.72" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (128,575,815 samples, 0.40%)</title><rect x="44.8" y="773" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (85,395,270 samples, 0.27%)</title><rect x="92.1" y="629" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.10" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,386,620 samples, 0.10%)</title><rect x="121.3" y="613" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="124.25" y="623.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,248 samples, 0.08%)</title><rect x="190.2" y="901" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="193.21" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (34,042,290 samples, 0.11%)</title><rect x="166.0" y="549" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.02" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,614 samples, 0.08%)</title><rect x="87.9" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.89" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,913 samples, 0.08%)</title><rect x="159.1" y="805" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.06" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (34,178,443 samples, 0.11%)</title><rect x="175.7" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.69" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,232,961 samples, 0.08%)</title><rect x="115.2" y="645" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="118.19" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,477 samples, 0.08%)</title><rect x="131.4" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.36" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,916 samples, 0.08%)</title><rect x="182.6" y="789" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (134,860,770 samples, 0.42%)</title><rect x="1176.3" y="1157" width="4.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1179.26" y="1167.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_finish_vertex&gt; (68,194,699 samples, 0.21%)</title><rect x="878.3" y="709" width="2.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="881.34" y="719.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch1&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (4,734,133,884 samples, 14.74%)</title><rect x="862.0" y="789" width="174.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="865.03" y="799.5" >boost::detail::dijkstr..</text>
</g>
<g >
<title>[python3.12] (200,193,722 samples, 0.62%)</title><rect x="88.8" y="1045" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="1055.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,465 samples, 0.08%)</title><rect x="137.8" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.79" y="479.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (29,352,219 samples, 0.09%)</title><rect x="109.0" y="501" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="112.02" y="511.5" ></text>
</g>
<g >
<title>[offsets.cpython-312-x86_64-linux-gnu.so] (26,054,307 samples, 0.08%)</title><rect x="43.8" y="965" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="46.82" y="975.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (194,293,140 samples, 0.61%)</title><rect x="142.9" y="533" width="7.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.90" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (128,575,815 samples, 0.40%)</title><rect x="44.8" y="837" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="47.78" y="847.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (136,376,493 samples, 0.42%)</title><rect x="362.0" y="533" width="5.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="365.04" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,262 samples, 0.08%)</title><rect x="39.4" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (195,384,141 samples, 0.61%)</title><rect x="167.3" y="901" width="7.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="170.27" y="911.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,422,000 samples, 0.16%)</title><rect x="98.7" y="997" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="101.71" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (82,891,229 samples, 0.26%)</title><rect x="171.4" y="853" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="863.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~_Vector_base (170,249,944 samples, 0.53%)</title><rect x="1118.6" y="789" width="6.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1121.62" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (104,725,243 samples, 0.33%)</title><rect x="117.4" y="805" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="815.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (170,246,839 samples, 0.53%)</title><rect x="950.9" y="709" width="6.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="953.89" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,621 samples, 0.08%)</title><rect x="154.7" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.67" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (145,229,345 samples, 0.45%)</title><rect x="90.9" y="949" width="5.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.87" y="959.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (434,372,141 samples, 1.35%)</title><rect x="49.5" y="981" width="16.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="52.50" y="991.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (183,468,573 samples, 0.57%)</title><rect x="123.4" y="549" width="6.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="126.37" y="559.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (67,885,655 samples, 0.21%)</title><rect x="1092.3" y="725" width="2.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1095.32" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (34,068,038 samples, 0.11%)</title><rect x="48.2" y="469" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.25" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (32,066,320 samples, 0.10%)</title><rect x="152.5" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.53" y="399.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (34,207,635 samples, 0.11%)</title><rect x="814.4" y="309" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="817.41" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (34,140,846 samples, 0.11%)</title><rect x="116.1" y="757" width="1.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="119.15" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (197,062,549 samples, 0.61%)</title><rect x="160.0" y="805" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="815.5" ></text>
</g>
<g >
<title>futex_wake (3,273,324 samples, 0.01%)</title><rect x="697.9" y="1029" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="700.88" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (32,287,715 samples, 0.10%)</title><rect x="157.8" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.85" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (1,902,573,436 samples, 5.92%)</title><rect x="739.1" y="661" width="69.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="742.10" y="671.5" >_PyFunc..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (228,505,286 samples, 0.71%)</title><rect x="142.9" y="709" width="8.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.90" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (25,475,776 samples, 0.08%)</title><rect x="94.3" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="97.31" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (318,899,389 samples, 0.99%)</title><rect x="66.4" y="1013" width="11.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.42" y="1023.5" ></text>
</g>
<g >
<title>PyNumber_InPlaceAdd (33,920,397 samples, 0.11%)</title><rect x="729.6" y="997" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="732.58" y="1007.5" ></text>
</g>
<g >
<title>finish_task_switch (8,958,307 samples, 0.03%)</title><rect x="410.8" y="1125" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="413.84" y="1135.5" ></text>
</g>
<g >
<title>_PyObject_Call (128,575,815 samples, 0.40%)</title><rect x="44.8" y="805" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.78" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (52,355,002 samples, 0.16%)</title><rect x="110.1" y="597" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,140,846 samples, 0.11%)</title><rect x="116.1" y="661" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="119.15" y="671.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (7,457,249 samples, 0.02%)</title><rect x="410.9" y="1061" width="0.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="413.89" y="1071.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,200,261 samples, 0.08%)</title><rect x="184.5" y="549" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="187.50" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (58,854,880 samples, 0.18%)</title><rect x="176.9" y="725" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="179.94" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,255,543 samples, 0.24%)</title><rect x="110.1" y="1045" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="113.10" y="1055.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,207,868 samples, 0.08%)</title><rect x="119.3" y="533" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="122.33" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,915 samples, 0.08%)</title><rect x="95.2" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.24" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="997" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1170.43" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (52,386,527 samples, 0.16%)</title><rect x="183.5" y="709" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.54" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (34,178,443 samples, 0.11%)</title><rect x="175.7" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.69" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (34,178,443 samples, 0.11%)</title><rect x="175.7" y="725" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.69" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="1061" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="1071.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (34,230,355 samples, 0.11%)</title><rect x="1014.6" y="693" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1017.65" y="703.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,051,024 samples, 0.11%)</title><rect x="1066.0" y="741" width="1.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1069.02" y="751.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (33,918,369 samples, 0.11%)</title><rect x="934.6" y="709" width="1.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="937.61" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (31,386,620 samples, 0.10%)</title><rect x="121.3" y="693" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.25" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (34,140,846 samples, 0.11%)</title><rect x="116.1" y="693" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.15" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (30,480,105 samples, 0.09%)</title><rect x="173.3" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.33" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (519,254,283 samples, 1.62%)</title><rect x="160.0" y="1093" width="19.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="1103.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,125 samples, 0.08%)</title><rect x="156.9" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.88" y="463.5" ></text>
</g>
<g >
<title>do_page_fault (33,979,119 samples, 0.11%)</title><rect x="130.1" y="485" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="133.11" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="869" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="879.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (76,869,173 samples, 0.24%)</title><rect x="185.5" y="773" width="2.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="188.46" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (251,637,038 samples, 0.78%)</title><rect x="103.7" y="1141" width="9.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="106.73" y="1151.5" ></text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="501" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,839,675 samples, 0.33%)</title><rect x="35.6" y="1141" width="3.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="38.55" y="1151.5" ></text>
</g>
<g >
<title>[python3.12] (34,140,846 samples, 0.11%)</title><rect x="116.1" y="501" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.15" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (194,293,140 samples, 0.61%)</title><rect x="142.9" y="565" width="7.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.90" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,049,651 samples, 0.21%)</title><rect x="96.2" y="821" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.20" y="831.5" ></text>
</g>
<g >
<title>do_futex (3,273,324 samples, 0.01%)</title><rect x="697.9" y="1045" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="700.88" y="1055.5" ></text>
</g>
<g >
<title>[python3.12] (128,575,815 samples, 0.40%)</title><rect x="44.8" y="917" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,913 samples, 0.08%)</title><rect x="159.1" y="501" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="162.06" y="511.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (68,519,830 samples, 0.21%)</title><rect x="1106.1" y="789" width="2.5" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1109.08" y="799.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (34,158,285 samples, 0.11%)</title><rect x="1054.8" y="789" width="1.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1057.75" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,976,853 samples, 0.11%)</title><rect x="721.8" y="997" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="724.81" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (202,723,556 samples, 0.63%)</title><rect x="135.5" y="757" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="767.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (34,078,551 samples, 0.11%)</title><rect x="915.8" y="645" width="1.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="918.83" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,913 samples, 0.08%)</title><rect x="159.1" y="997" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.06" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (12,059,563,611 samples, 37.55%)</title><rect x="724.3" y="1077" width="443.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="727.31" y="1087.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (372,843,287 samples, 1.16%)</title><rect x="710.6" y="1045" width="13.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="713.61" y="1055.5" ></text>
</g>
<g >
<title>_PyObject_Call (55,566,826 samples, 0.17%)</title><rect x="108.1" y="933" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="111.06" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (25,810,639 samples, 0.08%)</title><rect x="92.1" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.10" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (128,575,815 samples, 0.40%)</title><rect x="44.8" y="981" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="1109" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="1119.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="485" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (25,810,639 samples, 0.08%)</title><rect x="92.1" y="549" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.10" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,190,477 samples, 0.08%)</title><rect x="131.4" y="597" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="134.36" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,774,270 samples, 0.11%)</title><rect x="174.4" y="997" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.45" y="1007.5" ></text>
</g>
<g >
<title>vma_interval_tree_augment_rotate (25,900,541 samples, 0.08%)</title><rect x="112.0" y="309" width="1.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="115.02" y="319.5" ></text>
</g>
<g >
<title>zap_page_range (192,536,179 samples, 0.60%)</title><rect x="411.2" y="1045" width="7.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="414.17" y="1055.5" ></text>
</g>
<g >
<title>PyBytes_AsStringAndSize (26,031,673 samples, 0.08%)</title><rect x="817.9" y="789" width="0.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="820.89" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,200,261 samples, 0.08%)</title><rect x="184.5" y="533" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.50" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,572 samples, 0.08%)</title><rect x="61.4" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.43" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::deallocate (34,139,482 samples, 0.11%)</title><rect x="1122.4" y="741" width="1.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1125.38" y="751.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,386,527 samples, 0.16%)</title><rect x="183.5" y="837" width="2.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="186.54" y="847.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,215,913 samples, 0.08%)</title><rect x="159.1" y="1013" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="162.06" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (34,192,473 samples, 0.11%)</title><rect x="44.8" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="703.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (34,217,141 samples, 0.11%)</title><rect x="907.1" y="677" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="910.07" y="687.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (68,297,747 samples, 0.21%)</title><rect x="914.6" y="709" width="2.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="917.57" y="719.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (34,143,831 samples, 0.11%)</title><rect x="393.3" y="741" width="1.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="396.27" y="751.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (31,739,724 samples, 0.10%)</title><rect x="64.3" y="837" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="67.30" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="981" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (58,239,049 samples, 0.18%)</title><rect x="100.6" y="997" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.63" y="1007.5" ></text>
</g>
<g >
<title>PyInit__helperlib (32,066,320 samples, 0.10%)</title><rect x="152.5" y="453" width="1.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="155.53" y="463.5" ></text>
</g>
<g >
<title>dlopen_doit (25,900,541 samples, 0.08%)</title><rect x="112.0" y="677" width="1.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="115.02" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (83,672,256 samples, 0.26%)</title><rect x="105.0" y="997" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (68,196,850 samples, 0.21%)</title><rect x="179.1" y="565" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="575.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (67,673,484 samples, 0.21%)</title><rect x="1012.2" y="661" width="2.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1015.16" y="671.5" ></text>
</g>
<g >
<title>do_page_fault (56,166,545 samples, 0.17%)</title><rect x="806.9" y="565" width="2.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="809.95" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,559 samples, 0.08%)</title><rect x="727.7" y="581" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="730.66" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_read (26,208,267 samples, 0.08%)</title><rect x="176.9" y="437" width="1.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="179.94" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (34,110,399 samples, 0.11%)</title><rect x="1159.9" y="821" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1162.91" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,059,182 samples, 0.08%)</title><rect x="728.6" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="731.62" y="527.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (33,847,329 samples, 0.11%)</title><rect x="1051.0" y="773" width="1.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1054.00" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (86,359,156 samples, 0.27%)</title><rect x="154.7" y="597" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.67" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (34,128,369 samples, 0.11%)</title><rect x="1079.8" y="789" width="1.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1082.80" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (55,566,826 samples, 0.17%)</title><rect x="108.1" y="837" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.06" y="847.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (28,272,766 samples, 0.09%)</title><rect x="132.3" y="821" width="1.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="135.32" y="831.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,142,413 samples, 0.11%)</title><rect x="103.7" y="741" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="106.73" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (34,212,146 samples, 0.11%)</title><rect x="150.0" y="405" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.04" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (305,260,913 samples, 0.95%)</title><rect x="53.1" y="677" width="11.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="56.08" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (54,964,377 samples, 0.17%)</title><rect x="88.8" y="773" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (93,033,323 samples, 0.29%)</title><rect x="175.7" y="1077" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.69" y="1087.5" ></text>
</g>
<g >
<title>boost::dummy_property_map::operator[]&lt;unsigned long&gt; (34,156,133 samples, 0.11%)</title><rect x="1024.7" y="741" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1027.69" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,209,777 samples, 0.08%)</title><rect x="40.4" y="533" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="43.37" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (60,077,733 samples, 0.19%)</title><rect x="69.3" y="517" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.31" y="527.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,452 samples, 0.08%)</title><rect x="62.4" y="597" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="65.39" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (228,505,286 samples, 0.71%)</title><rect x="142.9" y="741" width="8.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.90" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,961 samples, 0.08%)</title><rect x="115.2" y="741" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.19" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="453" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (23,433,938 samples, 0.07%)</title><rect x="107.2" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.19" y="575.5" ></text>
</g>
<g >
<title>do_anonymous_page (34,108,855 samples, 0.11%)</title><rect x="93.1" y="325" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="96.05" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,346 samples, 0.08%)</title><rect x="37.5" y="661" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.48" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,267 samples, 0.08%)</title><rect x="176.9" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.94" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (318,899,389 samples, 0.99%)</title><rect x="66.4" y="949" width="11.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.42" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,196,850 samples, 0.21%)</title><rect x="179.1" y="517" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="182.10" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,936 samples, 0.08%)</title><rect x="75.3" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.26" y="543.5" ></text>
</g>
<g >
<title>inherit_event.isra.0 (36,691,942 samples, 0.11%)</title><rect x="399.5" y="1029" width="1.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="402.53" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="949" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,196,396 samples, 0.08%)</title><rect x="56.0" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="58.97" y="463.5" ></text>
</g>
<g >
<title>_int_malloc (30,414,171 samples, 0.09%)</title><rect x="738.0" y="645" width="1.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="740.98" y="655.5" ></text>
</g>
<g >
<title>handle_mm_fault (33,979,119 samples, 0.11%)</title><rect x="130.1" y="437" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="133.11" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (112,492,912 samples, 0.35%)</title><rect x="167.3" y="789" width="4.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="170.27" y="799.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,248 samples, 0.08%)</title><rect x="190.2" y="789" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="193.21" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (217,494,625 samples, 0.68%)</title><rect x="105.0" y="1109" width="8.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.98" y="1119.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (101,553,941 samples, 0.32%)</title><rect x="885.8" y="709" width="3.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="888.81" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,355,002 samples, 0.16%)</title><rect x="110.1" y="757" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="113.10" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,320 samples, 0.08%)</title><rect x="409.7" y="1157" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="412.67" y="1167.5" ></text>
</g>
<g >
<title>move_to_new_page (26,207,779 samples, 0.08%)</title><rect x="126.3" y="277" width="0.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="129.26" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_base (34,037,026 samples, 0.11%)</title><rect x="1108.6" y="789" width="1.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1111.60" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (195,384,141 samples, 0.61%)</title><rect x="167.3" y="917" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.27" y="927.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,317 samples, 0.08%)</title><rect x="35.6" y="1077" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="38.55" y="1087.5" ></text>
</g>
<g >
<title>do_fault (26,054,307 samples, 0.08%)</title><rect x="43.8" y="437" width="1.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="46.82" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (210,448,082 samples, 0.66%)</title><rect x="151.3" y="853" width="7.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="154.30" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (76,869,173 samples, 0.24%)</title><rect x="185.5" y="597" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="188.46" y="607.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (15,580,879 samples, 0.05%)</title><rect x="1171.0" y="965" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1173.97" y="975.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (33,775,896 samples, 0.11%)</title><rect x="170.2" y="421" width="1.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="173.16" y="431.5" ></text>
</g>
<g >
<title>PyArray_AssignRawScalar (67,790,765 samples, 0.21%)</title><rect x="41.3" y="949" width="2.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="44.33" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (91,801,211 samples, 0.29%)</title><rect x="151.3" y="677" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.30" y="687.5" ></text>
</g>
<g >
<title>ksys_read (33,774,270 samples, 0.11%)</title><rect x="174.4" y="341" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="177.45" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (165,085,001 samples, 0.51%)</title><rect x="161.2" y="661" width="6.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="164.20" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (68,196,850 samples, 0.21%)</title><rect x="179.1" y="629" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="639.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (34,115,669 samples, 0.11%)</title><rect x="740.4" y="629" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="743.36" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_v (33,607,153 samples, 0.10%)</title><rect x="1157.4" y="725" width="1.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1160.42" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (52,269,741 samples, 0.16%)</title><rect x="727.7" y="805" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="730.66" y="815.5" ></text>
</g>
<g >
<title>_PyObject_Call (128,575,815 samples, 0.40%)</title><rect x="44.8" y="933" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.78" y="943.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (200,193,722 samples, 0.62%)</title><rect x="88.8" y="997" width="7.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="91.85" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (200,193,722 samples, 0.62%)</title><rect x="88.8" y="1125" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="1135.5" ></text>
</g>
<g >
<title>[python3.12] (66,845,496 samples, 0.21%)</title><rect x="50.6" y="517" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="53.62" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,054,307 samples, 0.08%)</title><rect x="43.8" y="1109" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.82" y="1119.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="277" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (32,646,613 samples, 0.10%)</title><rect x="177.9" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.91" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (67,736,617 samples, 0.21%)</title><rect x="1157.4" y="789" width="2.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1160.42" y="799.5" ></text>
</g>
<g >
<title>page_fault (26,131,714 samples, 0.08%)</title><rect x="80.6" y="1093" width="1.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="83.65" y="1103.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,192,473 samples, 0.11%)</title><rect x="44.8" y="677" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="47.78" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,774,270 samples, 0.11%)</title><rect x="174.4" y="693" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="177.45" y="703.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33,774,270 samples, 0.11%)</title><rect x="174.4" y="117" width="1.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="177.45" y="127.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,212,146 samples, 0.11%)</title><rect x="150.0" y="597" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="153.04" y="607.5" ></text>
</g>
<g >
<title>migrate_misplaced_page (26,207,779 samples, 0.08%)</title><rect x="126.3" y="309" width="0.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="129.26" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (33,320,178 samples, 0.10%)</title><rect x="85.7" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.70" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (34,059,380 samples, 0.11%)</title><rect x="394.5" y="773" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="397.52" y="783.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (34,172,378 samples, 0.11%)</title><rect x="1074.8" y="645" width="1.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1077.77" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (104,839,675 samples, 0.33%)</title><rect x="35.6" y="1157" width="3.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="38.55" y="1167.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,005,344 samples, 0.08%)</title><rect x="102.8" y="869" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="105.77" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (28,272,766 samples, 0.09%)</title><rect x="132.3" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.32" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (210,448,082 samples, 0.66%)</title><rect x="151.3" y="805" width="7.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="154.30" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,915 samples, 0.08%)</title><rect x="95.2" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.24" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,315,304 samples, 0.19%)</title><rect x="46.0" y="645" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="49.03" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (102,289,028 samples, 0.32%)</title><rect x="982.1" y="677" width="3.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="985.14" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,215,913 samples, 0.08%)</title><rect x="159.1" y="1077" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="162.06" y="1087.5" ></text>
</g>
<g >
<title>[python3.12] (668,676,242 samples, 2.08%)</title><rect x="135.5" y="1109" width="24.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="1119.5" >[..</text>
</g>
<g >
<title>[python3.12] (183,468,573 samples, 0.57%)</title><rect x="123.4" y="565" width="6.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.37" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (197,062,549 samples, 0.61%)</title><rect x="160.0" y="949" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="959.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,774,270 samples, 0.11%)</title><rect x="174.4" y="629" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="177.45" y="639.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (34,167,554 samples, 0.11%)</title><rect x="1093.6" y="661" width="1.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1096.55" y="671.5" ></text>
</g>
<g >
<title>PyObject_Malloc (31,386,620 samples, 0.10%)</title><rect x="121.3" y="485" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="124.25" y="495.5" ></text>
</g>
<g >
<title>memset (26,054,307 samples, 0.08%)</title><rect x="43.8" y="549" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="46.82" y="559.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (31,739,724 samples, 0.10%)</title><rect x="64.3" y="421" width="1.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="67.30" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (25,115,976 samples, 0.08%)</title><rect x="100.6" y="853" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (215,391,975 samples, 0.67%)</title><rect x="810.0" y="613" width="7.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="812.97" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,355,002 samples, 0.16%)</title><rect x="110.1" y="693" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="113.10" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,208,317 samples, 0.08%)</title><rect x="35.6" y="805" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="38.55" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (23,433,938 samples, 0.07%)</title><rect x="107.2" y="709" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.19" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (5,670,297,534 samples, 17.66%)</title><rect x="191.2" y="965" width="208.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.18" y="975.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (25,115,976 samples, 0.08%)</title><rect x="100.6" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,054,307 samples, 0.08%)</title><rect x="43.8" y="901" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.82" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (111,608,185 samples, 0.35%)</title><rect x="92.1" y="661" width="4.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="95.10" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (54,964,377 samples, 0.17%)</title><rect x="88.8" y="901" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="1077" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="1087.5" ></text>
</g>
<g >
<title>[python3.12] (28,272,766 samples, 0.09%)</title><rect x="132.3" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.32" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,142,413 samples, 0.11%)</title><rect x="103.7" y="965" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.73" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (5,228,429,884 samples, 16.28%)</title><rect x="201.2" y="757" width="192.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.16" y="767.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="837" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,913 samples, 0.08%)</title><rect x="159.1" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.06" y="543.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (33,027,108 samples, 0.10%)</title><rect x="1178.8" y="997" width="1.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1181.78" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (75,339,652 samples, 0.23%)</title><rect x="726.8" y="981" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="729.81" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (33,764,993 samples, 0.11%)</title><rect x="1038.5" y="757" width="1.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1041.49" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,222,181 samples, 0.08%)</title><rect x="169.2" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.19" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (58,239,049 samples, 0.18%)</title><rect x="100.6" y="1045" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="1055.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,208,317 samples, 0.08%)</title><rect x="35.6" y="549" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="38.55" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (91,801,211 samples, 0.29%)</title><rect x="151.3" y="517" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="154.30" y="527.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (136,376,493 samples, 0.42%)</title><rect x="362.0" y="517" width="5.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="365.04" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (58,854,880 samples, 0.18%)</title><rect x="176.9" y="757" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.94" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,798 samples, 0.08%)</title><rect x="181.6" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.61" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (426,220,960 samples, 1.33%)</title><rect x="160.0" y="1077" width="15.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="163.03" y="1087.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::update (33,918,369 samples, 0.11%)</title><rect x="934.6" y="725" width="1.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="937.61" y="735.5" ></text>
</g>
<g >
<title>copy_page_to_iter (33,774,270 samples, 0.11%)</title><rect x="174.4" y="229" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="177.45" y="239.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,205,986 samples, 0.08%)</title><rect x="65.5" y="853" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="68.46" y="863.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,133,890 samples, 0.08%)</title><rect x="133.4" y="741" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="136.36" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,248 samples, 0.08%)</title><rect x="190.2" y="933" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.21" y="943.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,107,679 samples, 0.11%)</title><rect x="113.9" y="597" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="116.93" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (272,770,058 samples, 0.85%)</title><rect x="1126.1" y="789" width="10.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1129.13" y="799.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (67,987,127 samples, 0.21%)</title><rect x="201.2" y="645" width="2.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="204.16" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (104,725,243 samples, 0.33%)</title><rect x="117.4" y="933" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,315,304 samples, 0.19%)</title><rect x="46.0" y="565" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="49.03" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,068,038 samples, 0.11%)</title><rect x="48.2" y="661" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="51.25" y="671.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (104,839,675 samples, 0.33%)</title><rect x="35.6" y="1125" width="3.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="38.55" y="1135.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,133,452 samples, 0.10%)</title><rect x="89.7" y="533" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="92.65" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,198,130 samples, 0.08%)</title><rect x="122.4" y="661" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.41" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,005,344 samples, 0.08%)</title><rect x="102.8" y="1013" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="105.77" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,452 samples, 0.08%)</title><rect x="62.4" y="501" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="65.39" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,215,913 samples, 0.08%)</title><rect x="159.1" y="901" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="162.06" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (908,053,331 samples, 2.83%)</title><rect x="44.8" y="1061" width="33.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="1071.5" >[p..</text>
</g>
<g >
<title>_PyObject_MakeTpCall (68,140,617 samples, 0.21%)</title><rect x="72.8" y="597" width="2.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="75.75" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,614 samples, 0.08%)</title><rect x="87.9" y="597" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.89" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,232,961 samples, 0.08%)</title><rect x="115.2" y="517" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.19" y="527.5" ></text>
</g>
<g >
<title>unmap_vmas (131,919,136 samples, 0.41%)</title><rect x="1176.4" y="1061" width="4.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1179.35" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,868 samples, 0.08%)</title><rect x="119.3" y="597" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.33" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (34,212,146 samples, 0.11%)</title><rect x="150.0" y="581" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.04" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,983 samples, 0.08%)</title><rect x="189.2" y="453" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="192.25" y="463.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,422,000 samples, 0.16%)</title><rect x="98.7" y="469" width="1.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="101.71" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (240,367,898 samples, 0.75%)</title><rect x="66.4" y="661" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.42" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,005,344 samples, 0.08%)</title><rect x="102.8" y="805" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="105.77" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (76,869,173 samples, 0.24%)</title><rect x="185.5" y="453" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.46" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (55,566,826 samples, 0.17%)</title><rect x="108.1" y="725" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.06" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (28,272,766 samples, 0.09%)</title><rect x="132.3" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.32" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (31,386,620 samples, 0.10%)</title><rect x="121.3" y="629" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.25" y="639.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (34,190,914 samples, 0.11%)</title><rect x="842.0" y="757" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="844.97" y="767.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,774,270 samples, 0.11%)</title><rect x="174.4" y="709" width="1.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="177.45" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,503,708 samples, 0.10%)</title><rect x="51.8" y="469" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="54.85" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (30,911,433 samples, 0.10%)</title><rect x="134.3" y="789" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="137.32" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (194,293,140 samples, 0.61%)</title><rect x="142.9" y="549" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="559.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (67,885,655 samples, 0.21%)</title><rect x="1092.3" y="709" width="2.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1095.32" y="719.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::deallocate (68,337,118 samples, 0.21%)</title><rect x="1121.1" y="757" width="2.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1124.13" y="767.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (68,145,804 samples, 0.21%)</title><rect x="855.8" y="805" width="2.5" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="858.76" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (31,977,548 samples, 0.10%)</title><rect x="160.0" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,054,307 samples, 0.08%)</title><rect x="43.8" y="1093" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="46.82" y="1103.5" ></text>
</g>
<g >
<title>_PyObject_Call (155,467,616 samples, 0.48%)</title><rect x="182.6" y="981" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="185.57" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,983 samples, 0.08%)</title><rect x="189.2" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.25" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (217,447,692 samples, 0.68%)</title><rect x="123.4" y="629" width="8.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="126.37" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,190,477 samples, 0.08%)</title><rect x="131.4" y="645" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="134.36" y="655.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::assign_value (34,175,873 samples, 0.11%)</title><rect x="845.7" y="757" width="1.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="848.73" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (241,606,014 samples, 0.75%)</title><rect x="809.0" y="645" width="8.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="812.01" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="757" width="3.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1170.43" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,798 samples, 0.08%)</title><rect x="181.6" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.61" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="725" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (34,107,679 samples, 0.11%)</title><rect x="113.9" y="533" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.93" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (82,891,229 samples, 0.26%)</title><rect x="171.4" y="501" width="3.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="174.40" y="511.5" ></text>
</g>
<g >
<title>unmap_single_vma (131,919,136 samples, 0.41%)</title><rect x="1176.4" y="1045" width="4.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1179.35" y="1055.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,777 samples, 0.08%)</title><rect x="40.4" y="853" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.37" y="863.5" ></text>
</g>
<g >
<title>Py_InitializeFromConfig (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="1093" width="3.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1170.43" y="1103.5" ></text>
</g>
<g >
<title>copy_page_to_iter (34,207,635 samples, 0.11%)</title><rect x="814.4" y="325" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="817.41" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (34,068,038 samples, 0.11%)</title><rect x="48.2" y="533" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.25" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,005,344 samples, 0.08%)</title><rect x="102.8" y="965" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.77" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (33,912,075 samples, 0.11%)</title><rect x="838.2" y="757" width="1.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="841.22" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (111,608,185 samples, 0.35%)</title><rect x="92.1" y="725" width="4.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="95.10" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (68,196,850 samples, 0.21%)</title><rect x="179.1" y="613" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="182.10" y="623.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (136,559,292 samples, 0.43%)</title><rect x="963.4" y="677" width="5.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="966.39" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (30,911,433 samples, 0.10%)</title><rect x="134.3" y="741" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.32" y="751.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (55,566,826 samples, 0.17%)</title><rect x="108.1" y="965" width="2.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="111.06" y="975.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,774,270 samples, 0.11%)</title><rect x="174.4" y="533" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="177.45" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,775,896 samples, 0.11%)</title><rect x="170.2" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.16" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,911,433 samples, 0.10%)</title><rect x="134.3" y="597" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.32" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,916 samples, 0.08%)</title><rect x="182.6" y="853" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="185.57" y="863.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (76,869,173 samples, 0.24%)</title><rect x="185.5" y="805" width="2.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="188.46" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,798 samples, 0.08%)</title><rect x="181.6" y="581" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.61" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,208,267 samples, 0.08%)</title><rect x="176.9" y="405" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="179.94" y="415.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (5,670,297,534 samples, 17.66%)</title><rect x="191.2" y="1061" width="208.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="194.18" y="1071.5" >_PyObject_MakeTpCall</text>
</g>
<g >
<title>[python3.12] (26,208,267 samples, 0.08%)</title><rect x="176.9" y="613" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.94" y="623.5" ></text>
</g>
<g >
<title>rmqueue (33,805,373 samples, 0.11%)</title><rect x="360.8" y="485" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="363.80" y="495.5" ></text>
</g>
<g >
<title>__do_page_fault (33,979,119 samples, 0.11%)</title><rect x="130.1" y="469" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="133.11" y="479.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,774,270 samples, 0.11%)</title><rect x="174.4" y="981" width="1.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="177.45" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (82,891,229 samples, 0.26%)</title><rect x="171.4" y="757" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (112,492,912 samples, 0.35%)</title><rect x="167.3" y="741" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.27" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,732 samples, 0.08%)</title><rect x="36.5" y="757" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="39.51" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,133,890 samples, 0.08%)</title><rect x="133.4" y="709" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.36" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (11,814,930,435 samples, 36.79%)</title><rect x="733.3" y="997" width="434.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="736.30" y="1007.5" >_PyObject_MakeTpCall</text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,422,000 samples, 0.16%)</title><rect x="98.7" y="677" width="1.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="101.71" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (30,911,433 samples, 0.10%)</title><rect x="134.3" y="949" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="137.32" y="959.5" ></text>
</g>
<g >
<title>do_syscall_64 (145,151,908 samples, 0.45%)</title><rect x="144.7" y="437" width="5.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="147.71" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (34,172,378 samples, 0.11%)</title><rect x="1074.8" y="597" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1077.77" y="607.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (30,911,433 samples, 0.10%)</title><rect x="134.3" y="533" width="1.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="137.32" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (31,386,620 samples, 0.10%)</title><rect x="121.3" y="773" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="124.25" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,455 samples, 0.08%)</title><rect x="188.3" y="645" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.29" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="677" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,545 samples, 0.08%)</title><rect x="47.3" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="50.29" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,211,916 samples, 0.08%)</title><rect x="182.6" y="885" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="185.57" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,148 samples, 0.08%)</title><rect x="60.5" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.46" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (94,408,648 samples, 0.29%)</title><rect x="179.1" y="965" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="975.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (68,224,887 samples, 0.21%)</title><rect x="1139.9" y="741" width="2.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1142.91" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (31,386,620 samples, 0.10%)</title><rect x="121.3" y="581" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="124.25" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (12,059,563,611 samples, 37.55%)</title><rect x="724.3" y="1045" width="443.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="727.31" y="1055.5" >[python3.12]</text>
</g>
<g >
<title>update_load_avg (33,775,896 samples, 0.11%)</title><rect x="170.2" y="293" width="1.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="173.16" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (76,869,173 samples, 0.24%)</title><rect x="185.5" y="757" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="188.46" y="767.5" ></text>
</g>
<g >
<title>tick_sched_handle (33,775,896 samples, 0.11%)</title><rect x="170.2" y="357" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="173.16" y="367.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (34,155,173 samples, 0.11%)</title><rect x="1018.4" y="709" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1021.42" y="719.5" ></text>
</g>
<g >
<title>__handle_mm_fault (476,862,152 samples, 1.48%)</title><rect x="349.5" y="565" width="17.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="352.53" y="575.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (392,446,690 samples, 1.22%)</title><rect x="160.0" y="1045" width="14.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="163.03" y="1055.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,961 samples, 0.08%)</title><rect x="115.2" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.19" y="495.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (26,131,714 samples, 0.08%)</title><rect x="80.6" y="965" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="83.65" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,029 samples, 0.08%)</title><rect x="161.2" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.20" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (174,773,976 samples, 0.54%)</title><rect x="55.0" y="533" width="6.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="58.00" y="543.5" ></text>
</g>
<g >
<title>release_pages (32,786,257 samples, 0.10%)</title><rect x="1180.0" y="965" width="1.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1183.00" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,131,714 samples, 0.08%)</title><rect x="80.6" y="1109" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.65" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (34,149,252 samples, 0.11%)</title><rect x="1131.1" y="741" width="1.3" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1134.14" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (60,315,304 samples, 0.19%)</title><rect x="46.0" y="613" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.03" y="623.5" ></text>
</g>
<g >
<title>boost::integer_range&lt;unsigned long&gt;::integer_range (34,213,752 samples, 0.11%)</title><rect x="1031.0" y="709" width="1.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1033.96" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (58,239,049 samples, 0.18%)</title><rect x="100.6" y="1125" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="103.63" y="1135.5" ></text>
</g>
<g >
<title>[python3.12] (94,408,648 samples, 0.29%)</title><rect x="179.1" y="917" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator= (34,172,378 samples, 0.11%)</title><rect x="1074.8" y="805" width="1.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1077.77" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,913 samples, 0.08%)</title><rect x="159.1" y="677" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="162.06" y="687.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,029 samples, 0.08%)</title><rect x="161.2" y="469" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="164.20" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,068,038 samples, 0.11%)</title><rect x="48.2" y="645" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.25" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (82,891,229 samples, 0.26%)</title><rect x="171.4" y="805" width="3.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.40" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,559 samples, 0.08%)</title><rect x="727.7" y="597" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="730.66" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (102,318,155 samples, 0.32%)</title><rect x="964.7" y="661" width="3.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="967.65" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,614 samples, 0.08%)</title><rect x="87.9" y="805" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.89" y="815.5" ></text>
</g>
<g >
<title>PyLong_FromLong (34,053,623 samples, 0.11%)</title><rect x="56.9" y="437" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="59.93" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,209,777 samples, 0.08%)</title><rect x="40.4" y="949" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="43.37" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (86,359,156 samples, 0.27%)</title><rect x="154.7" y="581" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.67" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (33,774,270 samples, 0.11%)</title><rect x="174.4" y="773" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.45" y="783.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (21,830,925 samples, 0.07%)</title><rect x="88.8" y="709" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="91.85" y="719.5" ></text>
</g>
<g >
<title>PyDict_MergeFromSeq2 (32,967,666 samples, 0.10%)</title><rect x="733.3" y="885" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="736.30" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="709" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="533" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,005,344 samples, 0.08%)</title><rect x="102.8" y="1029" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.77" y="1039.5" ></text>
</g>
<g >
<title>dl_open_worker (26,054,307 samples, 0.08%)</title><rect x="43.8" y="613" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="46.82" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (165,085,001 samples, 0.51%)</title><rect x="161.2" y="645" width="6.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.20" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,774,270 samples, 0.11%)</title><rect x="174.4" y="517" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.45" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (97,371,504 samples, 0.30%)</title><rect x="49.5" y="677" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.50" y="687.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (24,901,898 samples, 0.08%)</title><rect x="819.8" y="869" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="822.81" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (31,739,724 samples, 0.10%)</title><rect x="64.3" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.30" y="655.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,207,868 samples, 0.08%)</title><rect x="119.3" y="613" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="122.33" y="623.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (67,969,799 samples, 0.21%)</title><rect x="395.8" y="901" width="2.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="398.78" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (241,606,014 samples, 0.75%)</title><rect x="809.0" y="677" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="812.01" y="687.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,212,915 samples, 0.08%)</title><rect x="95.2" y="645" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="98.24" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (31,386,620 samples, 0.10%)</title><rect x="121.3" y="757" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.25" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (202,723,556 samples, 0.63%)</title><rect x="135.5" y="853" width="7.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="138.46" y="863.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (101,797,440 samples, 0.32%)</title><rect x="969.7" y="693" width="3.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="972.66" y="703.5" ></text>
</g>
<g >
<title>__lru_cache_add (26,184,488 samples, 0.08%)</title><rect x="741.6" y="421" width="1.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="744.61" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (227,199,597 samples, 0.71%)</title><rect x="53.1" y="629" width="8.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="56.08" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::~new_allocator (34,258,929 samples, 0.11%)</title><rect x="13.8" y="1157" width="1.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="16.75" y="1167.5" ></text>
</g>
<g >
<title>page_fault (34,107,540 samples, 0.11%)</title><rect x="79.4" y="1093" width="1.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="82.39" y="1103.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,262 samples, 0.08%)</title><rect x="39.4" y="949" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="959.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (33,740,598 samples, 0.11%)</title><rect x="1109.8" y="773" width="1.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1112.85" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (200,193,722 samples, 0.62%)</title><rect x="88.8" y="1093" width="7.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="91.85" y="1103.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,123,073 samples, 0.10%)</title><rect x="101.6" y="933" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="104.55" y="943.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (34,149,252 samples, 0.11%)</title><rect x="1131.1" y="773" width="1.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1134.14" y="783.5" ></text>
</g>
<g >
<title>PyRun_StringFlags (26,201,125 samples, 0.08%)</title><rect x="156.9" y="517" width="0.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="159.88" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_read (26,208,267 samples, 0.08%)</title><rect x="176.9" y="453" width="1.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="179.94" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (136,697,031 samples, 0.43%)</title><rect x="1113.6" y="709" width="5.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1116.60" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,646,613 samples, 0.10%)</title><rect x="177.9" y="453" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="180.91" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="661" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="575.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (408,604,869 samples, 1.27%)</title><rect x="919.6" y="725" width="15.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="922.59" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,020,513 samples, 0.08%)</title><rect x="120.3" y="629" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="123.30" y="639.5" ></text>
</g>
<g >
<title>__libc_calloc (26,201,368 samples, 0.08%)</title><rect x="105.0" y="405" width="0.9" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="107.98" y="415.5" ></text>
</g>
<g >
<title>page_fault (30,414,171 samples, 0.09%)</title><rect x="738.0" y="629" width="1.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="740.98" y="639.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="869" width="3.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1170.43" y="879.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (26,186,266 samples, 0.08%)</title><rect x="183.5" y="341" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="186.54" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (54,964,377 samples, 0.17%)</title><rect x="88.8" y="917" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="91.85" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="591.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::dispatcher (9,435,659,375 samples, 29.38%)</title><rect x="820.7" y="965" width="346.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="823.72" y="975.5" >pybind11::cpp_function::dispatcher</text>
</g>
<g >
<title>[python3.12] (26,005,344 samples, 0.08%)</title><rect x="102.8" y="853" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.77" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,198,130 samples, 0.08%)</title><rect x="122.4" y="549" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.41" y="559.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,034,859 samples, 0.11%)</title><rect x="732.0" y="837" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="735.05" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (426,220,960 samples, 1.33%)</title><rect x="160.0" y="1061" width="15.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.03" y="1071.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,386,527 samples, 0.16%)</title><rect x="183.5" y="757" width="2.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="186.54" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,496,862 samples, 0.16%)</title><rect x="117.4" y="613" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="120.40" y="623.5" ></text>
</g>
<g >
<title>vfs_statx (26,207,202 samples, 0.08%)</title><rect x="129.1" y="405" width="1.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="132.15" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (86,359,156 samples, 0.27%)</title><rect x="154.7" y="693" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.67" y="703.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,140,846 samples, 0.11%)</title><rect x="116.1" y="581" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="119.15" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (55,566,826 samples, 0.17%)</title><rect x="108.1" y="917" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.06" y="927.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,107,679 samples, 0.11%)</title><rect x="113.9" y="709" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="116.93" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (195,384,141 samples, 0.61%)</title><rect x="167.3" y="997" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.27" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (31,977,548 samples, 0.10%)</title><rect x="160.0" y="661" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,005,344 samples, 0.08%)</title><rect x="102.8" y="1045" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="105.77" y="1055.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (26,207,202 samples, 0.08%)</title><rect x="129.1" y="357" width="1.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="132.15" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,774,270 samples, 0.11%)</title><rect x="174.4" y="917" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="177.45" y="927.5" ></text>
</g>
<g >
<title>do_user_addr_fault (26,054,307 samples, 0.08%)</title><rect x="43.8" y="485" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="46.82" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (318,899,389 samples, 0.99%)</title><rect x="66.4" y="981" width="11.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.42" y="991.5" ></text>
</g>
<g >
<title>do_page_fault (33,965,234 samples, 0.11%)</title><rect x="202.4" y="581" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="205.41" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (202,723,556 samples, 0.63%)</title><rect x="135.5" y="805" width="7.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="138.46" y="815.5" ></text>
</g>
<g >
<title>put_pipe_info (15,580,879 samples, 0.05%)</title><rect x="1171.0" y="1045" width="0.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1173.97" y="1055.5" ></text>
</g>
<g >
<title>[python3.12] (2,354,369,162 samples, 7.33%)</title><rect x="733.3" y="901" width="86.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="736.30" y="911.5" >[python3.12]</text>
</g>
<g >
<title>[libz.so.1.2.11] (576,366,697 samples, 1.79%)</title><rect x="743.5" y="613" width="21.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="746.54" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,572 samples, 0.08%)</title><rect x="61.4" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.43" y="431.5" ></text>
</g>
<g >
<title>_do_fork (36,691,942 samples, 0.11%)</title><rect x="399.5" y="1093" width="1.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="402.53" y="1103.5" ></text>
</g>
<g >
<title>page_fault (34,034,859 samples, 0.11%)</title><rect x="732.0" y="901" width="1.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="735.05" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,280 samples, 0.08%)</title><rect x="38.4" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.44" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (355,629,575 samples, 1.11%)</title><rect x="121.3" y="885" width="13.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="124.25" y="895.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (33,497,208 samples, 0.10%)</title><rect x="927.1" y="693" width="1.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="930.11" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (34,239,785 samples, 0.11%)</title><rect x="1103.6" y="709" width="1.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1106.57" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (34,190,914 samples, 0.11%)</title><rect x="842.0" y="741" width="1.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="844.97" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,216,455 samples, 0.08%)</title><rect x="188.3" y="581" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.29" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (2,321,401,496 samples, 7.23%)</title><rect x="734.5" y="885" width="85.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="737.51" y="895.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (908,053,331 samples, 2.83%)</title><rect x="44.8" y="1141" width="33.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="1151.5" >[p..</text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="1029" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,572 samples, 0.08%)</title><rect x="61.4" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.43" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,196,850 samples, 0.21%)</title><rect x="179.1" y="597" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="182.10" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (78,255,543 samples, 0.24%)</title><rect x="110.1" y="1029" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="1039.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (94,408,648 samples, 0.29%)</title><rect x="179.1" y="933" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="182.10" y="943.5" ></text>
</g>
<g >
<title>_PyObject_FastCall (33,510,882 samples, 0.10%)</title><rect x="71.5" y="437" width="1.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="74.52" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (34,030,261 samples, 0.11%)</title><rect x="1044.7" y="725" width="1.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1047.72" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (68,049,651 samples, 0.21%)</title><rect x="96.2" y="1077" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="99.20" y="1087.5" ></text>
</g>
<g >
<title>[python3.12] (25,900,541 samples, 0.08%)</title><rect x="112.0" y="853" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.02" y="863.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (30,480,105 samples, 0.09%)</title><rect x="173.3" y="485" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="176.33" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (34,127,788 samples, 0.11%)</title><rect x="1034.7" y="661" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1037.72" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (165,085,001 samples, 0.51%)</title><rect x="161.2" y="629" width="6.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.20" y="639.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,133,452 samples, 0.10%)</title><rect x="89.7" y="597" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="92.65" y="607.5" ></text>
</g>
<g >
<title>lookup_fast (145,151,908 samples, 0.45%)</title><rect x="144.7" y="293" width="5.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="147.71" y="303.5" ></text>
</g>
<g >
<title>_dl_open (26,054,307 samples, 0.08%)</title><rect x="43.8" y="645" width="1.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="46.82" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,320,178 samples, 0.10%)</title><rect x="85.7" y="677" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="88.70" y="687.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,771 samples, 0.08%)</title><rect x="153.7" y="501" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="156.71" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (509,571,902 samples, 1.59%)</title><rect x="374.5" y="709" width="18.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="377.55" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,422,000 samples, 0.16%)</title><rect x="98.7" y="485" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.71" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,798 samples, 0.08%)</title><rect x="181.6" y="533" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.61" y="543.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (340,677,476 samples, 1.06%)</title><rect x="957.1" y="709" width="12.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="960.15" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (33,320,178 samples, 0.10%)</title><rect x="85.7" y="1013" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.70" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::end (33,935,342 samples, 0.11%)</title><rect x="989.7" y="709" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="992.66" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (78,645,686 samples, 0.24%)</title><rect x="188.3" y="1109" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.29" y="1119.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,419,555 samples, 0.16%)</title><rect x="76.2" y="645" width="1.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="79.22" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,213,614 samples, 0.08%)</title><rect x="87.9" y="869" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="90.89" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="757" width="1.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1166.66" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,911,433 samples, 0.10%)</title><rect x="134.3" y="645" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.32" y="655.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,452 samples, 0.08%)</title><rect x="62.4" y="549" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="65.39" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (82,891,229 samples, 0.26%)</title><rect x="171.4" y="517" width="3.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.40" y="527.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,029 samples, 0.08%)</title><rect x="161.2" y="517" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="164.20" y="527.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (68,376,338 samples, 0.21%)</title><rect x="402.2" y="1157" width="2.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="405.15" y="1167.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,232,961 samples, 0.08%)</title><rect x="115.2" y="501" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="118.19" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,198,130 samples, 0.08%)</title><rect x="122.4" y="629" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.41" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,315,304 samples, 0.19%)</title><rect x="46.0" y="693" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="49.03" y="703.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,212,915 samples, 0.08%)</title><rect x="95.2" y="581" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="98.24" y="591.5" ></text>
</g>
<g >
<title>unmap_region (25,900,541 samples, 0.08%)</title><rect x="112.0" y="405" width="1.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="115.02" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (112,492,912 samples, 0.35%)</title><rect x="167.3" y="693" width="4.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="170.27" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,262 samples, 0.08%)</title><rect x="39.4" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (104,725,243 samples, 0.33%)</title><rect x="117.4" y="837" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (491,266,251 samples, 1.53%)</title><rect x="117.4" y="1093" width="18.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="1103.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (34,190,914 samples, 0.11%)</title><rect x="842.0" y="773" width="1.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="844.97" y="783.5" ></text>
</g>
<g >
<title>get_page_from_freelist (31,319,746 samples, 0.10%)</title><rect x="806.9" y="437" width="1.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="809.95" y="447.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (32,287,715 samples, 0.10%)</title><rect x="157.8" y="645" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="160.85" y="655.5" ></text>
</g>
<g >
<title>PyUnicode_InternFromString (26,108,433 samples, 0.08%)</title><rect x="113.0" y="1141" width="0.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="115.97" y="1151.5" ></text>
</g>
<g >
<title>[python3.12] (52,386,527 samples, 0.16%)</title><rect x="183.5" y="853" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.54" y="863.5" ></text>
</g>
<g >
<title>_dl_update_slotinfo (34,081,457 samples, 0.11%)</title><rect x="398.3" y="853" width="1.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="401.27" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,205,986 samples, 0.08%)</title><rect x="65.5" y="869" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="68.46" y="879.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,005,344 samples, 0.08%)</title><rect x="102.8" y="757" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="105.77" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_read (34,207,635 samples, 0.11%)</title><rect x="814.4" y="453" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="817.41" y="463.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,111,936 samples, 0.08%)</title><rect x="75.3" y="709" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="78.26" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,420,626 samples, 0.16%)</title><rect x="37.5" y="789" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="40.48" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (28,272,766 samples, 0.09%)</title><rect x="132.3" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.32" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,005,344 samples, 0.08%)</title><rect x="102.8" y="837" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="105.77" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,200,261 samples, 0.08%)</title><rect x="184.5" y="613" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.50" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,140,846 samples, 0.11%)</title><rect x="116.1" y="821" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.15" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (111,608,185 samples, 0.35%)</title><rect x="92.1" y="741" width="4.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="95.10" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,798 samples, 0.08%)</title><rect x="181.6" y="597" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.61" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (34,281,432 samples, 0.11%)</title><rect x="1128.6" y="757" width="1.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1131.64" y="767.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,075,926 samples, 0.11%)</title><rect x="1033.5" y="709" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1036.47" y="719.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (438,953,368 samples, 1.37%)</title><rect x="142.9" y="885" width="16.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="145.90" y="895.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,020,513 samples, 0.08%)</title><rect x="120.3" y="677" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="123.30" y="687.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,107,679 samples, 0.11%)</title><rect x="113.9" y="421" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="116.93" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (93,033,323 samples, 0.29%)</title><rect x="175.7" y="933" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.69" y="943.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (3,508,225 samples, 0.01%)</title><rect x="698.0" y="981" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="701.05" y="991.5" ></text>
</g>
<g >
<title>__GI_madvise (192,536,179 samples, 0.60%)</title><rect x="411.2" y="1125" width="7.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="414.17" y="1135.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="901" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (55,566,826 samples, 0.17%)</title><rect x="108.1" y="869" width="2.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="111.06" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (91,801,211 samples, 0.29%)</title><rect x="151.3" y="645" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="154.30" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,868 samples, 0.08%)</title><rect x="119.3" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.33" y="591.5" ></text>
</g>
<g >
<title>PyObject_Dir (26,213,248 samples, 0.08%)</title><rect x="190.2" y="741" width="1.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="193.21" y="751.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,022,051 samples, 0.11%)</title><rect x="1133.7" y="757" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1136.65" y="767.5" ></text>
</g>
<g >
<title>clear_page_erms (34,107,679 samples, 0.11%)</title><rect x="113.9" y="309" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="116.93" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (35,988,363 samples, 0.11%)</title><rect x="59.1" y="373" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="62.14" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (97,371,504 samples, 0.30%)</title><rect x="49.5" y="773" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="52.50" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (25,900,541 samples, 0.08%)</title><rect x="112.0" y="517" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="115.02" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,913 samples, 0.08%)</title><rect x="159.1" y="981" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.06" y="991.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::finish_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (102,150,774 samples, 0.32%)</title><rect x="877.1" y="725" width="3.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="880.09" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (131,051,660 samples, 0.41%)</title><rect x="123.4" y="485" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.37" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (195,384,141 samples, 0.61%)</title><rect x="167.3" y="981" width="7.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="170.27" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,123,073 samples, 0.10%)</title><rect x="101.6" y="805" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="104.55" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (82,891,229 samples, 0.26%)</title><rect x="171.4" y="549" width="3.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="174.40" y="559.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,207,868 samples, 0.08%)</title><rect x="119.3" y="565" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="122.33" y="575.5" ></text>
</g>
<g >
<title>vfs_read (26,208,267 samples, 0.08%)</title><rect x="176.9" y="357" width="1.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="179.94" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (240,367,898 samples, 0.75%)</title><rect x="66.4" y="677" width="8.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.42" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (52,355,002 samples, 0.16%)</title><rect x="110.1" y="741" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="751.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch2&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (33,605,832 samples, 0.10%)</title><rect x="822.0" y="757" width="1.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="824.97" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (128,575,815 samples, 0.40%)</title><rect x="44.8" y="965" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="47.78" y="975.5" ></text>
</g>
<g >
<title>operator new (31,739,724 samples, 0.10%)</title><rect x="64.3" y="277" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="67.30" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (104,833,682 samples, 0.33%)</title><rect x="162.2" y="453" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="165.16" y="463.5" ></text>
</g>
<g >
<title>__pyx_pymod_exec__core (28,272,766 samples, 0.09%)</title><rect x="132.3" y="613" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="135.32" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,422,000 samples, 0.16%)</title><rect x="98.7" y="821" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="101.71" y="831.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (82,891,229 samples, 0.26%)</title><rect x="171.4" y="693" width="3.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="174.40" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (23,433,938 samples, 0.07%)</title><rect x="107.2" y="629" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.19" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (33,945,410 samples, 0.11%)</title><rect x="155.6" y="421" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.64" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (68,394,311 samples, 0.21%)</title><rect x="1116.1" y="677" width="2.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1119.11" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,527 samples, 0.08%)</title><rect x="76.2" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.22" y="463.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (26,111,936 samples, 0.08%)</title><rect x="75.3" y="597" width="0.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="78.26" y="607.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (34,126,550 samples, 0.11%)</title><rect x="935.9" y="725" width="1.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="938.85" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (202,723,556 samples, 0.63%)</title><rect x="135.5" y="933" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (34,178,443 samples, 0.11%)</title><rect x="175.7" y="661" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.69" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (68,049,651 samples, 0.21%)</title><rect x="96.2" y="837" width="2.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="99.20" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (83,672,256 samples, 0.26%)</title><rect x="105.0" y="869" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="879.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (76,869,173 samples, 0.24%)</title><rect x="185.5" y="725" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="188.46" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,614 samples, 0.08%)</title><rect x="87.9" y="709" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.89" y="719.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (34,172,378 samples, 0.11%)</title><rect x="1074.8" y="661" width="1.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1077.77" y="671.5" ></text>
</g>
<g >
<title>boost::optional&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::~optional (34,256,754 samples, 0.11%)</title><rect x="847.0" y="805" width="1.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="849.99" y="815.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (34,066,465 samples, 0.11%)</title><rect x="840.7" y="677" width="1.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="843.71" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,559 samples, 0.08%)</title><rect x="727.7" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="730.66" y="639.5" ></text>
</g>
<g >
<title>__GI___xstat (26,207,202 samples, 0.08%)</title><rect x="129.1" y="485" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="132.15" y="495.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;int, int&gt;*&gt; (34,110,399 samples, 0.11%)</title><rect x="1159.9" y="789" width="1.3" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="1162.91" y="799.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (55,566,826 samples, 0.17%)</title><rect x="108.1" y="821" width="2.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="111.06" y="831.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,158,031 samples, 0.19%)</title><rect x="154.7" y="565" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="157.67" y="575.5" ></text>
</g>
<g >
<title>operator new (33,679,636 samples, 0.10%)</title><rect x="22.5" y="1157" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="25.54" y="1167.5" ></text>
</g>
<g >
<title>[python3.12] (32,287,715 samples, 0.10%)</title><rect x="157.8" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.85" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,198,130 samples, 0.08%)</title><rect x="122.4" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.41" y="591.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (68,297,747 samples, 0.21%)</title><rect x="914.6" y="693" width="2.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="917.57" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (402,632,417 samples, 1.25%)</title><rect x="49.5" y="837" width="14.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="52.50" y="847.5" ></text>
</g>
<g >
<title>Py_FinalizeEx (710,310,762 samples, 2.21%)</title><rect x="698.2" y="1109" width="26.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="701.21" y="1119.5" >P..</text>
</g>
<g >
<title>do_user_addr_fault (35,988,363 samples, 0.11%)</title><rect x="59.1" y="389" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="62.14" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (30,414,171 samples, 0.09%)</title><rect x="738.0" y="565" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="740.98" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; const&amp;&gt; (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="693" width="1.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1166.66" y="703.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,034,859 samples, 0.11%)</title><rect x="732.0" y="853" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="735.05" y="863.5" ></text>
</g>
<g >
<title>ns_capable_common (26,207,202 samples, 0.08%)</title><rect x="129.1" y="277" width="1.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="132.15" y="287.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (102,298,321 samples, 0.32%)</title><rect x="944.6" y="725" width="3.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="947.62" y="735.5" ></text>
</g>
<g >
<title>free_pgtables (25,900,541 samples, 0.08%)</title><rect x="112.0" y="389" width="1.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="115.02" y="399.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::destroy_impl (34,256,754 samples, 0.11%)</title><rect x="847.0" y="757" width="1.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="849.99" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (97,371,504 samples, 0.30%)</title><rect x="49.5" y="725" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.50" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (31,386,620 samples, 0.10%)</title><rect x="121.3" y="645" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="124.25" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,986 samples, 0.08%)</title><rect x="65.5" y="837" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.46" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,916 samples, 0.08%)</title><rect x="182.6" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (82,891,229 samples, 0.26%)</title><rect x="171.4" y="661" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="671.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (67,848,296 samples, 0.21%)</title><rect x="1089.8" y="709" width="2.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1092.82" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (5,431,805,106 samples, 16.91%)</title><rect x="194.9" y="869" width="199.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.94" y="879.5" >[python3.12]</text>
</g>
<g >
<title>_PyObject_Call (33,320,178 samples, 0.10%)</title><rect x="85.7" y="549" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.70" y="559.5" ></text>
</g>
<g >
<title>userfaultfd_unmap_complete (31,386,620 samples, 0.10%)</title><rect x="121.3" y="309" width="1.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="124.25" y="319.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt; (34,106,347 samples, 0.11%)</title><rect x="1025.9" y="725" width="1.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1028.94" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (202,723,556 samples, 0.63%)</title><rect x="135.5" y="1029" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="1039.5" ></text>
</g>
<g >
<title>PyArray_Nonzero (33,979,119 samples, 0.11%)</title><rect x="130.1" y="517" width="1.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="133.11" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (32,646,613 samples, 0.10%)</title><rect x="177.9" y="613" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="180.91" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,133,890 samples, 0.08%)</title><rect x="133.4" y="597" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="136.36" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (28,272,766 samples, 0.09%)</title><rect x="132.3" y="469" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="135.32" y="479.5" ></text>
</g>
<g >
<title>__libc_start_main (12,866,184,442 samples, 40.06%)</title><rect x="698.2" y="1157" width="472.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="701.21" y="1167.5" >__libc_start_main</text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (31,739,724 samples, 0.10%)</title><rect x="64.3" y="309" width="1.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="67.30" y="319.5" ></text>
</g>
<g >
<title>x86_pmu_enable (7,457,249 samples, 0.02%)</title><rect x="410.9" y="1077" width="0.3" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="413.89" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (34,231,120 samples, 0.11%)</title><rect x="1132.4" y="773" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1135.39" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,774,270 samples, 0.11%)</title><rect x="174.4" y="853" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="177.45" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (195,384,141 samples, 0.61%)</title><rect x="167.3" y="965" width="7.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="170.27" y="975.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (32,287,715 samples, 0.10%)</title><rect x="157.8" y="437" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="160.85" y="447.5" ></text>
</g>
<g >
<title>array_setstate (33,991,842 samples, 0.11%)</title><rect x="397.0" y="869" width="1.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="400.02" y="879.5" ></text>
</g>
<g >
<title>generic_permission (26,207,202 samples, 0.08%)</title><rect x="129.1" y="309" width="1.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="132.15" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,913 samples, 0.08%)</title><rect x="159.1" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.06" y="575.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (33,775,896 samples, 0.11%)</title><rect x="170.2" y="389" width="1.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="173.16" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="965" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="975.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,212,146 samples, 0.11%)</title><rect x="150.0" y="421" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="153.04" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,178,443 samples, 0.11%)</title><rect x="175.7" y="709" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="178.69" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,368 samples, 0.08%)</title><rect x="105.0" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (155,467,616 samples, 0.48%)</title><rect x="182.6" y="1013" width="5.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="185.57" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (93,033,323 samples, 0.29%)</title><rect x="175.7" y="885" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.69" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,915 samples, 0.08%)</title><rect x="95.2" y="629" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.24" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,983 samples, 0.08%)</title><rect x="189.2" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.25" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="885" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1170.43" y="895.5" ></text>
</g>
<g >
<title>_PyObject_Call (83,672,256 samples, 0.26%)</title><rect x="105.0" y="949" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.98" y="959.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,005,344 samples, 0.08%)</title><rect x="102.8" y="629" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="105.77" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (26,054,307 samples, 0.08%)</title><rect x="43.8" y="917" width="1.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="46.82" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (28,272,766 samples, 0.09%)</title><rect x="132.3" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.32" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (78,255,543 samples, 0.24%)</title><rect x="110.1" y="949" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="959.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,211,798 samples, 0.08%)</title><rect x="181.6" y="645" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="184.61" y="655.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (34,108,855 samples, 0.11%)</title><rect x="93.1" y="469" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="96.05" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (668,676,242 samples, 2.08%)</title><rect x="135.5" y="1125" width="24.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="1135.5" >[..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,269,741 samples, 0.16%)</title><rect x="727.7" y="789" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="730.66" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,521,120 samples, 0.10%)</title><rect x="151.3" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.30" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,317 samples, 0.08%)</title><rect x="35.6" y="821" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.55" y="831.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,315,304 samples, 0.19%)</title><rect x="46.0" y="581" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="49.03" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (52,246,175 samples, 0.16%)</title><rect x="817.9" y="821" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="820.89" y="831.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,123,073 samples, 0.10%)</title><rect x="101.6" y="837" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="104.55" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,868 samples, 0.08%)</title><rect x="119.3" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.33" y="495.5" ></text>
</g>
<g >
<title>_dl_map_segments (26,054,307 samples, 0.08%)</title><rect x="43.8" y="565" width="1.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="46.82" y="575.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,107,679 samples, 0.11%)</title><rect x="113.9" y="389" width="1.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="116.93" y="399.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (33,631,539 samples, 0.10%)</title><rect x="957.1" y="693" width="1.3" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="960.15" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (439,736,773 samples, 1.37%)</title><rect x="142.9" y="933" width="16.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,559 samples, 0.08%)</title><rect x="727.7" y="613" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="730.66" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (32,967,666 samples, 0.10%)</title><rect x="733.3" y="869" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="736.30" y="879.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (68,302,720 samples, 0.21%)</title><rect x="1113.6" y="693" width="2.5" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1116.60" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (2,174,593,621 samples, 6.77%)</title><rect x="738.0" y="741" width="79.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="740.98" y="751.5" >[python3...</text>
</g>
<g >
<title>[python3.12] (26,215,983 samples, 0.08%)</title><rect x="189.2" y="533" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.25" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (33,805,372 samples, 0.11%)</title><rect x="1161.2" y="805" width="1.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1164.16" y="815.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,320,178 samples, 0.10%)</title><rect x="85.7" y="821" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="88.70" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (23,069,911 samples, 0.07%)</title><rect x="726.8" y="725" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="729.81" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="645" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (68,369,576 samples, 0.21%)</title><rect x="1072.3" y="805" width="2.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1075.26" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,280 samples, 0.08%)</title><rect x="38.4" y="613" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="41.44" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (68,333,088 samples, 0.21%)</title><rect x="824.5" y="789" width="2.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="827.45" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (82,891,229 samples, 0.26%)</title><rect x="171.4" y="789" width="3.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="174.40" y="799.5" ></text>
</g>
<g >
<title>_dl_map_object (25,900,541 samples, 0.08%)</title><rect x="112.0" y="613" width="1.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="115.02" y="623.5" ></text>
</g>
<g >
<title>free_unref_page_commit (32,786,257 samples, 0.10%)</title><rect x="1180.0" y="933" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1183.00" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (76,869,173 samples, 0.24%)</title><rect x="185.5" y="613" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.46" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,422,000 samples, 0.16%)</title><rect x="98.7" y="949" width="1.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="101.71" y="959.5" ></text>
</g>
<g >
<title>__handle_mm_fault (26,207,779 samples, 0.08%)</title><rect x="126.3" y="341" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="129.26" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,232,961 samples, 0.08%)</title><rect x="115.2" y="613" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="118.19" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="901" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1170.43" y="911.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (54,964,377 samples, 0.17%)</title><rect x="88.8" y="949" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="91.85" y="959.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (179,935,509 samples, 0.56%)</title><rect x="411.2" y="1013" width="6.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="414.17" y="1023.5" ></text>
</g>
<g >
<title>mmap_region (25,900,541 samples, 0.08%)</title><rect x="112.0" y="437" width="1.0" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="115.02" y="447.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (34,140,846 samples, 0.11%)</title><rect x="116.1" y="773" width="1.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="119.15" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (78,631,358 samples, 0.24%)</title><rect x="36.5" y="1077" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="1087.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,255,543 samples, 0.24%)</title><rect x="110.1" y="997" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="113.10" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,320,178 samples, 0.10%)</title><rect x="85.7" y="837" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.70" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back (34,163,057 samples, 0.11%)</title><rect x="918.3" y="709" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="921.34" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,280 samples, 0.08%)</title><rect x="38.4" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.44" y="655.5" ></text>
</g>
<g >
<title>PyObject_Free (67,692,638 samples, 0.21%)</title><rect x="374.5" y="661" width="2.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="377.55" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (52,386,527 samples, 0.16%)</title><rect x="183.5" y="773" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.54" y="783.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (34,177,822 samples, 0.11%)</title><rect x="1048.5" y="789" width="1.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1051.49" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (2,354,369,162 samples, 7.33%)</title><rect x="733.3" y="917" width="86.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="736.30" y="927.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (34,107,679 samples, 0.11%)</title><rect x="113.9" y="821" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.93" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_S_key (34,012,322 samples, 0.11%)</title><rect x="1148.7" y="773" width="1.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1151.66" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,198,130 samples, 0.08%)</title><rect x="122.4" y="677" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.41" y="687.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,212,915 samples, 0.08%)</title><rect x="95.2" y="597" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="98.24" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,187,720 samples, 0.08%)</title><rect x="86.9" y="741" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="89.92" y="751.5" ></text>
</g>
<g >
<title>PyGC_Collect (167,733,615 samples, 0.52%)</title><rect x="698.2" y="1093" width="6.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="701.21" y="1103.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,607 samples, 0.08%)</title><rect x="108.1" y="533" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="111.06" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,320,178 samples, 0.10%)</title><rect x="85.7" y="1077" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.70" y="1087.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,798 samples, 0.08%)</title><rect x="181.6" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.61" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,115,976 samples, 0.08%)</title><rect x="100.6" y="757" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="103.63" y="767.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (101,745,453 samples, 0.32%)</title><rect x="367.1" y="629" width="3.7" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="370.05" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (34,212,146 samples, 0.11%)</title><rect x="150.0" y="565" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.04" y="575.5" ></text>
</g>
<g >
<title>PyList_Sort (26,213,248 samples, 0.08%)</title><rect x="190.2" y="725" width="1.0" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="193.21" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (439,736,773 samples, 1.37%)</title><rect x="142.9" y="949" width="16.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,049,651 samples, 0.21%)</title><rect x="96.2" y="613" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.20" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (20,525,387 samples, 0.06%)</title><rect x="135.5" y="581" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (25,900,541 samples, 0.08%)</title><rect x="112.0" y="757" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.02" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,774,270 samples, 0.11%)</title><rect x="174.4" y="805" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.45" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,036,950 samples, 0.11%)</title><rect x="105.9" y="517" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="108.94" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (86,359,156 samples, 0.27%)</title><rect x="154.7" y="661" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.67" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,916 samples, 0.08%)</title><rect x="182.6" y="821" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="185.57" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,900,541 samples, 0.08%)</title><rect x="112.0" y="821" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="115.02" y="831.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (34,030,261 samples, 0.11%)</title><rect x="1044.7" y="677" width="1.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1047.72" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,455 samples, 0.08%)</title><rect x="188.3" y="613" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.29" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,187,720 samples, 0.08%)</title><rect x="86.9" y="901" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="911.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,005,344 samples, 0.08%)</title><rect x="102.8" y="501" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="105.77" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,133,890 samples, 0.08%)</title><rect x="133.4" y="677" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="136.36" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (93,033,323 samples, 0.29%)</title><rect x="175.7" y="1013" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.69" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (202,723,556 samples, 0.63%)</title><rect x="135.5" y="693" width="7.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="138.46" y="703.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (26,208,267 samples, 0.08%)</title><rect x="176.9" y="245" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="179.94" y="255.5" ></text>
</g>
<g >
<title>__do_page_fault (34,107,679 samples, 0.11%)</title><rect x="113.9" y="437" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="116.93" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (131,919,136 samples, 0.41%)</title><rect x="1176.4" y="1141" width="4.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1179.35" y="1151.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,607 samples, 0.08%)</title><rect x="108.1" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.06" y="511.5" ></text>
</g>
<g >
<title>do_anonymous_page (476,862,152 samples, 1.48%)</title><rect x="349.5" y="549" width="17.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="352.53" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (76,869,173 samples, 0.24%)</title><rect x="185.5" y="645" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.46" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (491,266,251 samples, 1.53%)</title><rect x="117.4" y="1077" width="18.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="120.40" y="1087.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (135,646,428 samples, 0.42%)</title><rect x="258.5" y="677" width="5.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="261.50" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,317 samples, 0.08%)</title><rect x="35.6" y="517" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="38.55" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,496,862 samples, 0.16%)</title><rect x="117.4" y="645" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="120.40" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (227,199,597 samples, 0.71%)</title><rect x="53.1" y="597" width="8.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="56.08" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (128,575,815 samples, 0.40%)</title><rect x="44.8" y="997" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="47.78" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,140,617 samples, 0.21%)</title><rect x="72.8" y="549" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="75.75" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,916 samples, 0.08%)</title><rect x="182.6" y="597" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (434,372,141 samples, 1.35%)</title><rect x="49.5" y="933" width="16.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="52.50" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (155,467,616 samples, 0.48%)</title><rect x="182.6" y="1029" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,368 samples, 0.08%)</title><rect x="105.0" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,438 samples, 0.16%)</title><rect x="188.3" y="821" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.29" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (34,212,146 samples, 0.11%)</title><rect x="150.0" y="437" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.04" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,133,452 samples, 0.10%)</title><rect x="89.7" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.65" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (120,471,651 samples, 0.38%)</title><rect x="96.2" y="1093" width="4.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="99.20" y="1103.5" ></text>
</g>
<g >
<title>[python3.12] (60,238,318 samples, 0.19%)</title><rect x="105.0" y="613" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="623.5" ></text>
</g>
<g >
<title>copy_page (26,207,779 samples, 0.08%)</title><rect x="126.3" y="245" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="129.26" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (52,355,002 samples, 0.16%)</title><rect x="110.1" y="869" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="879.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (28,272,766 samples, 0.09%)</title><rect x="132.3" y="485" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="135.32" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,198,130 samples, 0.08%)</title><rect x="122.4" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.41" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (112,492,912 samples, 0.35%)</title><rect x="167.3" y="597" width="4.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="170.27" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (33,133,452 samples, 0.10%)</title><rect x="89.7" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.65" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,005,344 samples, 0.08%)</title><rect x="102.8" y="917" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.77" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (15,580,879 samples, 0.05%)</title><rect x="1171.0" y="1141" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1173.97" y="1151.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,190,262 samples, 0.08%)</title><rect x="39.4" y="773" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.40" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,986 samples, 0.08%)</title><rect x="65.5" y="917" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.46" y="927.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (68,203,714 samples, 0.21%)</title><rect x="1033.5" y="757" width="2.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1036.47" y="767.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (31,739,724 samples, 0.10%)</title><rect x="64.3" y="597" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="67.30" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,148 samples, 0.08%)</title><rect x="60.5" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.46" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="789" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (240,367,898 samples, 0.75%)</title><rect x="66.4" y="805" width="8.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.42" y="815.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (78,631,358 samples, 0.24%)</title><rect x="36.5" y="949" width="2.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="39.51" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,200,261 samples, 0.08%)</title><rect x="184.5" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.50" y="463.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (25,115,976 samples, 0.08%)</title><rect x="100.6" y="517" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="103.63" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (194,293,140 samples, 0.61%)</title><rect x="142.9" y="485" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="495.5" ></text>
</g>
<g >
<title>get_page_from_freelist (33,965,234 samples, 0.11%)</title><rect x="202.4" y="453" width="1.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="205.41" y="463.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,215,983 samples, 0.08%)</title><rect x="189.2" y="613" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="192.25" y="623.5" ></text>
</g>
<g >
<title>__do_page_fault (26,207,779 samples, 0.08%)</title><rect x="126.3" y="389" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="129.26" y="399.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (68,049,651 samples, 0.21%)</title><rect x="96.2" y="805" width="2.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="99.20" y="815.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (23,433,938 samples, 0.07%)</title><rect x="107.2" y="693" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="110.19" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (52,401,334 samples, 0.16%)</title><rect x="86.9" y="1061" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="1071.5" ></text>
</g>
<g >
<title>inflate (271,913,219 samples, 0.85%)</title><rect x="383.3" y="661" width="10.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="386.28" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (197,062,549 samples, 0.61%)</title><rect x="160.0" y="901" width="7.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="163.03" y="911.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,005,344 samples, 0.08%)</title><rect x="102.8" y="533" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="105.77" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (23,433,938 samples, 0.07%)</title><rect x="107.2" y="597" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.19" y="607.5" ></text>
</g>
<g >
<title>_int_free (26,204,497 samples, 0.08%)</title><rect x="32.7" y="1157" width="0.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="35.69" y="1167.5" ></text>
</g>
<g >
<title>[python3.12] (26,232,961 samples, 0.08%)</title><rect x="115.2" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.19" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,368 samples, 0.08%)</title><rect x="105.0" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.98" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,107,679 samples, 0.11%)</title><rect x="113.9" y="549" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.93" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (97,371,504 samples, 0.30%)</title><rect x="49.5" y="709" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.50" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,262 samples, 0.08%)</title><rect x="39.4" y="757" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.40" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::emplace_back&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (102,265,232 samples, 0.32%)</title><rect x="1102.3" y="789" width="3.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1105.32" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (52,355,002 samples, 0.16%)</title><rect x="110.1" y="661" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="671.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (25,644,292 samples, 0.08%)</title><rect x="63.4" y="661" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="66.35" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="629" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="639.5" ></text>
</g>
<g >
<title>memset@plt (33,275,088 samples, 0.10%)</title><rect x="730.8" y="933" width="1.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="733.82" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (197,062,549 samples, 0.61%)</title><rect x="160.0" y="853" width="7.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.03" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,798 samples, 0.08%)</title><rect x="181.6" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.61" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (25,921,141 samples, 0.08%)</title><rect x="34.6" y="1173" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="37.60" y="1183.5" ></text>
</g>
<g >
<title>_int_malloc (33,933,915 samples, 0.11%)</title><rect x="1091.1" y="613" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1094.07" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_do_relocate (33,928,531 samples, 0.11%)</title><rect x="1099.8" y="757" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1102.83" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,545 samples, 0.08%)</title><rect x="47.3" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="50.29" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,054,307 samples, 0.08%)</title><rect x="43.8" y="837" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.82" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (21,830,925 samples, 0.07%)</title><rect x="88.8" y="597" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="91.85" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (93,033,323 samples, 0.29%)</title><rect x="175.7" y="853" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.69" y="863.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (33,701,622 samples, 0.10%)</title><rect x="929.6" y="693" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="932.60" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (34,068,038 samples, 0.11%)</title><rect x="48.2" y="581" width="1.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="51.25" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (439,736,773 samples, 1.37%)</title><rect x="142.9" y="997" width="16.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.90" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,798 samples, 0.08%)</title><rect x="181.6" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.61" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (5,431,805,106 samples, 16.91%)</title><rect x="194.9" y="885" width="199.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.94" y="895.5" >[python3.12]</text>
</g>
<g >
<title>__GI___libc_free (34,139,482 samples, 0.11%)</title><rect x="1122.4" y="725" width="1.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1125.38" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,320,178 samples, 0.10%)</title><rect x="85.7" y="1093" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="88.70" y="1103.5" ></text>
</g>
<g >
<title>[python3.12] (31,977,548 samples, 0.10%)</title><rect x="160.0" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (439,736,773 samples, 1.37%)</title><rect x="142.9" y="965" width="16.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="145.90" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (34,192,473 samples, 0.11%)</title><rect x="44.8" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,148 samples, 0.08%)</title><rect x="60.5" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.46" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,107,679 samples, 0.11%)</title><rect x="113.9" y="773" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="116.93" y="783.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (165,085,001 samples, 0.51%)</title><rect x="161.2" y="613" width="6.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="164.20" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,005,344 samples, 0.08%)</title><rect x="102.8" y="933" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="105.77" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (508,542,012 samples, 1.58%)</title><rect x="705.6" y="1077" width="18.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="708.62" y="1087.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,107,679 samples, 0.11%)</title><rect x="113.9" y="645" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="116.93" y="655.5" ></text>
</g>
<g >
<title>clear_page_erms (33,979,119 samples, 0.11%)</title><rect x="130.1" y="341" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="133.11" y="351.5" ></text>
</g>
<g >
<title>do_page_fault (34,107,540 samples, 0.11%)</title><rect x="79.4" y="1077" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="82.39" y="1087.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (34,112,542 samples, 0.11%)</title><rect x="1171.5" y="1173" width="1.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1174.54" y="1183.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt; &gt; (34,110,399 samples, 0.11%)</title><rect x="1159.9" y="805" width="1.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1162.91" y="815.5" ></text>
</g>
<g >
<title>__do_munmap (25,900,541 samples, 0.08%)</title><rect x="112.0" y="421" width="1.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="115.02" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,142,413 samples, 0.11%)</title><rect x="103.7" y="1029" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.73" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (33,521,120 samples, 0.10%)</title><rect x="151.3" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.30" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (30,911,433 samples, 0.10%)</title><rect x="134.3" y="837" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="137.32" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,916 samples, 0.08%)</title><rect x="182.6" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.57" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (25,115,976 samples, 0.08%)</title><rect x="100.6" y="693" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.63" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (31,739,724 samples, 0.10%)</title><rect x="64.3" y="821" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.30" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,232,961 samples, 0.08%)</title><rect x="115.2" y="597" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.19" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,187,720 samples, 0.08%)</title><rect x="86.9" y="757" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="89.92" y="767.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (91,801,211 samples, 0.29%)</title><rect x="151.3" y="693" width="3.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="154.30" y="703.5" ></text>
</g>
<g >
<title>__tls_get_addr (34,081,457 samples, 0.11%)</title><rect x="398.3" y="885" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="401.27" y="895.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (82,891,229 samples, 0.26%)</title><rect x="171.4" y="645" width="3.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.40" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="789" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,213,614 samples, 0.08%)</title><rect x="87.9" y="693" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="90.89" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (33,510,882 samples, 0.10%)</title><rect x="71.5" y="469" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.52" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (112,492,912 samples, 0.35%)</title><rect x="167.3" y="757" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.27" y="767.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,176,192 samples, 0.11%)</title><rect x="930.8" y="677" width="1.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="933.84" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (97,371,504 samples, 0.30%)</title><rect x="49.5" y="613" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.50" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,115,206 samples, 0.11%)</title><rect x="74.0" y="533" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="77.00" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_erase (34,267,791 samples, 0.11%)</title><rect x="1149.9" y="789" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1152.91" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (76,869,173 samples, 0.24%)</title><rect x="185.5" y="709" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="188.46" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (2,174,593,621 samples, 6.77%)</title><rect x="738.0" y="757" width="79.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="740.98" y="767.5" >[python3...</text>
</g>
<g >
<title>_raw_spin_lock (6,850,402 samples, 0.02%)</title><rect x="418.0" y="981" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="420.99" y="991.5" ></text>
</g>
<g >
<title>PyArray_IntpFromSequence (33,991,842 samples, 0.11%)</title><rect x="397.0" y="853" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="400.02" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,115,206 samples, 0.11%)</title><rect x="74.0" y="469" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="77.00" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="533" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (82,891,229 samples, 0.26%)</title><rect x="171.4" y="565" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.40" y="575.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (26,214,607 samples, 0.08%)</title><rect x="108.1" y="389" width="0.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="111.06" y="399.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (26,213,083 samples, 0.08%)</title><rect x="53.1" y="549" width="0.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="56.08" y="559.5" ></text>
</g>
<g >
<title>new_sync_read (33,521,120 samples, 0.10%)</title><rect x="151.3" y="293" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="154.30" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (52,401,334 samples, 0.16%)</title><rect x="86.9" y="981" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="991.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (7,457,249 samples, 0.02%)</title><rect x="410.9" y="1093" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="413.89" y="1103.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,005,344 samples, 0.08%)</title><rect x="102.8" y="981" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="105.77" y="991.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator* (272,230,071 samples, 0.85%)</title><rect x="832.0" y="821" width="10.0" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="834.96" y="831.5" ></text>
</g>
<g >
<title>_PyUnicode_InternImmortal (32,066,320 samples, 0.10%)</title><rect x="152.5" y="405" width="1.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="155.53" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,614 samples, 0.08%)</title><rect x="87.9" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.89" y="463.5" ></text>
</g>
<g >
<title>operator new (34,127,788 samples, 0.11%)</title><rect x="1034.7" y="677" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1037.72" y="687.5" ></text>
</g>
<g >
<title>__do_page_fault (26,131,714 samples, 0.08%)</title><rect x="80.6" y="1061" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="83.65" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (86,630,626 samples, 0.27%)</title><rect x="29.5" y="1157" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.50" y="1167.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (24,901,898 samples, 0.08%)</title><rect x="819.8" y="901" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="822.81" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="869" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (34,107,540 samples, 0.11%)</title><rect x="79.4" y="1141" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.39" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (33,805,372 samples, 0.11%)</title><rect x="1161.2" y="757" width="1.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1164.16" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (33,865,447 samples, 0.11%)</title><rect x="69.3" y="437" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.31" y="447.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (34,066,465 samples, 0.11%)</title><rect x="840.7" y="645" width="1.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="843.71" y="655.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,422,000 samples, 0.16%)</title><rect x="98.7" y="629" width="1.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="101.71" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (55,566,826 samples, 0.17%)</title><rect x="108.1" y="645" width="2.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="111.06" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,774,270 samples, 0.11%)</title><rect x="174.4" y="741" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="177.45" y="751.5" ></text>
</g>
<g >
<title>alloc_pages_vma (31,319,746 samples, 0.10%)</title><rect x="806.9" y="469" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="809.95" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (32,287,715 samples, 0.10%)</title><rect x="157.8" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.85" y="511.5" ></text>
</g>
<g >
<title>__vfs_read (33,521,120 samples, 0.10%)</title><rect x="151.3" y="309" width="1.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="154.30" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,209,777 samples, 0.08%)</title><rect x="40.4" y="917" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="43.37" y="927.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (21,830,925 samples, 0.07%)</title><rect x="88.8" y="661" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="91.85" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,614 samples, 0.08%)</title><rect x="87.9" y="885" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.89" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,527 samples, 0.08%)</title><rect x="76.2" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.22" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,158,031 samples, 0.19%)</title><rect x="154.7" y="549" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="157.67" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,178,443 samples, 0.11%)</title><rect x="175.7" y="773" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.69" y="783.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (26,184,488 samples, 0.08%)</title><rect x="741.6" y="437" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="744.61" y="447.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,184,372 samples, 0.11%)</title><rect x="1067.3" y="741" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1070.27" y="751.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (34,078,551 samples, 0.11%)</title><rect x="915.8" y="677" width="1.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="918.83" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_valptr (33,607,153 samples, 0.10%)</title><rect x="1157.4" y="709" width="1.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1160.42" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,401,334 samples, 0.16%)</title><rect x="86.9" y="1077" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="89.92" y="1087.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,732 samples, 0.08%)</title><rect x="36.5" y="613" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="39.51" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (194,293,140 samples, 0.61%)</title><rect x="142.9" y="517" width="7.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.90" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,320,178 samples, 0.10%)</title><rect x="85.7" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.70" y="607.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (204,987,297 samples, 0.64%)</title><rect x="1111.1" y="773" width="7.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1114.09" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,107,679 samples, 0.11%)</title><rect x="113.9" y="789" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.93" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (91,801,211 samples, 0.29%)</title><rect x="151.3" y="597" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.30" y="607.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (170,254,145 samples, 0.53%)</title><rect x="998.4" y="693" width="6.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1001.40" y="703.5" ></text>
</g>
<g >
<title>_PyObject_Call (197,062,549 samples, 0.61%)</title><rect x="160.0" y="965" width="7.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="163.03" y="975.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (24,846,799 samples, 0.08%)</title><rect x="808.1" y="437" width="0.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="811.10" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="517" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (34,025,411 samples, 0.11%)</title><rect x="72.8" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.75" y="479.5" ></text>
</g>
<g >
<title>operator new (34,208,603 samples, 0.11%)</title><rect x="407.2" y="1157" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="410.17" y="1167.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (68,047,125 samples, 0.21%)</title><rect x="1049.7" y="789" width="2.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1052.75" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,049,651 samples, 0.21%)</title><rect x="96.2" y="533" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.20" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (519,254,283 samples, 1.62%)</title><rect x="160.0" y="1125" width="19.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="163.03" y="1135.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (182,198,169 samples, 0.57%)</title><rect x="136.2" y="613" width="6.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="139.21" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,209,777 samples, 0.08%)</title><rect x="40.4" y="837" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="43.37" y="847.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,187,720 samples, 0.08%)</title><rect x="86.9" y="485" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="89.92" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (174,773,976 samples, 0.54%)</title><rect x="55.0" y="549" width="6.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="58.00" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (93,033,323 samples, 0.29%)</title><rect x="175.7" y="965" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.69" y="975.5" ></text>
</g>
<g >
<title>handle_mm_fault (476,862,152 samples, 1.48%)</title><rect x="349.5" y="581" width="17.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="352.53" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (52,355,002 samples, 0.16%)</title><rect x="110.1" y="805" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,420,626 samples, 0.16%)</title><rect x="37.5" y="917" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="40.48" y="927.5" ></text>
</g>
<g >
<title>do_numa_page (35,988,363 samples, 0.11%)</title><rect x="59.1" y="341" width="1.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="62.14" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,798 samples, 0.08%)</title><rect x="181.6" y="613" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.61" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (83,672,256 samples, 0.26%)</title><rect x="105.0" y="885" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="107.98" y="895.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (67,901,592 samples, 0.21%)</title><rect x="1043.5" y="757" width="2.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1046.48" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,531,491 samples, 0.24%)</title><rect x="75.3" y="789" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="78.26" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (97,371,504 samples, 0.30%)</title><rect x="49.5" y="741" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="52.50" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (29,472,383 samples, 0.09%)</title><rect x="139.7" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.71" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,472,383 samples, 0.09%)</title><rect x="139.7" y="485" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="142.71" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,902,573,436 samples, 5.92%)</title><rect x="739.1" y="645" width="69.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="742.10" y="655.5" >_PyEval..</text>
</g>
<g >
<title>PyObject_Vectorcall (30,911,433 samples, 0.10%)</title><rect x="134.3" y="581" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="137.32" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,028 samples, 0.08%)</title><rect x="77.2" y="501" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="80.18" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,317 samples, 0.08%)</title><rect x="35.6" y="757" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="38.55" y="767.5" ></text>
</g>
<g >
<title>operator new (34,172,378 samples, 0.11%)</title><rect x="1074.8" y="613" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1077.77" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (82,891,229 samples, 0.26%)</title><rect x="171.4" y="709" width="3.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="174.40" y="719.5" ></text>
</g>
<g >
<title>page_fault (67,399,663 samples, 0.21%)</title><rect x="259.8" y="661" width="2.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="262.76" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,916 samples, 0.08%)</title><rect x="182.6" y="725" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="185.57" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (23,433,938 samples, 0.07%)</title><rect x="107.2" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.19" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,320,178 samples, 0.10%)</title><rect x="85.7" y="741" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.70" y="751.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,205,527 samples, 0.08%)</title><rect x="76.2" y="581" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="79.22" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (57,347,471 samples, 0.18%)</title><rect x="140.8" y="437" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.80" y="447.5" ></text>
</g>
<g >
<title>get_page_from_freelist (26,186,266 samples, 0.08%)</title><rect x="183.5" y="325" width="1.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="186.54" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (34,099,759 samples, 0.11%)</title><rect x="46.0" y="533" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.03" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,598,443 samples, 0.24%)</title><rect x="182.6" y="933" width="2.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="185.57" y="943.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::allocate (34,150,712 samples, 0.11%)</title><rect x="1088.6" y="757" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1091.57" y="767.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,774,270 samples, 0.11%)</title><rect x="174.4" y="1045" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="177.45" y="1055.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,196,850 samples, 0.21%)</title><rect x="179.1" y="725" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="182.10" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="597" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="607.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (26,211,798 samples, 0.08%)</title><rect x="181.6" y="405" width="1.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="184.61" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (34,091,857 samples, 0.11%)</title><rect x="967.2" y="581" width="1.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="970.16" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (34,025,411 samples, 0.11%)</title><rect x="72.8" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.75" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,115,976 samples, 0.08%)</title><rect x="100.6" y="789" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="103.63" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (68,203,714 samples, 0.21%)</title><rect x="1033.5" y="773" width="2.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1036.47" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Rb_tree (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="837" width="1.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1166.66" y="847.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::cpp_function&lt;std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;, IT_outputs, , pybind11::name, pybind11::is_method, pybind11::sibling&gt; (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="885" width="1.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1166.66" y="895.5" ></text>
</g>
<g >
<title>Py_CompileStringObject (26,211,798 samples, 0.08%)</title><rect x="181.6" y="549" width="1.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="184.61" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (23,069,911 samples, 0.07%)</title><rect x="726.8" y="709" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="729.81" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,280 samples, 0.08%)</title><rect x="38.4" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.44" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (491,266,251 samples, 1.53%)</title><rect x="117.4" y="1029" width="18.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (104,725,243 samples, 0.33%)</title><rect x="117.4" y="853" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="863.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (562,947,956 samples, 1.75%)</title><rect x="44.8" y="1013" width="20.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="47.78" y="1023.5" ></text>
</g>
<g >
<title>__dlopen (31,739,724 samples, 0.10%)</title><rect x="64.3" y="549" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="67.30" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (32,967,666 samples, 0.10%)</title><rect x="733.3" y="741" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="736.30" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (94,481,486 samples, 0.29%)</title><rect x="113.9" y="869" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.93" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (31,977,548 samples, 0.10%)</title><rect x="160.0" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallFunctionObjArgs (26,215,983 samples, 0.08%)</title><rect x="189.2" y="501" width="1.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="192.25" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,099,759 samples, 0.11%)</title><rect x="46.0" y="501" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="49.03" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (94,408,648 samples, 0.29%)</title><rect x="179.1" y="837" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,133,452 samples, 0.10%)</title><rect x="89.7" y="661" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="92.65" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (240,367,898 samples, 0.75%)</title><rect x="66.4" y="757" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.42" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (31,386,620 samples, 0.10%)</title><rect x="121.3" y="341" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="124.25" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (55,677,926 samples, 0.17%)</title><rect x="138.8" y="581" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.75" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (438,953,368 samples, 1.37%)</title><rect x="142.9" y="901" width="16.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.90" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,320,178 samples, 0.10%)</title><rect x="85.7" y="917" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.70" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="485" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="933" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,083 samples, 0.08%)</title><rect x="53.1" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.08" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,452 samples, 0.08%)</title><rect x="62.4" y="629" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.39" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,005,344 samples, 0.08%)</title><rect x="102.8" y="597" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.77" y="607.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (307,045,937 samples, 0.96%)</title><rect x="958.4" y="693" width="11.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="961.38" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,202,572 samples, 0.08%)</title><rect x="61.4" y="533" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="64.43" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (33,837,096 samples, 0.11%)</title><rect x="1129.9" y="757" width="1.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1132.90" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (52,355,002 samples, 0.16%)</title><rect x="110.1" y="677" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,213,614 samples, 0.08%)</title><rect x="87.9" y="789" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="90.89" y="799.5" ></text>
</g>
<g >
<title>__GI___libc_read (33,774,270 samples, 0.11%)</title><rect x="174.4" y="421" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="177.45" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (355,629,575 samples, 1.11%)</title><rect x="121.3" y="869" width="13.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="124.25" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (20,525,387 samples, 0.06%)</title><rect x="135.5" y="533" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.46" y="543.5" ></text>
</g>
<g >
<title>[algos.cpython-312-x86_64-linux-gnu.so] (26,131,714 samples, 0.08%)</title><rect x="80.6" y="1141" width="1.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="83.65" y="1151.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (66,845,496 samples, 0.21%)</title><rect x="50.6" y="549" width="2.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="53.62" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,420,626 samples, 0.16%)</title><rect x="37.5" y="693" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="40.48" y="703.5" ></text>
</g>
<g >
<title>std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::map (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="853" width="1.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1166.66" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (34,107,679 samples, 0.11%)</title><rect x="113.9" y="741" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.93" y="751.5" ></text>
</g>
<g >
<title>page_fault (26,186,266 samples, 0.08%)</title><rect x="183.5" y="469" width="1.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="186.54" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (34,066,465 samples, 0.11%)</title><rect x="840.7" y="725" width="1.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="843.71" y="735.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_edge&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (68,354,378 samples, 0.21%)</title><rect x="874.6" y="725" width="2.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="877.58" y="735.5" ></text>
</g>
<g >
<title>_PyLong_AsInt (34,042,290 samples, 0.11%)</title><rect x="166.0" y="437" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="169.02" y="447.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (31,739,724 samples, 0.10%)</title><rect x="64.3" y="789" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="67.30" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (34,140,846 samples, 0.11%)</title><rect x="116.1" y="613" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.15" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,208,317 samples, 0.08%)</title><rect x="35.6" y="869" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="38.55" y="879.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (54,964,377 samples, 0.17%)</title><rect x="88.8" y="821" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="91.85" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (54,964,377 samples, 0.17%)</title><rect x="88.8" y="981" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="91.85" y="991.5" ></text>
</g>
<g >
<title>PyEval_SaveThread (34,231,505 samples, 0.11%)</title><rect x="203.7" y="677" width="1.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="206.65" y="687.5" ></text>
</g>
<g >
<title>do_user_addr_fault (33,774,270 samples, 0.11%)</title><rect x="174.4" y="149" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="177.45" y="159.5" ></text>
</g>
<g >
<title>PyNumber_Multiply (25,810,639 samples, 0.08%)</title><rect x="92.1" y="485" width="1.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="95.10" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (5,670,297,534 samples, 17.66%)</title><rect x="191.2" y="1093" width="208.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="194.18" y="1103.5" >PyEval_EvalCode</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (120,190,804 samples, 0.37%)</title><rect x="39.4" y="1157" width="4.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="42.40" y="1167.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (145,151,908 samples, 0.45%)</title><rect x="144.7" y="325" width="5.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="147.71" y="335.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (195,384,141 samples, 0.61%)</title><rect x="167.3" y="869" width="7.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="170.27" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="565" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (228,505,286 samples, 0.71%)</title><rect x="142.9" y="805" width="8.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="145.90" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,422,000 samples, 0.16%)</title><rect x="98.7" y="933" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.71" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="629" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (94,481,486 samples, 0.29%)</title><rect x="113.9" y="949" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.93" y="959.5" ></text>
</g>
<g >
<title>[internals.cpython-312-x86_64-linux-gnu.so] (26,201,125 samples, 0.08%)</title><rect x="156.9" y="533" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="159.88" y="543.5" ></text>
</g>
<g >
<title>unmap_single_vma (12,600,670 samples, 0.04%)</title><rect x="417.8" y="1029" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="420.78" y="1039.5" ></text>
</g>
<g >
<title>boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;::property (34,001,235 samples, 0.11%)</title><rect x="848.2" y="805" width="1.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="851.24" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (434,372,141 samples, 1.35%)</title><rect x="49.5" y="949" width="16.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="52.50" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (240,367,898 samples, 0.75%)</title><rect x="66.4" y="645" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.42" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_vma (26,131,714 samples, 0.08%)</title><rect x="80.6" y="981" width="1.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="83.65" y="991.5" ></text>
</g>
<g >
<title>security_capable (26,207,202 samples, 0.08%)</title><rect x="129.1" y="261" width="1.0" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="132.15" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,422,000 samples, 0.16%)</title><rect x="98.7" y="757" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.71" y="767.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (31,319,746 samples, 0.10%)</title><rect x="806.9" y="453" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="809.95" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,510,882 samples, 0.10%)</title><rect x="71.5" y="501" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="74.52" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,346 samples, 0.08%)</title><rect x="37.5" y="613" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.48" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,028 samples, 0.08%)</title><rect x="77.2" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.18" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (75,339,652 samples, 0.23%)</title><rect x="726.8" y="933" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="729.81" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,545 samples, 0.08%)</title><rect x="47.3" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="50.29" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (52,386,527 samples, 0.16%)</title><rect x="183.5" y="677" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.54" y="687.5" ></text>
</g>
<g >
<title>scheduler_tick (33,775,896 samples, 0.11%)</title><rect x="170.2" y="325" width="1.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="173.16" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="645" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (112,492,912 samples, 0.35%)</title><rect x="167.3" y="853" width="4.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="170.27" y="863.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::~optional_base (34,256,754 samples, 0.11%)</title><rect x="847.0" y="789" width="1.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="849.99" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (120,190,804 samples, 0.37%)</title><rect x="39.4" y="1061" width="4.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.40" y="1071.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33,965,234 samples, 0.11%)</title><rect x="202.4" y="517" width="1.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="205.41" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,273,324 samples, 0.01%)</title><rect x="697.9" y="1077" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="700.88" y="1087.5" ></text>
</g>
<g >
<title>[python3.12] (32,967,666 samples, 0.10%)</title><rect x="733.3" y="821" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="736.30" y="831.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (26,192,715 samples, 0.08%)</title><rect x="110.1" y="405" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="113.10" y="415.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (57,347,471 samples, 0.18%)</title><rect x="140.8" y="453" width="2.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="143.80" y="463.5" ></text>
</g>
<g >
<title>[anon] (192,583,789 samples, 0.60%)</title><rect x="27.5" y="1173" width="7.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="30.52" y="1183.5" ></text>
</g>
<g >
<title>[python3.12] (58,854,880 samples, 0.18%)</title><rect x="176.9" y="677" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.94" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,049,651 samples, 0.21%)</title><rect x="96.2" y="597" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="99.20" y="607.5" ></text>
</g>
<g >
<title>get_page_from_freelist (26,131,714 samples, 0.08%)</title><rect x="80.6" y="949" width="1.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="83.65" y="959.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,133,890 samples, 0.08%)</title><rect x="133.4" y="517" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="136.36" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,187,720 samples, 0.08%)</title><rect x="86.9" y="709" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.92" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (91,801,211 samples, 0.29%)</title><rect x="151.3" y="533" width="3.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="154.30" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,005,344 samples, 0.08%)</title><rect x="102.8" y="565" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.77" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (78,531,491 samples, 0.24%)</title><rect x="75.3" y="757" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.26" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,210,732 samples, 0.08%)</title><rect x="36.5" y="741" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.51" y="751.5" ></text>
</g>
<g >
<title>clear_page_erms (26,186,266 samples, 0.08%)</title><rect x="183.5" y="309" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="186.54" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,538 samples, 0.08%)</title><rect x="54.0" y="533" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.04" y="543.5" ></text>
</g>
<g >
<title>do_anonymous_page (33,319,115 samples, 0.10%)</title><rect x="261.0" y="565" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="264.01" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,455 samples, 0.08%)</title><rect x="188.3" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.29" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,401,334 samples, 0.16%)</title><rect x="86.9" y="949" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="89.92" y="959.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (82,891,229 samples, 0.26%)</title><rect x="171.4" y="677" width="3.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="174.40" y="687.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (34,172,378 samples, 0.11%)</title><rect x="1074.8" y="725" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1077.77" y="735.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (31,739,724 samples, 0.10%)</title><rect x="64.3" y="293" width="1.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="67.30" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (68,049,651 samples, 0.21%)</title><rect x="96.2" y="853" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.20" y="863.5" ></text>
</g>
<g >
<title>_PyObject_Call (328,521,950 samples, 1.02%)</title><rect x="179.1" y="1157" width="12.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="182.10" y="1167.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,000 samples, 0.16%)</title><rect x="98.7" y="565" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.71" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,205,543 samples, 0.08%)</title><rect x="138.8" y="549" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.75" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (34,140,846 samples, 0.11%)</title><rect x="116.1" y="565" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.15" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,059,182 samples, 0.08%)</title><rect x="728.6" y="629" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="731.62" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="885" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (34,042,290 samples, 0.11%)</title><rect x="166.0" y="485" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.02" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,178,443 samples, 0.11%)</title><rect x="175.7" y="549" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.69" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,208,317 samples, 0.08%)</title><rect x="35.6" y="693" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="38.55" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,913 samples, 0.08%)</title><rect x="159.1" y="853" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="162.06" y="863.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (85,395,270 samples, 0.27%)</title><rect x="92.1" y="613" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="95.10" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,621,160 samples, 0.10%)</title><rect x="90.9" y="757" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.87" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_get_insert_equal_pos (136,381,490 samples, 0.42%)</title><rect x="1144.9" y="789" width="5.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1147.90" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,242,292 samples, 0.08%)</title><rect x="118.4" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.37" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (94,481,486 samples, 0.29%)</title><rect x="113.9" y="901" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.93" y="911.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;IT_outputs, Nexullance_IT_interface, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (9,333,234,366 samples, 29.06%)</title><rect x="820.7" y="933" width="343.0" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="823.72" y="943.5" >pybind11::cpp_function::initialize&lt;pybind11::c..</text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_valptr (68,205,334 samples, 0.21%)</title><rect x="1154.9" y="709" width="2.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1157.92" y="719.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::destroy (34,256,754 samples, 0.11%)</title><rect x="847.0" y="773" width="1.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="849.99" y="783.5" ></text>
</g>
<g >
<title>page_fault (34,108,855 samples, 0.11%)</title><rect x="93.1" y="421" width="1.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="96.05" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (25,644,292 samples, 0.08%)</title><rect x="63.4" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.35" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (97,371,504 samples, 0.30%)</title><rect x="49.5" y="821" width="3.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="52.50" y="831.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator!= (68,305,508 samples, 0.21%)</title><rect x="829.5" y="821" width="2.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="832.45" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,029 samples, 0.08%)</title><rect x="161.2" y="533" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="164.20" y="543.5" ></text>
</g>
<g >
<title>_dlerror_run (25,900,541 samples, 0.08%)</title><rect x="112.0" y="725" width="1.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="115.02" y="735.5" ></text>
</g>
<g >
<title>page_fault (26,207,779 samples, 0.08%)</title><rect x="126.3" y="421" width="0.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="129.26" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (34,237,754 samples, 0.11%)</title><rect x="932.1" y="661" width="1.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="935.10" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (33,621,160 samples, 0.10%)</title><rect x="90.9" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.87" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,777 samples, 0.08%)</title><rect x="40.4" y="789" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="43.37" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (305,260,913 samples, 0.95%)</title><rect x="53.1" y="773" width="11.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="56.08" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (78,531,491 samples, 0.24%)</title><rect x="75.3" y="869" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.26" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (68,196,850 samples, 0.21%)</title><rect x="179.1" y="485" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.10" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (67,455,994 samples, 0.21%)</title><rect x="880.8" y="709" width="2.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="883.84" y="719.5" ></text>
</g>
<g >
<title>__do_page_fault (30,414,171 samples, 0.09%)</title><rect x="738.0" y="597" width="1.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="740.98" y="607.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (32,287,715 samples, 0.10%)</title><rect x="157.8" y="661" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="160.85" y="671.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,205,543 samples, 0.08%)</title><rect x="138.8" y="533" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="141.75" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (104,725,243 samples, 0.33%)</title><rect x="117.4" y="741" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.40" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (96,310,069 samples, 0.30%)</title><rect x="1167.4" y="773" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.43" y="783.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,107,540 samples, 0.11%)</title><rect x="79.4" y="1029" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="82.39" y="1039.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (197,062,549 samples, 0.61%)</title><rect x="160.0" y="677" width="7.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.03" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,868 samples, 0.08%)</title><rect x="119.3" y="661" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.33" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,005,344 samples, 0.08%)</title><rect x="102.8" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.77" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,614 samples, 0.08%)</title><rect x="87.9" y="645" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.89" y="655.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (15,580,879 samples, 0.05%)</title><rect x="1171.0" y="1125" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1173.97" y="1135.5" ></text>
</g>
<g >
<title>__libc_calloc (26,215,545 samples, 0.08%)</title><rect x="47.3" y="421" width="0.9" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="50.29" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (34,127,788 samples, 0.11%)</title><rect x="1034.7" y="709" width="1.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1037.72" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (491,266,251 samples, 1.53%)</title><rect x="117.4" y="1061" width="18.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="120.40" y="1071.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (589,153,942 samples, 1.83%)</title><rect x="44.8" y="1029" width="21.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="47.78" y="1039.5" >_..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (33,933,915 samples, 0.11%)</title><rect x="1091.1" y="661" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1094.07" y="671.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,083 samples, 0.08%)</title><rect x="53.1" y="437" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="56.08" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (491,266,251 samples, 1.53%)</title><rect x="117.4" y="1045" width="18.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="120.40" y="1055.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,355,002 samples, 0.16%)</title><rect x="110.1" y="645" width="1.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="113.10" y="655.5" ></text>
</g>
<g >
<title>__GI___default_morecore (31,386,620 samples, 0.10%)</title><rect x="121.3" y="421" width="1.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="124.25" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (34,142,413 samples, 0.11%)</title><rect x="103.7" y="1013" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.73" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (94,481,486 samples, 0.29%)</title><rect x="113.9" y="1029" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.93" y="1039.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (240,367,898 samples, 0.75%)</title><rect x="66.4" y="869" width="8.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="69.42" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (192,536,179 samples, 0.60%)</title><rect x="411.2" y="1077" width="7.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="414.17" y="1087.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,187,720 samples, 0.08%)</title><rect x="86.9" y="501" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="89.92" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,200,261 samples, 0.08%)</title><rect x="184.5" y="629" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="187.50" y="639.5" ></text>
</g>
<g >
<title>PyDict_Copy (26,232,961 samples, 0.08%)</title><rect x="115.2" y="469" width="0.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="118.19" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;::pair (33,999,499 samples, 0.11%)</title><rect x="1163.7" y="645" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1166.66" y="655.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (78,598,443 samples, 0.24%)</title><rect x="182.6" y="901" width="2.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="185.57" y="911.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Deque_impl::_Deque_impl (34,051,024 samples, 0.11%)</title><rect x="1066.0" y="757" width="1.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1069.02" y="767.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (67,455,994 samples, 0.21%)</title><rect x="880.8" y="725" width="2.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="883.84" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,320,178 samples, 0.10%)</title><rect x="85.7" y="757" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="88.70" y="767.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (34,142,413 samples, 0.11%)</title><rect x="103.7" y="1077" width="1.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="106.73" y="1087.5" ></text>
</g>
<g >
<title>[python3.12] (29,472,383 samples, 0.09%)</title><rect x="139.7" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.71" y="527.5" ></text>
</g>
<g >
<title>free_unref_page_list (32,786,257 samples, 0.10%)</title><rect x="1180.0" y="949" width="1.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1183.00" y="959.5" ></text>
</g>
<g >
<title>inflate (60,431,665 samples, 0.19%)</title><rect x="815.7" y="597" width="2.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="818.67" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,081,457 samples, 0.11%)</title><rect x="398.3" y="933" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="401.27" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,732 samples, 0.08%)</title><rect x="36.5" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.51" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (908,053,331 samples, 2.83%)</title><rect x="44.8" y="1077" width="33.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.78" y="1087.5" >[p..</text>
</g>
<g >
<title>[python3.12] (26,054,307 samples, 0.08%)</title><rect x="43.8" y="773" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.82" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (33,123,073 samples, 0.10%)</title><rect x="101.6" y="965" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.55" y="975.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (93,033,323 samples, 0.29%)</title><rect x="175.7" y="949" width="3.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="178.69" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (52,355,002 samples, 0.16%)</title><rect x="110.1" y="485" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.10" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (23,433,938 samples, 0.07%)</title><rect x="107.2" y="645" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.19" y="655.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,213,083 samples, 0.08%)</title><rect x="53.1" y="469" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="56.08" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (52,420,626 samples, 0.16%)</title><rect x="37.5" y="933" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.48" y="943.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,190,262 samples, 0.08%)</title><rect x="39.4" y="725" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="42.40" y="735.5" ></text>
</g>
<g >
<title>page_fault (33,979,119 samples, 0.11%)</title><rect x="130.1" y="501" width="1.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="133.11" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (182,198,169 samples, 0.57%)</title><rect x="136.2" y="677" width="6.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="139.21" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (34,025,411 samples, 0.11%)</title><rect x="72.8" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.75" y="495.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (1,902,573,436 samples, 5.92%)</title><rect x="739.1" y="677" width="69.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="742.10" y="687.5" >PyObjec..</text>
</g>
<g >
<title>[python3.12] (21,830,925 samples, 0.07%)</title><rect x="88.8" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (76,869,173 samples, 0.24%)</title><rect x="185.5" y="501" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="188.46" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (135,889,641 samples, 0.42%)</title><rect x="1152.4" y="789" width="5.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1155.43" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,865,447 samples, 0.11%)</title><rect x="69.3" y="485" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.31" y="495.5" ></text>
</g>
<g >
<title>do_anonymous_page (26,186,266 samples, 0.08%)</title><rect x="183.5" y="373" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="186.54" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (93,033,323 samples, 0.29%)</title><rect x="175.7" y="901" width="3.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="178.69" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,607 samples, 0.08%)</title><rect x="108.1" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.06" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (197,062,549 samples, 0.61%)</title><rect x="160.0" y="709" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.03" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,545 samples, 0.08%)</title><rect x="47.3" y="517" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="50.29" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (49,141,232 samples, 0.15%)</title><rect x="142.9" y="453" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,916 samples, 0.08%)</title><rect x="182.6" y="693" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="185.57" y="703.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (34,099,759 samples, 0.11%)</title><rect x="46.0" y="549" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="49.03" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,646,613 samples, 0.10%)</title><rect x="177.9" y="437" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="180.91" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,133,452 samples, 0.10%)</title><rect x="89.7" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="92.65" y="495.5" ></text>
</g>
<g >
<title>do_anonymous_page (33,965,234 samples, 0.11%)</title><rect x="202.4" y="501" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="205.41" y="511.5" ></text>
</g>
<g >
<title>_int_malloc (26,184,488 samples, 0.08%)</title><rect x="741.6" y="565" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="744.61" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (155,467,616 samples, 0.48%)</title><rect x="182.6" y="997" width="5.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="185.57" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,355,002 samples, 0.16%)</title><rect x="110.1" y="709" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="113.10" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,777 samples, 0.08%)</title><rect x="40.4" y="581" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="43.37" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (34,253,335 samples, 0.11%)</title><rect x="1143.6" y="789" width="1.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1146.64" y="799.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,255,543 samples, 0.24%)</title><rect x="110.1" y="933" width="2.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="113.10" y="943.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,212,280 samples, 0.08%)</title><rect x="38.4" y="597" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="41.44" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,190,477 samples, 0.08%)</title><rect x="131.4" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.36" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,111,936 samples, 0.08%)</title><rect x="75.3" y="645" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="78.26" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (145,229,345 samples, 0.45%)</title><rect x="90.9" y="885" width="5.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.87" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (194,293,140 samples, 0.61%)</title><rect x="142.9" y="501" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.90" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (21,830,925 samples, 0.07%)</title><rect x="88.8" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.85" y="639.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,190,262 samples, 0.08%)</title><rect x="39.4" y="645" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="42.40" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (30,911,433 samples, 0.10%)</title><rect x="134.3" y="677" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.32" y="687.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_edge&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (34,163,653 samples, 0.11%)</title><rect x="15.0" y="1157" width="1.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="18.01" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (68,026,918 samples, 0.21%)</title><rect x="1133.7" y="773" width="2.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1136.65" y="783.5" ></text>
</g>
<g >
<title>Py_CompileStringObject (26,205,527 samples, 0.08%)</title><rect x="76.2" y="485" width="1.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="79.22" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,200,261 samples, 0.08%)</title><rect x="184.5" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.50" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,248 samples, 0.08%)</title><rect x="190.2" y="837" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="193.21" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (34,042,290 samples, 0.11%)</title><rect x="166.0" y="565" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.02" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,432,438 samples, 0.16%)</title><rect x="188.3" y="741" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="191.29" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,005,344 samples, 0.08%)</title><rect x="102.8" y="581" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="105.77" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,273,324 samples, 0.01%)</title><rect x="697.9" y="1093" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="700.88" y="1103.5" ></text>
</g>
<g >
<title>_PyObject_Call (195,384,141 samples, 0.61%)</title><rect x="167.3" y="949" width="7.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="170.27" y="959.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (148,565,828 samples, 0.46%)</title><rect x="55.0" y="517" width="5.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="58.00" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (135,889,641 samples, 0.42%)</title><rect x="1152.4" y="773" width="5.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1155.43" y="783.5" ></text>
</g>
<g >
<title>page_fault (34,107,679 samples, 0.11%)</title><rect x="113.9" y="469" width="1.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="116.93" y="479.5" ></text>
</g>
</g>
</svg>
