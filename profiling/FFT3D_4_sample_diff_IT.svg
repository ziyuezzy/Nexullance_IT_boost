<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1110.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1093" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1093" > </text>
<g id="frames">
<g >
<title>[python3.12] (26,217,951 samples, 0.08%)</title><rect x="105.4" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,883,915 samples, 0.10%)</title><rect x="537.5" y="821" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="540.48" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (63,006,133 samples, 0.18%)</title><rect x="131.8" y="709" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.83" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,506 samples, 0.08%)</title><rect x="135.8" y="517" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.76" y="527.5" ></text>
</g>
<g >
<title>unmap_region (33,925,019 samples, 0.10%)</title><rect x="528.1" y="741" width="1.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="531.10" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3,780,530 samples, 0.01%)</title><rect x="1174.3" y="997" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1177.27" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="277" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="287.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,123,863 samples, 0.10%)</title><rect x="130.7" y="597" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="133.67" y="607.5" ></text>
</g>
<g >
<title>_PyObject_LookupAttr (33,237,493 samples, 0.10%)</title><rect x="141.6" y="325" width="1.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="144.61" y="335.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,129,470 samples, 0.08%)</title><rect x="134.0" y="789" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="136.97" y="799.5" ></text>
</g>
<g >
<title>free_unref_page_commit (67,534,621 samples, 0.19%)</title><rect x="1172.0" y="789" width="2.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1174.97" y="799.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (63,006,133 samples, 0.18%)</title><rect x="131.8" y="613" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="134.83" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (33,676,455 samples, 0.10%)</title><rect x="147.4" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.45" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (34,102,824 samples, 0.10%)</title><rect x="121.0" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.99" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,116 samples, 0.08%)</title><rect x="192.0" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.99" y="447.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,682,193 samples, 0.10%)</title><rect x="119.8" y="549" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="122.84" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,429,517 samples, 0.15%)</title><rect x="110.8" y="533" width="1.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="113.82" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (27,666,663 samples, 0.08%)</title><rect x="129.7" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.73" y="495.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,129,470 samples, 0.08%)</title><rect x="134.0" y="341" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="136.97" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (377,112,606 samples, 1.08%)</title><rect x="69.2" y="837" width="12.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.23" y="847.5" ></text>
</g>
<g >
<title>[interval.cpython-312-x86_64-linux-gnu.so] (26,157,411 samples, 0.08%)</title><rect x="60.0" y="453" width="0.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="62.99" y="463.5" ></text>
</g>
<g >
<title>PyArray_SetBaseObject (33,529,779 samples, 0.10%)</title><rect x="61.8" y="757" width="1.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="64.77" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (34,123,863 samples, 0.10%)</title><rect x="130.7" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.67" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,449,576 samples, 0.15%)</title><rect x="67.5" y="805" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="70.45" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,449,828 samples, 0.10%)</title><rect x="181.9" y="949" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.90" y="959.5" ></text>
</g>
<g >
<title>_int_malloc (26,465,893 samples, 0.08%)</title><rect x="183.9" y="357" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="186.94" y="367.5" ></text>
</g>
<g >
<title>__getblk_gfp (33,449,828 samples, 0.10%)</title><rect x="181.9" y="101" width="1.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="184.90" y="111.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,420 samples, 0.08%)</title><rect x="148.6" y="741" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.59" y="751.5" ></text>
</g>
<g >
<title>std::hash&lt;unsigned long&gt;::operator (34,108,281 samples, 0.10%)</title><rect x="1150.6" y="613" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1153.65" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (33,682,193 samples, 0.10%)</title><rect x="119.8" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.84" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,575 samples, 0.08%)</title><rect x="123.9" y="773" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="126.93" y="783.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,449,828 samples, 0.10%)</title><rect x="181.9" y="581" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="184.90" y="591.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (34,137,240 samples, 0.10%)</title><rect x="904.6" y="517" width="1.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="907.61" y="527.5" ></text>
</g>
<g >
<title>__handle_mm_fault (28,349,249 samples, 0.08%)</title><rect x="72.4" y="277" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="75.43" y="287.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (34,117,307 samples, 0.10%)</title><rect x="538.6" y="677" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="541.63" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (34,187,317 samples, 0.10%)</title><rect x="866.4" y="533" width="1.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="869.44" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (52,428,438 samples, 0.15%)</title><rect x="530.4" y="325" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.43" y="335.5" ></text>
</g>
<g >
<title>PyArray_ToList (67,725,214 samples, 0.19%)</title><rect x="85.2" y="309" width="2.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="88.18" y="319.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (101,846,038 samples, 0.29%)</title><rect x="875.7" y="533" width="3.5" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="878.70" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (52,587,326 samples, 0.15%)</title><rect x="122.1" y="725" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.14" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,278,931 samples, 0.08%)</title><rect x="150.5" y="853" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.46" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,732 samples, 0.08%)</title><rect x="103.6" y="357" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.60" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (27,174,690 samples, 0.08%)</title><rect x="161.2" y="229" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="164.19" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (68,334,394 samples, 0.20%)</title><rect x="1126.4" y="613" width="2.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1129.36" y="623.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (32,189,412 samples, 0.09%)</title><rect x="109.7" y="293" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="112.73" y="303.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (18,542,365,970 samples, 53.35%)</title><rect x="530.4" y="949" width="629.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="533.41" y="959.5" >_PyRun_SimpleFileObject</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,575 samples, 0.08%)</title><rect x="123.9" y="629" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="126.93" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,209,825 samples, 0.08%)</title><rect x="118.9" y="757" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="121.90" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (33,682,193 samples, 0.10%)</title><rect x="119.8" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.84" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,244,854 samples, 0.08%)</title><rect x="181.0" y="421" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.01" y="431.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (34,079,130 samples, 0.10%)</title><rect x="961.3" y="485" width="1.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="964.29" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="789" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,004,184 samples, 0.07%)</title><rect x="98.0" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.00" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,547,019 samples, 0.08%)</title><rect x="192.9" y="645" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.88" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,547,019 samples, 0.08%)</title><rect x="192.9" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.88" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (69,278,347 samples, 0.20%)</title><rect x="119.8" y="613" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.79" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,528 samples, 0.08%)</title><rect x="104.5" y="901" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="107.49" y="911.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (29,004,945 samples, 0.08%)</title><rect x="149.5" y="341" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="152.48" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,376,332 samples, 0.09%)</title><rect x="177.1" y="437" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="180.11" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (153,672,736 samples, 0.44%)</title><rect x="85.2" y="677" width="5.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.18" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (100,614,998 samples, 0.29%)</title><rect x="62.9" y="629" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="65.90" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,449,576 samples, 0.15%)</title><rect x="67.5" y="725" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="70.45" y="735.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (68,024,544 samples, 0.20%)</title><rect x="888.4" y="469" width="2.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="891.42" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (134,177,130 samples, 0.39%)</title><rect x="109.7" y="741" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.73" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (85,762,981 samples, 0.25%)</title><rect x="60.0" y="837" width="2.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="62.99" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,405,974 samples, 0.08%)</title><rect x="123.0" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.03" y="367.5" ></text>
</g>
<g >
<title>change_pte_range (33,950,108 samples, 0.10%)</title><rect x="643.6" y="325" width="1.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="646.55" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,129,470 samples, 0.08%)</title><rect x="134.0" y="453" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="136.97" y="463.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,205,595 samples, 0.08%)</title><rect x="89.5" y="405" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="92.51" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (169,573,750 samples, 0.49%)</title><rect x="549.0" y="437" width="5.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="551.99" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (63,006,133 samples, 0.18%)</title><rect x="131.8" y="549" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="134.83" y="559.5" ></text>
</g>
<g >
<title>page_fault (34,117,307 samples, 0.10%)</title><rect x="538.6" y="517" width="1.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="541.63" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,329,111 samples, 0.10%)</title><rect x="174.8" y="885" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.82" y="895.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,461,466 samples, 0.15%)</title><rect x="93.3" y="341" width="1.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="96.31" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (157,066,149 samples, 0.45%)</title><rect x="50.8" y="1013" width="5.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="53.76" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,123,863 samples, 0.10%)</title><rect x="130.7" y="693" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="133.67" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,257,327 samples, 0.08%)</title><rect x="173.1" y="421" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="176.05" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,429,517 samples, 0.15%)</title><rect x="110.8" y="517" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="113.82" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (53,156,961 samples, 0.15%)</title><rect x="123.9" y="965" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="126.93" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="421" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;float const, unsigned long&gt; &gt;::_M_addr (33,541,454 samples, 0.10%)</title><rect x="1143.7" y="565" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1146.70" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (34,092,675 samples, 0.10%)</title><rect x="935.8" y="517" width="1.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="938.83" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (27,666,663 samples, 0.08%)</title><rect x="129.7" y="565" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="132.73" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,244,854 samples, 0.08%)</title><rect x="181.0" y="309" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.01" y="319.5" ></text>
</g>
<g >
<title>_PyCode_New (63,006,133 samples, 0.18%)</title><rect x="131.8" y="373" width="2.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="134.83" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (128,216,512 samples, 0.37%)</title><rect x="105.4" y="629" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,233,202 samples, 0.15%)</title><rect x="60.0" y="805" width="1.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="62.99" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (34,220,794 samples, 0.10%)</title><rect x="137.5" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.54" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (33,469,038 samples, 0.10%)</title><rect x="90.4" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.40" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (29,004,945 samples, 0.08%)</title><rect x="149.5" y="837" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="152.48" y="847.5" ></text>
</g>
<g >
<title>_PyObject_CallMethod (7,651,198,344 samples, 22.01%)</title><rect x="546.7" y="629" width="259.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="549.68" y="639.5" >_PyObject_CallMethod</text>
</g>
<g >
<title>PyObject_Vectorcall (34,220,794 samples, 0.10%)</title><rect x="137.5" y="325" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="140.54" y="335.5" ></text>
</g>
<g >
<title>task_numa_work (34,170,051 samples, 0.10%)</title><rect x="777.9" y="373" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="780.87" y="383.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (34,006,018 samples, 0.10%)</title><rect x="948.6" y="517" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="951.57" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,796 samples, 0.15%)</title><rect x="189.3" y="341" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.32" y="351.5" ></text>
</g>
<g >
<title>PyArray_NewFromDescr_int (33,529,779 samples, 0.10%)</title><rect x="61.8" y="773" width="1.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="64.77" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,123,863 samples, 0.10%)</title><rect x="130.7" y="741" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="133.67" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (568,701,687 samples, 1.64%)</title><rect x="784.8" y="469" width="19.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="787.82" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,106,052 samples, 0.10%)</title><rect x="176.0" y="597" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.95" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (32,932,509 samples, 0.09%)</title><rect x="813.4" y="661" width="1.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="816.36" y="671.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (291,270,439 samples, 0.84%)</title><rect x="138.7" y="645" width="9.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="141.70" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,449,828 samples, 0.10%)</title><rect x="181.9" y="821" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="184.90" y="831.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (32,189,412 samples, 0.09%)</title><rect x="109.7" y="389" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="112.73" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (159,139,959 samples, 0.46%)</title><rect x="183.0" y="709" width="5.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="186.03" y="719.5" ></text>
</g>
<g >
<title>[timedeltas.cpython-312-x86_64-linux-gnu.so] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="773" width="0.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="136.97" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::new_allocator (34,149,566 samples, 0.10%)</title><rect x="1081.3" y="517" width="1.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1084.26" y="527.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT::diff_Nexullance_IT (32,932,509 samples, 0.09%)</title><rect x="813.4" y="693" width="1.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="816.36" y="703.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,429,517 samples, 0.15%)</title><rect x="110.8" y="453" width="1.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="113.82" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,449,576 samples, 0.15%)</title><rect x="67.5" y="789" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.45" y="799.5" ></text>
</g>
<g >
<title>page_fault (36,796,981 samples, 0.11%)</title><rect x="132.7" y="325" width="1.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="135.72" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,547,019 samples, 0.08%)</title><rect x="192.9" y="453" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="195.88" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_range_initialize&lt;unsigned long const*&gt; (34,217,585 samples, 0.10%)</title><rect x="1133.3" y="629" width="1.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1136.32" y="639.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (34,278,629 samples, 0.10%)</title><rect x="1129.8" y="549" width="1.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1132.84" y="559.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (33,469,038 samples, 0.10%)</title><rect x="90.4" y="277" width="1.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="93.40" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (33,237,493 samples, 0.10%)</title><rect x="141.6" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.61" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,288,574 samples, 0.20%)</title><rect x="807.6" y="677" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="810.58" y="687.5" ></text>
</g>
<g >
<title>PyArray_AssignRawScalar (33,377,852 samples, 0.10%)</title><rect x="66.3" y="805" width="1.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="69.32" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,217,823 samples, 0.08%)</title><rect x="162.1" y="501" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.12" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,247,899 samples, 0.08%)</title><rect x="68.3" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.34" y="367.5" ></text>
</g>
<g >
<title>PyVectorcall_Call (26,004,184 samples, 0.07%)</title><rect x="98.0" y="309" width="0.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="101.00" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,162,268 samples, 0.10%)</title><rect x="69.2" y="421" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.23" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (102,201,238 samples, 0.29%)</title><rect x="867.6" y="533" width="3.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="870.60" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,373 samples, 0.08%)</title><rect x="184.8" y="293" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="187.84" y="303.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,021,264 samples, 0.10%)</title><rect x="868.8" y="517" width="1.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="871.76" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (85,827,428 samples, 0.25%)</title><rect x="66.3" y="981" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="69.32" y="991.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (205,678,842 samples, 0.59%)</title><rect x="141.6" y="501" width="7.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="144.61" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (159,139,959 samples, 0.46%)</title><rect x="183.0" y="693" width="5.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="186.03" y="703.5" ></text>
</g>
<g >
<title>_PyDict_GetItem_KnownHash (26,210,575 samples, 0.08%)</title><rect x="123.9" y="277" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="126.93" y="287.5" ></text>
</g>
<g >
<title>dl_open_worker (49,777,937 samples, 0.14%)</title><rect x="202.2" y="469" width="1.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="205.24" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (85,626,136 samples, 0.25%)</title><rect x="93.3" y="597" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="96.31" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,278,931 samples, 0.08%)</title><rect x="150.5" y="981" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.46" y="991.5" ></text>
</g>
<g >
<title>_PyUnicode_JoinArray (34,220,794 samples, 0.10%)</title><rect x="137.5" y="245" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="140.54" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (52,429,517 samples, 0.15%)</title><rect x="110.8" y="485" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.82" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (100,614,998 samples, 0.29%)</title><rect x="62.9" y="741" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="65.90" y="751.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,506 samples, 0.08%)</title><rect x="135.8" y="469" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="138.76" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,127,559 samples, 0.10%)</title><rect x="126.6" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.62" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (102,108,673 samples, 0.29%)</title><rect x="193.8" y="629" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="196.78" y="639.5" ></text>
</g>
<g >
<title>_convert_from_str (34,156,159 samples, 0.10%)</title><rect x="811.0" y="613" width="1.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="814.05" y="623.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,205,595 samples, 0.08%)</title><rect x="89.5" y="357" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="92.51" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (67,940,809 samples, 0.20%)</title><rect x="107.4" y="453" width="2.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="110.42" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,329,111 samples, 0.10%)</title><rect x="174.8" y="709" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.82" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (49,558,201 samples, 0.14%)</title><rect x="112.6" y="597" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.60" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="133" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (26,279,161 samples, 0.08%)</title><rect x="125.7" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,428,438 samples, 0.15%)</title><rect x="530.4" y="357" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="533.43" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (52,390,467 samples, 0.15%)</title><rect x="197.3" y="533" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.25" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,279,161 samples, 0.08%)</title><rect x="125.7" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,129,470 samples, 0.08%)</title><rect x="134.0" y="869" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="136.97" y="879.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,220,276 samples, 0.20%)</title><rect x="199.9" y="885" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="202.92" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,217,823 samples, 0.08%)</title><rect x="162.1" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="165.12" y="543.5" ></text>
</g>
<g >
<title>[timedeltas.cpython-312-x86_64-linux-gnu.so] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="757" width="0.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="136.97" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,268 samples, 0.08%)</title><rect x="88.6" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.61" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (27,666,663 samples, 0.08%)</title><rect x="129.7" y="437" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="132.73" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (131,042,499 samples, 0.38%)</title><rect x="188.4" y="837" width="4.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="191.43" y="847.5" ></text>
</g>
<g >
<title>do_anonymous_page (33,641,241 samples, 0.10%)</title><rect x="154.3" y="213" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="157.29" y="223.5" ></text>
</g>
<g >
<title>map_vdso (15,855,993 samples, 0.05%)</title><rect x="1169.1" y="901" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1172.15" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,244,854 samples, 0.08%)</title><rect x="181.0" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.01" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,592,773 samples, 0.08%)</title><rect x="134.9" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="399.5" ></text>
</g>
<g >
<title>array__reconstruct (34,156,159 samples, 0.10%)</title><rect x="811.0" y="693" width="1.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="814.05" y="703.5" ></text>
</g>
<g >
<title>PyIter_Next (47,332,264 samples, 0.14%)</title><rect x="185.7" y="357" width="1.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="188.73" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (34,082,645 samples, 0.10%)</title><rect x="107.4" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.42" y="335.5" ></text>
</g>
<g >
<title>__do_page_fault (34,049,393 samples, 0.10%)</title><rect x="812.2" y="581" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="815.21" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,278,931 samples, 0.08%)</title><rect x="150.5" y="773" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.46" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (53,886,826 samples, 0.16%)</title><rect x="160.3" y="405" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,279,161 samples, 0.08%)</title><rect x="125.7" y="453" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="128.73" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (27,186,157 samples, 0.08%)</title><rect x="80.2" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.22" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (140,967,987 samples, 0.41%)</title><rect x="177.1" y="693" width="4.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="180.11" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="757" width="7.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1162.88" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (34,092,675 samples, 0.10%)</title><rect x="935.8" y="485" width="1.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="938.83" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,099,586 samples, 0.10%)</title><rect x="84.0" y="325" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="87.02" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (29,004,945 samples, 0.08%)</title><rect x="149.5" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.48" y="463.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,003,833 samples, 0.10%)</title><rect x="1156.4" y="629" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1159.42" y="639.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (170,173,031 samples, 0.49%)</title><rect x="1001.7" y="533" width="5.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1004.69" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,127,559 samples, 0.10%)</title><rect x="126.6" y="517" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="129.62" y="527.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,212,373 samples, 0.08%)</title><rect x="184.8" y="325" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="187.84" y="335.5" ></text>
</g>
<g >
<title>__strcpy_sse2_unaligned (114,696,998 samples, 0.33%)</title><rect x="75.2" y="325" width="3.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="78.17" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (100,614,998 samples, 0.29%)</title><rect x="62.9" y="837" width="3.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="65.90" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (97,129,996 samples, 0.28%)</title><rect x="130.7" y="853" width="3.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="133.67" y="863.5" ></text>
</g>
<g >
<title>__handle_mm_fault (36,796,981 samples, 0.11%)</title><rect x="132.7" y="245" width="1.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="135.72" y="255.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,406,720 samples, 0.17%)</title><rect x="125.7" y="629" width="2.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="128.73" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (34,106,052 samples, 0.10%)</title><rect x="176.0" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (339,921,096 samples, 0.98%)</title><rect x="517.7" y="869" width="11.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="520.71" y="879.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,129,470 samples, 0.08%)</title><rect x="134.0" y="309" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="136.97" y="319.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,102,824 samples, 0.10%)</title><rect x="121.0" y="549" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="123.99" y="559.5" ></text>
</g>
<g >
<title>__vfs_read (26,279,161 samples, 0.08%)</title><rect x="125.7" y="197" width="0.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="128.73" y="207.5" ></text>
</g>
<g >
<title>perf_event_mmap (15,855,993 samples, 0.05%)</title><rect x="1169.1" y="853" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1172.15" y="863.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (53,396,557 samples, 0.15%)</title><rect x="80.2" y="581" width="1.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="83.22" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (68,077,413 samples, 0.20%)</title><rect x="901.1" y="517" width="2.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="904.14" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,682,193 samples, 0.10%)</title><rect x="119.8" y="277" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="122.84" y="287.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (67,963,689 samples, 0.20%)</title><rect x="766.4" y="293" width="2.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="769.39" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (67,764,137 samples, 0.19%)</title><rect x="116.6" y="293" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.60" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,049,393 samples, 0.10%)</title><rect x="812.2" y="565" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="815.21" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (101,124,873 samples, 0.29%)</title><rect x="85.2" y="373" width="3.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="88.18" y="383.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (33,959,123 samples, 0.10%)</title><rect x="23.4" y="1013" width="1.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="26.35" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,208,528 samples, 0.08%)</title><rect x="104.5" y="581" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.49" y="591.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4,163,897 samples, 0.01%)</title><rect x="503.7" y="885" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="506.68" y="895.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,117,307 samples, 0.10%)</title><rect x="538.6" y="725" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="541.63" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (18,300,268,682 samples, 52.65%)</title><rect x="538.6" y="837" width="621.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="541.63" y="847.5" >[python3.12]</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (290,182,458 samples, 0.83%)</title><rect x="183.0" y="917" width="9.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="186.03" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (53,156,961 samples, 0.15%)</title><rect x="123.9" y="869" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="879.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (33,818,293 samples, 0.10%)</title><rect x="1157.6" y="613" width="1.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1160.58" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,199,465 samples, 0.09%)</title><rect x="128.7" y="341" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.67" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,220,794 samples, 0.10%)</title><rect x="137.5" y="421" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.54" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,806,279 samples, 0.15%)</title><rect x="134.9" y="677" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="137.86" y="687.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (136,460,309 samples, 0.39%)</title><rect x="1002.8" y="517" width="4.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1005.84" y="527.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,117,307 samples, 0.10%)</title><rect x="538.6" y="565" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="541.63" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (203,732,287 samples, 0.59%)</title><rect x="1135.6" y="629" width="6.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1138.63" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,373 samples, 0.08%)</title><rect x="184.8" y="277" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.84" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,946,386 samples, 0.08%)</title><rect x="124.8" y="485" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="127.82" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (78,425,070 samples, 0.23%)</title><rect x="96.2" y="693" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.22" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="565" width="1.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="817.48" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,449,828 samples, 0.10%)</title><rect x="181.9" y="661" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="184.90" y="671.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (67,728,924 samples, 0.19%)</title><rect x="1017.8" y="549" width="2.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1020.85" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (153,672,736 samples, 0.44%)</title><rect x="85.2" y="597" width="5.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.18" y="607.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (2,649,786,825 samples, 7.62%)</title><rect x="554.7" y="469" width="90.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="557.75" y="479.5" >[libz.so.1..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,397,176 samples, 0.15%)</title><rect x="191.1" y="693" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="194.10" y="703.5" ></text>
</g>
<g >
<title>__mmap64 (49,777,937 samples, 0.14%)</title><rect x="202.2" y="389" width="1.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="205.24" y="399.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,215,732 samples, 0.08%)</title><rect x="103.6" y="677" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="106.60" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (49,777,937 samples, 0.14%)</title><rect x="202.2" y="773" width="1.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="205.24" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,946,386 samples, 0.08%)</title><rect x="124.8" y="773" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.82" y="783.5" ></text>
</g>
<g >
<title>page_remove_rmap (33,715,498 samples, 0.10%)</title><rect x="1169.7" y="853" width="1.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1172.68" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (61,286,717 samples, 0.18%)</title><rect x="153.4" y="485" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.35" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,015,426 samples, 0.10%)</title><rect x="809.9" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="812.89" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,951 samples, 0.08%)</title><rect x="97.1" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.11" y="351.5" ></text>
</g>
<g >
<title>do_page_fault (101,519,991 samples, 0.29%)</title><rect x="549.0" y="389" width="3.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="551.99" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,445,907 samples, 0.17%)</title><rect x="136.6" y="565" width="2.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="139.65" y="575.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (67,963,689 samples, 0.20%)</title><rect x="766.4" y="261" width="2.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="769.39" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (138,088,491 samples, 0.40%)</title><rect x="164.5" y="373" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.54" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,203,116 samples, 0.08%)</title><rect x="192.0" y="453" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="194.99" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (348,439,644 samples, 1.00%)</title><rect x="162.1" y="677" width="11.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="165.12" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (34,083,459 samples, 0.10%)</title><rect x="981.0" y="517" width="1.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="983.96" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="581" width="7.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1162.88" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,779 samples, 0.08%)</title><rect x="74.3" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.28" y="335.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,214,847 samples, 0.08%)</title><rect x="151.4" y="805" width="0.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="154.36" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (100,614,998 samples, 0.29%)</title><rect x="62.9" y="661" width="3.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="65.90" y="671.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (33,862,357 samples, 0.10%)</title><rect x="1134.5" y="613" width="1.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1137.48" y="623.5" ></text>
</g>
<g >
<title>do_user_addr_fault (36,796,981 samples, 0.11%)</title><rect x="132.7" y="277" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="135.72" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,449,576 samples, 0.15%)</title><rect x="67.5" y="469" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="70.45" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (69,278,347 samples, 0.20%)</title><rect x="119.8" y="597" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.79" y="607.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,117,307 samples, 0.10%)</title><rect x="538.6" y="469" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="541.63" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,157,411 samples, 0.08%)</title><rect x="60.0" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="511.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (34,240,275 samples, 0.10%)</title><rect x="1023.6" y="581" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1026.59" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (69,278,347 samples, 0.20%)</title><rect x="119.8" y="821" width="2.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="122.79" y="831.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (68,255,742 samples, 0.20%)</title><rect x="1032.8" y="565" width="2.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1035.78" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (647,386,605 samples, 1.86%)</title><rect x="1103.2" y="629" width="22.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1106.23" y="639.5" >s..</text>
</g>
<g >
<title>[python3.12] (140,967,987 samples, 0.41%)</title><rect x="177.1" y="773" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.11" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (128,216,512 samples, 0.37%)</title><rect x="105.4" y="837" width="4.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="108.38" y="847.5" ></text>
</g>
<g >
<title>_PyUnicode_JoinArray (26,211,493 samples, 0.08%)</title><rect x="56.1" y="1013" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="59.10" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="501" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="511.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::dispatcher (10,207,392,610 samples, 29.37%)</title><rect x="813.4" y="821" width="346.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="816.36" y="831.5" >pybind11::cpp_function::dispatcher</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,547,019 samples, 0.08%)</title><rect x="192.9" y="533" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="195.88" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (102,108,673 samples, 0.29%)</title><rect x="193.8" y="469" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="196.78" y="479.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, unsigned long const*, unsigned long*&gt; (34,217,585 samples, 0.10%)</title><rect x="1133.3" y="549" width="1.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1136.32" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (52,806,279 samples, 0.15%)</title><rect x="134.9" y="837" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (31,199,465 samples, 0.09%)</title><rect x="128.7" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.67" y="495.5" ></text>
</g>
<g >
<title>_PyCode_New (26,206,935 samples, 0.08%)</title><rect x="96.2" y="389" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="99.22" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (59,988,303 samples, 0.17%)</title><rect x="70.4" y="437" width="2.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="73.39" y="447.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,208,528 samples, 0.08%)</title><rect x="104.5" y="501" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="107.49" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="101" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="111.5" ></text>
</g>
<g >
<title>alloc_pages_vma (404,578,422 samples, 1.16%)</title><rect x="752.7" y="325" width="13.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="755.65" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (52,233,202 samples, 0.15%)</title><rect x="60.0" y="677" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (25,845,919 samples, 0.07%)</title><rect x="173.9" y="677" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.94" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,217,823 samples, 0.08%)</title><rect x="162.1" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="165.12" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (52,397,176 samples, 0.15%)</title><rect x="191.1" y="533" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.10" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="517" width="1.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="817.48" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (102,108,673 samples, 0.29%)</title><rect x="193.8" y="677" width="3.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="196.78" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,528 samples, 0.08%)</title><rect x="104.5" y="725" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.49" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (92,596,871 samples, 0.27%)</title><rect x="82.0" y="565" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.04" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,390,467 samples, 0.15%)</title><rect x="197.3" y="421" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="200.25" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,449,576 samples, 0.15%)</title><rect x="67.5" y="709" width="1.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="70.45" y="719.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator* (169,324,932 samples, 0.49%)</title><rect x="822.5" y="661" width="5.8" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="825.54" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (709,347,368 samples, 2.04%)</title><rect x="69.2" y="885" width="24.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.23" y="895.5" >_..</text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="245" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,235,446 samples, 0.08%)</title><rect x="127.8" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.78" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,847 samples, 0.08%)</title><rect x="151.4" y="549" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.36" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,208,528 samples, 0.08%)</title><rect x="104.5" y="821" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="107.49" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (33,789,556 samples, 0.10%)</title><rect x="644.7" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="647.70" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,420 samples, 0.08%)</title><rect x="148.6" y="773" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="151.59" y="783.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (26,707,493 samples, 0.08%)</title><rect x="183.0" y="373" width="0.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="186.03" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (52,461,466 samples, 0.15%)</title><rect x="93.3" y="325" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.31" y="335.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,449,828 samples, 0.10%)</title><rect x="181.9" y="853" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="184.90" y="863.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (59,392,419 samples, 0.17%)</title><rect x="138.7" y="501" width="2.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="141.70" y="511.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (33,923,447 samples, 0.10%)</title><rect x="827.1" y="597" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="830.14" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (25,845,919 samples, 0.07%)</title><rect x="173.9" y="709" width="0.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="176.94" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (92,596,871 samples, 0.27%)</title><rect x="82.0" y="469" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.04" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (68,097,003 samples, 0.20%)</title><rect x="1078.9" y="501" width="2.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1081.94" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;float const, unsigned long&gt; &gt;::operator++ (34,069,284 samples, 0.10%)</title><rect x="1142.5" y="661" width="1.2" height="15.0" fill="rgb(220,71,16)" rx="2" ry="2" />
<text  x="1145.54" y="671.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (66,545,345 samples, 0.19%)</title><rect x="82.9" y="405" width="2.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="85.92" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (136,179,659 samples, 0.39%)</title><rect x="1050.1" y="533" width="4.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1053.08" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,268 samples, 0.08%)</title><rect x="88.6" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.61" y="399.5" ></text>
</g>
<g >
<title>vfs_read (26,279,161 samples, 0.08%)</title><rect x="125.7" y="213" width="0.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="128.73" y="223.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, diff_Nexullance_IT_interface, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (10,207,392,610 samples, 29.37%)</title><rect x="813.4" y="789" width="346.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="816.36" y="799.5" >pybind11::cpp_function::initialize&lt;pybind11::c..</text>
</g>
<g >
<title>[python3.12] (26,217,823 samples, 0.08%)</title><rect x="162.1" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="165.12" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,203,116 samples, 0.08%)</title><rect x="192.0" y="389" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.99" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (60,406,720 samples, 0.17%)</title><rect x="125.7" y="645" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,595 samples, 0.08%)</title><rect x="89.5" y="277" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.51" y="287.5" ></text>
</g>
<g >
<title>__do_page_fault (33,906,054 samples, 0.10%)</title><rect x="86.3" y="245" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="89.33" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (68,102,428 samples, 0.20%)</title><rect x="193.8" y="357" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (33,478,077 samples, 0.10%)</title><rect x="34.9" y="1013" width="1.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="37.90" y="1023.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,117,307 samples, 0.10%)</title><rect x="538.6" y="437" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="541.63" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (32,189,412 samples, 0.09%)</title><rect x="109.7" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.73" y="447.5" ></text>
</g>
<g >
<title>unmap_page_range (134,989,158 samples, 0.39%)</title><rect x="1169.7" y="885" width="4.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1172.68" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,244,854 samples, 0.08%)</title><rect x="181.0" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.01" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;float const, unsigned long&gt; &gt;::_M_ptr (33,541,454 samples, 0.10%)</title><rect x="1143.7" y="581" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1146.70" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (32,189,412 samples, 0.09%)</title><rect x="109.7" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.73" y="559.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (31,920,045 samples, 0.09%)</title><rect x="178.1" y="181" width="1.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="181.14" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (377,112,606 samples, 1.08%)</title><rect x="69.2" y="645" width="12.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.23" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (52,397,176 samples, 0.15%)</title><rect x="191.1" y="613" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.10" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (53,173,386 samples, 0.15%)</title><rect x="183.0" y="485" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="469" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (30,376,332 samples, 0.09%)</title><rect x="177.1" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.11" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (135,953,259 samples, 0.39%)</title><rect x="114.3" y="581" width="4.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="117.29" y="591.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (6,705,716 samples, 0.02%)</title><rect x="503.6" y="981" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="506.61" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,225,113 samples, 0.08%)</title><rect x="136.6" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="527.5" ></text>
</g>
<g >
<title>task_numa_work (34,079,130 samples, 0.10%)</title><rect x="961.3" y="437" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="964.29" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (136,179,659 samples, 0.39%)</title><rect x="1050.1" y="549" width="4.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1053.08" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="821" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="831.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (67,408,941 samples, 0.19%)</title><rect x="1015.6" y="549" width="2.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1018.56" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="463.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,428,438 samples, 0.15%)</title><rect x="530.4" y="341" width="1.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="533.43" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,353 samples, 0.08%)</title><rect x="199.0" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.03" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,278,931 samples, 0.08%)</title><rect x="150.5" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.46" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; const&amp;&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="373" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="817.48" y="383.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (33,469,038 samples, 0.10%)</title><rect x="90.4" y="181" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="93.40" y="191.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (34,099,586 samples, 0.10%)</title><rect x="84.0" y="357" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="87.02" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,004,184 samples, 0.07%)</title><rect x="98.0" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.00" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (236,819,209 samples, 0.68%)</title><rect x="152.2" y="805" width="8.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.25" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,225,113 samples, 0.08%)</title><rect x="136.6" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,157,411 samples, 0.08%)</title><rect x="60.0" y="277" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,496,117 samples, 0.15%)</title><rect x="91.5" y="709" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="94.53" y="719.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;unsigned long*&gt; (34,137,348 samples, 0.10%)</title><rect x="1132.2" y="549" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1135.16" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (135,953,259 samples, 0.39%)</title><rect x="114.3" y="613" width="4.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="117.29" y="623.5" ></text>
</g>
<g >
<title>PyDict_Copy (26,210,404 samples, 0.08%)</title><rect x="73.4" y="293" width="0.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="76.39" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,220,794 samples, 0.10%)</title><rect x="137.5" y="341" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.54" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (406,934,711 samples, 1.17%)</title><rect x="136.6" y="949" width="13.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,235,446 samples, 0.08%)</title><rect x="127.8" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.78" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (102,108,673 samples, 0.29%)</title><rect x="193.8" y="373" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="196.78" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (715,541,207 samples, 2.06%)</title><rect x="1102.1" y="645" width="24.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1105.07" y="655.5" >s..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (175,074,039 samples, 0.50%)</title><rect x="176.0" y="933" width="5.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="178.95" y="943.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,004,184 samples, 0.07%)</title><rect x="98.0" y="405" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="101.00" y="415.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,215,732 samples, 0.08%)</title><rect x="103.6" y="501" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="106.60" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="917" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,528 samples, 0.08%)</title><rect x="104.5" y="805" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.49" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,677 samples, 0.08%)</title><rect x="67.5" y="373" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.45" y="383.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,432,796 samples, 0.15%)</title><rect x="189.3" y="325" width="1.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="192.32" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,217,823 samples, 0.08%)</title><rect x="162.1" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="165.12" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,233,202 samples, 0.15%)</title><rect x="60.0" y="773" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="62.99" y="783.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (102,502,678 samples, 0.29%)</title><rect x="1126.4" y="629" width="3.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1129.36" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="725" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (102,108,673 samples, 0.29%)</title><rect x="193.8" y="613" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="623.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (34,049,393 samples, 0.10%)</title><rect x="812.2" y="469" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="815.21" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,547,019 samples, 0.08%)</title><rect x="192.9" y="629" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="195.88" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,278,931 samples, 0.08%)</title><rect x="150.5" y="901" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="153.46" y="911.5" ></text>
</g>
<g >
<title>_PyObject_Call (63,006,133 samples, 0.18%)</title><rect x="131.8" y="661" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="134.83" y="671.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,245,205 samples, 0.10%)</title><rect x="1066.2" y="597" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1069.24" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (27,666,663 samples, 0.08%)</title><rect x="129.7" y="725" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="132.73" y="735.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (33,469,038 samples, 0.10%)</title><rect x="90.4" y="373" width="1.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="93.40" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="853" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="549" width="1.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="817.48" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,268 samples, 0.08%)</title><rect x="88.6" y="277" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.61" y="287.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,429,517 samples, 0.15%)</title><rect x="110.8" y="581" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="113.82" y="591.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,466,419 samples, 0.08%)</title><rect x="172.2" y="277" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="175.15" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_ptr (34,104,727 samples, 0.10%)</title><rect x="1158.7" y="661" width="1.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1161.73" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,123,863 samples, 0.10%)</title><rect x="130.7" y="501" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="133.67" y="511.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_single_s_d (8,951,239,669 samples, 25.75%)</title><rect x="838.7" y="661" width="303.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="841.67" y="671.5" >compute_all_shortest_paths_single_s_d</text>
</g>
<g >
<title>[python3.12] (26,214,847 samples, 0.08%)</title><rect x="151.4" y="597" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.36" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (18,300,268,682 samples, 52.65%)</title><rect x="538.6" y="853" width="621.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="541.63" y="863.5" >_PyObject_MakeTpCall</text>
</g>
<g >
<title>PyObject_GetAttr (27,666,663 samples, 0.08%)</title><rect x="129.7" y="309" width="1.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="132.73" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (85,626,136 samples, 0.25%)</title><rect x="93.3" y="485" width="2.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="96.31" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,237,493 samples, 0.10%)</title><rect x="141.6" y="453" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="144.61" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (428,172,389 samples, 1.23%)</title><rect x="160.3" y="869" width="14.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="879.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,779 samples, 0.08%)</title><rect x="74.3" y="341" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="77.28" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (34,102,824 samples, 0.10%)</title><rect x="121.0" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.99" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (63,006,133 samples, 0.18%)</title><rect x="131.8" y="597" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.83" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (332,234,762 samples, 0.96%)</title><rect x="82.0" y="789" width="11.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="85.04" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,666,663 samples, 0.08%)</title><rect x="129.7" y="677" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="132.73" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,847 samples, 0.08%)</title><rect x="151.4" y="917" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.36" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="805" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (406,934,711 samples, 1.17%)</title><rect x="136.6" y="933" width="13.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="139.65" y="943.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch2&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (5,580,587,566 samples, 16.06%)</title><rect x="846.8" y="613" width="189.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="849.79" y="623.5" >boost::detail::dijkstra_..</text>
</g>
<g >
<title>PyEval_EvalCode (52,432,796 samples, 0.15%)</title><rect x="189.3" y="469" width="1.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="192.32" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,178 samples, 0.08%)</title><rect x="140.7" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.72" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,164,670 samples, 0.10%)</title><rect x="95.1" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.10" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (34,106,052 samples, 0.10%)</title><rect x="176.0" y="693" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,647,249 samples, 0.09%)</title><rect x="152.2" y="613" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="155.25" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,157,411 samples, 0.08%)</title><rect x="60.0" y="341" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="62.99" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,602 samples, 0.08%)</title><rect x="180.1" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.12" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,110,184 samples, 0.10%)</title><rect x="546.7" y="405" width="1.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="549.68" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (102,246,569 samples, 0.29%)</title><rect x="1078.9" y="565" width="3.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1081.94" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::empty (68,392,612 samples, 0.20%)</title><rect x="1187.7" y="1029" width="2.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1190.68" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="901" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="911.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,015,426 samples, 0.10%)</title><rect x="809.9" y="693" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="812.89" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,237,493 samples, 0.10%)</title><rect x="141.6" y="421" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="144.61" y="431.5" ></text>
</g>
<g >
<title>PyImport_Import (26,129,470 samples, 0.08%)</title><rect x="134.0" y="981" width="0.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="136.97" y="991.5" ></text>
</g>
<g >
<title>user_path_at_empty (26,205,247 samples, 0.08%)</title><rect x="145.7" y="245" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="148.67" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (33,710,640 samples, 0.10%)</title><rect x="539.8" y="629" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="542.79" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (49,558,201 samples, 0.14%)</title><rect x="112.6" y="277" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.60" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="741" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,051,526 samples, 0.07%)</title><rect x="82.0" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.04" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,806,279 samples, 0.15%)</title><rect x="134.9" y="741" width="1.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="137.86" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="453" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="463.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (102,198,586 samples, 0.29%)</title><rect x="652.7" y="341" width="3.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="655.75" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (34,099,586 samples, 0.10%)</title><rect x="84.0" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.02" y="319.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT_interface::add_next_matrix (10,174,460,101 samples, 29.27%)</title><rect x="814.5" y="709" width="345.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="817.48" y="719.5" >diff_Nexullance_IT_interface::add_next_matrix</text>
</g>
<g >
<title>_PyObject_Call (52,496,117 samples, 0.15%)</title><rect x="91.5" y="645" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="94.53" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (322,221,821 samples, 0.93%)</title><rect x="163.0" y="501" width="10.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="166.01" y="511.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (49,777,937 samples, 0.14%)</title><rect x="202.2" y="549" width="1.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="205.24" y="559.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (33,164,670 samples, 0.10%)</title><rect x="95.1" y="437" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="98.10" y="447.5" ></text>
</g>
<g >
<title>do_page_fault (33,906,054 samples, 0.10%)</title><rect x="86.3" y="261" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="89.33" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (33,858,164 samples, 0.10%)</title><rect x="108.6" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.58" y="303.5" ></text>
</g>
<g >
<title>_dl_open (33,469,038 samples, 0.10%)</title><rect x="90.4" y="325" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="93.40" y="335.5" ></text>
</g>
<g >
<title>__pyx_pymod_exec__batch (25,845,919 samples, 0.07%)</title><rect x="173.9" y="757" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="176.94" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (62,296,377 samples, 0.18%)</title><rect x="177.1" y="565" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.11" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,951 samples, 0.08%)</title><rect x="97.1" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.11" y="447.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,469,038 samples, 0.10%)</title><rect x="90.4" y="597" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="93.40" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,106,052 samples, 0.10%)</title><rect x="176.0" y="581" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="178.95" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,237,174 samples, 0.08%)</title><rect x="91.5" y="405" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="94.53" y="415.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,946,386 samples, 0.08%)</title><rect x="124.8" y="469" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="127.82" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,353 samples, 0.08%)</title><rect x="199.0" y="245" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.03" y="255.5" ></text>
</g>
<g >
<title>Py_RunMain (19,291,057,355 samples, 55.50%)</title><rect x="505.0" y="981" width="654.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="507.99" y="991.5" >Py_RunMain</text>
</g>
<g >
<title>PyNumber_Remainder (26,212,602 samples, 0.08%)</title><rect x="180.1" y="421" width="0.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="183.12" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,215,732 samples, 0.08%)</title><rect x="103.6" y="885" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.60" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (45,251,910 samples, 0.13%)</title><rect x="163.0" y="325" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.01" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (34,102,824 samples, 0.10%)</title><rect x="121.0" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.99" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,883,915 samples, 0.10%)</title><rect x="537.5" y="853" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="540.48" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (34,049,949 samples, 0.10%)</title><rect x="903.5" y="517" width="1.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="906.45" y="527.5" ></text>
</g>
<g >
<title>__dlopen (49,777,937 samples, 0.14%)</title><rect x="202.2" y="581" width="1.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="205.24" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,278,931 samples, 0.08%)</title><rect x="150.5" y="373" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="153.46" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,278,931 samples, 0.08%)</title><rect x="150.5" y="533" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="153.46" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,528 samples, 0.08%)</title><rect x="104.5" y="917" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.49" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (85,827,428 samples, 0.25%)</title><rect x="66.3" y="997" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.32" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="949" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (78,645,323 samples, 0.23%)</title><rect x="188.4" y="693" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (159,139,959 samples, 0.46%)</title><rect x="183.0" y="533" width="5.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="186.03" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (6,878,392,573 samples, 19.79%)</title><rect x="549.0" y="485" width="233.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="551.99" y="495.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,210,400 samples, 0.08%)</title><rect x="81.1" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.15" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (33,164,670 samples, 0.10%)</title><rect x="95.1" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.10" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (112,624,093 samples, 0.32%)</title><rect x="169.2" y="405" width="3.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="172.23" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,575 samples, 0.08%)</title><rect x="123.9" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,547,019 samples, 0.08%)</title><rect x="192.9" y="421" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="195.88" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_default_initialize (34,216,106 samples, 0.10%)</title><rect x="1038.6" y="597" width="1.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1041.55" y="607.5" ></text>
</g>
<g >
<title>alloc_pages_vma (33,641,241 samples, 0.10%)</title><rect x="154.3" y="197" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="157.29" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (26,946,386 samples, 0.08%)</title><rect x="124.8" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.82" y="527.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="421" width="7.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1162.88" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (18,542,365,970 samples, 53.35%)</title><rect x="530.4" y="917" width="629.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.41" y="927.5" >[python3.12]</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy (34,114,493 samples, 0.10%)</title><rect x="814.5" y="629" width="1.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="817.48" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,806,279 samples, 0.15%)</title><rect x="134.9" y="629" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.86" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,329,111 samples, 0.10%)</title><rect x="174.8" y="693" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="177.82" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (85,762,981 samples, 0.25%)</title><rect x="60.0" y="853" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (32,189,412 samples, 0.09%)</title><rect x="109.7" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.73" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_do_relocate (67,966,643 samples, 0.20%)</title><rect x="931.2" y="501" width="2.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="934.21" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,406,720 samples, 0.17%)</title><rect x="125.7" y="709" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="128.73" y="719.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,201,677 samples, 0.08%)</title><rect x="67.5" y="437" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="70.45" y="447.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (34,159,376 samples, 0.10%)</title><rect x="22.2" y="1013" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="25.19" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,528 samples, 0.08%)</title><rect x="104.5" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.49" y="383.5" ></text>
</g>
<g >
<title>perf_iterate_sb (15,855,993 samples, 0.05%)</title><rect x="1169.1" y="837" width="0.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1172.15" y="847.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (102,404,569 samples, 0.29%)</title><rect x="1095.1" y="613" width="3.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1098.13" y="623.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,106,052 samples, 0.10%)</title><rect x="176.0" y="245" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="178.95" y="255.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (102,360,744 samples, 0.29%)</title><rect x="946.2" y="533" width="3.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="949.25" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (428,172,389 samples, 1.23%)</title><rect x="160.3" y="853" width="14.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="163.29" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,220,276 samples, 0.20%)</title><rect x="199.9" y="501" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="202.92" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,466,419 samples, 0.08%)</title><rect x="172.2" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.15" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (102,392,919 samples, 0.29%)</title><rect x="1129.8" y="629" width="3.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1132.84" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,710,640 samples, 0.10%)</title><rect x="539.8" y="661" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="542.79" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="565" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,575 samples, 0.08%)</title><rect x="123.9" y="661" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="671.5" ></text>
</g>
<g >
<title>boost::optional&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::operator (67,937,378 samples, 0.20%)</title><rect x="835.2" y="629" width="2.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="838.20" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (26,244,854 samples, 0.08%)</title><rect x="181.0" y="581" width="0.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="184.01" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (101,124,873 samples, 0.29%)</title><rect x="85.2" y="421" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.18" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,575 samples, 0.08%)</title><rect x="123.9" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,214,847 samples, 0.08%)</title><rect x="151.4" y="901" width="0.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="154.36" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (49,777,937 samples, 0.14%)</title><rect x="202.2" y="357" width="1.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="205.24" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::map (34,114,493 samples, 0.10%)</title><rect x="814.5" y="661" width="1.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="817.48" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,575 samples, 0.08%)</title><rect x="123.9" y="261" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,225,113 samples, 0.08%)</title><rect x="136.6" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,225,113 samples, 0.08%)</title><rect x="136.6" y="389" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="139.65" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (60,406,720 samples, 0.17%)</title><rect x="125.7" y="773" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="783.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,258,943 samples, 0.08%)</title><rect x="92.4" y="437" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="95.42" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (7,617,418,747 samples, 21.91%)</title><rect x="546.7" y="565" width="258.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="549.68" y="575.5" >[python3.12]</text>
</g>
<g >
<title>finish_task_switch (3,780,530 samples, 0.01%)</title><rect x="1174.3" y="901" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1177.27" y="911.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,220,276 samples, 0.20%)</title><rect x="199.9" y="709" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="202.92" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (116,669,387 samples, 0.34%)</title><rect x="156.3" y="389" width="4.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="159.32" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,779 samples, 0.08%)</title><rect x="74.3" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.28" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (34,102,824 samples, 0.10%)</title><rect x="121.0" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.99" y="479.5" ></text>
</g>
<g >
<title>__sched_text_start (4,563,457 samples, 0.01%)</title><rect x="503.7" y="917" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="506.68" y="927.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (97,129,996 samples, 0.28%)</title><rect x="130.7" y="869" width="3.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="133.67" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,428,438 samples, 0.15%)</title><rect x="530.4" y="437" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="533.43" y="447.5" ></text>
</g>
<g >
<title>__do_sys_newstat (26,217,823 samples, 0.08%)</title><rect x="162.1" y="261" width="0.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="165.12" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (68,097,003 samples, 0.20%)</title><rect x="1078.9" y="453" width="2.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1081.94" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (138,764,894 samples, 0.40%)</title><rect x="142.7" y="453" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.74" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,376,332 samples, 0.09%)</title><rect x="177.1" y="373" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="180.11" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (53,886,826 samples, 0.16%)</title><rect x="160.3" y="533" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="163.29" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,194,060 samples, 0.08%)</title><rect x="191.1" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.10" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (45,251,910 samples, 0.13%)</title><rect x="163.0" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.01" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,157,411 samples, 0.08%)</title><rect x="60.0" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (97,129,996 samples, 0.28%)</title><rect x="130.7" y="789" width="3.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="133.67" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,075,791 samples, 0.08%)</title><rect x="60.9" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.88" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,449,576 samples, 0.15%)</title><rect x="67.5" y="533" width="1.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="70.45" y="543.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (26,167,361 samples, 0.08%)</title><rect x="146.6" y="373" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="149.56" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,225,113 samples, 0.08%)</title><rect x="136.6" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,215,732 samples, 0.08%)</title><rect x="103.6" y="917" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="106.60" y="927.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (67,081,708 samples, 0.19%)</title><rect x="1166.9" y="1029" width="2.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1169.87" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (33,729,379 samples, 0.10%)</title><rect x="527.0" y="805" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="529.95" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="431.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (15,855,993 samples, 0.05%)</title><rect x="1169.1" y="821" width="0.6" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1172.15" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,186,157 samples, 0.08%)</title><rect x="80.2" y="469" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="83.22" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (8,058,758,765 samples, 23.18%)</title><rect x="539.8" y="773" width="273.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="542.79" y="783.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (53,038,442 samples, 0.15%)</title><rect x="530.4" y="837" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.41" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (34,102,824 samples, 0.10%)</title><rect x="121.0" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.99" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,164,670 samples, 0.10%)</title><rect x="95.1" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.10" y="463.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (29,004,945 samples, 0.08%)</title><rect x="149.5" y="693" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="152.48" y="703.5" ></text>
</g>
<g >
<title>finish_task_switch (4,563,457 samples, 0.01%)</title><rect x="503.7" y="901" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="506.68" y="911.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (34,010,288 samples, 0.10%)</title><rect x="934.7" y="517" width="1.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="937.68" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (332,234,762 samples, 0.96%)</title><rect x="82.0" y="837" width="11.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="85.04" y="847.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (68,415,580 samples, 0.20%)</title><rect x="918.5" y="533" width="2.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="921.48" y="543.5" ></text>
</g>
<g >
<title>change_prot_numa (34,079,130 samples, 0.10%)</title><rect x="961.3" y="421" width="1.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="964.29" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,225,113 samples, 0.08%)</title><rect x="136.6" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (249,061,769 samples, 0.72%)</title><rect x="193.8" y="997" width="8.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="1007.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (34,099,048 samples, 0.10%)</title><rect x="79.1" y="469" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="82.07" y="479.5" ></text>
</g>
<g >
<title>do_page_fault (33,641,241 samples, 0.10%)</title><rect x="154.3" y="293" width="1.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="157.29" y="303.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (34,212,379 samples, 0.10%)</title><rect x="1088.2" y="581" width="1.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1091.20" y="591.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt; (67,966,643 samples, 0.20%)</title><rect x="931.2" y="485" width="2.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="934.21" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (138,088,491 samples, 0.40%)</title><rect x="164.5" y="453" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.54" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,856 samples, 0.08%)</title><rect x="155.4" y="309" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="158.44" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,732,820 samples, 0.23%)</title><rect x="197.3" y="613" width="2.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="200.25" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,342,353 samples, 0.08%)</title><rect x="199.0" y="341" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="202.03" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,710,640 samples, 0.10%)</title><rect x="539.8" y="645" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="542.79" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,847 samples, 0.08%)</title><rect x="151.4" y="533" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.36" y="543.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (33,521,991 samples, 0.10%)</title><rect x="917.3" y="501" width="1.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="920.34" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (53,156,961 samples, 0.15%)</title><rect x="123.9" y="933" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="126.93" y="943.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (145,508,294 samples, 0.42%)</title><rect x="125.7" y="917" width="5.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="128.73" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,935 samples, 0.08%)</title><rect x="96.2" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.22" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (112,597,533 samples, 0.32%)</title><rect x="142.7" y="373" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.74" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,278,931 samples, 0.08%)</title><rect x="150.5" y="581" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="153.46" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,946,386 samples, 0.08%)</title><rect x="124.8" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.82" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (428,172,389 samples, 1.23%)</title><rect x="160.3" y="901" width="14.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="911.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (25,845,919 samples, 0.07%)</title><rect x="173.9" y="373" width="0.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="176.94" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (28,349,249 samples, 0.08%)</title><rect x="72.4" y="309" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="75.43" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (154,625,681 samples, 0.44%)</title><rect x="1169.1" y="1013" width="5.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1172.15" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (33,682,193 samples, 0.10%)</title><rect x="119.8" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.84" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (67,081,413 samples, 0.19%)</title><rect x="542.1" y="677" width="2.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="545.08" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,157,411 samples, 0.08%)</title><rect x="60.0" y="373" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="62.99" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (68,334,394 samples, 0.20%)</title><rect x="1126.4" y="565" width="2.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1129.36" y="575.5" ></text>
</g>
<g >
<title>get_page_from_freelist (67,384,058 samples, 0.19%)</title><rect x="650.5" y="309" width="2.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="653.46" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="309" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (33,335,598 samples, 0.10%)</title><rect x="1073.2" y="613" width="1.1" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="1076.19" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (102,108,673 samples, 0.29%)</title><rect x="193.8" y="757" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="196.78" y="767.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (33,641,241 samples, 0.10%)</title><rect x="154.3" y="181" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="157.29" y="191.5" ></text>
</g>
<g >
<title>rmqueue (33,639,870 samples, 0.10%)</title><rect x="765.2" y="277" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="768.25" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,445,759 samples, 0.09%)</title><rect x="82.9" y="357" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="85.92" y="367.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (33,923,830 samples, 0.10%)</title><rect x="1014.4" y="501" width="1.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1017.41" y="511.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,212,602 samples, 0.08%)</title><rect x="180.1" y="613" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="183.12" y="623.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (33,641,241 samples, 0.10%)</title><rect x="154.3" y="325" width="1.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="157.29" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="229" width="1.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="817.48" y="239.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,278,931 samples, 0.08%)</title><rect x="150.5" y="517" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="153.46" y="527.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (102,404,569 samples, 0.29%)</title><rect x="1095.1" y="597" width="3.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1098.13" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (34,245,945 samples, 0.10%)</title><rect x="906.9" y="533" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="909.92" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,847 samples, 0.08%)</title><rect x="151.4" y="773" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.36" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (78,645,323 samples, 0.23%)</title><rect x="188.4" y="597" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="607.5" ></text>
</g>
<g >
<title>array_scalar (34,049,393 samples, 0.10%)</title><rect x="812.2" y="693" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="815.21" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (34,102,824 samples, 0.10%)</title><rect x="121.0" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.99" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,946,386 samples, 0.08%)</title><rect x="124.8" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.82" y="367.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,006,245 samples, 0.10%)</title><rect x="196.1" y="357" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="199.10" y="367.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,506 samples, 0.08%)</title><rect x="135.8" y="421" width="0.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="138.76" y="431.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (26,946,386 samples, 0.08%)</title><rect x="124.8" y="245" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="127.82" y="255.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (34,213,107 samples, 0.10%)</title><rect x="1047.8" y="597" width="1.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1050.77" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,342,353 samples, 0.08%)</title><rect x="199.0" y="453" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="202.03" y="463.5" ></text>
</g>
<g >
<title>PyImport_Import (26,244,854 samples, 0.08%)</title><rect x="181.0" y="597" width="0.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="184.01" y="607.5" ></text>
</g>
<g >
<title>PyRun_StringFlags (26,209,825 samples, 0.08%)</title><rect x="118.9" y="341" width="0.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="121.90" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (128,216,512 samples, 0.37%)</title><rect x="105.4" y="709" width="4.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="108.38" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="533" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="543.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (27,174,690 samples, 0.08%)</title><rect x="161.2" y="133" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="164.19" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (30,376,332 samples, 0.09%)</title><rect x="177.1" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.11" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (205,678,842 samples, 0.59%)</title><rect x="141.6" y="533" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.61" y="543.5" ></text>
</g>
<g >
<title>PyImport_Import (26,004,184 samples, 0.07%)</title><rect x="98.0" y="549" width="0.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="101.00" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,449,828 samples, 0.10%)</title><rect x="181.9" y="533" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="184.90" y="543.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (33,449,828 samples, 0.10%)</title><rect x="181.9" y="165" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="184.90" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (26,225,113 samples, 0.08%)</title><rect x="136.6" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (33,329,111 samples, 0.10%)</title><rect x="174.8" y="741" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.82" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (53,156,961 samples, 0.15%)</title><rect x="123.9" y="837" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="126.93" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,547,019 samples, 0.08%)</title><rect x="192.9" y="357" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="195.88" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,209,825 samples, 0.08%)</title><rect x="118.9" y="725" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="121.90" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (53,173,386 samples, 0.15%)</title><rect x="183.0" y="501" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,420 samples, 0.08%)</title><rect x="148.6" y="581" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.59" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (34,245,205 samples, 0.10%)</title><rect x="1066.2" y="629" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1069.24" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,220,276 samples, 0.20%)</title><rect x="199.9" y="901" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="202.92" y="911.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (262,393,642 samples, 0.75%)</title><rect x="105.4" y="853" width="8.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="108.38" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (52,233,202 samples, 0.15%)</title><rect x="60.0" y="693" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="703.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,220,276 samples, 0.20%)</title><rect x="199.9" y="565" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="202.92" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (97,129,996 samples, 0.28%)</title><rect x="130.7" y="773" width="3.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="133.67" y="783.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,210,575 samples, 0.08%)</title><rect x="123.9" y="741" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="126.93" y="751.5" ></text>
</g>
<g >
<title>PyEval_RestoreThread (33,806,058 samples, 0.10%)</title><rect x="784.8" y="453" width="1.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="787.82" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (29,004,945 samples, 0.08%)</title><rect x="149.5" y="805" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="152.48" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (97,129,996 samples, 0.28%)</title><rect x="130.7" y="901" width="3.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="133.67" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;unsigned long const, float&gt;, false, false&gt;::operator (34,104,727 samples, 0.10%)</title><rect x="1158.7" y="677" width="1.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1161.73" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (34,106,052 samples, 0.10%)</title><rect x="176.0" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::clear (34,212,684 samples, 0.10%)</title><rect x="1154.1" y="661" width="1.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1157.11" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,106,052 samples, 0.10%)</title><rect x="176.0" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,212,602 samples, 0.08%)</title><rect x="180.1" y="549" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="183.12" y="559.5" ></text>
</g>
<g >
<title>do_anonymous_page (36,796,981 samples, 0.11%)</title><rect x="132.7" y="229" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="135.72" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="981" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="991.5" ></text>
</g>
<g >
<title>boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt;::weight_map&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; &gt; (34,138,628 samples, 0.10%)</title><rect x="844.5" y="645" width="1.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="847.47" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,215,732 samples, 0.08%)</title><rect x="103.6" y="949" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="106.60" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,353 samples, 0.08%)</title><rect x="199.0" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.03" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,235,446 samples, 0.08%)</title><rect x="127.8" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.78" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,164,670 samples, 0.10%)</title><rect x="95.1" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.10" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (34,106,052 samples, 0.10%)</title><rect x="176.0" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (138,088,491 samples, 0.40%)</title><rect x="164.5" y="421" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.54" y="431.5" ></text>
</g>
<g >
<title>Py_BytesMain (19,496,806,429 samples, 56.09%)</title><rect x="505.0" y="997" width="661.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="507.99" y="1007.5" >Py_BytesMain</text>
</g>
<g >
<title>_PyObject_Call (26,209,825 samples, 0.08%)</title><rect x="118.9" y="565" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="121.90" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (180,841,493 samples, 0.52%)</title><rect x="193.8" y="949" width="6.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="196.78" y="959.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,806,279 samples, 0.15%)</title><rect x="134.9" y="709" width="1.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="137.86" y="719.5" ></text>
</g>
<g >
<title>change_protection (34,170,051 samples, 0.10%)</title><rect x="777.9" y="341" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="780.87" y="351.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (34,117,307 samples, 0.10%)</title><rect x="538.6" y="661" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="541.63" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,602 samples, 0.08%)</title><rect x="180.1" y="229" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.12" y="239.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (316,729,477 samples, 0.91%)</title><rect x="183.0" y="1013" width="10.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="186.03" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,575 samples, 0.08%)</title><rect x="123.9" y="581" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (33,164,670 samples, 0.10%)</title><rect x="95.1" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.10" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,421,131 samples, 0.10%)</title><rect x="58.9" y="1013" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="61.86" y="1023.5" ></text>
</g>
<g >
<title>PyUnicode_New (26,465,893 samples, 0.08%)</title><rect x="183.9" y="389" width="0.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="186.94" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,449,828 samples, 0.10%)</title><rect x="181.9" y="693" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="184.90" y="703.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,212,602 samples, 0.08%)</title><rect x="180.1" y="581" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="183.12" y="591.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,210,575 samples, 0.08%)</title><rect x="123.9" y="533" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="126.93" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (85,101,574 samples, 0.24%)</title><rect x="127.8" y="773" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.78" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (175,074,039 samples, 0.50%)</title><rect x="176.0" y="885" width="5.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.95" y="895.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,592,773 samples, 0.08%)</title><rect x="134.9" y="501" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="137.86" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,449,828 samples, 0.10%)</title><rect x="181.9" y="373" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="184.90" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="821" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="831.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (68,282,474 samples, 0.20%)</title><rect x="550.1" y="277" width="2.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="553.12" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,215,732 samples, 0.08%)</title><rect x="103.6" y="789" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="106.60" y="799.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (34,187,381 samples, 0.10%)</title><rect x="837.5" y="661" width="1.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="840.51" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (138,881,420 samples, 0.40%)</title><rect x="169.2" y="437" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.23" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,469,038 samples, 0.10%)</title><rect x="90.4" y="613" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.40" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,278,931 samples, 0.08%)</title><rect x="150.5" y="837" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.46" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (59,988,303 samples, 0.17%)</title><rect x="70.4" y="421" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.39" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,075,791 samples, 0.08%)</title><rect x="60.9" y="341" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="63.88" y="351.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (749,465,015 samples, 2.16%)</title><rect x="908.1" y="565" width="25.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="911.08" y="575.5" >b..</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,208,528 samples, 0.08%)</title><rect x="104.5" y="789" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="107.49" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,353 samples, 0.08%)</title><rect x="199.0" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.03" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="383.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,461,466 samples, 0.15%)</title><rect x="93.3" y="405" width="1.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="96.31" y="415.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (168,626,204 samples, 0.49%)</title><rect x="990.2" y="565" width="5.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="993.18" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (33,329,111 samples, 0.10%)</title><rect x="174.8" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.82" y="639.5" ></text>
</g>
<g >
<title>_PyObject_Call (131,042,499 samples, 0.38%)</title><rect x="188.4" y="805" width="4.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="191.43" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,547,019 samples, 0.08%)</title><rect x="192.9" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.88" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,547,019 samples, 0.08%)</title><rect x="192.9" y="549" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="195.88" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (27,666,663 samples, 0.08%)</title><rect x="129.7" y="549" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.73" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (142,885,243 samples, 0.41%)</title><rect x="155.4" y="517" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.44" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,806,279 samples, 0.15%)</title><rect x="134.9" y="965" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="975.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (57,434,911 samples, 0.17%)</title><rect x="127.8" y="741" width="1.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="130.78" y="751.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (102,275,289 samples, 0.29%)</title><rect x="938.1" y="565" width="3.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="941.15" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="437" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="447.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (34,220,794 samples, 0.10%)</title><rect x="137.5" y="389" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="140.54" y="399.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (33,962,153 samples, 0.10%)</title><rect x="209.7" y="1013" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="212.73" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (29,004,945 samples, 0.08%)</title><rect x="149.5" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.48" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,329,111 samples, 0.10%)</title><rect x="174.8" y="789" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="177.82" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="181" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="191.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,420,183 samples, 0.15%)</title><rect x="73.4" y="437" width="1.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="76.39" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (53,886,826 samples, 0.16%)</title><rect x="160.3" y="709" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,075,791 samples, 0.08%)</title><rect x="60.9" y="277" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.88" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,235,446 samples, 0.08%)</title><rect x="127.8" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.78" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,123,863 samples, 0.10%)</title><rect x="130.7" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.67" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,278,931 samples, 0.08%)</title><rect x="150.5" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.46" y="575.5" ></text>
</g>
<g >
<title>__dlopen (25,845,919 samples, 0.07%)</title><rect x="173.9" y="517" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="176.94" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (63,006,133 samples, 0.18%)</title><rect x="131.8" y="645" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.83" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (30,376,332 samples, 0.09%)</title><rect x="177.1" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.11" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (68,392,612 samples, 0.20%)</title><rect x="1187.7" y="1013" width="2.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1190.68" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,342,268 samples, 0.08%)</title><rect x="88.6" y="245" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="91.61" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,951 samples, 0.08%)</title><rect x="97.1" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.11" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,946,386 samples, 0.08%)</title><rect x="124.8" y="581" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="127.82" y="591.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (25,845,919 samples, 0.07%)</title><rect x="173.9" y="485" width="0.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="176.94" y="495.5" ></text>
</g>
<g >
<title>PyIter_Next (34,220,794 samples, 0.10%)</title><rect x="137.5" y="453" width="1.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="140.54" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (45,251,910 samples, 0.13%)</title><rect x="163.0" y="453" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="166.01" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (102,087,104 samples, 0.29%)</title><rect x="1104.4" y="597" width="3.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1107.39" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;float const, unsigned long&gt; &gt;::_M_valptr (33,541,454 samples, 0.10%)</title><rect x="1143.7" y="597" width="1.1" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1146.70" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (698,320,709 samples, 2.01%)</title><rect x="152.2" y="933" width="23.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="155.25" y="943.5" >_..</text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,825 samples, 0.08%)</title><rect x="118.9" y="437" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="121.90" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (61,286,717 samples, 0.18%)</title><rect x="153.4" y="517" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.35" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,217,951 samples, 0.08%)</title><rect x="105.4" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="351.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,244,854 samples, 0.08%)</title><rect x="181.0" y="293" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="184.01" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (92,596,871 samples, 0.27%)</title><rect x="82.0" y="677" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="85.04" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (68,298,346 samples, 0.20%)</title><rect x="1096.3" y="565" width="2.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1099.29" y="575.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (33,857,447 samples, 0.10%)</title><rect x="768.7" y="325" width="1.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="771.70" y="335.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,575 samples, 0.08%)</title><rect x="123.9" y="485" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="126.93" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (53,173,386 samples, 0.15%)</title><rect x="183.0" y="469" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,123,863 samples, 0.10%)</title><rect x="130.7" y="389" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="133.67" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (102,108,673 samples, 0.29%)</title><rect x="193.8" y="517" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (47,332,264 samples, 0.14%)</title><rect x="185.7" y="325" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="188.73" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,421,936 samples, 0.09%)</title><rect x="187.3" y="357" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="190.33" y="367.5" ></text>
</g>
<g >
<title>do_anonymous_page (608,252,246 samples, 1.75%)</title><rect x="751.5" y="341" width="20.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="754.49" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (121,865,673 samples, 0.35%)</title><rect x="119.8" y="949" width="4.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="122.79" y="959.5" ></text>
</g>
<g >
<title>PyObject_GetItem (31,556,724 samples, 0.09%)</title><rect x="534.3" y="853" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="537.28" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (68,102,428 samples, 0.20%)</title><rect x="193.8" y="341" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,004,945 samples, 0.08%)</title><rect x="149.5" y="533" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="152.48" y="543.5" ></text>
</g>
<g >
<title>_start (19,496,806,429 samples, 56.09%)</title><rect x="505.0" y="1029" width="661.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="507.99" y="1039.5" >_start</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,445,907 samples, 0.17%)</title><rect x="136.6" y="549" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="139.65" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,205,595 samples, 0.08%)</title><rect x="89.5" y="389" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="92.51" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,216,513 samples, 0.08%)</title><rect x="110.8" y="341" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="113.82" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,527 samples, 0.08%)</title><rect x="188.4" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="463.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (26,004,184 samples, 0.07%)</title><rect x="98.0" y="565" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="101.00" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,215,732 samples, 0.08%)</title><rect x="103.6" y="581" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.60" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,127,559 samples, 0.10%)</title><rect x="126.6" y="501" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="129.62" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,595 samples, 0.08%)</title><rect x="89.5" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.51" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,278,931 samples, 0.08%)</title><rect x="150.5" y="677" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.46" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (105,966,573 samples, 0.30%)</title><rect x="184.8" y="485" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.84" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,210,575 samples, 0.08%)</title><rect x="123.9" y="805" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="126.93" y="815.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,110,184 samples, 0.10%)</title><rect x="546.7" y="437" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="549.68" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (102,108,673 samples, 0.29%)</title><rect x="193.8" y="773" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (52,587,326 samples, 0.15%)</title><rect x="122.1" y="645" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.14" y="655.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;unsigned long const*&gt; (34,106,685 samples, 0.10%)</title><rect x="38.4" y="1013" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="41.36" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (85,626,136 samples, 0.25%)</title><rect x="93.3" y="677" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.31" y="687.5" ></text>
</g>
<g >
<title>__do_page_fault (169,582,644 samples, 0.49%)</title><rect x="650.5" y="421" width="5.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="653.46" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (27,186,157 samples, 0.08%)</title><rect x="80.2" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.22" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (34,106,052 samples, 0.10%)</title><rect x="176.0" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (128,216,512 samples, 0.37%)</title><rect x="105.4" y="725" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="735.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,682,193 samples, 0.10%)</title><rect x="119.8" y="421" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="122.84" y="431.5" ></text>
</g>
<g >
<title>std::make_pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (33,417,057 samples, 0.10%)</title><rect x="994.8" y="549" width="1.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="997.77" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,732,820 samples, 0.23%)</title><rect x="197.3" y="853" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="200.25" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,404 samples, 0.08%)</title><rect x="73.4" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.39" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (52,428,438 samples, 0.15%)</title><rect x="530.4" y="309" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.43" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (242,638,290 samples, 0.70%)</title><rect x="125.7" y="965" width="8.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.73" y="975.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (3,583,673,456 samples, 10.31%)</title><rect x="657.4" y="453" width="121.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="660.37" y="463.5" >[libz.so.1.2.11]</text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (67,688,230 samples, 0.19%)</title><rect x="1082.4" y="453" width="2.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1085.42" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (68,220,276 samples, 0.20%)</title><rect x="199.9" y="453" width="2.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="202.92" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,400 samples, 0.08%)</title><rect x="81.1" y="245" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.15" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (59,988,303 samples, 0.17%)</title><rect x="70.4" y="453" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.39" y="463.5" ></text>
</g>
<g >
<title>std::forward&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (34,176,243 samples, 0.10%)</title><rect x="41.8" y="1013" width="1.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="44.83" y="1023.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,449,576 samples, 0.15%)</title><rect x="67.5" y="565" width="1.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="70.45" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (102,108,673 samples, 0.29%)</title><rect x="193.8" y="405" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; const*, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;*&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="293" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="817.48" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,847 samples, 0.08%)</title><rect x="151.4" y="661" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.36" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (29,004,945 samples, 0.08%)</title><rect x="149.5" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.48" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,189,412 samples, 0.09%)</title><rect x="109.7" y="597" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="112.73" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,178 samples, 0.08%)</title><rect x="140.7" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.72" y="463.5" ></text>
</g>
<g >
<title>array_where (33,676,455 samples, 0.10%)</title><rect x="147.4" y="405" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="150.45" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="325" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,244,854 samples, 0.08%)</title><rect x="181.0" y="373" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.01" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,547,019 samples, 0.08%)</title><rect x="192.9" y="725" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.88" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (34,162,268 samples, 0.10%)</title><rect x="69.2" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.23" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,587,326 samples, 0.15%)</title><rect x="122.1" y="565" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="125.14" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (27,186,157 samples, 0.08%)</title><rect x="80.2" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.22" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (31,199,465 samples, 0.09%)</title><rect x="128.7" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.67" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,845,919 samples, 0.07%)</title><rect x="173.9" y="645" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="176.94" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,647,249 samples, 0.09%)</title><rect x="152.2" y="485" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="155.25" y="495.5" ></text>
</g>
<g >
<title>numpy_pydatetime_import (49,558,201 samples, 0.14%)</title><rect x="112.6" y="693" width="1.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="115.60" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,527 samples, 0.08%)</title><rect x="188.4" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,397,176 samples, 0.15%)</title><rect x="191.1" y="661" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="194.10" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,127,559 samples, 0.10%)</title><rect x="126.6" y="533" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="129.62" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (164,051,206 samples, 0.47%)</title><rect x="93.3" y="805" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.31" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (136,427,191 samples, 0.39%)</title><rect x="1112.5" y="613" width="4.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1115.48" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,732,820 samples, 0.23%)</title><rect x="197.3" y="901" width="2.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="200.25" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (69,278,347 samples, 0.20%)</title><rect x="119.8" y="709" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.79" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (408,190,738 samples, 1.17%)</title><rect x="515.4" y="885" width="13.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="518.39" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,116 samples, 0.08%)</title><rect x="192.0" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.99" y="351.5" ></text>
</g>
<g >
<title>PyNumber_Remainder (26,214,847 samples, 0.08%)</title><rect x="151.4" y="837" width="0.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="154.36" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="821" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="831.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (34,099,048 samples, 0.10%)</title><rect x="79.1" y="581" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="82.07" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,373 samples, 0.08%)</title><rect x="184.8" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.84" y="415.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,428,438 samples, 0.15%)</title><rect x="530.4" y="501" width="1.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="533.43" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (29,004,945 samples, 0.08%)</title><rect x="149.5" y="757" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.48" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (279,738,645 samples, 0.80%)</title><rect x="82.0" y="709" width="9.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="85.04" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (49,558,201 samples, 0.14%)</title><rect x="112.6" y="517" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="115.60" y="527.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (34,045,713 samples, 0.10%)</title><rect x="845.6" y="645" width="1.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="848.63" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,547,019 samples, 0.08%)</title><rect x="192.9" y="821" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.88" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,496,117 samples, 0.15%)</title><rect x="91.5" y="661" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="94.53" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,449,576 samples, 0.15%)</title><rect x="67.5" y="613" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.45" y="623.5" ></text>
</g>
<g >
<title>array_item (26,237,174 samples, 0.08%)</title><rect x="91.5" y="341" width="0.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="94.53" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (102,392,919 samples, 0.29%)</title><rect x="1129.8" y="565" width="3.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1132.84" y="575.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,181,352 samples, 0.08%)</title><rect x="122.1" y="341" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="125.14" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,258,943 samples, 0.08%)</title><rect x="92.4" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.42" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (131,042,499 samples, 0.38%)</title><rect x="188.4" y="773" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,117,307 samples, 0.10%)</title><rect x="538.6" y="709" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="541.63" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (128,216,512 samples, 0.37%)</title><rect x="105.4" y="645" width="4.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.38" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,004,184 samples, 0.07%)</title><rect x="98.0" y="469" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="101.00" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (169,582,644 samples, 0.49%)</title><rect x="650.5" y="389" width="5.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="653.46" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate (67,966,643 samples, 0.20%)</title><rect x="931.2" y="517" width="2.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="934.21" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,106,052 samples, 0.10%)</title><rect x="176.0" y="773" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="178.95" y="783.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,404 samples, 0.08%)</title><rect x="73.4" y="341" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="76.39" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; const&amp;&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="389" width="1.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="817.48" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="437" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,405,974 samples, 0.08%)</title><rect x="123.0" y="341" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="126.03" y="351.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,129,470 samples, 0.08%)</title><rect x="134.0" y="373" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="136.97" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (32,189,412 samples, 0.09%)</title><rect x="109.7" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.73" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,575 samples, 0.08%)</title><rect x="123.9" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back (34,245,945 samples, 0.10%)</title><rect x="906.9" y="549" width="1.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="909.92" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,406,720 samples, 0.17%)</title><rect x="125.7" y="677" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.73" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (92,596,871 samples, 0.27%)</title><rect x="82.0" y="581" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.04" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (142,885,243 samples, 0.41%)</title><rect x="155.4" y="421" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.44" y="431.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (101,499,703 samples, 0.29%)</title><rect x="915.0" y="533" width="3.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="918.03" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,235,446 samples, 0.08%)</title><rect x="127.8" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.78" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (62,296,377 samples, 0.18%)</title><rect x="177.1" y="613" width="2.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="180.11" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,575 samples, 0.08%)</title><rect x="123.9" y="645" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="126.93" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="581" width="1.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="817.48" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (57,434,911 samples, 0.17%)</title><rect x="127.8" y="565" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="130.78" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (27,186,157 samples, 0.08%)</title><rect x="80.2" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.22" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (102,108,673 samples, 0.29%)</title><rect x="193.8" y="565" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="196.78" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="741" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="751.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,110,184 samples, 0.10%)</title><rect x="546.7" y="421" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="549.68" y="431.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (8,058,758,765 samples, 23.18%)</title><rect x="539.8" y="789" width="273.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="542.79" y="799.5" >PyObject_Vectorcall</text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,400 samples, 0.08%)</title><rect x="81.1" y="469" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="84.15" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (29,004,945 samples, 0.08%)</title><rect x="149.5" y="549" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="152.48" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,279,161 samples, 0.08%)</title><rect x="125.7" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="495.5" ></text>
</g>
<g >
<title>_PyArg_ParseTuple_SizeT (34,156,159 samples, 0.10%)</title><rect x="811.0" y="677" width="1.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="814.05" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (25,845,919 samples, 0.07%)</title><rect x="173.9" y="661" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.94" y="671.5" ></text>
</g>
<g >
<title>dlopen_doit (33,469,038 samples, 0.10%)</title><rect x="90.4" y="341" width="1.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="93.40" y="351.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (34,173,982 samples, 0.10%)</title><rect x="208.6" y="1013" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="211.56" y="1023.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (291,270,439 samples, 0.84%)</title><rect x="138.7" y="789" width="9.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="141.70" y="799.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (34,010,288 samples, 0.10%)</title><rect x="934.7" y="533" width="1.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="937.68" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,237,493 samples, 0.10%)</title><rect x="141.6" y="389" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="144.61" y="399.5" ></text>
</g>
<g >
<title>x86_pmu_enable (6,354,041 samples, 0.02%)</title><rect x="212.3" y="933" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="215.27" y="943.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (100,614,998 samples, 0.29%)</title><rect x="62.9" y="437" width="3.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="65.90" y="447.5" ></text>
</g>
<g >
<title>all (34,759,116,320 samples, 100%)</title><rect x="10.0" y="1061" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (59,392,419 samples, 0.17%)</title><rect x="138.7" y="485" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.70" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (60,406,720 samples, 0.17%)</title><rect x="125.7" y="661" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,075,791 samples, 0.08%)</title><rect x="60.9" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.88" y="511.5" ></text>
</g>
<g >
<title>page_fault (33,906,054 samples, 0.10%)</title><rect x="86.3" y="277" width="1.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="89.33" y="287.5" ></text>
</g>
<g >
<title>clear_page_erms (302,855,552 samples, 0.87%)</title><rect x="755.0" y="277" width="10.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="757.97" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (34,106,052 samples, 0.10%)</title><rect x="176.0" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (34,092,675 samples, 0.10%)</title><rect x="935.8" y="501" width="1.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="938.83" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,428,438 samples, 0.15%)</title><rect x="530.4" y="517" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="533.43" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (134,177,130 samples, 0.39%)</title><rect x="109.7" y="773" width="4.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.73" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,847 samples, 0.08%)</title><rect x="151.4" y="965" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.36" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,051,526 samples, 0.07%)</title><rect x="82.0" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.04" y="399.5" ></text>
</g>
<g >
<title>PyLong_FromLong (67,725,214 samples, 0.19%)</title><rect x="85.2" y="293" width="2.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="88.18" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,592,773 samples, 0.08%)</title><rect x="134.9" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (34,123,863 samples, 0.10%)</title><rect x="130.7" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.67" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,217,823 samples, 0.08%)</title><rect x="162.1" y="421" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="165.12" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (34,102,824 samples, 0.10%)</title><rect x="121.0" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.99" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (135,953,259 samples, 0.39%)</title><rect x="114.3" y="597" width="4.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="117.29" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="469" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (377,112,606 samples, 1.08%)</title><rect x="69.2" y="789" width="12.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.23" y="799.5" ></text>
</g>
<g >
<title>std::operator==&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; (34,271,550 samples, 0.10%)</title><rect x="1149.5" y="645" width="1.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1152.49" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (68,211,392 samples, 0.20%)</title><rect x="16.4" y="1013" width="2.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="19.42" y="1023.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (100,614,998 samples, 0.29%)</title><rect x="62.9" y="997" width="3.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="65.90" y="1007.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,106,052 samples, 0.10%)</title><rect x="176.0" y="533" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="178.95" y="543.5" ></text>
</g>
<g >
<title>native_write_msr (4,163,897 samples, 0.01%)</title><rect x="503.7" y="821" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="506.68" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,235,446 samples, 0.08%)</title><rect x="127.8" y="469" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.78" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;::pair (34,114,493 samples, 0.10%)</title><rect x="814.5" y="261" width="1.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="817.48" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="917" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="927.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (97,129,996 samples, 0.28%)</title><rect x="130.7" y="757" width="3.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="133.67" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,268 samples, 0.08%)</title><rect x="88.6" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.61" y="351.5" ></text>
</g>
<g >
<title>python3.12 (34,758,917,311 samples, 100.00%)</title><rect x="10.0" y="1045" width="1180.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="13.01" y="1055.5" >python3.12</text>
</g>
<g >
<title>PyObject_Vectorcall (26,213,506 samples, 0.08%)</title><rect x="135.8" y="533" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="138.76" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (47,332,264 samples, 0.14%)</title><rect x="185.7" y="245" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="188.73" y="255.5" ></text>
</g>
<g >
<title>_dlerror_run (33,469,038 samples, 0.10%)</title><rect x="90.4" y="389" width="1.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="93.40" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,217,823 samples, 0.08%)</title><rect x="162.1" y="293" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="165.12" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,075,791 samples, 0.08%)</title><rect x="60.9" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.88" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (441,587,532 samples, 1.27%)</title><rect x="1039.7" y="645" width="15.0" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1042.72" y="655.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (79,754,200 samples, 0.23%)</title><rect x="185.7" y="437" width="2.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="188.73" y="447.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (27,666,663 samples, 0.08%)</title><rect x="129.7" y="357" width="1.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="132.73" y="367.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (34,238,297 samples, 0.10%)</title><rect x="923.1" y="549" width="1.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="926.11" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (68,289,004 samples, 0.20%)</title><rect x="1185.4" y="1029" width="2.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1188.36" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="447.5" ></text>
</g>
<g >
<title>do_mmap (49,777,937 samples, 0.14%)</title><rect x="202.2" y="293" width="1.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="205.24" y="303.5" ></text>
</g>
<g >
<title>_Py_read (27,174,690 samples, 0.08%)</title><rect x="161.2" y="293" width="0.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="164.19" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,528 samples, 0.08%)</title><rect x="104.5" y="341" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.49" y="351.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,676,455 samples, 0.10%)</title><rect x="147.4" y="437" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="150.45" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,075,791 samples, 0.08%)</title><rect x="60.9" y="565" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="63.88" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (135,953,259 samples, 0.39%)</title><rect x="114.3" y="389" width="4.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="117.29" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (49,777,937 samples, 0.14%)</title><rect x="202.2" y="949" width="1.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="205.24" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,527 samples, 0.08%)</title><rect x="188.4" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="431.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,676,455 samples, 0.10%)</title><rect x="147.4" y="469" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="150.45" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (59,392,419 samples, 0.17%)</title><rect x="138.7" y="613" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.70" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (154,625,681 samples, 0.44%)</title><rect x="1169.1" y="1029" width="5.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1172.15" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (34,057,752 samples, 0.10%)</title><rect x="106.3" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.27" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (30,376,332 samples, 0.09%)</title><rect x="177.1" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.11" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,847 samples, 0.08%)</title><rect x="151.4" y="725" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.36" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,420,886 samples, 0.15%)</title><rect x="96.2" y="581" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.22" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (105,966,573 samples, 0.30%)</title><rect x="184.8" y="453" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="187.84" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (63,006,133 samples, 0.18%)</title><rect x="131.8" y="389" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.83" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (33,818,293 samples, 0.10%)</title><rect x="1157.6" y="629" width="1.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1160.58" y="639.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_not_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (34,025,697 samples, 0.10%)</title><rect x="937.0" y="565" width="1.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="939.99" y="575.5" ></text>
</g>
<g >
<title>do_user_addr_fault (33,641,241 samples, 0.10%)</title><rect x="154.3" y="261" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="157.29" y="271.5" ></text>
</g>
<g >
<title>task_numa_work (33,950,108 samples, 0.10%)</title><rect x="643.6" y="389" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="646.55" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,405,974 samples, 0.08%)</title><rect x="123.0" y="405" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="126.03" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (34,106,052 samples, 0.10%)</title><rect x="176.0" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="399.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (49,777,937 samples, 0.14%)</title><rect x="202.2" y="533" width="1.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="205.24" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (59,392,419 samples, 0.17%)</title><rect x="138.7" y="549" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.70" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (33,883,915 samples, 0.10%)</title><rect x="537.5" y="805" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="540.48" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="181" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="191.5" ></text>
</g>
<g >
<title>PyMem_Malloc (100,614,998 samples, 0.29%)</title><rect x="62.9" y="261" width="3.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="65.90" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (67,081,708 samples, 0.19%)</title><rect x="1166.9" y="1013" width="2.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1169.87" y="1023.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,390,467 samples, 0.15%)</title><rect x="197.3" y="405" width="1.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="200.25" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,449,828 samples, 0.10%)</title><rect x="181.9" y="885" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="184.90" y="895.5" ></text>
</g>
<g >
<title>native_write_msr (6,354,041 samples, 0.02%)</title><rect x="212.3" y="901" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="215.27" y="911.5" ></text>
</g>
<g >
<title>PySequence_Tuple (47,332,264 samples, 0.14%)</title><rect x="185.7" y="389" width="1.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="188.73" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,506 samples, 0.08%)</title><rect x="135.8" y="357" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.76" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,092,876,072 samples, 23.28%)</title><rect x="538.6" y="805" width="274.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="541.63" y="815.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>[python3.12] (116,669,387 samples, 0.34%)</title><rect x="156.3" y="373" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.32" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (31,920,045 samples, 0.09%)</title><rect x="178.1" y="469" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="181.14" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,099,048 samples, 0.10%)</title><rect x="79.1" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.07" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,528 samples, 0.08%)</title><rect x="104.5" y="741" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="107.49" y="751.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,278,931 samples, 0.08%)</title><rect x="150.5" y="421" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="153.46" y="431.5" ></text>
</g>
<g >
<title>rmqueue (36,796,981 samples, 0.11%)</title><rect x="132.7" y="165" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="135.72" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (26,244,854 samples, 0.08%)</title><rect x="181.0" y="261" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.01" y="271.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,208,528 samples, 0.08%)</title><rect x="104.5" y="405" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.49" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (49,558,201 samples, 0.14%)</title><rect x="112.6" y="501" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="115.60" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (246,269,607 samples, 0.71%)</title><rect x="82.0" y="693" width="8.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="85.04" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (85,827,428 samples, 0.25%)</title><rect x="66.3" y="965" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.32" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (68,000,587 samples, 0.20%)</title><rect x="1105.5" y="581" width="2.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1108.55" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (135,953,259 samples, 0.39%)</title><rect x="114.3" y="805" width="4.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="117.29" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (29,004,945 samples, 0.08%)</title><rect x="149.5" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.48" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,399,659 samples, 0.10%)</title><rect x="87.5" y="293" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.48" y="303.5" ></text>
</g>
<g >
<title>change_protection (32,189,412 samples, 0.09%)</title><rect x="109.7" y="197" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="112.73" y="207.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,449,828 samples, 0.10%)</title><rect x="181.9" y="997" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="184.90" y="1007.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,051,526 samples, 0.07%)</title><rect x="82.0" y="341" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="85.04" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (242,638,290 samples, 0.70%)</title><rect x="125.7" y="949" width="8.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="959.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,710,640 samples, 0.10%)</title><rect x="539.8" y="693" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="542.79" y="703.5" ></text>
</g>
<g >
<title>std::allocator&lt;float&gt;::allocator (34,142,530 samples, 0.10%)</title><rect x="1037.4" y="565" width="1.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1040.39" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (34,117,307 samples, 0.10%)</title><rect x="538.6" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="541.63" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (102,108,673 samples, 0.29%)</title><rect x="193.8" y="549" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="559.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (238,348,553 samples, 0.69%)</title><rect x="1007.5" y="549" width="8.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1010.47" y="559.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (3,780,530 samples, 0.01%)</title><rect x="1174.3" y="949" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1177.27" y="959.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,449,576 samples, 0.15%)</title><rect x="67.5" y="677" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="70.45" y="687.5" ></text>
</g>
<g >
<title>change_protection_range (32,189,412 samples, 0.09%)</title><rect x="109.7" y="181" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="112.73" y="191.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,123,863 samples, 0.10%)</title><rect x="130.7" y="373" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="133.67" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (236,819,209 samples, 0.68%)</title><rect x="152.2" y="709" width="8.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="155.25" y="719.5" ></text>
</g>
<g >
<title>_PyAST_Compile (26,209,825 samples, 0.08%)</title><rect x="118.9" y="309" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="121.90" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (68,334,394 samples, 0.20%)</title><rect x="1126.4" y="597" width="2.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1129.36" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,329,111 samples, 0.10%)</title><rect x="174.8" y="773" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.82" y="783.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,449,828 samples, 0.10%)</title><rect x="181.9" y="469" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="184.90" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (52,428,438 samples, 0.15%)</title><rect x="530.4" y="485" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.43" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="335.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (377,929,766 samples, 1.09%)</title><rect x="136.6" y="853" width="12.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="139.65" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (67,940,809 samples, 0.20%)</title><rect x="107.4" y="549" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.42" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_execve (15,855,993 samples, 0.05%)</title><rect x="1169.1" y="997" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1172.15" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,258,943 samples, 0.08%)</title><rect x="92.4" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.42" y="383.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,563,345 samples, 0.10%)</title><rect x="171.0" y="325" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="174.01" y="335.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, false, false&gt;::operator++ (67,039,030 samples, 0.19%)</title><rect x="1024.8" y="581" width="2.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1027.75" y="591.5" ></text>
</g>
<g >
<title>change_protection_range (33,950,108 samples, 0.10%)</title><rect x="643.6" y="341" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="646.55" y="351.5" ></text>
</g>
<g >
<title>task_numa_work (32,189,412 samples, 0.09%)</title><rect x="109.7" y="229" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="112.73" y="239.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,428,438 samples, 0.15%)</title><rect x="530.4" y="581" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="533.43" y="591.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (33,858,164 samples, 0.10%)</title><rect x="108.6" y="325" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="111.58" y="335.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (204,481,534 samples, 0.59%)</title><rect x="1008.6" y="533" width="7.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1011.62" y="543.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,212,364 samples, 0.10%)</title><rect x="39.5" y="1013" width="1.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="42.52" y="1023.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,390,467 samples, 0.15%)</title><rect x="197.3" y="437" width="1.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="200.25" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,215,732 samples, 0.08%)</title><rect x="103.6" y="645" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="106.60" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,506 samples, 0.08%)</title><rect x="135.8" y="341" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.76" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,421,936 samples, 0.09%)</title><rect x="187.3" y="341" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="190.33" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (204,171,960 samples, 0.59%)</title><rect x="153.4" y="565" width="6.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="156.35" y="575.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (49,777,937 samples, 0.14%)</title><rect x="202.2" y="309" width="1.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="205.24" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,406,720 samples, 0.17%)</title><rect x="125.7" y="741" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="128.73" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (45,251,910 samples, 0.13%)</title><rect x="163.0" y="437" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="166.01" y="447.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (33,925,971 samples, 0.10%)</title><rect x="900.0" y="485" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="902.99" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,547,019 samples, 0.08%)</title><rect x="192.9" y="901" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.88" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (92,596,871 samples, 0.27%)</title><rect x="82.0" y="533" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.04" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (142,885,243 samples, 0.41%)</title><rect x="155.4" y="501" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.44" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Deque_base (34,083,880 samples, 0.10%)</title><rect x="1067.4" y="613" width="1.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1070.40" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="725" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (85,626,136 samples, 0.25%)</title><rect x="93.3" y="469" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.31" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (47,332,264 samples, 0.14%)</title><rect x="185.7" y="261" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="188.73" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="229" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="239.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,397,176 samples, 0.15%)</title><rect x="191.1" y="485" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="194.10" y="495.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT::initialize_routing_table (32,932,509 samples, 0.09%)</title><rect x="813.4" y="677" width="1.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="816.36" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (49,777,937 samples, 0.14%)</title><rect x="202.2" y="805" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.24" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,732 samples, 0.08%)</title><rect x="103.6" y="693" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.60" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (28,349,249 samples, 0.08%)</title><rect x="72.4" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.43" y="447.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,342,353 samples, 0.08%)</title><rect x="199.0" y="533" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="202.03" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,209,825 samples, 0.08%)</title><rect x="118.9" y="629" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="121.90" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,152 samples, 0.08%)</title><rect x="170.1" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.12" y="319.5" ></text>
</g>
<g >
<title>vfs_read (27,174,690 samples, 0.08%)</title><rect x="161.2" y="181" width="0.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="164.19" y="191.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,602 samples, 0.08%)</title><rect x="180.1" y="533" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="183.12" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,377,852 samples, 0.10%)</title><rect x="66.3" y="869" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="69.32" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="853" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,732 samples, 0.08%)</title><rect x="103.6" y="597" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.60" y="607.5" ></text>
</g>
<g >
<title>[_asyncio.cpython-312-x86_64-linux-gnu.so] (26,244,854 samples, 0.08%)</title><rect x="181.0" y="629" width="0.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="184.01" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (231,878,020 samples, 0.67%)</title><rect x="140.7" y="597" width="7.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.72" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (272,975,539 samples, 0.79%)</title><rect x="1126.4" y="645" width="9.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1129.36" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="213" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="223.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,127,559 samples, 0.10%)</title><rect x="126.6" y="357" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="129.62" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (53,156,961 samples, 0.15%)</title><rect x="123.9" y="917" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="126.93" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (34,127,559 samples, 0.10%)</title><rect x="126.6" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.62" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,129,470 samples, 0.08%)</title><rect x="134.0" y="549" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="136.97" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,806,279 samples, 0.15%)</title><rect x="134.9" y="917" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="137.86" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (34,052,278 samples, 0.10%)</title><rect x="869.9" y="517" width="1.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="872.92" y="527.5" ></text>
</g>
<g >
<title>atime_needs_update (27,174,690 samples, 0.08%)</title><rect x="161.2" y="69" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="164.19" y="79.5" ></text>
</g>
<g >
<title>change_protection (33,950,108 samples, 0.10%)</title><rect x="643.6" y="357" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="646.55" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,237,174 samples, 0.08%)</title><rect x="91.5" y="533" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="94.53" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (68,097,003 samples, 0.20%)</title><rect x="1078.9" y="533" width="2.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1081.94" y="543.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (27,174,690 samples, 0.08%)</title><rect x="161.2" y="37" width="0.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="164.19" y="47.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,425,070 samples, 0.23%)</title><rect x="96.2" y="645" width="2.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="99.22" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (34,141,482 samples, 0.10%)</title><rect x="1069.7" y="629" width="1.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1072.71" y="639.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (59,392,419 samples, 0.17%)</title><rect x="138.7" y="389" width="2.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="141.70" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (49,777,937 samples, 0.14%)</title><rect x="202.2" y="885" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="205.24" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,528 samples, 0.08%)</title><rect x="104.5" y="885" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.49" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,847 samples, 0.08%)</title><rect x="151.4" y="709" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="154.36" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,946,386 samples, 0.08%)</title><rect x="124.8" y="741" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="127.82" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,946,386 samples, 0.08%)</title><rect x="124.8" y="597" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.82" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (32,421,936 samples, 0.09%)</title><rect x="187.3" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.33" y="399.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (53,396,557 samples, 0.15%)</title><rect x="80.2" y="533" width="1.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="83.22" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (27,666,663 samples, 0.08%)</title><rect x="129.7" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.73" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (26,217,823 samples, 0.08%)</title><rect x="162.1" y="277" width="0.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="165.12" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,390,467 samples, 0.15%)</title><rect x="197.3" y="341" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="200.25" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="693" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="703.5" ></text>
</g>
<g >
<title>PyUnicode_New (28,349,249 samples, 0.08%)</title><rect x="72.4" y="373" width="1.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="75.43" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,400 samples, 0.08%)</title><rect x="81.1" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.15" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (27,186,157 samples, 0.08%)</title><rect x="80.2" y="453" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="83.22" y="463.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (60,275,703 samples, 0.17%)</title><rect x="105.4" y="565" width="2.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="108.38" y="575.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~queue (34,083,880 samples, 0.10%)</title><rect x="1067.4" y="645" width="1.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1070.40" y="655.5" ></text>
</g>
<g >
<title>[offsets.cpython-312-x86_64-linux-gnu.so] (26,106,526 samples, 0.08%)</title><rect x="100.0" y="1013" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="103.04" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,935 samples, 0.08%)</title><rect x="96.2" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.22" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (52,449,576 samples, 0.15%)</title><rect x="67.5" y="757" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.45" y="767.5" ></text>
</g>
<g >
<title>__dlopen (33,469,038 samples, 0.10%)</title><rect x="90.4" y="405" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="93.40" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,162,268 samples, 0.10%)</title><rect x="69.2" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.23" y="367.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,847 samples, 0.08%)</title><rect x="151.4" y="885" width="0.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="154.36" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,258,943 samples, 0.08%)</title><rect x="92.4" y="501" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="95.42" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (664,991,598 samples, 1.91%)</title><rect x="152.2" y="917" width="22.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="155.25" y="927.5" >P..</text>
</g>
<g >
<title>[python3.12] (33,563,345 samples, 0.10%)</title><rect x="171.0" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.01" y="303.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,847 samples, 0.08%)</title><rect x="151.4" y="629" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="154.36" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,527 samples, 0.08%)</title><rect x="188.4" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="495.5" ></text>
</g>
<g >
<title>__pyx_pymod_exec__common (26,004,184 samples, 0.07%)</title><rect x="98.0" y="341" width="0.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="101.00" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,278,931 samples, 0.08%)</title><rect x="150.5" y="645" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="153.46" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (30,376,332 samples, 0.09%)</title><rect x="177.1" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.11" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,329,111 samples, 0.10%)</title><rect x="174.8" y="533" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="177.82" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,189,412 samples, 0.09%)</title><rect x="109.7" y="485" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.73" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (102,087,104 samples, 0.29%)</title><rect x="1104.4" y="613" width="3.5" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1107.39" y="623.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (34,266,536 samples, 0.10%)</title><rect x="843.3" y="645" width="1.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="846.31" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (33,469,038 samples, 0.10%)</title><rect x="90.4" y="565" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="93.40" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,257,327 samples, 0.08%)</title><rect x="173.1" y="373" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="176.05" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (59,392,419 samples, 0.17%)</title><rect x="138.7" y="373" width="2.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.70" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,883,915 samples, 0.10%)</title><rect x="537.5" y="837" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="540.48" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (97,129,996 samples, 0.28%)</title><rect x="130.7" y="917" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.67" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (34,106,052 samples, 0.10%)</title><rect x="176.0" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,123,863 samples, 0.10%)</title><rect x="130.7" y="549" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="133.67" y="559.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,682,193 samples, 0.10%)</title><rect x="119.8" y="341" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="122.84" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (69,278,347 samples, 0.20%)</title><rect x="119.8" y="661" width="2.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="122.79" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (102,108,673 samples, 0.29%)</title><rect x="193.8" y="437" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="196.78" y="447.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::stored_edge_property (33,250,872 samples, 0.10%)</title><rect x="816.8" y="661" width="1.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="819.79" y="671.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,099,048 samples, 0.10%)</title><rect x="79.1" y="517" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="82.07" y="527.5" ></text>
</g>
<g >
<title>_int_malloc (33,863,171 samples, 0.10%)</title><rect x="1106.7" y="533" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1109.70" y="543.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (33,771,918 samples, 0.10%)</title><rect x="33.8" y="1013" width="1.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="36.76" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (60,358,468 samples, 0.17%)</title><rect x="10.0" y="1013" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="13.01" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (69,278,347 samples, 0.20%)</title><rect x="119.8" y="725" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.79" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (102,108,673 samples, 0.29%)</title><rect x="193.8" y="693" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (68,220,276 samples, 0.20%)</title><rect x="199.9" y="805" width="2.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="202.92" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (53,886,826 samples, 0.16%)</title><rect x="160.3" y="725" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="163.29" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (602,788,704 samples, 1.73%)</title><rect x="783.7" y="501" width="20.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="786.66" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (135,953,259 samples, 0.39%)</title><rect x="114.3" y="741" width="4.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="117.29" y="751.5" ></text>
</g>
<g >
<title>PyUnicode_Join (34,220,794 samples, 0.10%)</title><rect x="137.5" y="261" width="1.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="140.54" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,779 samples, 0.08%)</title><rect x="74.3" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.28" y="383.5" ></text>
</g>
<g >
<title>_int_free (68,216,186 samples, 0.20%)</title><rect x="203.9" y="1013" width="2.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="206.93" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (29,004,945 samples, 0.08%)</title><rect x="149.5" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.48" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,587,326 samples, 0.15%)</title><rect x="122.1" y="629" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="125.14" y="639.5" ></text>
</g>
<g >
<title>boost::tuples::detail::cnull (33,810,085 samples, 0.10%)</title><rect x="31.5" y="1013" width="1.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="34.45" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (61,286,717 samples, 0.18%)</title><rect x="153.4" y="405" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.35" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (53,886,826 samples, 0.16%)</title><rect x="160.3" y="485" width="1.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="163.29" y="495.5" ></text>
</g>
<g >
<title>PyArray_CopyObject (33,377,852 samples, 0.10%)</title><rect x="66.3" y="821" width="1.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="69.32" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,951 samples, 0.08%)</title><rect x="97.1" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.11" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,189,412 samples, 0.09%)</title><rect x="109.7" y="613" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.73" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (49,558,201 samples, 0.14%)</title><rect x="112.6" y="341" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="115.60" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,575 samples, 0.08%)</title><rect x="123.9" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="463.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,137,388 samples, 0.10%)</title><rect x="839.8" y="645" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="842.83" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,194,060 samples, 0.08%)</title><rect x="191.1" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.10" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,075,791 samples, 0.08%)</title><rect x="60.9" y="533" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="63.88" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (236,819,209 samples, 0.68%)</title><rect x="152.2" y="661" width="8.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="155.25" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,189,412 samples, 0.09%)</title><rect x="109.7" y="629" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="112.73" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (33,995,811 samples, 0.10%)</title><rect x="864.1" y="549" width="1.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="867.13" y="559.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (101,764,676 samples, 0.29%)</title><rect x="970.6" y="437" width="3.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="973.56" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,278,931 samples, 0.08%)</title><rect x="150.5" y="613" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.46" y="623.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (26,279,161 samples, 0.08%)</title><rect x="125.7" y="133" width="0.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="128.73" y="143.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,051,526 samples, 0.07%)</title><rect x="82.0" y="405" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="85.04" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,279,161 samples, 0.08%)</title><rect x="125.7" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="511.5" ></text>
</g>
<g >
<title>get_view_from_index (33,529,779 samples, 0.10%)</title><rect x="61.8" y="789" width="1.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="64.77" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="885" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="895.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,213,951 samples, 0.08%)</title><rect x="97.1" y="565" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="100.11" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="885" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,247,899 samples, 0.08%)</title><rect x="68.3" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.34" y="319.5" ></text>
</g>
<g >
<title>PyDict_SetItem (26,210,400 samples, 0.08%)</title><rect x="81.1" y="197" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="84.15" y="207.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,547,019 samples, 0.08%)</title><rect x="192.9" y="517" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="195.88" y="527.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,067,118 samples, 0.10%)</title><rect x="1137.9" y="613" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1140.94" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (159,139,959 samples, 0.46%)</title><rect x="183.0" y="565" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (29,004,945 samples, 0.08%)</title><rect x="149.5" y="773" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="152.48" y="783.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,161,173 samples, 0.10%)</title><rect x="782.5" y="485" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="785.50" y="495.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (33,309,113 samples, 0.10%)</title><rect x="168.1" y="341" width="1.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="171.10" y="351.5" ></text>
</g>
<g >
<title>PyImport_Import (49,558,201 samples, 0.14%)</title><rect x="112.6" y="645" width="1.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="115.60" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,353 samples, 0.08%)</title><rect x="199.0" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.03" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (34,117,307 samples, 0.10%)</title><rect x="538.6" y="773" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="541.63" y="783.5" ></text>
</g>
<g >
<title>_int_free (34,092,675 samples, 0.10%)</title><rect x="935.8" y="469" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="938.83" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,469,038 samples, 0.10%)</title><rect x="90.4" y="629" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="93.40" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,181,352 samples, 0.08%)</title><rect x="122.1" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.14" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (49,558,201 samples, 0.14%)</title><rect x="112.6" y="533" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="115.60" y="543.5" ></text>
</g>
<g >
<title>_int_free (68,255,646 samples, 0.20%)</title><rect x="1107.9" y="565" width="2.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1110.85" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (52,233,202 samples, 0.15%)</title><rect x="60.0" y="789" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,420 samples, 0.08%)</title><rect x="148.6" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.59" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,244,854 samples, 0.08%)</title><rect x="181.0" y="245" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.01" y="255.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (26,198,215 samples, 0.08%)</title><rect x="139.8" y="341" width="0.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="142.83" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (238,272,498 samples, 0.69%)</title><rect x="925.4" y="533" width="8.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="928.43" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (69,278,347 samples, 0.20%)</title><rect x="119.8" y="645" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="122.79" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,946,386 samples, 0.08%)</title><rect x="124.8" y="661" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="127.82" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;::vector (34,114,493 samples, 0.10%)</title><rect x="814.5" y="341" width="1.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="817.48" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (510,707,122 samples, 1.47%)</title><rect x="511.9" y="917" width="17.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="514.91" y="927.5" ></text>
</g>
<g >
<title>PyInit__multiarray_umath (49,558,201 samples, 0.14%)</title><rect x="112.6" y="709" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="115.60" y="719.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (8,036,246 samples, 0.02%)</title><rect x="212.3" y="965" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="215.27" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,449,828 samples, 0.10%)</title><rect x="181.9" y="773" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.90" y="783.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (29,004,945 samples, 0.08%)</title><rect x="149.5" y="373" width="1.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="152.48" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,244,854 samples, 0.08%)</title><rect x="181.0" y="469" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.01" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (52,429,517 samples, 0.15%)</title><rect x="110.8" y="405" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.82" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (34,108,281 samples, 0.10%)</title><rect x="1150.6" y="645" width="1.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1153.65" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,099,048 samples, 0.10%)</title><rect x="79.1" y="389" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.07" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,116 samples, 0.08%)</title><rect x="192.0" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.99" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="309" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (53,886,826 samples, 0.16%)</title><rect x="160.3" y="565" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="163.29" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,123,863 samples, 0.10%)</title><rect x="130.7" y="629" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="133.67" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,449,828 samples, 0.10%)</title><rect x="181.9" y="645" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.90" y="655.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (136,458,694 samples, 0.39%)</title><rect x="962.4" y="517" width="4.7" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="965.45" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (49,777,937 samples, 0.14%)</title><rect x="202.2" y="261" width="1.7" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="205.24" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (34,209,714 samples, 0.10%)</title><rect x="529.2" y="853" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="532.25" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (27,666,663 samples, 0.08%)</title><rect x="129.7" y="533" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="132.73" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (306,153,672 samples, 0.88%)</title><rect x="1075.5" y="597" width="10.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1078.48" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (34,082,645 samples, 0.10%)</title><rect x="107.4" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.42" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,257,327 samples, 0.08%)</title><rect x="173.1" y="389" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.05" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (27,186,157 samples, 0.08%)</title><rect x="80.2" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.22" y="303.5" ></text>
</g>
<g >
<title>change_pte_range (34,079,130 samples, 0.10%)</title><rect x="961.3" y="373" width="1.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="964.29" y="383.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pop (1,260,630,517 samples, 3.63%)</title><rect x="865.3" y="565" width="42.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="868.28" y="575.5" >boos..</text>
</g>
<g >
<title>[python3.12] (60,196,505 samples, 0.17%)</title><rect x="143.6" y="309" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="146.62" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (100,614,998 samples, 0.29%)</title><rect x="62.9" y="469" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="65.90" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_max_size (34,151,361 samples, 0.10%)</title><rect x="1085.9" y="581" width="1.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1088.88" y="591.5" ></text>
</g>
<g >
<title>get_page_from_freelist (33,641,241 samples, 0.10%)</title><rect x="154.3" y="165" width="1.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="157.29" y="175.5" ></text>
</g>
<g >
<title>_PyObject_Call (27,666,663 samples, 0.08%)</title><rect x="129.7" y="501" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="132.73" y="511.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,429,517 samples, 0.15%)</title><rect x="110.8" y="437" width="1.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="113.82" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,595 samples, 0.08%)</title><rect x="89.5" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.51" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="319.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,461,466 samples, 0.15%)</title><rect x="93.3" y="453" width="1.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="96.31" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (136,179,659 samples, 0.39%)</title><rect x="1050.1" y="565" width="4.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1053.08" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,825 samples, 0.08%)</title><rect x="118.9" y="373" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.90" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (62,296,377 samples, 0.18%)</title><rect x="177.1" y="549" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="180.11" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (236,819,209 samples, 0.68%)</title><rect x="152.2" y="837" width="8.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="155.25" y="847.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,469,038 samples, 0.10%)</title><rect x="90.4" y="693" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="93.40" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (27,666,663 samples, 0.08%)</title><rect x="129.7" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.73" y="431.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,779 samples, 0.08%)</title><rect x="74.3" y="405" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="77.28" y="415.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (34,042,955 samples, 0.10%)</title><rect x="653.9" y="309" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="656.90" y="319.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (33,950,108 samples, 0.10%)</title><rect x="643.6" y="437" width="1.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="646.55" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,424,260 samples, 0.15%)</title><rect x="103.6" y="981" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.60" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (32,189,412 samples, 0.09%)</title><rect x="109.7" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.73" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (78,425,070 samples, 0.23%)</title><rect x="96.2" y="613" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.22" y="623.5" ></text>
</g>
<g >
<title>__mmap64 (49,777,937 samples, 0.14%)</title><rect x="202.2" y="405" width="1.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="205.24" y="415.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (102,272,392 samples, 0.29%)</title><rect x="779.0" y="453" width="3.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="782.03" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (134,177,130 samples, 0.39%)</title><rect x="109.7" y="725" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.73" y="735.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (101,124,873 samples, 0.29%)</title><rect x="85.2" y="341" width="3.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="88.18" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,278,931 samples, 0.08%)</title><rect x="150.5" y="549" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.46" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,247,899 samples, 0.08%)</title><rect x="68.3" y="389" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="71.34" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (34,123,863 samples, 0.10%)</title><rect x="130.7" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.67" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="335.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (159,139,959 samples, 0.46%)</title><rect x="183.0" y="613" width="5.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="186.03" y="623.5" ></text>
</g>
<g >
<title>_int_free (33,927,962 samples, 0.10%)</title><rect x="19.9" y="1013" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="22.88" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (203,774,549 samples, 0.59%)</title><rect x="505.0" y="917" width="6.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="507.99" y="927.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,215,732 samples, 0.08%)</title><rect x="103.6" y="709" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="106.60" y="719.5" ></text>
</g>
<g >
<title>PyObject_Malloc (34,110,184 samples, 0.10%)</title><rect x="546.7" y="533" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="549.68" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,353 samples, 0.08%)</title><rect x="199.0" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.03" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (53,038,442 samples, 0.15%)</title><rect x="530.4" y="645" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="533.41" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,217,823 samples, 0.08%)</title><rect x="162.1" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="165.12" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,075,791 samples, 0.08%)</title><rect x="60.9" y="485" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="63.88" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,732,820 samples, 0.23%)</title><rect x="197.3" y="597" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="200.25" y="607.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,217,951 samples, 0.08%)</title><rect x="105.4" y="389" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="108.38" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,449,828 samples, 0.10%)</title><rect x="181.9" y="485" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.90" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,547,019 samples, 0.08%)</title><rect x="192.9" y="885" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="195.88" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (59,392,419 samples, 0.17%)</title><rect x="138.7" y="421" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.70" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,215,732 samples, 0.08%)</title><rect x="103.6" y="533" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="106.60" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (402,326,470 samples, 1.16%)</title><rect x="160.3" y="773" width="13.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="163.29" y="783.5" ></text>
</g>
<g >
<title>_PyObject_Call (92,596,871 samples, 0.27%)</title><rect x="82.0" y="613" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.04" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,647,249 samples, 0.09%)</title><rect x="152.2" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="155.25" y="367.5" ></text>
</g>
<g >
<title>clear_page_erms (33,641,241 samples, 0.10%)</title><rect x="154.3" y="149" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="157.29" y="159.5" ></text>
</g>
<g >
<title>_PyObject_Call (97,129,996 samples, 0.28%)</title><rect x="130.7" y="837" width="3.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="133.67" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,847 samples, 0.08%)</title><rect x="151.4" y="613" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.36" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="901" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,157,411 samples, 0.08%)</title><rect x="60.0" y="245" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (33,906,054 samples, 0.10%)</title><rect x="86.3" y="229" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="89.33" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (34,099,048 samples, 0.10%)</title><rect x="79.1" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.07" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,129,470 samples, 0.08%)</title><rect x="134.0" y="517" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="136.97" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (236,819,209 samples, 0.68%)</title><rect x="152.2" y="789" width="8.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.25" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,602 samples, 0.08%)</title><rect x="180.1" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.12" y="351.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (68,390,463 samples, 0.20%)</title><rect x="1061.6" y="629" width="2.4" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1064.64" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,449,576 samples, 0.15%)</title><rect x="67.5" y="853" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="70.45" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="565" width="7.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1162.88" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,057,752 samples, 0.10%)</title><rect x="106.3" y="341" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="109.27" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33,449,828 samples, 0.10%)</title><rect x="181.9" y="293" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="184.90" y="303.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,215,856 samples, 0.08%)</title><rect x="155.4" y="341" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="158.44" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,806,279 samples, 0.15%)</title><rect x="134.9" y="725" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.86" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (236,819,209 samples, 0.68%)</title><rect x="152.2" y="741" width="8.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="155.25" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (33,329,111 samples, 0.10%)</title><rect x="174.8" y="901" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.82" y="911.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (102,108,673 samples, 0.29%)</title><rect x="193.8" y="597" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="196.78" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (134,177,130 samples, 0.39%)</title><rect x="109.7" y="805" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.73" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (164,051,206 samples, 0.47%)</title><rect x="93.3" y="901" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.31" y="911.5" ></text>
</g>
<g >
<title>__handle_mm_fault (169,582,644 samples, 0.49%)</title><rect x="650.5" y="373" width="5.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="653.46" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,528 samples, 0.08%)</title><rect x="104.5" y="421" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.49" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,106,052 samples, 0.10%)</title><rect x="176.0" y="741" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="178.95" y="751.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,449,576 samples, 0.15%)</title><rect x="67.5" y="821" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="70.45" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (134,989,158 samples, 0.39%)</title><rect x="1169.7" y="997" width="4.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1172.68" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (33,329,111 samples, 0.10%)</title><rect x="174.8" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.82" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (30,376,332 samples, 0.09%)</title><rect x="177.1" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.11" y="463.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms (34,129,633 samples, 0.10%)</title><rect x="806.4" y="661" width="1.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="809.42" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (78,645,323 samples, 0.23%)</title><rect x="188.4" y="629" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (59,392,419 samples, 0.17%)</title><rect x="138.7" y="517" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.70" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,946,386 samples, 0.08%)</title><rect x="124.8" y="677" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="127.82" y="687.5" ></text>
</g>
<g >
<title>__count_memcg_events (33,857,447 samples, 0.10%)</title><rect x="768.7" y="309" width="1.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="771.70" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (49,558,201 samples, 0.14%)</title><rect x="112.6" y="437" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="115.60" y="447.5" ></text>
</g>
<g >
<title>__pyx_pymod_exec_bit_generator (26,004,184 samples, 0.07%)</title><rect x="98.0" y="581" width="0.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="101.00" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (69,278,347 samples, 0.20%)</title><rect x="119.8" y="629" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="122.79" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (236,819,209 samples, 0.68%)</title><rect x="152.2" y="629" width="8.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="155.25" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (159,139,959 samples, 0.46%)</title><rect x="183.0" y="773" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,353 samples, 0.08%)</title><rect x="199.0" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.03" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (45,251,910 samples, 0.13%)</title><rect x="163.0" y="389" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="166.01" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (138,881,420 samples, 0.40%)</title><rect x="169.2" y="469" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="172.23" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::max_size (33,669,437 samples, 0.10%)</title><rect x="46.5" y="1013" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="49.45" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,602 samples, 0.08%)</title><rect x="180.1" y="597" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.12" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (167,117,181 samples, 0.48%)</title><rect x="73.4" y="469" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.39" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (67,940,809 samples, 0.20%)</title><rect x="107.4" y="421" width="2.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="110.42" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (67,805,646 samples, 0.20%)</title><rect x="971.7" y="405" width="2.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="974.71" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,075,791 samples, 0.08%)</title><rect x="60.9" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.88" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33,925,019 samples, 0.10%)</title><rect x="528.1" y="821" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="531.10" y="831.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (26,217,823 samples, 0.08%)</title><rect x="162.1" y="197" width="0.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="165.12" y="207.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,214,847 samples, 0.08%)</title><rect x="151.4" y="741" width="0.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="154.36" y="751.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,205,595 samples, 0.08%)</title><rect x="89.5" y="517" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="92.51" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,951 samples, 0.08%)</title><rect x="97.1" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.11" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,645,323 samples, 0.23%)</title><rect x="188.4" y="549" width="2.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="191.43" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,390,467 samples, 0.15%)</title><rect x="197.3" y="485" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="200.25" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,406,720 samples, 0.17%)</title><rect x="125.7" y="613" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="128.73" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (85,827,428 samples, 0.25%)</title><rect x="66.3" y="949" width="2.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="69.32" y="959.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,213,951 samples, 0.08%)</title><rect x="97.1" y="357" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="100.11" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (27,666,663 samples, 0.08%)</title><rect x="129.7" y="613" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="132.73" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,257,327 samples, 0.08%)</title><rect x="173.1" y="325" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.05" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (195,466,430 samples, 0.56%)</title><rect x="72.4" y="533" width="6.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.43" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (249,061,769 samples, 0.72%)</title><rect x="193.8" y="1013" width="8.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="196.78" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (53,396,557 samples, 0.15%)</title><rect x="80.2" y="565" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.22" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,466,419 samples, 0.08%)</title><rect x="172.2" y="261" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="175.15" y="271.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,075,791 samples, 0.08%)</title><rect x="60.9" y="453" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="63.88" y="463.5" ></text>
</g>
<g >
<title>PyDict_MergeFromSeq2 (26,385,177 samples, 0.08%)</title><rect x="169.2" y="309" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="172.23" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,946,386 samples, 0.08%)</title><rect x="124.8" y="549" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="127.82" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (140,967,987 samples, 0.41%)</title><rect x="177.1" y="725" width="4.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="180.11" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (28,349,249 samples, 0.08%)</title><rect x="72.4" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.43" y="415.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (30,376,332 samples, 0.09%)</title><rect x="177.1" y="357" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="180.11" y="367.5" ></text>
</g>
<g >
<title>operator new (68,097,003 samples, 0.20%)</title><rect x="1078.9" y="485" width="2.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1081.94" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (49,558,201 samples, 0.14%)</title><rect x="112.6" y="661" width="1.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="115.60" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="661" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,449,828 samples, 0.10%)</title><rect x="181.9" y="357" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.90" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (57,434,911 samples, 0.17%)</title><rect x="127.8" y="517" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.78" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,129,470 samples, 0.08%)</title><rect x="134.0" y="661" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="136.97" y="671.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (34,199,172 samples, 0.10%)</title><rect x="858.3" y="565" width="1.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="861.34" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (348,439,644 samples, 1.00%)</title><rect x="162.1" y="725" width="11.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="165.12" y="735.5" ></text>
</g>
<g >
<title>PyArray_DescrConverter (34,156,159 samples, 0.10%)</title><rect x="811.0" y="645" width="1.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="814.05" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="933" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="943.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,429,517 samples, 0.15%)</title><rect x="110.8" y="501" width="1.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="113.82" y="511.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (68,171,099 samples, 0.20%)</title><rect x="832.9" y="613" width="2.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="835.89" y="623.5" ></text>
</g>
<g >
<title>__do_page_fault (34,117,307 samples, 0.10%)</title><rect x="538.6" y="485" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="541.63" y="495.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,083,657 samples, 0.10%)</title><rect x="1100.9" y="613" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1103.91" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,420 samples, 0.08%)</title><rect x="148.6" y="693" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.59" y="703.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long&gt; (136,022,662 samples, 0.39%)</title><rect x="1028.2" y="581" width="4.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1031.16" y="591.5" ></text>
</g>
<g >
<title>down_read_trylock (34,175,465 samples, 0.10%)</title><rect x="772.1" y="389" width="1.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="775.14" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,645,323 samples, 0.23%)</title><rect x="188.4" y="661" width="2.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.43" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (78,732,820 samples, 0.23%)</title><rect x="197.3" y="645" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.25" y="655.5" ></text>
</g>
<g >
<title>__GI___close (26,342,268 samples, 0.08%)</title><rect x="88.6" y="261" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="91.61" y="271.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (33,329,111 samples, 0.10%)</title><rect x="174.8" y="805" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="177.82" y="815.5" ></text>
</g>
<g >
<title>array_assign_subscript (33,529,779 samples, 0.10%)</title><rect x="61.8" y="805" width="1.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="64.77" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="383.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,129,470 samples, 0.08%)</title><rect x="134.0" y="597" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="136.97" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (33,164,670 samples, 0.10%)</title><rect x="95.1" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.10" y="415.5" ></text>
</g>
<g >
<title>page_fault (676,030,300 samples, 1.94%)</title><rect x="750.4" y="437" width="22.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="753.35" y="447.5" >p..</text>
</g>
<g >
<title>[python3.12] (26,209,152 samples, 0.08%)</title><rect x="131.8" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.83" y="367.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (169,324,932 samples, 0.49%)</title><rect x="822.5" y="645" width="5.8" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="825.54" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,602 samples, 0.08%)</title><rect x="180.1" y="277" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.12" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~_Vector_base (101,954,784 samples, 0.29%)</title><rect x="1098.6" y="629" width="3.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1101.61" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (63,006,133 samples, 0.18%)</title><rect x="131.8" y="453" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.83" y="463.5" ></text>
</g>
<g >
<title>__GI_munmap (33,925,019 samples, 0.10%)</title><rect x="528.1" y="837" width="1.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="531.10" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_use_relocate (34,004,084 samples, 0.10%)</title><rect x="1124.1" y="613" width="1.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1127.05" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,946,386 samples, 0.08%)</title><rect x="124.8" y="613" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="127.82" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (121,865,673 samples, 0.35%)</title><rect x="119.8" y="981" width="4.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="122.79" y="991.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (164,051,206 samples, 0.47%)</title><rect x="93.3" y="773" width="5.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="96.31" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,513 samples, 0.08%)</title><rect x="110.8" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.82" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (102,108,673 samples, 0.29%)</title><rect x="193.8" y="485" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (86,157,674 samples, 0.25%)</title><rect x="169.2" y="357" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.23" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,869 samples, 0.08%)</title><rect x="58.0" y="1013" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="60.97" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,279,161 samples, 0.08%)</title><rect x="125.7" y="277" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="128.73" y="287.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,237,174 samples, 0.08%)</title><rect x="91.5" y="565" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="94.53" y="575.5" ></text>
</g>
<g >
<title>PyErr_Format (26,216,513 samples, 0.08%)</title><rect x="110.8" y="309" width="0.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="113.82" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (85,762,981 samples, 0.25%)</title><rect x="60.0" y="933" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (34,057,752 samples, 0.10%)</title><rect x="106.3" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.27" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (68,255,646 samples, 0.20%)</title><rect x="1107.9" y="581" width="2.3" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1110.85" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (102,108,673 samples, 0.29%)</title><rect x="193.8" y="741" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="196.78" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (316,729,477 samples, 0.91%)</title><rect x="183.0" y="981" width="10.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="186.03" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,278,931 samples, 0.08%)</title><rect x="150.5" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.46" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,353 samples, 0.08%)</title><rect x="199.0" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.03" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="453" width="1.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="817.48" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (53,156,961 samples, 0.15%)</title><rect x="123.9" y="901" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="126.93" y="911.5" ></text>
</g>
<g >
<title>PyArray_NewFromDescr_int (31,556,724 samples, 0.09%)</title><rect x="534.3" y="805" width="1.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="537.28" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="853" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="863.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (34,137,416 samples, 0.10%)</title><rect x="1105.5" y="549" width="1.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1108.55" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,353 samples, 0.08%)</title><rect x="199.0" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.03" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (28,349,249 samples, 0.08%)</title><rect x="72.4" y="485" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.43" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,595 samples, 0.08%)</title><rect x="89.5" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.51" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (97,129,996 samples, 0.28%)</title><rect x="130.7" y="885" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.67" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,527 samples, 0.08%)</title><rect x="188.4" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (61,286,717 samples, 0.18%)</title><rect x="153.4" y="501" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.35" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,257,327 samples, 0.08%)</title><rect x="173.1" y="357" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.05" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_read (26,279,161 samples, 0.08%)</title><rect x="125.7" y="309" width="0.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="128.73" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (52,428,438 samples, 0.15%)</title><rect x="530.4" y="405" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.43" y="415.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (164,051,206 samples, 0.47%)</title><rect x="93.3" y="741" width="5.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="96.31" y="751.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,278,931 samples, 0.08%)</title><rect x="150.5" y="869" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="153.46" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (33,729,379 samples, 0.10%)</title><rect x="527.0" y="821" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="529.95" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,528 samples, 0.08%)</title><rect x="104.5" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.49" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,547,019 samples, 0.08%)</title><rect x="192.9" y="933" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.88" y="943.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (602,788,704 samples, 1.73%)</title><rect x="783.7" y="517" width="20.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="786.66" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,419,079,344 samples, 4.08%)</title><rect x="134.9" y="1013" width="48.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.86" y="1023.5" >_PyE..</text>
</g>
<g >
<title>[python3.12] (52,449,576 samples, 0.15%)</title><rect x="67.5" y="517" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.45" y="527.5" ></text>
</g>
<g >
<title>do_page_fault (169,582,644 samples, 0.49%)</title><rect x="650.5" y="437" width="5.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="653.46" y="447.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::operator[] (34,108,281 samples, 0.10%)</title><rect x="1150.6" y="661" width="1.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1153.65" y="671.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (6,705,716 samples, 0.02%)</title><rect x="503.6" y="965" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="506.61" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call (59,392,419 samples, 0.17%)</title><rect x="138.7" y="565" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="141.70" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (34,220,794 samples, 0.10%)</title><rect x="137.5" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.54" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (7,956,842,573 samples, 22.89%)</title><rect x="540.9" y="709" width="270.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="543.93" y="719.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (34,127,559 samples, 0.10%)</title><rect x="126.6" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.62" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,547,019 samples, 0.08%)</title><rect x="192.9" y="757" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.88" y="767.5" ></text>
</g>
<g >
<title>schedule (3,780,530 samples, 0.01%)</title><rect x="1174.3" y="933" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1177.27" y="943.5" ></text>
</g>
<g >
<title>PyIter_Next (26,237,174 samples, 0.08%)</title><rect x="91.5" y="373" width="0.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="94.53" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,390,467 samples, 0.15%)</title><rect x="197.3" y="325" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="200.25" y="335.5" ></text>
</g>
<g >
<title>get_page_from_freelist (33,906,054 samples, 0.10%)</title><rect x="86.3" y="133" width="1.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="89.33" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (101,867,456 samples, 0.29%)</title><rect x="507.3" y="869" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="510.31" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,373 samples, 0.08%)</title><rect x="184.8" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.84" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,645,323 samples, 0.23%)</title><rect x="188.4" y="709" width="2.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="191.43" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;float const, unsigned long&gt; &gt;::_M_ptr (34,188,372 samples, 0.10%)</title><rect x="1148.3" y="597" width="1.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1151.33" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (159,139,959 samples, 0.46%)</title><rect x="183.0" y="597" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="607.5" ></text>
</g>
<g >
<title>_dl_map_segments (49,777,937 samples, 0.14%)</title><rect x="202.2" y="421" width="1.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="205.24" y="431.5" ></text>
</g>
<g >
<title>generic_file_read_iter (26,279,161 samples, 0.08%)</title><rect x="125.7" y="149" width="0.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="128.73" y="159.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,279,161 samples, 0.08%)</title><rect x="125.7" y="581" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="128.73" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (60,275,703 samples, 0.17%)</title><rect x="105.4" y="517" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (53,038,442 samples, 0.15%)</title><rect x="530.4" y="805" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.41" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (85,101,574 samples, 0.24%)</title><rect x="127.8" y="805" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.78" y="815.5" ></text>
</g>
<g >
<title>page_fault (33,883,915 samples, 0.10%)</title><rect x="537.5" y="773" width="1.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="540.48" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,004 samples, 0.08%)</title><rect x="111.7" y="293" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.71" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (102,108,673 samples, 0.29%)</title><rect x="193.8" y="869" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="196.78" y="879.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (92,596,871 samples, 0.27%)</title><rect x="82.0" y="517" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="85.04" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,449,828 samples, 0.10%)</title><rect x="181.9" y="565" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.90" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (49,777,937 samples, 0.14%)</title><rect x="202.2" y="613" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.24" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="277" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (85,827,428 samples, 0.25%)</title><rect x="66.3" y="885" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.32" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (7,549,201,080 samples, 21.72%)</title><rect x="549.0" y="549" width="256.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="551.99" y="559.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="389" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,789,556 samples, 0.10%)</title><rect x="644.7" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="647.70" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (53,038,442 samples, 0.15%)</title><rect x="530.4" y="821" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="533.41" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,244,854 samples, 0.08%)</title><rect x="181.0" y="277" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.01" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,428,438 samples, 0.15%)</title><rect x="530.4" y="453" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="533.43" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,682,193 samples, 0.10%)</title><rect x="119.8" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.84" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="965" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,075,791 samples, 0.08%)</title><rect x="60.9" y="469" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="63.88" y="479.5" ></text>
</g>
<g >
<title>get_item_pointer.constprop.0 (26,237,174 samples, 0.08%)</title><rect x="91.5" y="325" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="94.53" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (27,666,663 samples, 0.08%)</title><rect x="129.7" y="693" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="132.73" y="703.5" ></text>
</g>
<g >
<title>_dlerror_run (49,777,937 samples, 0.14%)</title><rect x="202.2" y="565" width="1.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="205.24" y="575.5" ></text>
</g>
<g >
<title>_int_malloc (26,707,493 samples, 0.08%)</title><rect x="183.0" y="341" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="186.03" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,051,526 samples, 0.07%)</title><rect x="82.0" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.04" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,400 samples, 0.08%)</title><rect x="81.1" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.15" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (52,390,467 samples, 0.15%)</title><rect x="197.3" y="389" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.25" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="245" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,257,327 samples, 0.08%)</title><rect x="173.1" y="405" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.05" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_insert_node (68,425,704 samples, 0.20%)</title><rect x="1144.8" y="629" width="2.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1147.84" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,199,465 samples, 0.09%)</title><rect x="128.7" y="437" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.67" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (33,764,537 samples, 0.10%)</title><rect x="40.7" y="1013" width="1.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="43.68" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_Call (134,177,130 samples, 0.39%)</title><rect x="109.7" y="757" width="4.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="112.73" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (29,004,945 samples, 0.08%)</title><rect x="149.5" y="437" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="152.48" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (63,006,133 samples, 0.18%)</title><rect x="131.8" y="725" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="134.83" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,329,111 samples, 0.10%)</title><rect x="174.8" y="437" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="177.82" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_read (26,279,161 samples, 0.08%)</title><rect x="125.7" y="245" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="128.73" y="255.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (33,710,640 samples, 0.10%)</title><rect x="539.8" y="677" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="542.79" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,547,019 samples, 0.08%)</title><rect x="192.9" y="709" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="195.88" y="719.5" ></text>
</g>
<g >
<title>__do_page_fault (33,641,241 samples, 0.10%)</title><rect x="154.3" y="277" width="1.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="157.29" y="287.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,806,279 samples, 0.15%)</title><rect x="134.9" y="613" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="137.86" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call (31,199,465 samples, 0.09%)</title><rect x="128.7" y="501" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="131.67" y="511.5" ></text>
</g>
<g >
<title>PySequence_List (26,212,602 samples, 0.08%)</title><rect x="180.1" y="261" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="183.12" y="271.5" ></text>
</g>
<g >
<title>user_path_at_empty (26,217,823 samples, 0.08%)</title><rect x="162.1" y="229" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="165.12" y="239.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (68,220,276 samples, 0.20%)</title><rect x="199.9" y="629" width="2.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="202.92" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="613" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,220,794 samples, 0.10%)</title><rect x="137.5" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.54" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (34,099,048 samples, 0.10%)</title><rect x="79.1" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.07" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (34,123,863 samples, 0.10%)</title><rect x="130.7" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.67" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (128,216,512 samples, 0.37%)</title><rect x="105.4" y="805" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="108.38" y="815.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (100,614,998 samples, 0.29%)</title><rect x="62.9" y="245" width="3.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="65.90" y="255.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; const&amp;&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="277" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="817.48" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,575 samples, 0.08%)</title><rect x="123.9" y="789" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="799.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (68,255,742 samples, 0.20%)</title><rect x="1032.8" y="533" width="2.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1035.78" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (134,177,130 samples, 0.39%)</title><rect x="109.7" y="789" width="4.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="112.73" y="799.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,587,326 samples, 0.15%)</title><rect x="122.1" y="485" width="1.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="125.14" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, void&gt; (33,250,872 samples, 0.10%)</title><rect x="816.8" y="645" width="1.1" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="819.79" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,278,931 samples, 0.08%)</title><rect x="150.5" y="389" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.46" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,445,907 samples, 0.17%)</title><rect x="136.6" y="613" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="139.65" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,082,645 samples, 0.10%)</title><rect x="107.4" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.42" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (340,277,060 samples, 0.98%)</title><rect x="1074.3" y="613" width="11.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1077.32" y="623.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::swap_heap_elements (443,122,757 samples, 1.27%)</title><rect x="879.2" y="533" width="15.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="882.16" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (138,088,491 samples, 0.40%)</title><rect x="164.5" y="405" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.54" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,677 samples, 0.08%)</title><rect x="67.5" y="421" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.45" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,127,559 samples, 0.10%)</title><rect x="126.6" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="129.62" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,329,111 samples, 0.10%)</title><rect x="174.8" y="821" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.82" y="831.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch1&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (5,683,073,526 samples, 16.35%)</title><rect x="846.8" y="629" width="192.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="849.79" y="639.5" >boost::detail::dijkstra_n..</text>
</g>
<g >
<title>[python3.12] (34,123,863 samples, 0.10%)</title><rect x="130.7" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.67" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="245" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="255.5" ></text>
</g>
<g >
<title>PyNumber_InPlaceAdd (61,014,405 samples, 0.18%)</title><rect x="532.2" y="853" width="2.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="535.21" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,164,670 samples, 0.10%)</title><rect x="95.1" y="373" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.10" y="383.5" ></text>
</g>
<g >
<title>_PyArg_ParseTuple_SizeT (34,015,426 samples, 0.10%)</title><rect x="809.9" y="645" width="1.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="812.89" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,152 samples, 0.08%)</title><rect x="170.1" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.12" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (92,596,871 samples, 0.27%)</title><rect x="82.0" y="597" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.04" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="837" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="847.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (67,682,230 samples, 0.19%)</title><rect x="787.1" y="453" width="2.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="790.12" y="463.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,141,482 samples, 0.10%)</title><rect x="1069.7" y="613" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1072.71" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,400 samples, 0.08%)</title><rect x="81.1" y="213" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.15" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (57,434,911 samples, 0.17%)</title><rect x="127.8" y="581" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.78" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (135,953,259 samples, 0.39%)</title><rect x="114.3" y="645" width="4.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="117.29" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (159,139,959 samples, 0.46%)</title><rect x="183.0" y="757" width="5.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="186.03" y="767.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,951 samples, 0.08%)</title><rect x="97.1" y="453" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="100.11" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (128,216,512 samples, 0.37%)</title><rect x="105.4" y="661" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="108.38" y="671.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,575 samples, 0.08%)</title><rect x="123.9" y="373" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="126.93" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="405" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (159,139,959 samples, 0.46%)</title><rect x="183.0" y="885" width="5.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="186.03" y="895.5" ></text>
</g>
<g >
<title>alloc_pages_vma (67,384,058 samples, 0.19%)</title><rect x="650.5" y="341" width="2.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="653.46" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="229" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,707,493 samples, 0.08%)</title><rect x="183.0" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="399.5" ></text>
</g>
<g >
<title>PyErr_Format (26,237,174 samples, 0.08%)</title><rect x="91.5" y="309" width="0.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="94.53" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,547,019 samples, 0.08%)</title><rect x="192.9" y="917" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="195.88" y="927.5" ></text>
</g>
<g >
<title>_PyArg_ParseTuple_SizeT (26,201,677 samples, 0.08%)</title><rect x="67.5" y="389" width="0.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="70.45" y="399.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt; (68,263,239 samples, 0.20%)</title><rect x="1121.7" y="581" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1124.73" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,449,828 samples, 0.10%)</title><rect x="181.9" y="501" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="184.90" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,575 samples, 0.08%)</title><rect x="123.9" y="757" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="126.93" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (204,171,960 samples, 0.59%)</title><rect x="153.4" y="581" width="6.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.35" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (33,995,811 samples, 0.10%)</title><rect x="864.1" y="533" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="867.13" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~deque (34,083,880 samples, 0.10%)</title><rect x="1067.4" y="629" width="1.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1070.40" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,946,386 samples, 0.08%)</title><rect x="124.8" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.82" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (85,827,428 samples, 0.25%)</title><rect x="66.3" y="933" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.32" y="943.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (26,205,247 samples, 0.08%)</title><rect x="145.7" y="213" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="148.67" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="485" width="1.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="817.48" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,244,854 samples, 0.08%)</title><rect x="181.0" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.01" y="447.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (289,617,001 samples, 0.83%)</title><rect x="69.2" y="581" width="9.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="72.23" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (92,596,871 samples, 0.27%)</title><rect x="82.0" y="501" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="85.04" y="511.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,075,791 samples, 0.08%)</title><rect x="60.9" y="389" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="63.88" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (164,051,206 samples, 0.47%)</title><rect x="93.3" y="789" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.31" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (53,038,442 samples, 0.15%)</title><rect x="530.4" y="757" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="533.41" y="767.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (32,932,509 samples, 0.09%)</title><rect x="813.4" y="629" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="816.36" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (92,596,871 samples, 0.27%)</title><rect x="82.0" y="629" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="85.04" y="639.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,329,111 samples, 0.10%)</title><rect x="174.8" y="325" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="177.82" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,527 samples, 0.08%)</title><rect x="188.4" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="511.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;unsigned long const*, unsigned long*&gt; (34,217,585 samples, 0.10%)</title><rect x="1133.3" y="581" width="1.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1136.32" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (49,777,937 samples, 0.14%)</title><rect x="202.2" y="629" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.24" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (52,461,466 samples, 0.15%)</title><rect x="93.3" y="437" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.31" y="447.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (49,777,937 samples, 0.14%)</title><rect x="202.2" y="325" width="1.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="205.24" y="335.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (340,355,204 samples, 0.98%)</title><rect x="1043.2" y="613" width="11.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1046.15" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="917" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,385,177 samples, 0.08%)</title><rect x="169.2" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.23" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (32,647,249 samples, 0.09%)</title><rect x="152.2" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.25" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,129,470 samples, 0.08%)</title><rect x="134.0" y="485" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="136.97" y="495.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, false, false&gt;::operator++ (33,559,846 samples, 0.10%)</title><rect x="1035.1" y="597" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1038.10" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (53,886,826 samples, 0.16%)</title><rect x="160.3" y="373" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.29" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (204,171,960 samples, 0.59%)</title><rect x="153.4" y="613" width="6.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.35" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,397,176 samples, 0.15%)</title><rect x="191.1" y="469" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.10" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,405,974 samples, 0.08%)</title><rect x="123.0" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.03" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,466,419 samples, 0.08%)</title><rect x="172.2" y="293" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="175.15" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,237,493 samples, 0.10%)</title><rect x="141.6" y="405" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="144.61" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,178 samples, 0.08%)</title><rect x="140.7" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.72" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,075,791 samples, 0.08%)</title><rect x="60.9" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.88" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,397,176 samples, 0.15%)</title><rect x="191.1" y="645" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.10" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (377,112,606 samples, 1.08%)</title><rect x="69.2" y="805" width="12.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.23" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (31,199,465 samples, 0.09%)</title><rect x="128.7" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.67" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,278,931 samples, 0.08%)</title><rect x="150.5" y="917" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="153.46" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,385,177 samples, 0.08%)</title><rect x="169.2" y="277" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="172.23" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,178 samples, 0.08%)</title><rect x="140.7" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.72" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (348,439,644 samples, 1.00%)</title><rect x="162.1" y="565" width="11.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="165.12" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,106,052 samples, 0.10%)</title><rect x="176.0" y="725" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.95" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,528 samples, 0.08%)</title><rect x="104.5" y="837" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.49" y="847.5" ></text>
</g>
<g >
<title>[fields.cpython-312-x86_64-linux-gnu.so] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="565" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="136.97" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,208,528 samples, 0.08%)</title><rect x="104.5" y="773" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="107.49" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,666,663 samples, 0.08%)</title><rect x="129.7" y="597" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="132.73" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (53,886,826 samples, 0.16%)</title><rect x="160.3" y="613" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call (100,614,998 samples, 0.29%)</title><rect x="62.9" y="933" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="65.90" y="943.5" ></text>
</g>
<g >
<title>clear_page_erms (68,282,474 samples, 0.20%)</title><rect x="550.1" y="245" width="2.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="553.12" y="255.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (68,255,742 samples, 0.20%)</title><rect x="1032.8" y="549" width="2.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1035.78" y="559.5" ></text>
</g>
<g >
<title>std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;::pair (34,114,493 samples, 0.10%)</title><rect x="814.5" y="357" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="817.48" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="469" width="1.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="817.48" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,217,823 samples, 0.08%)</title><rect x="162.1" y="485" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="165.12" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::size (34,159,222 samples, 0.10%)</title><rect x="1087.0" y="597" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1090.04" y="607.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,237,493 samples, 0.10%)</title><rect x="141.6" y="341" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="144.61" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (45,251,910 samples, 0.13%)</title><rect x="163.0" y="341" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="166.01" y="351.5" ></text>
</g>
<g >
<title>PyMemoryView_FromMemory (33,961,876 samples, 0.10%)</title><rect x="540.9" y="693" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="543.93" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (85,762,981 samples, 0.25%)</title><rect x="60.0" y="821" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="62.99" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="293" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="303.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (26,199,178 samples, 0.08%)</title><rect x="140.7" y="389" width="0.9" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="143.72" y="399.5" ></text>
</g>
<g >
<title>page_fault (322,965,262 samples, 0.93%)</title><rect x="1174.4" y="1029" width="11.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1177.40" y="1039.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (231,878,020 samples, 0.67%)</title><rect x="140.7" y="581" width="7.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.72" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,004,945 samples, 0.08%)</title><rect x="149.5" y="421" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="152.48" y="431.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (102,392,919 samples, 0.29%)</title><rect x="1129.8" y="581" width="3.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1132.84" y="591.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,432,796 samples, 0.15%)</title><rect x="189.3" y="437" width="1.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="192.32" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,400 samples, 0.08%)</title><rect x="81.1" y="261" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.15" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (102,108,673 samples, 0.29%)</title><rect x="193.8" y="837" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,278,931 samples, 0.08%)</title><rect x="150.5" y="965" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.46" y="975.5" ></text>
</g>
<g >
<title>dl_open_worker (25,845,919 samples, 0.07%)</title><rect x="173.9" y="405" width="0.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="176.94" y="415.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,946,386 samples, 0.08%)</title><rect x="124.8" y="325" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="127.82" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (59,988,303 samples, 0.17%)</title><rect x="70.4" y="405" width="2.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="73.39" y="415.5" ></text>
</g>
<g >
<title>PyDict_GetItemWithError (26,213,506 samples, 0.08%)</title><rect x="135.8" y="309" width="0.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="138.76" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (127,467,141 samples, 0.37%)</title><rect x="85.2" y="485" width="4.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="88.18" y="495.5" ></text>
</g>
<g >
<title>std::operator!=&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; (34,271,550 samples, 0.10%)</title><rect x="1149.5" y="661" width="1.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1152.49" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (406,934,711 samples, 1.17%)</title><rect x="136.6" y="869" width="13.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (60,445,907 samples, 0.17%)</title><rect x="136.6" y="789" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="799.5" ></text>
</g>
<g >
<title>IT_outputs::IT_outputs (34,114,493 samples, 0.10%)</title><rect x="814.5" y="677" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="817.48" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (25,845,919 samples, 0.07%)</title><rect x="173.9" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.94" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="549" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="559.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (34,096,622 samples, 0.10%)</title><rect x="969.4" y="453" width="1.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="972.40" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,205,247 samples, 0.08%)</title><rect x="145.7" y="309" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="148.67" y="319.5" ></text>
</g>
<g >
<title>task_work_run (34,170,051 samples, 0.10%)</title><rect x="777.9" y="389" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="780.87" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="501" width="1.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="817.48" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (59,988,303 samples, 0.17%)</title><rect x="70.4" y="485" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.39" y="495.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33,641,241 samples, 0.10%)</title><rect x="154.3" y="229" width="1.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="157.29" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (52,402,424 samples, 0.15%)</title><rect x="156.3" y="325" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.32" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,129,470 samples, 0.08%)</title><rect x="134.0" y="645" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="136.97" y="655.5" ></text>
</g>
<g >
<title>__do_page_fault (676,030,300 samples, 1.94%)</title><rect x="750.4" y="405" width="22.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="753.35" y="415.5" >_..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (242,638,290 samples, 0.70%)</title><rect x="125.7" y="981" width="8.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="128.73" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,935 samples, 0.08%)</title><rect x="96.2" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.22" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,946,386 samples, 0.08%)</title><rect x="124.8" y="373" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="127.82" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (142,885,243 samples, 0.41%)</title><rect x="155.4" y="437" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.44" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (316,729,477 samples, 0.91%)</title><rect x="183.0" y="965" width="10.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="975.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (59,392,419 samples, 0.17%)</title><rect x="138.7" y="597" width="2.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="141.70" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,405,974 samples, 0.08%)</title><rect x="123.0" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.03" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (34,220,794 samples, 0.10%)</title><rect x="137.5" y="373" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="140.54" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (128,216,512 samples, 0.37%)</title><rect x="105.4" y="581" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="108.38" y="591.5" ></text>
</g>
<g >
<title>_PyRuntime (34,233,551 samples, 0.10%)</title><rect x="210.9" y="1029" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="213.88" y="1039.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (34,183,523 samples, 0.10%)</title><rect x="1096.3" y="549" width="1.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1099.29" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,209,825 samples, 0.08%)</title><rect x="118.9" y="773" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="121.90" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,247,899 samples, 0.08%)</title><rect x="68.3" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.34" y="303.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (69,278,347 samples, 0.20%)</title><rect x="119.8" y="581" width="2.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="122.79" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (52,449,576 samples, 0.15%)</title><rect x="67.5" y="597" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.45" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (32,189,412 samples, 0.09%)</title><rect x="109.7" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.73" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,397,176 samples, 0.15%)</title><rect x="191.1" y="629" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="194.10" y="639.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (67,940,809 samples, 0.20%)</title><rect x="107.4" y="565" width="2.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="110.42" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (52,449,576 samples, 0.15%)</title><rect x="67.5" y="581" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.45" y="591.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (68,090,394 samples, 0.20%)</title><rect x="43.0" y="1013" width="2.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="45.99" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,527 samples, 0.08%)</title><rect x="188.4" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (131,042,499 samples, 0.38%)</title><rect x="188.4" y="821" width="4.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.43" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (32,189,412 samples, 0.09%)</title><rect x="109.7" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.73" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (27,666,663 samples, 0.08%)</title><rect x="129.7" y="661" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="132.73" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (134,177,130 samples, 0.39%)</title><rect x="109.7" y="821" width="4.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="112.73" y="831.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,449,828 samples, 0.10%)</title><rect x="181.9" y="549" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="184.90" y="559.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,216,513 samples, 0.08%)</title><rect x="110.8" y="325" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="113.82" y="335.5" ></text>
</g>
<g >
<title>PyList_Sort (26,213,420 samples, 0.08%)</title><rect x="148.6" y="597" width="0.9" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="151.59" y="607.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (34,137,240 samples, 0.10%)</title><rect x="904.6" y="533" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="907.61" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,004,184 samples, 0.07%)</title><rect x="98.0" y="437" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.00" y="447.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (26,465,893 samples, 0.08%)</title><rect x="183.9" y="341" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="186.94" y="351.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (26,181,352 samples, 0.08%)</title><rect x="122.1" y="437" width="0.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="125.14" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,129,470 samples, 0.08%)</title><rect x="134.0" y="469" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="136.97" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,647,249 samples, 0.09%)</title><rect x="152.2" y="581" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="155.25" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,506 samples, 0.08%)</title><rect x="135.8" y="501" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.76" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (100,614,998 samples, 0.29%)</title><rect x="62.9" y="805" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="65.90" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (7,719,365,651 samples, 22.21%)</title><rect x="544.4" y="645" width="262.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="547.36" y="655.5" >[python3.12]</text>
</g>
<g >
<title>__handle_mm_fault (34,049,393 samples, 0.10%)</title><rect x="812.2" y="533" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="815.21" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (348,439,644 samples, 1.00%)</title><rect x="162.1" y="581" width="11.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.12" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,275,703 samples, 0.17%)</title><rect x="105.4" y="485" width="2.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="108.38" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (291,270,439 samples, 0.84%)</title><rect x="138.7" y="709" width="9.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.70" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,278,931 samples, 0.08%)</title><rect x="150.5" y="949" width="0.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="153.46" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (332,234,762 samples, 0.96%)</title><rect x="82.0" y="757" width="11.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.04" y="767.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,449,828 samples, 0.10%)</title><rect x="181.9" y="405" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="184.90" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (69,278,347 samples, 0.20%)</title><rect x="119.8" y="805" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.79" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,428,438 samples, 0.15%)</title><rect x="530.4" y="373" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="533.43" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (34,043,002 samples, 0.10%)</title><rect x="1076.6" y="581" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1079.64" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,496,117 samples, 0.15%)</title><rect x="91.5" y="677" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="94.53" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (377,112,606 samples, 1.08%)</title><rect x="69.2" y="853" width="12.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="72.23" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (33,329,111 samples, 0.10%)</title><rect x="174.8" y="837" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.82" y="847.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,004 samples, 0.08%)</title><rect x="111.7" y="277" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="114.71" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (53,173,386 samples, 0.15%)</title><rect x="183.0" y="437" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (159,139,959 samples, 0.46%)</title><rect x="183.0" y="661" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="853" width="7.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1162.88" y="863.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,645,323 samples, 0.23%)</title><rect x="188.4" y="645" width="2.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="191.43" y="655.5" ></text>
</g>
<g >
<title>__GI___getdents64 (33,449,828 samples, 0.10%)</title><rect x="181.9" y="309" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="184.90" y="319.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator!= (34,052,945 samples, 0.10%)</title><rect x="821.4" y="661" width="1.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="824.39" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (29,004,945 samples, 0.08%)</title><rect x="149.5" y="629" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="152.48" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (377,112,606 samples, 1.08%)</title><rect x="69.2" y="773" width="12.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.23" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,575 samples, 0.08%)</title><rect x="123.9" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (105,966,573 samples, 0.30%)</title><rect x="184.8" y="517" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="187.84" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,399,659 samples, 0.10%)</title><rect x="87.5" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.48" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::max_size (34,015,106 samples, 0.10%)</title><rect x="1114.8" y="565" width="1.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1117.81" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,278,931 samples, 0.08%)</title><rect x="150.5" y="885" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.46" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,075,791 samples, 0.08%)</title><rect x="60.9" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.88" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,152 samples, 0.08%)</title><rect x="170.1" y="341" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="173.12" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,209,825 samples, 0.08%)</title><rect x="118.9" y="693" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="121.90" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,469,038 samples, 0.10%)</title><rect x="90.4" y="549" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="93.40" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,602 samples, 0.08%)</title><rect x="180.1" y="213" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.12" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (34,119,824 samples, 0.10%)</title><rect x="503.8" y="1013" width="1.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="506.83" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (30,376,332 samples, 0.09%)</title><rect x="177.1" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.11" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,217,823 samples, 0.08%)</title><rect x="162.1" y="549" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="165.12" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (262,393,642 samples, 0.75%)</title><rect x="105.4" y="949" width="8.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="108.38" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,547,019 samples, 0.08%)</title><rect x="192.9" y="789" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="195.88" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (32,932,509 samples, 0.09%)</title><rect x="813.4" y="645" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="816.36" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,051,526 samples, 0.07%)</title><rect x="82.0" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.04" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="549" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (402,326,470 samples, 1.16%)</title><rect x="160.3" y="757" width="13.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.29" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (52,806,279 samples, 0.15%)</title><rect x="134.9" y="597" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (25,845,919 samples, 0.07%)</title><rect x="173.9" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.94" y="639.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (30,376,332 samples, 0.09%)</title><rect x="177.1" y="421" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="180.11" y="431.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (33,865,866 samples, 0.10%)</title><rect x="1016.7" y="517" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1019.70" y="527.5" ></text>
</g>
<g >
<title>PyArray_SetBaseObject (31,556,724 samples, 0.09%)</title><rect x="534.3" y="789" width="1.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="537.28" y="799.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (102,475,808 samples, 0.29%)</title><rect x="28.0" y="1013" width="3.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="30.97" y="1023.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (100,614,998 samples, 0.29%)</title><rect x="62.9" y="549" width="3.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="65.90" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (57,434,911 samples, 0.17%)</title><rect x="127.8" y="725" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.78" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,432,796 samples, 0.15%)</title><rect x="189.3" y="293" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="192.32" y="303.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (102,360,744 samples, 0.29%)</title><rect x="946.2" y="549" width="3.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="949.25" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="229" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="239.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,278,931 samples, 0.08%)</title><rect x="150.5" y="757" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="153.46" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,129,470 samples, 0.08%)</title><rect x="134.0" y="677" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="136.97" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (60,445,907 samples, 0.17%)</title><rect x="136.6" y="597" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (57,434,911 samples, 0.17%)</title><rect x="127.8" y="677" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.78" y="687.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (34,142,530 samples, 0.10%)</title><rect x="1037.4" y="597" width="1.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1040.39" y="607.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,278,931 samples, 0.08%)</title><rect x="150.5" y="437" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="153.46" y="447.5" ></text>
</g>
<g >
<title>_PyObject_LookupAttr (26,198,215 samples, 0.08%)</title><rect x="139.8" y="357" width="0.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="142.83" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,247,899 samples, 0.08%)</title><rect x="68.3" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.34" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (66,545,345 samples, 0.19%)</title><rect x="82.9" y="389" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.92" y="399.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (33,449,828 samples, 0.10%)</title><rect x="181.9" y="149" width="1.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="184.90" y="159.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="437" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="447.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (49,777,937 samples, 0.14%)</title><rect x="202.2" y="437" width="1.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="205.24" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,466,419 samples, 0.08%)</title><rect x="172.2" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.15" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (85,626,136 samples, 0.25%)</title><rect x="93.3" y="661" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.31" y="671.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (67,688,230 samples, 0.19%)</title><rect x="1082.4" y="549" width="2.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1085.42" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,123,863 samples, 0.10%)</title><rect x="130.7" y="533" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="133.67" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="709" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,099,048 samples, 0.10%)</title><rect x="79.1" y="437" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.07" y="447.5" ></text>
</g>
<g >
<title>get_page_from_freelist (36,796,981 samples, 0.11%)</title><rect x="132.7" y="181" width="1.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="135.72" y="191.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (26,129,470 samples, 0.08%)</title><rect x="134.0" y="965" width="0.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="136.97" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,420,183 samples, 0.15%)</title><rect x="73.4" y="421" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="76.39" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (27,666,663 samples, 0.08%)</title><rect x="129.7" y="293" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.73" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (52,587,326 samples, 0.15%)</title><rect x="122.1" y="549" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.14" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="661" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (377,112,606 samples, 1.08%)</title><rect x="69.2" y="597" width="12.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.23" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (53,038,442 samples, 0.15%)</title><rect x="530.4" y="789" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="533.41" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,946,386 samples, 0.08%)</title><rect x="124.8" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.82" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (134,177,130 samples, 0.39%)</title><rect x="109.7" y="837" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.73" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (78,645,323 samples, 0.23%)</title><rect x="188.4" y="565" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,845,919 samples, 0.07%)</title><rect x="173.9" y="597" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="176.94" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (101,124,873 samples, 0.29%)</title><rect x="85.2" y="325" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.18" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="399.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (186,442,426 samples, 0.54%)</title><rect x="62.9" y="1013" width="6.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="65.90" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="197" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="207.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,210,575 samples, 0.08%)</title><rect x="123.9" y="565" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="126.93" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (32,401,745 samples, 0.09%)</title><rect x="535.4" y="837" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="538.35" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,278,931 samples, 0.08%)</title><rect x="150.5" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.46" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (131,042,499 samples, 0.38%)</title><rect x="188.4" y="741" width="4.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.43" y="751.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,157,411 samples, 0.08%)</title><rect x="60.0" y="485" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="62.99" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,420 samples, 0.08%)</title><rect x="148.6" y="645" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.59" y="655.5" ></text>
</g>
<g >
<title>start_thread (8,578,174,694 samples, 24.68%)</title><rect x="212.6" y="1013" width="291.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="215.62" y="1023.5" >start_thread</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="837" width="7.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1162.88" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (34,209,714 samples, 0.10%)</title><rect x="529.2" y="821" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="532.25" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,004 samples, 0.08%)</title><rect x="111.7" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.71" y="335.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (100,614,998 samples, 0.29%)</title><rect x="62.9" y="357" width="3.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="65.90" y="367.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (26,342,268 samples, 0.08%)</title><rect x="88.6" y="325" width="0.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="91.61" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (33,469,038 samples, 0.10%)</title><rect x="90.4" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.40" y="671.5" ></text>
</g>
<g >
<title>page_fault (101,519,991 samples, 0.29%)</title><rect x="549.0" y="405" width="3.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="551.99" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (68,220,276 samples, 0.20%)</title><rect x="199.9" y="517" width="2.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="202.92" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (84,618,929 samples, 0.24%)</title><rect x="109.7" y="693" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.73" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (34,209,714 samples, 0.10%)</title><rect x="529.2" y="885" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="532.25" y="895.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (67,688,230 samples, 0.19%)</title><rect x="1082.4" y="565" width="2.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1085.42" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (67,940,809 samples, 0.20%)</title><rect x="107.4" y="437" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.42" y="447.5" ></text>
</g>
<g >
<title>ksys_getdents64 (33,449,828 samples, 0.10%)</title><rect x="181.9" y="245" width="1.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="184.90" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,157,411 samples, 0.08%)</title><rect x="60.0" y="261" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="271.5" ></text>
</g>
<g >
<title>raw_array_assign_scalar (33,377,852 samples, 0.10%)</title><rect x="66.3" y="789" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="69.32" y="799.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (33,925,019 samples, 0.10%)</title><rect x="528.1" y="677" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="531.10" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="693" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="703.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::parent (34,255,659 samples, 0.10%)</title><rect x="206.2" y="1013" width="1.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="209.24" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (33,858,164 samples, 0.10%)</title><rect x="108.6" y="389" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="111.58" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,847 samples, 0.08%)</title><rect x="151.4" y="949" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="154.36" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (52,806,279 samples, 0.15%)</title><rect x="134.9" y="581" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (26,465,893 samples, 0.08%)</title><rect x="183.9" y="373" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="186.94" y="383.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (33,410,809 samples, 0.10%)</title><rect x="1027.0" y="581" width="1.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1030.03" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,547,019 samples, 0.08%)</title><rect x="192.9" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.88" y="495.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (33,469,038 samples, 0.10%)</title><rect x="90.4" y="213" width="1.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="93.40" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,575 samples, 0.08%)</title><rect x="123.9" y="597" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,167,361 samples, 0.08%)</title><rect x="146.6" y="341" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="149.56" y="351.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (5,208,059,202 samples, 14.98%)</title><rect x="846.8" y="581" width="176.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="849.79" y="591.5" >boost::dijkstra_shorte..</text>
</g>
<g >
<title>[python3.12] (26,210,404 samples, 0.08%)</title><rect x="73.4" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.39" y="399.5" ></text>
</g>
<g >
<title>get_page_from_freelist (68,282,474 samples, 0.20%)</title><rect x="550.1" y="261" width="2.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="553.12" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (29,004,945 samples, 0.08%)</title><rect x="149.5" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.48" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_base (34,032,296 samples, 0.10%)</title><rect x="1155.3" y="645" width="1.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1158.27" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (18,542,365,970 samples, 53.35%)</title><rect x="530.4" y="869" width="629.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="533.41" y="879.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,825 samples, 0.08%)</title><rect x="118.9" y="869" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.90" y="879.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,210,404 samples, 0.08%)</title><rect x="73.4" y="405" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="76.39" y="415.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (100,614,998 samples, 0.29%)</title><rect x="62.9" y="725" width="3.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="65.90" y="735.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,237,174 samples, 0.08%)</title><rect x="91.5" y="421" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="94.53" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;float*, unsigned long&gt; (34,216,106 samples, 0.10%)</title><rect x="1038.6" y="549" width="1.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1041.55" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (53,886,826 samples, 0.16%)</title><rect x="160.3" y="469" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.29" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (59,392,419 samples, 0.17%)</title><rect x="138.7" y="581" width="2.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.70" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,278,931 samples, 0.08%)</title><rect x="150.5" y="597" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.46" y="607.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (26,385,177 samples, 0.08%)</title><rect x="169.2" y="245" width="0.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="172.23" y="255.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,432,796 samples, 0.15%)</title><rect x="189.3" y="373" width="1.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="192.32" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (78,732,820 samples, 0.23%)</title><rect x="197.3" y="741" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.25" y="751.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (170,413,477 samples, 0.49%)</title><rect x="895.4" y="517" width="5.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="898.36" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="639.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,278,931 samples, 0.08%)</title><rect x="150.5" y="997" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="153.46" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (28,349,249 samples, 0.08%)</title><rect x="72.4" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.43" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="661" width="7.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1162.88" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (873,398,574 samples, 2.51%)</title><rect x="69.2" y="949" width="29.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.23" y="959.5" >_P..</text>
</g>
<g >
<title>__vm_munmap (33,925,019 samples, 0.10%)</title><rect x="528.1" y="773" width="1.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="531.10" y="783.5" ></text>
</g>
<g >
<title>initumath (114,696,998 samples, 0.33%)</title><rect x="75.2" y="421" width="3.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="78.17" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,806,279 samples, 0.15%)</title><rect x="134.9" y="789" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="137.86" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,732 samples, 0.08%)</title><rect x="103.6" y="517" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.60" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_use_relocate (34,172,616 samples, 0.10%)</title><rect x="47.6" y="1013" width="1.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="50.60" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (26,547,019 samples, 0.08%)</title><rect x="192.9" y="661" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.88" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (78,732,820 samples, 0.23%)</title><rect x="197.3" y="805" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.25" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (64,266,963 samples, 0.18%)</title><rect x="158.1" y="293" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.10" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,212,602 samples, 0.08%)</title><rect x="180.1" y="453" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="183.12" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (112,624,093 samples, 0.32%)</title><rect x="169.2" y="421" width="3.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="172.23" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,796 samples, 0.15%)</title><rect x="189.3" y="485" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.32" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (7,956,842,573 samples, 22.89%)</title><rect x="540.9" y="725" width="270.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="543.93" y="735.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (85,626,136 samples, 0.25%)</title><rect x="93.3" y="613" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.31" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,129,470 samples, 0.08%)</title><rect x="134.0" y="405" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="136.97" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (291,270,439 samples, 0.84%)</title><rect x="138.7" y="661" width="9.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.70" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (322,221,821 samples, 0.93%)</title><rect x="163.0" y="485" width="10.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="166.01" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,189,412 samples, 0.09%)</title><rect x="109.7" y="405" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.73" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,275,703 samples, 0.17%)</title><rect x="105.4" y="501" width="2.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="108.38" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,258,943 samples, 0.08%)</title><rect x="92.4" y="293" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="95.42" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (27,666,663 samples, 0.08%)</title><rect x="129.7" y="405" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="132.73" y="415.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (169,324,932 samples, 0.49%)</title><rect x="822.5" y="629" width="5.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="825.54" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,244,854 samples, 0.08%)</title><rect x="181.0" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.01" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (57,434,911 samples, 0.17%)</title><rect x="127.8" y="629" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="130.78" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,547,019 samples, 0.08%)</title><rect x="192.9" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.88" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,587,326 samples, 0.15%)</title><rect x="122.1" y="501" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="125.14" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,935 samples, 0.08%)</title><rect x="96.2" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.22" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,205,595 samples, 0.08%)</title><rect x="89.5" y="469" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="92.51" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,208,528 samples, 0.08%)</title><rect x="104.5" y="709" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.49" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (34,123,863 samples, 0.10%)</title><rect x="130.7" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.67" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (34,099,048 samples, 0.10%)</title><rect x="79.1" y="485" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="82.07" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,806,279 samples, 0.15%)</title><rect x="134.9" y="933" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.86" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (33,883,915 samples, 0.10%)</title><rect x="537.5" y="789" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="540.48" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,004,945 samples, 0.08%)</title><rect x="149.5" y="789" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="152.48" y="799.5" ></text>
</g>
<g >
<title>PyArray_Where (33,676,455 samples, 0.10%)</title><rect x="147.4" y="389" width="1.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="150.45" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_vma (33,906,054 samples, 0.10%)</title><rect x="86.3" y="165" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="89.33" y="175.5" ></text>
</g>
<g >
<title>_dl_init (33,469,038 samples, 0.10%)</title><rect x="90.4" y="261" width="1.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="93.40" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,247,899 samples, 0.08%)</title><rect x="68.3" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.34" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (60,445,907 samples, 0.17%)</title><rect x="136.6" y="693" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,575 samples, 0.08%)</title><rect x="123.9" y="709" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="719.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,404 samples, 0.08%)</title><rect x="73.4" y="357" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="76.39" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,732,820 samples, 0.23%)</title><rect x="197.3" y="677" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="200.25" y="687.5" ></text>
</g>
<g >
<title>exit_mmap (134,989,158 samples, 0.39%)</title><rect x="1169.7" y="933" width="4.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1172.68" y="943.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (33,950,320 samples, 0.10%)</title><rect x="1029.3" y="565" width="1.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1032.31" y="575.5" ></text>
</g>
<g >
<title>PySequence_Tuple (34,220,794 samples, 0.10%)</title><rect x="137.5" y="485" width="1.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="140.54" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,004 samples, 0.08%)</title><rect x="111.7" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.71" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (86,392,286 samples, 0.25%)</title><rect x="142.7" y="325" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.74" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,157,411 samples, 0.08%)</title><rect x="60.0" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,244,854 samples, 0.08%)</title><rect x="181.0" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.01" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,732 samples, 0.08%)</title><rect x="103.6" y="773" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.60" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,796 samples, 0.15%)</title><rect x="189.3" y="357" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.32" y="367.5" ></text>
</g>
<g >
<title>ext4_readdir (33,449,828 samples, 0.10%)</title><rect x="181.9" y="213" width="1.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="184.90" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (57,434,911 samples, 0.17%)</title><rect x="127.8" y="597" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.78" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (64,266,963 samples, 0.18%)</title><rect x="158.1" y="309" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.10" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,779 samples, 0.08%)</title><rect x="74.3" y="357" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="77.28" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (332,234,762 samples, 0.96%)</title><rect x="82.0" y="741" width="11.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.04" y="751.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,212,373 samples, 0.08%)</title><rect x="184.8" y="389" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="187.84" y="399.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (34,007,626 samples, 0.10%)</title><rect x="861.8" y="565" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="864.82" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (85,762,981 samples, 0.25%)</title><rect x="60.0" y="901" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="62.99" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (34,006,245 samples, 0.10%)</title><rect x="196.1" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.10" y="351.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,682,193 samples, 0.10%)</title><rect x="119.8" y="485" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="122.84" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (60,406,720 samples, 0.17%)</title><rect x="125.7" y="853" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,278,931 samples, 0.08%)</title><rect x="150.5" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.46" y="511.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (29,004,945 samples, 0.08%)</title><rect x="149.5" y="517" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="152.48" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,528 samples, 0.08%)</title><rect x="104.5" y="757" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.49" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,461,466 samples, 0.15%)</title><rect x="93.3" y="309" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.31" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,278,931 samples, 0.08%)</title><rect x="150.5" y="453" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="153.46" y="463.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (441,587,532 samples, 1.27%)</title><rect x="1039.7" y="629" width="15.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1042.72" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (102,108,673 samples, 0.29%)</title><rect x="193.8" y="645" width="3.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="196.78" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (78,732,820 samples, 0.23%)</title><rect x="197.3" y="917" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.25" y="927.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (306,906,076 samples, 0.88%)</title><rect x="880.3" y="517" width="10.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="883.31" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (53,156,961 samples, 0.15%)</title><rect x="123.9" y="821" width="1.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="126.93" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,329,111 samples, 0.10%)</title><rect x="174.8" y="597" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.82" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (138,088,491 samples, 0.40%)</title><rect x="164.5" y="389" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.54" y="399.5" ></text>
</g>
<g >
<title>clear_page_erms (33,906,054 samples, 0.10%)</title><rect x="86.3" y="117" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="89.33" y="127.5" ></text>
</g>
<g >
<title>[python3.12] (26,465,893 samples, 0.08%)</title><rect x="183.9" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.94" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (68,288,574 samples, 0.20%)</title><rect x="807.6" y="661" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="810.58" y="671.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (136,652,208 samples, 0.39%)</title><rect x="774.4" y="421" width="4.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="777.39" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,547,019 samples, 0.08%)</title><rect x="192.9" y="405" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="195.88" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (85,626,136 samples, 0.25%)</title><rect x="93.3" y="549" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.31" y="559.5" ></text>
</g>
<g >
<title>_dlerror_run (25,845,919 samples, 0.07%)</title><rect x="173.9" y="501" width="0.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="176.94" y="511.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (34,057,682 samples, 0.10%)</title><rect x="32.6" y="1013" width="1.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="35.60" y="1023.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (34,245,205 samples, 0.10%)</title><rect x="1066.2" y="613" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1069.24" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (52,429,517 samples, 0.15%)</title><rect x="110.8" y="469" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.82" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (69,278,347 samples, 0.20%)</title><rect x="119.8" y="757" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="122.79" y="767.5" ></text>
</g>
<g >
<title>__close_fd (26,342,268 samples, 0.08%)</title><rect x="88.6" y="197" width="0.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="91.61" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,278,931 samples, 0.08%)</title><rect x="150.5" y="821" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="153.46" y="831.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT::optimize_for_M_R_fixed_step (10,005,069,538 samples, 28.78%)</title><rect x="819.1" y="677" width="339.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="822.08" y="687.5" >diff_Nexullance_IT::optimize_for_M_R_fixed_step</text>
</g>
<g >
<title>[python3.12] (26,217,951 samples, 0.08%)</title><rect x="105.4" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,825 samples, 0.08%)</title><rect x="118.9" y="581" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.90" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,278,931 samples, 0.08%)</title><rect x="150.5" y="661" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="153.46" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,951 samples, 0.08%)</title><rect x="97.1" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.11" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (135,953,259 samples, 0.39%)</title><rect x="114.3" y="405" width="4.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="117.29" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (100,614,998 samples, 0.29%)</title><rect x="62.9" y="581" width="3.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="65.90" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="789" width="7.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1162.88" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,152 samples, 0.08%)</title><rect x="170.1" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.12" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,390,467 samples, 0.15%)</title><rect x="197.3" y="373" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="200.25" y="383.5" ></text>
</g>
<g >
<title>get_page_from_freelist (336,495,422 samples, 0.97%)</title><rect x="755.0" y="293" width="11.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="757.97" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,220,276 samples, 0.20%)</title><rect x="199.9" y="645" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="202.92" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,466,419 samples, 0.08%)</title><rect x="172.2" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.15" y="351.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (336,495,422 samples, 0.97%)</title><rect x="755.0" y="309" width="11.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="757.97" y="319.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,032,296 samples, 0.10%)</title><rect x="1155.3" y="629" width="1.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1158.27" y="639.5" ></text>
</g>
<g >
<title>calculate_sigpending (4,192,557 samples, 0.01%)</title><rect x="212.0" y="981" width="0.2" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="215.04" y="991.5" ></text>
</g>
<g >
<title>_PyObject_Call (159,139,959 samples, 0.46%)</title><rect x="183.0" y="821" width="5.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="186.03" y="831.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,420 samples, 0.08%)</title><rect x="148.6" y="709" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="151.59" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (102,127,362 samples, 0.29%)</title><rect x="901.1" y="533" width="3.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="904.14" y="543.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,225,113 samples, 0.08%)</title><rect x="136.6" y="421" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="139.65" y="431.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (102,177,160 samples, 0.29%)</title><rect x="1012.1" y="517" width="3.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1015.09" y="527.5" ></text>
</g>
<g >
<title>array_dealloc (28,950,917 samples, 0.08%)</title><rect x="57.0" y="1013" width="1.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="59.99" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="341" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="351.5" ></text>
</g>
<g >
<title>_dl_map_object (25,845,919 samples, 0.07%)</title><rect x="173.9" y="389" width="0.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="176.94" y="399.5" ></text>
</g>
<g >
<title>__GI___clone (8,595,363,786 samples, 24.73%)</title><rect x="212.0" y="1029" width="291.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="215.04" y="1039.5" >__GI___clone</text>
</g>
<g >
<title>[python3.12] (33,329,111 samples, 0.10%)</title><rect x="174.8" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.82" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,178 samples, 0.08%)</title><rect x="140.7" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.72" y="431.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4,163,897 samples, 0.01%)</title><rect x="503.7" y="853" width="0.1" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="506.68" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (27,666,663 samples, 0.08%)</title><rect x="129.7" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.73" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (34,114,493 samples, 0.10%)</title><rect x="814.5" y="245" width="1.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="817.48" y="255.5" ></text>
</g>
<g >
<title>PyCapsule_Import (49,558,201 samples, 0.14%)</title><rect x="112.6" y="677" width="1.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="115.60" y="687.5" ></text>
</g>
<g >
<title>_install_special_mapping (15,855,993 samples, 0.05%)</title><rect x="1169.1" y="885" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1172.15" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (63,006,133 samples, 0.18%)</title><rect x="131.8" y="437" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.83" y="447.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;unsigned long const*, unsigned long*, unsigned long&gt; (34,217,585 samples, 0.10%)</title><rect x="1133.3" y="613" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1136.32" y="623.5" ></text>
</g>
<g >
<title>__find_get_block (33,449,828 samples, 0.10%)</title><rect x="181.9" y="85" width="1.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="184.90" y="95.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,575 samples, 0.08%)</title><rect x="123.9" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (159,139,959 samples, 0.46%)</title><rect x="183.0" y="677" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,127,559 samples, 0.10%)</title><rect x="126.6" y="453" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="129.62" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (30,376,332 samples, 0.09%)</title><rect x="177.1" y="325" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.11" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,385,177 samples, 0.08%)</title><rect x="169.2" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.23" y="335.5" ></text>
</g>
<g >
<title>PyObject_Dir (26,214,847 samples, 0.08%)</title><rect x="151.4" y="581" width="0.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="154.36" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (63,006,133 samples, 0.18%)</title><rect x="131.8" y="405" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.83" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,278,931 samples, 0.08%)</title><rect x="150.5" y="693" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.46" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (34,162,268 samples, 0.10%)</title><rect x="69.2" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.23" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,157,411 samples, 0.08%)</title><rect x="60.0" y="597" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="62.99" y="607.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (15,855,993 samples, 0.05%)</title><rect x="1169.1" y="981" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1172.15" y="991.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,210,575 samples, 0.08%)</title><rect x="123.9" y="613" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="126.93" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (33,329,111 samples, 0.10%)</title><rect x="174.8" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.82" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="629" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (34,127,559 samples, 0.10%)</title><rect x="126.6" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.62" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,279,161 samples, 0.08%)</title><rect x="125.7" y="533" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="128.73" y="543.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (67,688,230 samples, 0.19%)</title><rect x="1082.4" y="517" width="2.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1085.42" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (85,762,981 samples, 0.25%)</title><rect x="60.0" y="869" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="879.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (49,558,201 samples, 0.14%)</title><rect x="112.6" y="389" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="115.60" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,528 samples, 0.08%)</title><rect x="104.5" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.49" y="559.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;unsigned long, unsigned long&gt; (34,169,486 samples, 0.10%)</title><rect x="932.4" y="469" width="1.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="935.36" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="533" width="1.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="817.48" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (52,390,467 samples, 0.15%)</title><rect x="197.3" y="565" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.25" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (102,108,673 samples, 0.29%)</title><rect x="193.8" y="389" width="3.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="196.78" y="399.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT::optimize_for_M_EPs (10,174,460,101 samples, 29.27%)</title><rect x="814.5" y="693" width="345.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.48" y="703.5" >diff_Nexullance_IT::optimize_for_M_EPs</text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (34,217,685 samples, 0.10%)</title><rect x="1054.7" y="645" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1057.71" y="655.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (34,217,685 samples, 0.10%)</title><rect x="1054.7" y="613" width="1.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1057.71" y="623.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,587,326 samples, 0.15%)</title><rect x="122.1" y="661" width="1.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="125.14" y="671.5" ></text>
</g>
<g >
<title>sysmalloc (68,053,759 samples, 0.20%)</title><rect x="552.4" y="405" width="2.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="555.44" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,004,184 samples, 0.07%)</title><rect x="98.0" y="277" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.00" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,951 samples, 0.08%)</title><rect x="97.1" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.11" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (175,074,039 samples, 0.50%)</title><rect x="176.0" y="853" width="5.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,796 samples, 0.15%)</title><rect x="189.3" y="501" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.32" y="511.5" ></text>
</g>
<g >
<title>_PyImport_GetModuleAttrString (27,666,663 samples, 0.08%)</title><rect x="129.7" y="341" width="1.0" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="132.73" y="351.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (34,049,393 samples, 0.10%)</title><rect x="812.2" y="501" width="1.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="815.21" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="677" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (128,216,512 samples, 0.37%)</title><rect x="105.4" y="693" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="703.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,212,602 samples, 0.08%)</title><rect x="180.1" y="517" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="183.12" y="527.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (102,512,250 samples, 0.29%)</title><rect x="1060.5" y="645" width="3.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1063.48" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,587,326 samples, 0.15%)</title><rect x="122.1" y="773" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="125.14" y="783.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (159,139,959 samples, 0.46%)</title><rect x="183.0" y="645" width="5.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="186.03" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,209,825 samples, 0.08%)</title><rect x="118.9" y="853" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="121.90" y="863.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,342,353 samples, 0.08%)</title><rect x="199.0" y="581" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="202.03" y="591.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (180,841,493 samples, 0.52%)</title><rect x="193.8" y="933" width="6.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="196.78" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (153,672,736 samples, 0.44%)</title><rect x="85.2" y="645" width="5.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.18" y="655.5" ></text>
</g>
<g >
<title>Py_InitializeFromConfig (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="949" width="7.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1162.88" y="959.5" ></text>
</g>
<g >
<title>PyObject_CallFunctionObjArgs (26,342,353 samples, 0.08%)</title><rect x="199.0" y="389" width="0.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="202.03" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="415.5" ></text>
</g>
<g >
<title>unmap_single_vma (33,925,019 samples, 0.10%)</title><rect x="528.1" y="709" width="1.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="531.10" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (94,150,571 samples, 0.27%)</title><rect x="69.2" y="533" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="72.23" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,220,276 samples, 0.20%)</title><rect x="199.9" y="821" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="202.92" y="831.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,587,326 samples, 0.15%)</title><rect x="122.1" y="741" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="125.14" y="751.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,220,794 samples, 0.10%)</title><rect x="137.5" y="533" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="140.54" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (195,466,430 samples, 0.56%)</title><rect x="72.4" y="517" width="6.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="75.43" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,602 samples, 0.08%)</title><rect x="180.1" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.12" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (7,719,365,651 samples, 22.21%)</title><rect x="544.4" y="661" width="262.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="547.36" y="671.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (52,806,279 samples, 0.15%)</title><rect x="134.9" y="869" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,353 samples, 0.08%)</title><rect x="199.0" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.03" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_S_key (33,541,454 samples, 0.10%)</title><rect x="1143.7" y="613" width="1.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1146.70" y="623.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (34,051,884 samples, 0.10%)</title><rect x="807.6" y="645" width="1.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="810.58" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,157,411 samples, 0.08%)</title><rect x="60.0" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,217,823 samples, 0.08%)</title><rect x="162.1" y="517" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="165.12" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (32,189,412 samples, 0.09%)</title><rect x="109.7" y="421" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="112.73" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (337,185,718 samples, 0.97%)</title><rect x="114.3" y="997" width="11.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,428,438 samples, 0.15%)</title><rect x="530.4" y="277" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="533.43" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (159,139,959 samples, 0.46%)</title><rect x="183.0" y="549" width="5.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="186.03" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="325" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,194,060 samples, 0.08%)</title><rect x="191.1" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.10" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (63,006,133 samples, 0.18%)</title><rect x="131.8" y="501" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.83" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,123,863 samples, 0.10%)</title><rect x="130.7" y="709" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="133.67" y="719.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::discover_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (68,169,256 samples, 0.20%)</title><rect x="859.5" y="565" width="2.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="862.50" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (33,449,828 samples, 0.10%)</title><rect x="181.9" y="261" width="1.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="184.90" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (170,239,660 samples, 0.49%)</title><rect x="1048.9" y="581" width="5.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1051.93" y="591.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,004 samples, 0.08%)</title><rect x="111.7" y="389" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="114.71" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (100,614,998 samples, 0.29%)</title><rect x="62.9" y="517" width="3.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="65.90" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,117,307 samples, 0.10%)</title><rect x="538.6" y="757" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="541.63" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,075,791 samples, 0.08%)</title><rect x="60.9" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.88" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (53,886,826 samples, 0.16%)</title><rect x="160.3" y="629" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="639.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,215,732 samples, 0.08%)</title><rect x="103.6" y="389" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="106.60" y="399.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (131,042,499 samples, 0.38%)</title><rect x="188.4" y="725" width="4.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="191.43" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (33,469,038 samples, 0.10%)</title><rect x="90.4" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.40" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (377,112,606 samples, 1.08%)</title><rect x="69.2" y="693" width="12.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="72.23" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,647,249 samples, 0.09%)</title><rect x="152.2" y="437" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="155.25" y="447.5" ></text>
</g>
<g >
<title>new_sync_read (26,279,161 samples, 0.08%)</title><rect x="125.7" y="181" width="0.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="128.73" y="191.5" ></text>
</g>
<g >
<title>std::copy&lt;unsigned long const*, unsigned long*&gt; (34,217,585 samples, 0.10%)</title><rect x="1133.3" y="565" width="1.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1136.32" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,390,467 samples, 0.15%)</title><rect x="197.3" y="517" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="200.25" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,602 samples, 0.08%)</title><rect x="180.1" y="245" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.12" y="255.5" ></text>
</g>
<g >
<title>_PyObject_Call (29,004,945 samples, 0.08%)</title><rect x="149.5" y="597" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="152.48" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,257,327 samples, 0.08%)</title><rect x="173.1" y="309" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.05" y="319.5" ></text>
</g>
<g >
<title>_PyImport_GetModuleAttr (27,666,663 samples, 0.08%)</title><rect x="129.7" y="325" width="1.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="132.73" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (52,496,117 samples, 0.15%)</title><rect x="91.5" y="725" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.53" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (34,127,559 samples, 0.10%)</title><rect x="126.6" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.62" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (128,216,512 samples, 0.37%)</title><rect x="105.4" y="757" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="767.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (34,051,884 samples, 0.10%)</title><rect x="807.6" y="629" width="1.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="810.58" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (86,392,286 samples, 0.25%)</title><rect x="142.7" y="341" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.74" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,645,323 samples, 0.23%)</title><rect x="188.4" y="677" width="2.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="191.43" y="687.5" ></text>
</g>
<g >
<title>vfs_statx (26,205,247 samples, 0.08%)</title><rect x="145.7" y="261" width="0.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="148.67" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (262,393,642 samples, 0.75%)</title><rect x="105.4" y="869" width="8.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="108.38" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,710,640 samples, 0.10%)</title><rect x="539.8" y="709" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="542.79" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,825 samples, 0.08%)</title><rect x="118.9" y="789" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.90" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,445,907 samples, 0.17%)</title><rect x="136.6" y="645" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="139.65" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,845,919 samples, 0.07%)</title><rect x="173.9" y="613" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="176.94" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (322,221,821 samples, 0.93%)</title><rect x="163.0" y="533" width="10.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="166.01" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (100,614,998 samples, 0.29%)</title><rect x="62.9" y="565" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="65.90" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (236,819,209 samples, 0.68%)</title><rect x="152.2" y="885" width="8.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.25" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (63,006,133 samples, 0.18%)</title><rect x="131.8" y="741" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.83" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="533" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,004,184 samples, 0.07%)</title><rect x="98.0" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.00" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,004,184 samples, 0.07%)</title><rect x="98.0" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.00" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (29,004,945 samples, 0.08%)</title><rect x="149.5" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.48" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,099,048 samples, 0.10%)</title><rect x="79.1" y="549" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="82.07" y="559.5" ></text>
</g>
<g >
<title>pmd_devmap_trans_unstable (34,110,184 samples, 0.10%)</title><rect x="546.7" y="389" width="1.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="549.68" y="399.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (67,688,230 samples, 0.19%)</title><rect x="1082.4" y="533" width="2.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1085.42" y="543.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (68,256,874 samples, 0.20%)</title><rect x="1052.4" y="517" width="2.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1055.39" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (85,101,574 samples, 0.24%)</title><rect x="127.8" y="853" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="130.78" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (33,469,038 samples, 0.10%)</title><rect x="90.4" y="581" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.40" y="591.5" ></text>
</g>
<g >
<title>PyRun_StringFlags (31,920,045 samples, 0.09%)</title><rect x="178.1" y="421" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="181.14" y="431.5" ></text>
</g>
<g >
<title>[fields.cpython-312-x86_64-linux-gnu.so] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="581" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="136.97" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (61,286,717 samples, 0.18%)</title><rect x="153.4" y="453" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.35" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (92,596,871 samples, 0.27%)</title><rect x="82.0" y="661" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.04" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,199,465 samples, 0.09%)</title><rect x="128.7" y="389" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.67" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_relocate (34,212,379 samples, 0.10%)</title><rect x="1088.2" y="613" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1091.20" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call (175,074,039 samples, 0.50%)</title><rect x="176.0" y="869" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="178.95" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (52,587,326 samples, 0.15%)</title><rect x="122.1" y="613" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.14" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (85,762,981 samples, 0.25%)</title><rect x="60.0" y="965" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call (49,777,937 samples, 0.14%)</title><rect x="202.2" y="821" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="205.24" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,666,663 samples, 0.08%)</title><rect x="129.7" y="389" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="132.73" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (873,398,574 samples, 2.51%)</title><rect x="69.2" y="933" width="29.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.23" y="943.5" >[p..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (57,434,911 samples, 0.17%)</title><rect x="127.8" y="645" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.78" y="655.5" ></text>
</g>
<g >
<title>PyObject_GetIter (32,401,745 samples, 0.09%)</title><rect x="535.4" y="853" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="538.35" y="863.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,445,907 samples, 0.17%)</title><rect x="136.6" y="805" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="139.65" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="725" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (34,106,052 samples, 0.10%)</title><rect x="176.0" y="757" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,181,352 samples, 0.08%)</title><rect x="122.1" y="357" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="125.14" y="367.5" ></text>
</g>
<g >
<title>PyArray_Nonzero (33,676,455 samples, 0.10%)</title><rect x="147.4" y="373" width="1.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="150.45" y="383.5" ></text>
</g>
<g >
<title>inflate (3,719,834,776 samples, 10.70%)</title><rect x="656.2" y="469" width="126.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="659.22" y="479.5" >inflate</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,235,446 samples, 0.08%)</title><rect x="127.8" y="357" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.78" y="367.5" ></text>
</g>
<g >
<title>_PyCode_New (33,309,113 samples, 0.10%)</title><rect x="168.1" y="357" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="171.10" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,129,470 samples, 0.08%)</title><rect x="134.0" y="837" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="136.97" y="847.5" ></text>
</g>
<g >
<title>PyObject_Malloc (169,573,750 samples, 0.49%)</title><rect x="549.0" y="453" width="5.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="551.99" y="463.5" ></text>
</g>
<g >
<title>error_entry (34,171,243 samples, 0.10%)</title><rect x="749.2" y="437" width="1.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="752.19" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (116,669,387 samples, 0.34%)</title><rect x="156.3" y="357" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.32" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (291,270,439 samples, 0.84%)</title><rect x="138.7" y="677" width="9.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="141.70" y="687.5" ></text>
</g>
<g >
<title>PyThread_acquire_lock_timed (34,107,483 samples, 0.10%)</title><rect x="547.8" y="549" width="1.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="550.83" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (406,934,711 samples, 1.17%)</title><rect x="136.6" y="901" width="13.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="139.65" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,194,060 samples, 0.08%)</title><rect x="191.1" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.10" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,732,820 samples, 0.23%)</title><rect x="197.3" y="725" width="2.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="200.25" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (67,940,809 samples, 0.20%)</title><rect x="107.4" y="485" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.42" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (128,216,512 samples, 0.37%)</title><rect x="105.4" y="597" width="4.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="108.38" y="607.5" ></text>
</g>
<g >
<title>PyDict_Contains (26,955,254 samples, 0.08%)</title><rect x="71.5" y="373" width="0.9" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="74.51" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,575 samples, 0.08%)</title><rect x="123.9" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (602,788,704 samples, 1.73%)</title><rect x="783.7" y="485" width="20.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="786.66" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (121,865,673 samples, 0.35%)</title><rect x="119.8" y="853" width="4.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="122.79" y="863.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (140,967,987 samples, 0.41%)</title><rect x="177.1" y="757" width="4.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="180.11" y="767.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long&gt; (34,052,945 samples, 0.10%)</title><rect x="821.4" y="645" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="824.39" y="655.5" ></text>
</g>
<g >
<title>do_anonymous_page (33,906,054 samples, 0.10%)</title><rect x="86.3" y="181" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="89.33" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (34,228,978 samples, 0.10%)</title><rect x="826.0" y="581" width="1.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="828.98" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_nothrow_relocate (34,174,992 samples, 0.10%)</title><rect x="12.1" y="1013" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="15.06" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,004 samples, 0.08%)</title><rect x="111.7" y="341" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="114.71" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (183,340,401 samples, 0.53%)</title><rect x="163.0" y="469" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.01" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (31,920,045 samples, 0.09%)</title><rect x="178.1" y="517" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="181.14" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (33,669,434 samples, 0.10%)</title><rect x="926.6" y="485" width="1.1" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="929.59" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (135,660,801 samples, 0.39%)</title><rect x="507.3" y="901" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="510.31" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="725" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="735.5" ></text>
</g>
<g >
<title>_PyObject_Call (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="549" width="7.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1162.88" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (33,863,171 samples, 0.10%)</title><rect x="1106.7" y="549" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1109.70" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="245" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="255.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (138,764,894 samples, 0.40%)</title><rect x="142.7" y="437" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.74" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (34,106,052 samples, 0.10%)</title><rect x="176.0" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,847 samples, 0.08%)</title><rect x="151.4" y="677" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.36" y="687.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (26,278,931 samples, 0.08%)</title><rect x="150.5" y="341" width="0.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="153.46" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (34,123,863 samples, 0.10%)</title><rect x="130.7" y="581" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.67" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,373 samples, 0.08%)</title><rect x="184.8" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.84" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (164,051,206 samples, 0.47%)</title><rect x="93.3" y="869" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.31" y="879.5" ></text>
</g>
<g >
<title>iterate_dir (33,449,828 samples, 0.10%)</title><rect x="181.9" y="229" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="184.90" y="239.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,329,111 samples, 0.10%)</title><rect x="174.8" y="405" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="177.82" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,342,268 samples, 0.08%)</title><rect x="88.6" y="229" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="91.61" y="239.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,946,386 samples, 0.08%)</title><rect x="124.8" y="757" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="127.82" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (6,912,553,746 samples, 19.89%)</title><rect x="549.0" y="501" width="234.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="551.99" y="511.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>[python3.12] (26,213,951 samples, 0.08%)</title><rect x="97.1" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.11" y="479.5" ></text>
</g>
<g >
<title>PyGC_Collect (203,774,549 samples, 0.59%)</title><rect x="505.0" y="949" width="6.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="507.99" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,946,386 samples, 0.08%)</title><rect x="124.8" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.82" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,587,326 samples, 0.15%)</title><rect x="122.1" y="517" width="1.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="125.14" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (34,091,559 samples, 0.10%)</title><rect x="1068.6" y="645" width="1.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1071.56" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,278,931 samples, 0.08%)</title><rect x="150.5" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.46" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (78,732,820 samples, 0.23%)</title><rect x="197.3" y="821" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.25" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,275,703 samples, 0.17%)</title><rect x="105.4" y="405" width="2.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="108.38" y="415.5" ></text>
</g>
<g >
<title>__libc_start_main (19,496,806,429 samples, 56.09%)</title><rect x="505.0" y="1013" width="661.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="507.99" y="1023.5" >__libc_start_main</text>
</g>
<g >
<title>[python3.12] (34,209,714 samples, 0.10%)</title><rect x="529.2" y="869" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="532.25" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (973,378,337 samples, 2.80%)</title><rect x="100.9" y="1013" width="33.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.93" y="1023.5" >[p..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (316,729,477 samples, 0.91%)</title><rect x="183.0" y="997" width="10.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="186.03" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,587,326 samples, 0.15%)</title><rect x="122.1" y="677" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="125.14" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (26,205,247 samples, 0.08%)</title><rect x="145.7" y="293" width="0.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="148.67" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (53,886,826 samples, 0.16%)</title><rect x="160.3" y="501" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,099,048 samples, 0.10%)</title><rect x="79.1" y="453" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="82.07" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (100,614,998 samples, 0.29%)</title><rect x="62.9" y="693" width="3.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="65.90" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (34,117,307 samples, 0.10%)</title><rect x="538.6" y="789" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="541.63" y="799.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (290,182,458 samples, 0.83%)</title><rect x="183.0" y="933" width="9.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="186.03" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (52,402,424 samples, 0.15%)</title><rect x="156.3" y="309" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.32" y="319.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (29,004,945 samples, 0.08%)</title><rect x="149.5" y="405" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="152.48" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (52,397,176 samples, 0.15%)</title><rect x="191.1" y="677" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.10" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::push_back (544,480,668 samples, 1.57%)</title><rect x="1070.9" y="645" width="18.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1073.87" y="655.5" ></text>
</g>
<g >
<title>change_protection_range (34,170,051 samples, 0.10%)</title><rect x="777.9" y="325" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="780.87" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,406,720 samples, 0.17%)</title><rect x="125.7" y="805" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.73" y="815.5" ></text>
</g>
<g >
<title>PyObject_Dir (26,213,420 samples, 0.08%)</title><rect x="148.6" y="613" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="151.59" y="623.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (67,405,810 samples, 0.19%)</title><rect x="1021.3" y="565" width="2.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1024.30" y="575.5" ></text>
</g>
<g >
<title>current_time (27,174,690 samples, 0.08%)</title><rect x="161.2" y="53" width="0.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="164.19" y="63.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,496,117 samples, 0.15%)</title><rect x="91.5" y="597" width="1.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="94.53" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (60,445,907 samples, 0.17%)</title><rect x="136.6" y="725" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="735.5" ></text>
</g>
<g >
<title>change_prot_numa (32,189,412 samples, 0.09%)</title><rect x="109.7" y="213" width="1.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="112.73" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (52,461,466 samples, 0.15%)</title><rect x="93.3" y="373" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.31" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (167,117,181 samples, 0.48%)</title><rect x="73.4" y="453" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.39" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,373 samples, 0.08%)</title><rect x="184.8" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.84" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (53,886,826 samples, 0.16%)</title><rect x="160.3" y="549" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.29" y="559.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (27,186,157 samples, 0.08%)</title><rect x="80.2" y="309" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="83.22" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,102,824 samples, 0.10%)</title><rect x="121.0" y="501" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="123.99" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,244,854 samples, 0.08%)</title><rect x="181.0" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.01" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (131,042,499 samples, 0.38%)</title><rect x="188.4" y="853" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="863.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,225,113 samples, 0.08%)</title><rect x="136.6" y="469" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="139.65" y="479.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::finish_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (34,122,452 samples, 0.10%)</title><rect x="863.0" y="565" width="1.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="865.97" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (49,558,201 samples, 0.14%)</title><rect x="112.6" y="453" width="1.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="115.60" y="463.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (34,137,240 samples, 0.10%)</title><rect x="904.6" y="549" width="1.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="907.61" y="559.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (102,404,569 samples, 0.29%)</title><rect x="1095.1" y="629" width="3.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1098.13" y="639.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (135,781,502 samples, 0.39%)</title><rect x="1055.9" y="613" width="4.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1058.87" y="623.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (34,170,051 samples, 0.10%)</title><rect x="777.9" y="405" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="780.87" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (153,672,736 samples, 0.44%)</title><rect x="85.2" y="613" width="5.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.18" y="623.5" ></text>
</g>
<g >
<title>array_assign_subscript (33,377,852 samples, 0.10%)</title><rect x="66.3" y="837" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="69.32" y="847.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (6,912,553,746 samples, 19.89%)</title><rect x="549.0" y="517" width="234.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="551.99" y="527.5" >_PyFunction_Vectorcall</text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="527.5" ></text>
</g>
<g >
<title>schedule_tail (17,189,092 samples, 0.05%)</title><rect x="212.0" y="997" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="215.04" y="1007.5" ></text>
</g>
<g >
<title>PyArray_Scalar (34,049,393 samples, 0.10%)</title><rect x="812.2" y="677" width="1.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="815.21" y="687.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (34,236,690 samples, 0.10%)</title><rect x="808.7" y="629" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="811.73" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (49,777,937 samples, 0.14%)</title><rect x="202.2" y="917" width="1.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="205.24" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (85,762,981 samples, 0.25%)</title><rect x="60.0" y="997" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="62.99" y="1007.5" ></text>
</g>
<g >
<title>try_charge (34,161,688 samples, 0.10%)</title><rect x="655.1" y="309" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="658.06" y="319.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,329,111 samples, 0.10%)</title><rect x="174.8" y="917" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="177.82" y="927.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (162,163,084 samples, 0.47%)</title><rect x="114.3" y="949" width="5.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="117.29" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (34,127,559 samples, 0.10%)</title><rect x="126.6" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.62" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (34,123,863 samples, 0.10%)</title><rect x="130.7" y="645" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="133.67" y="655.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,127,559 samples, 0.10%)</title><rect x="126.6" y="421" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="129.62" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (402,326,470 samples, 1.16%)</title><rect x="160.3" y="741" width="13.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="163.29" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,082,645 samples, 0.10%)</title><rect x="107.4" y="357" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.42" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (33,329,111 samples, 0.10%)</title><rect x="174.8" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.82" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,220,276 samples, 0.20%)</title><rect x="199.9" y="405" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="202.92" y="415.5" ></text>
</g>
<g >
<title>pybind11::detail::argument_loader&lt;diff_Nexullance_IT_interface*, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int&gt;::call_impl&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, pybind11::cpp_function::cpp_function&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, diff_Nexullance_IT_interface, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (10,207,392,610 samples, 29.37%)</title><rect x="813.4" y="757" width="346.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="816.36" y="767.5" >pybind11::detail::argument_loader&lt;diff_Nexulla..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,129,470 samples, 0.08%)</title><rect x="134.0" y="709" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="136.97" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (428,172,389 samples, 1.23%)</title><rect x="160.3" y="805" width="14.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (34,233,551 samples, 0.10%)</title><rect x="210.9" y="1013" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.88" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (348,439,644 samples, 1.00%)</title><rect x="162.1" y="661" width="11.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.12" y="671.5" ></text>
</g>
<g >
<title>pybind11::detail::argument_loader&lt;diff_Nexullance_IT_interface*, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int&gt;::call&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, diff_Nexullance_IT_interface, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (10,207,392,610 samples, 29.37%)</title><rect x="813.4" y="773" width="346.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="816.36" y="783.5" >pybind11::detail::argument_loader&lt;diff_Nexulla..</text>
</g>
<g >
<title>do_anonymous_page (68,282,474 samples, 0.20%)</title><rect x="550.1" y="309" width="2.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="553.12" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,181,352 samples, 0.08%)</title><rect x="122.1" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.14" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (34,049,393 samples, 0.10%)</title><rect x="812.2" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="815.21" y="639.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (101,701,307 samples, 0.29%)</title><rect x="1139.1" y="613" width="3.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1142.09" y="623.5" ></text>
</g>
<g >
<title>unmap_vmas (134,989,158 samples, 0.39%)</title><rect x="1169.7" y="917" width="4.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1172.68" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,592,773 samples, 0.08%)</title><rect x="134.9" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="431.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,215,732 samples, 0.08%)</title><rect x="103.6" y="437" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="106.60" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="773" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="805" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (67,770,169 samples, 0.19%)</title><rect x="1151.8" y="645" width="2.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1154.81" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,189,412 samples, 0.09%)</title><rect x="109.7" y="341" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.73" y="351.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (67,584,075 samples, 0.19%)</title><rect x="1140.3" y="597" width="2.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1143.25" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,405,974 samples, 0.08%)</title><rect x="123.0" y="389" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="126.03" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,547,019 samples, 0.08%)</title><rect x="192.9" y="613" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="195.88" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="693" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (52,806,279 samples, 0.15%)</title><rect x="134.9" y="773" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="783.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,206,935 samples, 0.08%)</title><rect x="96.2" y="565" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="99.22" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,258,943 samples, 0.08%)</title><rect x="92.4" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.42" y="575.5" ></text>
</g>
<g >
<title>PyUFunc_FromFuncAndDataAndSignatureAndIdentity (114,696,998 samples, 0.33%)</title><rect x="75.2" y="389" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.17" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (68,220,276 samples, 0.20%)</title><rect x="199.9" y="949" width="2.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="202.92" y="959.5" ></text>
</g>
<g >
<title>__sched_text_start (3,780,530 samples, 0.01%)</title><rect x="1174.3" y="917" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1177.27" y="927.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,208,528 samples, 0.08%)</title><rect x="104.5" y="933" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="107.49" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,547,019 samples, 0.08%)</title><rect x="192.9" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.88" y="479.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (26,213,506 samples, 0.08%)</title><rect x="135.8" y="293" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="138.76" y="303.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,847 samples, 0.08%)</title><rect x="151.4" y="693" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="154.36" y="703.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (330,708,899 samples, 0.95%)</title><rect x="791.7" y="437" width="11.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="794.74" y="447.5" ></text>
</g>
<g >
<title>do_anonymous_page (28,349,249 samples, 0.08%)</title><rect x="72.4" y="261" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="75.43" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,278,931 samples, 0.08%)</title><rect x="150.5" y="789" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.46" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (67,580,434 samples, 0.19%)</title><rect x="525.8" y="837" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="528.80" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (34,092,675 samples, 0.10%)</title><rect x="935.8" y="549" width="1.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="938.83" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (29,004,945 samples, 0.08%)</title><rect x="149.5" y="485" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="152.48" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (32,647,249 samples, 0.09%)</title><rect x="152.2" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.25" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (53,886,826 samples, 0.16%)</title><rect x="160.3" y="677" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.29" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (873,398,574 samples, 2.51%)</title><rect x="69.2" y="917" width="29.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.23" y="927.5" >[p..</text>
</g>
<g >
<title>ext4_htree_fill_tree (33,449,828 samples, 0.10%)</title><rect x="181.9" y="181" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="184.90" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (873,394,748 samples, 2.51%)</title><rect x="152.2" y="981" width="29.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.25" y="991.5" >[p..</text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,400 samples, 0.08%)</title><rect x="81.1" y="421" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="84.15" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,528 samples, 0.08%)</title><rect x="104.5" y="677" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.49" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,154 samples, 0.08%)</title><rect x="179.2" y="581" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="182.23" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="709" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,116 samples, 0.08%)</title><rect x="192.0" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.99" y="319.5" ></text>
</g>
<g >
<title>_dl_map_object (49,777,937 samples, 0.14%)</title><rect x="202.2" y="453" width="1.7" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="205.24" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="805" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="815.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;float*, unsigned long, float&gt; (34,216,106 samples, 0.10%)</title><rect x="1038.6" y="581" width="1.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1041.55" y="591.5" ></text>
</g>
<g >
<title>InitOperators (114,696,998 samples, 0.33%)</title><rect x="75.2" y="405" width="3.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="78.17" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="261" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="271.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (101,273,660 samples, 0.29%)</title><rect x="1170.8" y="853" width="3.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1173.83" y="863.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,329,111 samples, 0.10%)</title><rect x="174.8" y="725" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="177.82" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (94,387,065 samples, 0.27%)</title><rect x="13.2" y="1013" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="16.22" y="1023.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::adj_list_edge_iterator (101,386,197 samples, 0.29%)</title><rect x="829.4" y="645" width="3.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="832.45" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,595 samples, 0.08%)</title><rect x="89.5" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.51" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,506 samples, 0.08%)</title><rect x="135.8" y="389" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="138.76" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (52,428,438 samples, 0.15%)</title><rect x="530.4" y="469" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.43" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (67,940,809 samples, 0.20%)</title><rect x="107.4" y="517" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.42" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (34,187,593 samples, 0.10%)</title><rect x="36.0" y="1013" width="1.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="39.04" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (25,845,919 samples, 0.07%)</title><rect x="173.9" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.94" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (33,237,493 samples, 0.10%)</title><rect x="141.6" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.61" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="597" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (135,499,734 samples, 0.39%)</title><rect x="524.6" y="853" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="527.65" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,220,794 samples, 0.10%)</title><rect x="137.5" y="357" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="140.54" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (85,762,981 samples, 0.25%)</title><rect x="60.0" y="885" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="62.99" y="895.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,225,113 samples, 0.08%)</title><rect x="136.6" y="309" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="139.65" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (53,886,826 samples, 0.16%)</title><rect x="160.3" y="597" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="163.29" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (97,129,996 samples, 0.28%)</title><rect x="130.7" y="821" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.67" y="831.5" ></text>
</g>
<g >
<title>alloc_pages_vma (68,282,474 samples, 0.20%)</title><rect x="550.1" y="293" width="2.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="553.12" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="533" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,244,854 samples, 0.08%)</title><rect x="181.0" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.01" y="415.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,506 samples, 0.08%)</title><rect x="135.8" y="485" width="0.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="138.76" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (351,716,346 samples, 1.01%)</title><rect x="136.6" y="821" width="12.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="139.65" y="831.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (26,342,268 samples, 0.08%)</title><rect x="88.6" y="373" width="0.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="91.61" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (64,266,963 samples, 0.18%)</title><rect x="158.1" y="325" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="161.10" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,233,202 samples, 0.15%)</title><rect x="60.0" y="709" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="62.99" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,157,411 samples, 0.08%)</title><rect x="60.0" y="405" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="62.99" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (68,220,276 samples, 0.20%)</title><rect x="199.9" y="773" width="2.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="202.92" y="783.5" ></text>
</g>
<g >
<title>_PyObject_Call (92,596,871 samples, 0.27%)</title><rect x="82.0" y="485" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.04" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,449,576 samples, 0.15%)</title><rect x="67.5" y="453" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="70.45" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,215,856 samples, 0.08%)</title><rect x="155.4" y="325" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="158.44" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,528 samples, 0.08%)</title><rect x="104.5" y="661" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.49" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (102,237,162 samples, 0.29%)</title><rect x="890.7" y="517" width="3.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="893.73" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (114,723,133 samples, 0.33%)</title><rect x="177.1" y="645" width="3.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="180.11" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (34,168,284 samples, 0.10%)</title><rect x="1128.7" y="613" width="1.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1131.68" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (34,054,724 samples, 0.10%)</title><rect x="1053.6" y="501" width="1.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1056.55" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,278,931 samples, 0.08%)</title><rect x="150.5" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.46" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,547,019 samples, 0.08%)</title><rect x="192.9" y="837" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.88" y="847.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,162,268 samples, 0.10%)</title><rect x="69.2" y="453" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="72.23" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::max_size (34,015,106 samples, 0.10%)</title><rect x="1114.8" y="549" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1117.81" y="559.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (49,777,937 samples, 0.14%)</title><rect x="202.2" y="485" width="1.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="205.24" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,123,863 samples, 0.10%)</title><rect x="130.7" y="453" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="133.67" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (636,647,334 samples, 1.83%)</title><rect x="783.7" y="533" width="21.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="786.66" y="543.5" >[..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (92,596,871 samples, 0.27%)</title><rect x="82.0" y="549" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="85.04" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (204,171,960 samples, 0.59%)</title><rect x="153.4" y="597" width="6.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="156.35" y="607.5" ></text>
</g>
<g >
<title>__do_page_fault (101,519,991 samples, 0.29%)</title><rect x="549.0" y="373" width="3.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="551.99" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,592,773 samples, 0.08%)</title><rect x="134.9" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_close (26,342,268 samples, 0.08%)</title><rect x="88.6" y="213" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="91.61" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (26,075,791 samples, 0.08%)</title><rect x="60.9" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.88" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="709" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,602 samples, 0.08%)</title><rect x="180.1" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.12" y="367.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_down (987,912,258 samples, 2.84%)</title><rect x="871.1" y="549" width="33.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="874.07" y="559.5" >bo..</text>
</g>
<g >
<title>[python3.12] (26,199,178 samples, 0.08%)</title><rect x="140.7" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.72" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (135,861,298 samples, 0.39%)</title><rect x="969.4" y="501" width="4.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="972.40" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (348,439,644 samples, 1.00%)</title><rect x="162.1" y="709" width="11.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="165.12" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,587,326 samples, 0.15%)</title><rect x="122.1" y="757" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="125.14" y="767.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (34,107,483 samples, 0.10%)</title><rect x="547.8" y="533" width="1.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="550.83" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,592,773 samples, 0.08%)</title><rect x="134.9" y="469" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="137.86" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (52,587,326 samples, 0.15%)</title><rect x="122.1" y="709" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.14" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="341" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (8,058,758,765 samples, 23.18%)</title><rect x="539.8" y="757" width="273.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="542.79" y="767.5" >[python3.12]</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size (68,208,112 samples, 0.20%)</title><rect x="1113.6" y="597" width="2.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1116.65" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="165" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (67,940,809 samples, 0.20%)</title><rect x="107.4" y="533" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.42" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,587,326 samples, 0.15%)</title><rect x="122.1" y="597" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="125.14" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (53,156,961 samples, 0.15%)</title><rect x="123.9" y="949" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,528 samples, 0.08%)</title><rect x="104.5" y="517" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.49" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (27,186,157 samples, 0.08%)</title><rect x="80.2" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.22" y="383.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::update (68,138,820 samples, 0.20%)</title><rect x="933.5" y="565" width="2.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="936.52" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (195,466,430 samples, 0.56%)</title><rect x="72.4" y="549" width="6.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="75.43" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,732,820 samples, 0.23%)</title><rect x="197.3" y="773" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="200.25" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (45,251,910 samples, 0.13%)</title><rect x="163.0" y="309" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.01" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,406,720 samples, 0.17%)</title><rect x="125.7" y="821" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="128.73" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,406,720 samples, 0.17%)</title><rect x="125.7" y="837" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="128.73" y="847.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (34,117,307 samples, 0.10%)</title><rect x="538.6" y="597" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="541.63" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (33,710,640 samples, 0.10%)</title><rect x="539.8" y="725" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="542.79" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (128,216,512 samples, 0.37%)</title><rect x="105.4" y="741" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="751.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (175,074,039 samples, 0.50%)</title><rect x="176.0" y="789" width="5.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="178.95" y="799.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; (5,683,073,526 samples, 16.35%)</title><rect x="846.8" y="645" width="192.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="849.79" y="655.5" >boost::dijkstra_shortest_..</text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (34,114,823 samples, 0.10%)</title><rect x="1097.5" y="549" width="1.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1100.45" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,647,249 samples, 0.09%)</title><rect x="152.2" y="421" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="155.25" y="431.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,461,466 samples, 0.15%)</title><rect x="93.3" y="389" width="1.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="96.31" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (52,587,326 samples, 0.15%)</title><rect x="122.1" y="821" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.14" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (33,682,193 samples, 0.10%)</title><rect x="119.8" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.84" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (34,220,794 samples, 0.10%)</title><rect x="137.5" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.54" y="479.5" ></text>
</g>
<g >
<title>__do_page_fault (34,110,184 samples, 0.10%)</title><rect x="546.7" y="453" width="1.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="549.68" y="463.5" ></text>
</g>
<g >
<title>__GI___readdir64 (33,449,828 samples, 0.10%)</title><rect x="181.9" y="325" width="1.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="184.90" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (61,286,717 samples, 0.18%)</title><rect x="153.4" y="421" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.35" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (53,886,826 samples, 0.16%)</title><rect x="160.3" y="581" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="591.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,106,052 samples, 0.10%)</title><rect x="176.0" y="229" width="1.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="178.95" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,237,174 samples, 0.08%)</title><rect x="91.5" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.53" y="527.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (34,228,978 samples, 0.10%)</title><rect x="826.0" y="597" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="828.98" y="607.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,271,550 samples, 0.10%)</title><rect x="1149.5" y="629" width="1.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1152.49" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (34,209,714 samples, 0.10%)</title><rect x="529.2" y="837" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="532.25" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,432,796 samples, 0.15%)</title><rect x="189.3" y="453" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="192.32" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (25,845,919 samples, 0.07%)</title><rect x="173.9" y="693" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.94" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (31,199,465 samples, 0.09%)</title><rect x="128.7" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.67" y="367.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (26,279,161 samples, 0.08%)</title><rect x="125.7" y="165" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="128.73" y="175.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (34,123,863 samples, 0.10%)</title><rect x="130.7" y="517" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="133.67" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,397,176 samples, 0.15%)</title><rect x="191.1" y="501" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.10" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="613" width="1.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="817.48" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (34,092,675 samples, 0.10%)</title><rect x="935.8" y="533" width="1.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="938.83" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,449,576 samples, 0.15%)</title><rect x="67.5" y="501" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="70.45" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (57,434,911 samples, 0.17%)</title><rect x="127.8" y="533" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="130.78" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (29,004,945 samples, 0.08%)</title><rect x="149.5" y="725" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="152.48" y="735.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long*&gt; (33,797,157 samples, 0.10%)</title><rect x="931.2" y="469" width="1.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="934.21" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (236,819,209 samples, 0.68%)</title><rect x="152.2" y="725" width="8.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="155.25" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (60,406,720 samples, 0.17%)</title><rect x="125.7" y="789" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,353 samples, 0.08%)</title><rect x="199.0" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.03" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (53,173,386 samples, 0.15%)</title><rect x="183.0" y="421" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (49,777,937 samples, 0.14%)</title><rect x="202.2" y="933" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="205.24" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="805" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="815.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (6,354,041 samples, 0.02%)</title><rect x="212.3" y="917" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="215.27" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (34,101,289 samples, 0.10%)</title><rect x="842.2" y="629" width="1.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="845.15" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,342,353 samples, 0.08%)</title><rect x="199.0" y="261" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="202.03" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (170,480,087 samples, 0.49%)</title><rect x="976.3" y="549" width="5.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="979.33" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (53,886,826 samples, 0.16%)</title><rect x="160.3" y="309" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="319.5" ></text>
</g>
<g >
<title>[[heap]] (94,533,460 samples, 0.27%)</title><rect x="10.0" y="1029" width="3.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.01" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (26,385,177 samples, 0.08%)</title><rect x="169.2" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.23" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,247,899 samples, 0.08%)</title><rect x="68.3" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.34" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (52,429,517 samples, 0.15%)</title><rect x="110.8" y="549" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.82" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,099,048 samples, 0.10%)</title><rect x="79.1" y="533" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.07" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (153,672,736 samples, 0.44%)</title><rect x="85.2" y="533" width="5.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.18" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (102,108,673 samples, 0.29%)</title><rect x="193.8" y="421" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,329,111 samples, 0.10%)</title><rect x="174.8" y="869" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.82" y="879.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (68,097,003 samples, 0.20%)</title><rect x="1078.9" y="549" width="2.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1081.94" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="229" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="239.5" ></text>
</g>
<g >
<title>load_elf_binary (15,855,993 samples, 0.05%)</title><rect x="1169.1" y="949" width="0.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1172.15" y="959.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (135,781,502 samples, 0.39%)</title><rect x="1055.9" y="629" width="4.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1058.87" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (49,558,201 samples, 0.14%)</title><rect x="112.6" y="613" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.60" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (53,886,826 samples, 0.16%)</title><rect x="160.3" y="645" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_impl::_Vector_impl (34,142,530 samples, 0.10%)</title><rect x="1037.4" y="581" width="1.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1040.39" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,587,326 samples, 0.15%)</title><rect x="122.1" y="693" width="1.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="125.14" y="703.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,235,446 samples, 0.08%)</title><rect x="127.8" y="341" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="130.78" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (406,934,711 samples, 1.17%)</title><rect x="136.6" y="965" width="13.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="139.65" y="975.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,212,379 samples, 0.10%)</title><rect x="1088.2" y="565" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1091.20" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (102,108,673 samples, 0.29%)</title><rect x="193.8" y="901" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,400 samples, 0.08%)</title><rect x="81.1" y="277" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.15" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (195,466,430 samples, 0.56%)</title><rect x="72.4" y="565" width="6.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.43" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (49,777,937 samples, 0.14%)</title><rect x="202.2" y="597" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.24" y="607.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (31,199,465 samples, 0.09%)</title><rect x="128.7" y="325" width="1.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="131.67" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (27,666,663 samples, 0.08%)</title><rect x="129.7" y="629" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.73" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,215,732 samples, 0.08%)</title><rect x="103.6" y="821" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="106.60" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,602 samples, 0.08%)</title><rect x="180.1" y="293" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="183.12" y="303.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (33,995,528 samples, 0.10%)</title><rect x="1094.0" y="629" width="1.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1096.98" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (53,886,826 samples, 0.16%)</title><rect x="160.3" y="453" width="1.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="163.29" y="463.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,215,732 samples, 0.08%)</title><rect x="103.6" y="341" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="106.60" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (49,558,201 samples, 0.14%)</title><rect x="112.6" y="293" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.60" y="303.5" ></text>
</g>
<g >
<title>_aligned_strided_to_strided_size1_srcstride0 (33,377,852 samples, 0.10%)</title><rect x="66.3" y="773" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="69.32" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (236,819,209 samples, 0.68%)</title><rect x="152.2" y="869" width="8.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="155.25" y="879.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,157,411 samples, 0.08%)</title><rect x="60.0" y="565" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="62.99" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,123,863 samples, 0.10%)</title><rect x="130.7" y="613" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="133.67" y="623.5" ></text>
</g>
<g >
<title>[[stack]] (1,046,896,300 samples, 3.01%)</title><rect x="13.2" y="1029" width="35.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="16.22" y="1039.5" >[[s..</text>
</g>
<g >
<title>PyObject_Dir (26,210,400 samples, 0.08%)</title><rect x="81.1" y="309" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="84.15" y="319.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,225,113 samples, 0.08%)</title><rect x="136.6" y="373" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="139.65" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,528 samples, 0.08%)</title><rect x="104.5" y="949" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.49" y="959.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (100,614,998 samples, 0.29%)</title><rect x="62.9" y="485" width="3.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="65.90" y="495.5" ></text>
</g>
<g >
<title>_int_realloc (26,707,493 samples, 0.08%)</title><rect x="183.0" y="357" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="186.03" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (100,614,998 samples, 0.29%)</title><rect x="62.9" y="949" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="65.90" y="959.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,647,249 samples, 0.09%)</title><rect x="152.2" y="549" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="155.25" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,682,193 samples, 0.10%)</title><rect x="119.8" y="261" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="122.84" y="271.5" ></text>
</g>
<g >
<title>page_fault (33,641,241 samples, 0.10%)</title><rect x="154.3" y="309" width="1.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="157.29" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (100,614,998 samples, 0.29%)</title><rect x="62.9" y="757" width="3.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="65.90" y="767.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (34,118,290 samples, 0.10%)</title><rect x="803.0" y="437" width="1.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="805.96" y="447.5" ></text>
</g>
<g >
<title>[timestamps.cpython-312-x86_64-linux-gnu.so] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="1013" width="0.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="136.97" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (26,405,974 samples, 0.08%)</title><rect x="123.0" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.03" y="383.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (168,611,167 samples, 0.49%)</title><rect x="773.3" y="437" width="5.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="776.30" y="447.5" ></text>
</g>
<g >
<title>ext4_dx_readdir (33,449,828 samples, 0.10%)</title><rect x="181.9" y="197" width="1.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="184.90" y="207.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,449,576 samples, 0.15%)</title><rect x="67.5" y="741" width="1.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="70.45" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,513 samples, 0.08%)</title><rect x="110.8" y="277" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.82" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (32,189,412 samples, 0.09%)</title><rect x="109.7" y="645" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.73" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (49,777,937 samples, 0.14%)</title><rect x="202.2" y="677" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="205.24" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,385,177 samples, 0.08%)</title><rect x="169.2" y="261" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.23" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (78,425,070 samples, 0.23%)</title><rect x="96.2" y="629" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.22" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,278,931 samples, 0.08%)</title><rect x="150.5" y="933" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.46" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (34,028,208 samples, 0.10%)</title><rect x="922.0" y="533" width="1.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="924.95" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::vector (34,157,832 samples, 0.10%)</title><rect x="1089.4" y="645" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1092.36" y="655.5" ></text>
</g>
<g >
<title>[_ctypes.cpython-312-x86_64-linux-gnu.so] (34,038,547 samples, 0.10%)</title><rect x="98.9" y="1013" width="1.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="101.88" y="1023.5" ></text>
</g>
<g >
<title>do_user_addr_fault (169,582,644 samples, 0.49%)</title><rect x="650.5" y="405" width="5.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="653.46" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (709,347,368 samples, 2.04%)</title><rect x="69.2" y="901" width="24.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="72.23" y="911.5" >P..</text>
</g>
<g >
<title>[python3.12] (34,106,052 samples, 0.10%)</title><rect x="176.0" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (63,006,133 samples, 0.18%)</title><rect x="131.8" y="533" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.83" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (153,672,736 samples, 0.44%)</title><rect x="85.2" y="549" width="5.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="88.18" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,796 samples, 0.15%)</title><rect x="189.3" y="309" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.32" y="319.5" ></text>
</g>
<g >
<title>PyObject_Malloc (26,212,527 samples, 0.08%)</title><rect x="188.4" y="373" width="0.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="191.43" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (34,209,714 samples, 0.10%)</title><rect x="529.2" y="901" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="532.25" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (33,682,193 samples, 0.10%)</title><rect x="119.8" y="245" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.84" y="255.5" ></text>
</g>
<g >
<title>__ptep_modify_prot_start (34,170,051 samples, 0.10%)</title><rect x="777.9" y="309" width="1.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="780.87" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,935 samples, 0.08%)</title><rect x="96.2" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.22" y="415.5" ></text>
</g>
<g >
<title>_int_realloc (33,641,241 samples, 0.10%)</title><rect x="154.3" y="341" width="1.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="157.29" y="351.5" ></text>
</g>
<g >
<title>_PyObject_GC_New (34,162,268 samples, 0.10%)</title><rect x="69.2" y="341" width="1.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="72.23" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,547,019 samples, 0.08%)</title><rect x="192.9" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.88" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (32,445,759 samples, 0.09%)</title><rect x="82.9" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.92" y="383.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::cpp_function&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, diff_Nexullance_IT_interface, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (10,207,392,610 samples, 29.37%)</title><rect x="813.4" y="741" width="346.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="816.36" y="751.5" >pybind11::cpp_function::cpp_function&lt;std::vect..</text>
</g>
<g >
<title>PyEval_EvalCode (34,162,268 samples, 0.10%)</title><rect x="69.2" y="373" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="72.23" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (67,688,230 samples, 0.19%)</title><rect x="1082.4" y="469" width="2.3" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1085.42" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (59,633,000 samples, 0.17%)</title><rect x="58.0" y="1029" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="60.97" y="1039.5" ></text>
</g>
<g >
<title>blas_thread_server (8,578,174,694 samples, 24.68%)</title><rect x="212.6" y="997" width="291.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="215.62" y="1007.5" >blas_thread_server</text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,205,595 samples, 0.08%)</title><rect x="89.5" y="421" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="92.51" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="917" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="927.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (101,764,676 samples, 0.29%)</title><rect x="970.6" y="421" width="3.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="973.56" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (69,278,347 samples, 0.20%)</title><rect x="119.8" y="789" width="2.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="122.79" y="799.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,732,820 samples, 0.23%)</title><rect x="197.3" y="789" width="2.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="200.25" y="799.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="677" width="7.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1162.88" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (135,653,830 samples, 0.39%)</title><rect x="985.6" y="517" width="4.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="988.58" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,225,113 samples, 0.08%)</title><rect x="136.6" y="325" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="139.65" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="677" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="687.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,858,164 samples, 0.10%)</title><rect x="108.6" y="309" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="111.58" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (34,040,627 samples, 0.10%)</title><rect x="45.3" y="1013" width="1.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="48.30" y="1023.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (49,558,201 samples, 0.14%)</title><rect x="112.6" y="357" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="115.60" y="367.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,212,373 samples, 0.08%)</title><rect x="184.8" y="437" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="187.84" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (236,819,209 samples, 0.68%)</title><rect x="152.2" y="821" width="8.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.25" y="831.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (33,669,434 samples, 0.10%)</title><rect x="926.6" y="501" width="1.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="929.59" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="373" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="277" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (322,221,821 samples, 0.93%)</title><rect x="163.0" y="549" width="10.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.01" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (34,149,566 samples, 0.10%)</title><rect x="1081.3" y="533" width="1.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1084.26" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (873,398,574 samples, 2.51%)</title><rect x="69.2" y="997" width="29.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.23" y="1007.5" >[p..</text>
</g>
<g >
<title>[python3.12] (26,213,506 samples, 0.08%)</title><rect x="135.8" y="437" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.76" y="447.5" ></text>
</g>
<g >
<title>new_sync_read (27,174,690 samples, 0.08%)</title><rect x="161.2" y="149" width="0.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="164.19" y="159.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (34,079,130 samples, 0.10%)</title><rect x="961.3" y="501" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="964.29" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,595 samples, 0.08%)</title><rect x="89.5" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.51" y="351.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; const*, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;*&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="309" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="817.48" y="319.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,244,854 samples, 0.08%)</title><rect x="181.0" y="645" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="184.01" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,209,825 samples, 0.08%)</title><rect x="118.9" y="517" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="121.90" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,075,791 samples, 0.08%)</title><rect x="60.9" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.88" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="357" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,004,184 samples, 0.07%)</title><rect x="98.0" y="421" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.00" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (63,006,133 samples, 0.18%)</title><rect x="131.8" y="677" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.83" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (53,038,442 samples, 0.15%)</title><rect x="530.4" y="661" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.41" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (873,394,748 samples, 2.51%)</title><rect x="152.2" y="965" width="29.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.25" y="975.5" >[p..</text>
</g>
<g >
<title>[python3.12] (29,004,945 samples, 0.08%)</title><rect x="149.5" y="821" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.48" y="831.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,129,598 samples, 0.10%)</title><rect x="865.3" y="549" width="1.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="868.28" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (52,587,326 samples, 0.15%)</title><rect x="122.1" y="533" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.14" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,449,576 samples, 0.15%)</title><rect x="67.5" y="645" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="70.45" y="655.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (47,332,264 samples, 0.14%)</title><rect x="185.7" y="309" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="188.73" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,157,411 samples, 0.08%)</title><rect x="60.0" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,951 samples, 0.08%)</title><rect x="97.1" y="373" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="100.11" y="383.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (170,239,660 samples, 0.49%)</title><rect x="1048.9" y="597" width="5.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1051.93" y="607.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (86,157,674 samples, 0.25%)</title><rect x="169.2" y="389" width="3.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="172.23" y="399.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (33,906,054 samples, 0.10%)</title><rect x="86.3" y="149" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="89.33" y="159.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,847 samples, 0.08%)</title><rect x="151.4" y="789" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.36" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (377,112,606 samples, 1.08%)</title><rect x="69.2" y="709" width="12.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.23" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (33,194,204 samples, 0.10%)</title><rect x="138.7" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.70" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,575 samples, 0.08%)</title><rect x="123.9" y="389" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="126.93" y="399.5" ></text>
</g>
<g >
<title>operator new (68,000,587 samples, 0.20%)</title><rect x="1105.5" y="565" width="2.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1108.55" y="575.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,469,038 samples, 0.10%)</title><rect x="90.4" y="453" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="93.40" y="463.5" ></text>
</g>
<g >
<title>[unknown] (4,444,602,297 samples, 12.79%)</title><rect x="60.0" y="1029" width="150.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="62.99" y="1039.5" >[unknown]</text>
</g>
<g >
<title>[python3.12] (34,082,645 samples, 0.10%)</title><rect x="107.4" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.42" y="303.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,181,352 samples, 0.08%)</title><rect x="122.1" y="469" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="125.14" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_Tuple_impl (33,250,872 samples, 0.10%)</title><rect x="816.8" y="613" width="1.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="819.79" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (52,496,117 samples, 0.15%)</title><rect x="91.5" y="629" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.53" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,279,161 samples, 0.08%)</title><rect x="125.7" y="549" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="128.73" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="213" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="223.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="741" width="7.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1162.88" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (49,777,937 samples, 0.14%)</title><rect x="202.2" y="965" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.24" y="975.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,428,438 samples, 0.15%)</title><rect x="530.4" y="533" width="1.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="533.43" y="543.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT::export_routing_table (34,215,817 samples, 0.10%)</title><rect x="817.9" y="677" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="820.91" y="687.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (34,128,532 samples, 0.10%)</title><rect x="933.5" y="517" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="936.52" y="527.5" ></text>
</g>
<g >
<title>_convert_from_any.part.0 (34,156,159 samples, 0.10%)</title><rect x="811.0" y="629" width="1.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="814.05" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,592,773 samples, 0.08%)</title><rect x="134.9" y="533" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="137.86" y="543.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_not_relaxed&gt; (34,025,697 samples, 0.10%)</title><rect x="937.0" y="549" width="1.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="939.99" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,645,323 samples, 0.23%)</title><rect x="188.4" y="533" width="2.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.43" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (49,558,201 samples, 0.14%)</title><rect x="112.6" y="325" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.60" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,825 samples, 0.08%)</title><rect x="118.9" y="501" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.90" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (33,995,811 samples, 0.10%)</title><rect x="864.1" y="517" width="1.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="867.13" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (101,764,676 samples, 0.29%)</title><rect x="970.6" y="453" width="3.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="973.56" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (236,819,209 samples, 0.68%)</title><rect x="152.2" y="693" width="8.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.25" y="703.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,194,204 samples, 0.10%)</title><rect x="138.7" y="357" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="141.70" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="213" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (29,004,945 samples, 0.08%)</title><rect x="149.5" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.48" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (291,270,439 samples, 0.84%)</title><rect x="138.7" y="725" width="9.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="141.70" y="735.5" ></text>
</g>
<g >
<title>map_vdso_randomized (15,855,993 samples, 0.05%)</title><rect x="1169.1" y="917" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1172.15" y="927.5" ></text>
</g>
<g >
<title>ext4_bread (33,449,828 samples, 0.10%)</title><rect x="181.9" y="133" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="184.90" y="143.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (34,283,526 samples, 0.10%)</title><rect x="25.7" y="1013" width="1.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="28.67" y="1023.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (175,074,039 samples, 0.50%)</title><rect x="176.0" y="821" width="5.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="178.95" y="831.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (25,845,919 samples, 0.07%)</title><rect x="173.9" y="469" width="0.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="176.94" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (53,396,557 samples, 0.15%)</title><rect x="80.2" y="485" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.22" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (52,397,176 samples, 0.15%)</title><rect x="191.1" y="709" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.10" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (49,558,201 samples, 0.14%)</title><rect x="112.6" y="309" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.60" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,247,899 samples, 0.08%)</title><rect x="68.3" y="437" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.34" y="447.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,205,595 samples, 0.08%)</title><rect x="89.5" y="453" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="92.51" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,275,703 samples, 0.17%)</title><rect x="105.4" y="533" width="2.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="108.38" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (61,286,717 samples, 0.18%)</title><rect x="153.4" y="533" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.35" y="543.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,469,038 samples, 0.10%)</title><rect x="90.4" y="517" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="93.40" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (79,754,200 samples, 0.23%)</title><rect x="185.7" y="421" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.73" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,127,559 samples, 0.10%)</title><rect x="126.6" y="565" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="129.62" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,129,470 samples, 0.08%)</title><rect x="134.0" y="901" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="136.97" y="911.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,547,019 samples, 0.08%)</title><rect x="192.9" y="805" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="195.88" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (85,101,574 samples, 0.24%)</title><rect x="127.8" y="837" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.78" y="847.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (68,255,646 samples, 0.20%)</title><rect x="1107.9" y="613" width="2.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1110.85" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (52,428,438 samples, 0.15%)</title><rect x="530.4" y="565" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.43" y="575.5" ></text>
</g>
<g >
<title>touch_atime (27,174,690 samples, 0.08%)</title><rect x="161.2" y="85" width="0.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="164.19" y="95.5" ></text>
</g>
<g >
<title>dispatcher_vectorcall (33,676,455 samples, 0.10%)</title><rect x="147.4" y="453" width="1.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="150.45" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,127,559 samples, 0.10%)</title><rect x="126.6" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.62" y="415.5" ></text>
</g>
<g >
<title>getname_flags (26,217,823 samples, 0.08%)</title><rect x="162.1" y="213" width="0.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="165.12" y="223.5" ></text>
</g>
<g >
<title>PyDict_MergeFromSeq2 (33,710,640 samples, 0.10%)</title><rect x="539.8" y="741" width="1.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="542.79" y="751.5" ></text>
</g>
<g >
<title>PyObject_Malloc (34,106,052 samples, 0.10%)</title><rect x="176.0" y="325" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="178.95" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,806,279 samples, 0.15%)</title><rect x="134.9" y="645" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="137.86" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (114,723,133 samples, 0.33%)</title><rect x="177.1" y="629" width="3.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="180.11" y="639.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,575 samples, 0.08%)</title><rect x="123.9" y="309" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="126.93" y="319.5" ></text>
</g>
<g >
<title>PyErr_NewExceptionWithDoc (26,946,386 samples, 0.08%)</title><rect x="124.8" y="293" width="0.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="127.82" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (153,672,736 samples, 0.44%)</title><rect x="85.2" y="629" width="5.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="88.18" y="639.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,216,513 samples, 0.08%)</title><rect x="110.8" y="293" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="113.82" y="303.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (67,574,313 samples, 0.19%)</title><rect x="1065.1" y="645" width="2.3" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1068.11" y="655.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt; (33,816,921 samples, 0.10%)</title><rect x="905.8" y="549" width="1.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="908.77" y="559.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (33,469,038 samples, 0.10%)</title><rect x="90.4" y="357" width="1.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="93.40" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,247,899 samples, 0.08%)</title><rect x="68.3" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.34" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (92,596,871 samples, 0.27%)</title><rect x="82.0" y="421" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="85.04" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::select_on_container_copy_construction (34,257,469 samples, 0.10%)</title><rect x="1084.7" y="565" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1087.71" y="575.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (28,349,249 samples, 0.08%)</title><rect x="72.4" y="229" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="75.43" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (28,349,249 samples, 0.08%)</title><rect x="72.4" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.43" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (34,164,442 samples, 0.10%)</title><rect x="194.9" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="197.94" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (68,255,646 samples, 0.20%)</title><rect x="1107.9" y="597" width="2.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1110.85" y="607.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (34,115,394 samples, 0.10%)</title><rect x="1042.0" y="613" width="1.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1044.99" y="623.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,049,393 samples, 0.10%)</title><rect x="812.2" y="549" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="815.21" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (52,461,466 samples, 0.15%)</title><rect x="93.3" y="421" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.31" y="431.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,214,847 samples, 0.08%)</title><rect x="151.4" y="997" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="154.36" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (53,038,442 samples, 0.15%)</title><rect x="530.4" y="693" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="533.41" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (159,139,959 samples, 0.46%)</title><rect x="183.0" y="789" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="799.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (32,647,249 samples, 0.09%)</title><rect x="152.2" y="373" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="155.25" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate (204,288,714 samples, 0.59%)</title><rect x="1117.1" y="613" width="7.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1120.11" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (32,647,249 samples, 0.09%)</title><rect x="152.2" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.25" y="543.5" ></text>
</g>
<g >
<title>do_page_fault (34,110,184 samples, 0.10%)</title><rect x="546.7" y="469" width="1.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="549.68" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,209,714 samples, 0.10%)</title><rect x="529.2" y="805" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="532.25" y="815.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; const*, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;*, std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="325" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="817.48" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (33,194,204 samples, 0.10%)</title><rect x="138.7" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.70" y="319.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,225,113 samples, 0.08%)</title><rect x="136.6" y="485" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="139.65" y="495.5" ></text>
</g>
<g >
<title>page_fault (169,582,644 samples, 0.49%)</title><rect x="650.5" y="453" width="5.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="653.46" y="463.5" ></text>
</g>
<g >
<title>finish_task_switch (10,718,025 samples, 0.03%)</title><rect x="212.2" y="981" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="215.18" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (34,006,245 samples, 0.10%)</title><rect x="196.1" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.10" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,682,193 samples, 0.10%)</title><rect x="119.8" y="293" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="122.84" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,178 samples, 0.08%)</title><rect x="140.7" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.72" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,421,936 samples, 0.09%)</title><rect x="187.3" y="405" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="190.33" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,946,386 samples, 0.08%)</title><rect x="124.8" y="693" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.82" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,506 samples, 0.08%)</title><rect x="135.8" y="405" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.76" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="629" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,278,931 samples, 0.08%)</title><rect x="150.5" y="741" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="153.46" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,847 samples, 0.08%)</title><rect x="151.4" y="853" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="154.36" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (63,006,133 samples, 0.18%)</title><rect x="131.8" y="421" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.83" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (135,953,259 samples, 0.39%)</title><rect x="114.3" y="453" width="4.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="117.29" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,075,791 samples, 0.08%)</title><rect x="60.9" y="597" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="63.88" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="501" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (78,732,820 samples, 0.23%)</title><rect x="197.3" y="885" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.25" y="895.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,106,052 samples, 0.10%)</title><rect x="176.0" y="709" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="178.95" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,189,412 samples, 0.09%)</title><rect x="109.7" y="661" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="112.73" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,205,595 samples, 0.08%)</title><rect x="89.5" y="373" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="92.51" y="383.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (25,845,919 samples, 0.07%)</title><rect x="173.9" y="773" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="176.94" y="783.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long*&gt; (33,976,942 samples, 0.10%)</title><rect x="1131.0" y="549" width="1.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1134.00" y="559.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;unsigned long const*, unsigned long*&gt; (34,217,585 samples, 0.10%)</title><rect x="1133.3" y="597" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1136.32" y="607.5" ></text>
</g>
<g >
<title>__lru_cache_add (67,963,689 samples, 0.20%)</title><rect x="766.4" y="309" width="2.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="769.39" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (238,033,144 samples, 0.68%)</title><rect x="1077.8" y="581" width="8.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1080.80" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,732,820 samples, 0.23%)</title><rect x="197.3" y="837" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="200.25" y="847.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,189,412 samples, 0.09%)</title><rect x="109.7" y="533" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="112.73" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,279,161 samples, 0.08%)</title><rect x="125.7" y="517" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="128.73" y="527.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (31,199,465 samples, 0.09%)</title><rect x="128.7" y="421" width="1.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="131.67" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (52,461,466 samples, 0.15%)</title><rect x="93.3" y="357" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.31" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (85,626,136 samples, 0.25%)</title><rect x="93.3" y="565" width="2.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="96.31" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (140,967,987 samples, 0.41%)</title><rect x="177.1" y="741" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.11" y="751.5" ></text>
</g>
<g >
<title>do_group_exit (134,989,158 samples, 0.39%)</title><rect x="1169.7" y="981" width="4.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1172.68" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (34,117,307 samples, 0.10%)</title><rect x="538.6" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="541.63" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,449,576 samples, 0.15%)</title><rect x="67.5" y="629" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="70.45" y="639.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,397,176 samples, 0.15%)</title><rect x="191.1" y="581" width="1.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="194.10" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (33,555,454 samples, 0.10%)</title><rect x="1046.6" y="597" width="1.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1049.63" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (85,626,136 samples, 0.25%)</title><rect x="93.3" y="501" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.31" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (85,762,981 samples, 0.25%)</title><rect x="60.0" y="917" width="2.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="62.99" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (34,279,956 samples, 0.10%)</title><rect x="834.0" y="581" width="1.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="837.04" y="591.5" ></text>
</g>
<g >
<title>gentype_alloc (61,014,405 samples, 0.18%)</title><rect x="532.2" y="805" width="2.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="535.21" y="815.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (32,932,509 samples, 0.09%)</title><rect x="813.4" y="613" width="1.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="816.36" y="623.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (67,665,463 samples, 0.19%)</title><rect x="769.8" y="325" width="2.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="772.85" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (101,519,991 samples, 0.29%)</title><rect x="549.0" y="357" width="3.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="551.99" y="367.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,244,854 samples, 0.08%)</title><rect x="181.0" y="357" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="184.01" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,233,202 samples, 0.15%)</title><rect x="60.0" y="661" width="1.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="62.99" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (52,449,576 samples, 0.15%)</title><rect x="67.5" y="837" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.45" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (348,439,644 samples, 1.00%)</title><rect x="162.1" y="613" width="11.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="165.12" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="335.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,212,373 samples, 0.08%)</title><rect x="184.8" y="373" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="187.84" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (262,393,642 samples, 0.75%)</title><rect x="105.4" y="885" width="8.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="108.38" y="895.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,432,796 samples, 0.15%)</title><rect x="189.3" y="389" width="1.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="192.32" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (34,106,052 samples, 0.10%)</title><rect x="176.0" y="629" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (53,173,386 samples, 0.15%)</title><rect x="183.0" y="517" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (332,234,762 samples, 0.96%)</title><rect x="82.0" y="805" width="11.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="85.04" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (262,393,642 samples, 0.75%)</title><rect x="105.4" y="997" width="8.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="108.38" y="1007.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,209,825 samples, 0.08%)</title><rect x="118.9" y="917" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="121.90" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="389" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="399.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (60,406,720 samples, 0.17%)</title><rect x="125.7" y="597" width="2.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="128.73" y="607.5" ></text>
</g>
<g >
<title>operator new (68,334,394 samples, 0.20%)</title><rect x="1126.4" y="549" width="2.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1129.36" y="559.5" ></text>
</g>
<g >
<title>__install_special_mapping (15,855,993 samples, 0.05%)</title><rect x="1169.1" y="869" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1172.15" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; const&amp;&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="405" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="817.48" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (27,666,663 samples, 0.08%)</title><rect x="129.7" y="741" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.73" y="751.5" ></text>
</g>
<g >
<title>change_prot_numa (33,950,108 samples, 0.10%)</title><rect x="643.6" y="373" width="1.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="646.55" y="383.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (34,088,929 samples, 0.10%)</title><rect x="207.4" y="1013" width="1.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="210.41" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,563,345 samples, 0.10%)</title><rect x="171.0" y="277" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="174.01" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (34,084,396 samples, 0.10%)</title><rect x="1125.2" y="629" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1128.20" y="639.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (68,171,099 samples, 0.20%)</title><rect x="832.9" y="629" width="2.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="835.89" y="639.5" ></text>
</g>
<g >
<title>clear_page_erms (67,384,058 samples, 0.19%)</title><rect x="650.5" y="293" width="2.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="653.46" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (34,101,289 samples, 0.10%)</title><rect x="842.2" y="645" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="845.15" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (49,777,937 samples, 0.14%)</title><rect x="202.2" y="661" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="205.24" y="671.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (116,669,387 samples, 0.34%)</title><rect x="156.3" y="405" width="4.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="159.32" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,592,773 samples, 0.08%)</title><rect x="134.9" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,181,352 samples, 0.08%)</title><rect x="122.1" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.14" y="303.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (85,762,981 samples, 0.25%)</title><rect x="60.0" y="981" width="2.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="62.99" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (62,296,377 samples, 0.18%)</title><rect x="177.1" y="581" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="180.11" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (102,108,673 samples, 0.29%)</title><rect x="193.8" y="709" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="261" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (49,558,201 samples, 0.14%)</title><rect x="112.6" y="469" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.60" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (33,641,241 samples, 0.10%)</title><rect x="154.3" y="245" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="157.29" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,353 samples, 0.08%)</title><rect x="199.0" y="277" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.03" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (49,558,201 samples, 0.14%)</title><rect x="112.6" y="485" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.60" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="687.5" ></text>
</g>
<g >
<title>ret_from_fork (17,189,092 samples, 0.05%)</title><rect x="212.0" y="1013" width="0.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="215.04" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (26,547,019 samples, 0.08%)</title><rect x="192.9" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.88" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,258,943 samples, 0.08%)</title><rect x="92.4" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.42" y="463.5" ></text>
</g>
<g >
<title>__lru_cache_add (34,187,225 samples, 0.10%)</title><rect x="751.5" y="325" width="1.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="754.49" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (159,139,959 samples, 0.46%)</title><rect x="183.0" y="725" width="5.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="186.03" y="735.5" ></text>
</g>
<g >
<title>get_view_from_index (31,556,724 samples, 0.09%)</title><rect x="534.3" y="821" width="1.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="537.28" y="831.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT_interface::_initialize (32,932,509 samples, 0.09%)</title><rect x="813.4" y="709" width="1.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="816.36" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (262,393,642 samples, 0.75%)</title><rect x="105.4" y="917" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (135,861,298 samples, 0.39%)</title><rect x="969.4" y="485" width="4.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="972.40" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,225,113 samples, 0.08%)</title><rect x="136.6" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (510,287,057 samples, 1.47%)</title><rect x="1072.0" y="629" width="17.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1075.03" y="639.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (27,174,690 samples, 0.08%)</title><rect x="161.2" y="101" width="0.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="164.19" y="111.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (101,273,660 samples, 0.29%)</title><rect x="1170.8" y="837" width="3.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1173.83" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (698,320,709 samples, 2.01%)</title><rect x="152.2" y="949" width="23.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="155.25" y="959.5" >P..</text>
</g>
<g >
<title>[python3.12] (32,189,412 samples, 0.09%)</title><rect x="109.7" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.73" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (102,108,673 samples, 0.29%)</title><rect x="193.8" y="917" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="196.78" y="927.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (68,220,276 samples, 0.20%)</title><rect x="199.9" y="485" width="2.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="202.92" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_get_insert_equal_pos (33,541,454 samples, 0.10%)</title><rect x="1143.7" y="629" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1146.70" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (69,278,347 samples, 0.20%)</title><rect x="119.8" y="773" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="122.79" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (7,617,418,747 samples, 21.91%)</title><rect x="546.7" y="597" width="258.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="549.68" y="607.5" >[python3.12]</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,129,470 samples, 0.08%)</title><rect x="134.0" y="853" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="136.97" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,225,113 samples, 0.08%)</title><rect x="136.6" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,420,886 samples, 0.15%)</title><rect x="96.2" y="597" width="1.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="99.22" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,449,576 samples, 0.15%)</title><rect x="67.5" y="549" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="70.45" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,445,907 samples, 0.17%)</title><rect x="136.6" y="629" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="139.65" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (135,953,259 samples, 0.39%)</title><rect x="114.3" y="517" width="4.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="117.29" y="527.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (49,777,937 samples, 0.14%)</title><rect x="202.2" y="1013" width="1.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="205.24" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (33,858,630 samples, 0.10%)</title><rect x="804.1" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="807.12" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (127,467,141 samples, 0.37%)</title><rect x="85.2" y="437" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.18" y="447.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (142,885,243 samples, 0.41%)</title><rect x="155.4" y="453" width="4.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="158.44" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (68,102,428 samples, 0.20%)</title><rect x="193.8" y="325" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (34,161,173 samples, 0.10%)</title><rect x="782.5" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="785.50" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (348,439,644 samples, 1.00%)</title><rect x="162.1" y="597" width="11.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="165.12" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="741" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (873,398,574 samples, 2.51%)</title><rect x="69.2" y="965" width="29.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.23" y="975.5" >_P..</text>
</g>
<g >
<title>[python3.12] (26,212,602 samples, 0.08%)</title><rect x="180.1" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.12" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,425,070 samples, 0.23%)</title><rect x="96.2" y="661" width="2.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.22" y="671.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (67,688,230 samples, 0.19%)</title><rect x="1082.4" y="501" width="2.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1085.42" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (135,953,259 samples, 0.39%)</title><rect x="114.3" y="933" width="4.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="117.29" y="943.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (85,762,981 samples, 0.25%)</title><rect x="60.0" y="949" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="62.99" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,178 samples, 0.08%)</title><rect x="140.7" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.72" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (242,638,290 samples, 0.70%)</title><rect x="125.7" y="933" width="8.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="943.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (6,705,716 samples, 0.02%)</title><rect x="503.6" y="949" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="506.61" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (100,614,998 samples, 0.29%)</title><rect x="62.9" y="821" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="65.90" y="831.5" ></text>
</g>
<g >
<title>__GI___libc_read (27,174,690 samples, 0.08%)</title><rect x="161.2" y="261" width="0.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="164.19" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator (34,114,493 samples, 0.10%)</title><rect x="814.5" y="437" width="1.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="817.48" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="869" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,469,038 samples, 0.10%)</title><rect x="90.4" y="533" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.40" y="543.5" ></text>
</g>
<g >
<title>PySet_New (32,421,936 samples, 0.09%)</title><rect x="187.3" y="325" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="190.33" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (49,777,937 samples, 0.14%)</title><rect x="202.2" y="341" width="1.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="205.24" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,217,823 samples, 0.08%)</title><rect x="162.1" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="165.12" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,123,863 samples, 0.10%)</title><rect x="130.7" y="725" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.67" y="735.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (18,542,365,970 samples, 53.35%)</title><rect x="530.4" y="885" width="629.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="533.41" y="895.5" >PyEval_EvalCode</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (159,139,959 samples, 0.46%)</title><rect x="183.0" y="581" width="5.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="186.03" y="591.5" ></text>
</g>
<g >
<title>add_and_return_legacy_wrapping_ufunc_loop (114,696,998 samples, 0.33%)</title><rect x="75.2" y="373" width="3.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="78.17" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,592,773 samples, 0.08%)</title><rect x="134.9" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="415.5" ></text>
</g>
<g >
<title>do_anonymous_page (34,049,393 samples, 0.10%)</title><rect x="812.2" y="517" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="815.21" y="527.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (32,189,412 samples, 0.09%)</title><rect x="109.7" y="261" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="112.73" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (33,469,038 samples, 0.10%)</title><rect x="90.4" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.40" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (377,112,606 samples, 1.08%)</title><rect x="69.2" y="613" width="12.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="72.23" y="623.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (33,665,200 samples, 0.10%)</title><rect x="771.0" y="293" width="1.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="774.00" y="303.5" ></text>
</g>
<g >
<title>task_work_run (34,079,130 samples, 0.10%)</title><rect x="961.3" y="453" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="964.29" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,279,161 samples, 0.08%)</title><rect x="125.7" y="421" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="128.73" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,732,820 samples, 0.23%)</title><rect x="197.3" y="869" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="200.25" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (33,682,193 samples, 0.10%)</title><rect x="119.8" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.84" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (33,329,111 samples, 0.10%)</title><rect x="174.8" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.82" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (236,819,209 samples, 0.68%)</title><rect x="152.2" y="773" width="8.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="155.25" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (52,449,576 samples, 0.15%)</title><rect x="67.5" y="485" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.45" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (135,953,259 samples, 0.39%)</title><rect x="114.3" y="485" width="4.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="117.29" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (59,988,303 samples, 0.17%)</title><rect x="70.4" y="501" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.39" y="511.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (102,392,919 samples, 0.29%)</title><rect x="1129.8" y="613" width="3.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1132.84" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,329,111 samples, 0.10%)</title><rect x="174.8" y="517" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.82" y="527.5" ></text>
</g>
<g >
<title>page_fault (28,349,249 samples, 0.08%)</title><rect x="72.4" y="357" width="1.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="75.43" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (60,406,720 samples, 0.17%)</title><rect x="125.7" y="725" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (53,886,826 samples, 0.16%)</title><rect x="160.3" y="357" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="367.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (33,995,811 samples, 0.10%)</title><rect x="864.1" y="565" width="1.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="867.13" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (101,124,873 samples, 0.29%)</title><rect x="85.2" y="405" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.18" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (205,678,842 samples, 0.59%)</title><rect x="141.6" y="517" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.61" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="543.5" ></text>
</g>
<g >
<title>_Py_read (26,279,161 samples, 0.08%)</title><rect x="125.7" y="325" width="0.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="128.73" y="335.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (49,558,201 samples, 0.14%)</title><rect x="112.6" y="421" width="1.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="115.60" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,157,411 samples, 0.08%)</title><rect x="60.0" y="581" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,106,052 samples, 0.10%)</title><rect x="176.0" y="261" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="178.95" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="613" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,397,176 samples, 0.15%)</title><rect x="191.1" y="565" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.10" y="575.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,424,260 samples, 0.15%)</title><rect x="103.6" y="965" width="1.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="106.60" y="975.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (26,205,247 samples, 0.08%)</title><rect x="145.7" y="197" width="0.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="148.67" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (164,051,206 samples, 0.47%)</title><rect x="93.3" y="837" width="5.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.31" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (279,738,645 samples, 0.80%)</title><rect x="82.0" y="725" width="9.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="85.04" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (33,925,019 samples, 0.10%)</title><rect x="528.1" y="789" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="531.10" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (53,886,826 samples, 0.16%)</title><rect x="160.3" y="693" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="163.29" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (33,469,038 samples, 0.10%)</title><rect x="90.4" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.40" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (873,398,574 samples, 2.51%)</title><rect x="69.2" y="981" width="29.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="72.23" y="991.5" >_P..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (85,626,136 samples, 0.25%)</title><rect x="93.3" y="725" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="96.31" y="735.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long*&gt; (34,077,508 samples, 0.10%)</title><rect x="1121.7" y="565" width="1.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1124.73" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,004,945 samples, 0.08%)</title><rect x="149.5" y="613" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="152.48" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,099,048 samples, 0.10%)</title><rect x="79.1" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.07" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,257,327 samples, 0.08%)</title><rect x="173.1" y="293" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.05" y="303.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,051,526 samples, 0.07%)</title><rect x="82.0" y="357" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="85.04" y="367.5" ></text>
</g>
<g >
<title>PyDict_SetItem (34,209,714 samples, 0.10%)</title><rect x="529.2" y="917" width="1.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="532.25" y="927.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (238,675,613 samples, 0.69%)</title><rect x="941.6" y="565" width="8.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="944.62" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (63,006,133 samples, 0.18%)</title><rect x="131.8" y="565" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.83" y="575.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,825 samples, 0.08%)</title><rect x="118.9" y="485" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="121.90" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (60,445,907 samples, 0.17%)</title><rect x="136.6" y="581" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (68,104,252 samples, 0.20%)</title><rect x="1110.2" y="613" width="2.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1113.17" y="623.5" ></text>
</g>
<g >
<title>generic_file_read_iter (27,174,690 samples, 0.08%)</title><rect x="161.2" y="117" width="0.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="164.19" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (102,485,960 samples, 0.29%)</title><rect x="1036.2" y="613" width="3.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1039.24" y="623.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (134,989,158 samples, 0.39%)</title><rect x="1169.7" y="869" width="4.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1172.68" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (34,082,645 samples, 0.10%)</title><rect x="107.4" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.42" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,217,823 samples, 0.08%)</title><rect x="162.1" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="165.12" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,528 samples, 0.08%)</title><rect x="104.5" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.49" y="495.5" ></text>
</g>
<g >
<title>double_add (61,014,405 samples, 0.18%)</title><rect x="532.2" y="821" width="2.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="535.21" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (29,004,945 samples, 0.08%)</title><rect x="149.5" y="741" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.48" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (291,270,439 samples, 0.84%)</title><rect x="138.7" y="693" width="9.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.70" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (140,967,987 samples, 0.41%)</title><rect x="177.1" y="661" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.11" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,732,820 samples, 0.23%)</title><rect x="197.3" y="661" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="200.25" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="341" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (291,270,439 samples, 0.84%)</title><rect x="138.7" y="757" width="9.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="141.70" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;float const, unsigned long&gt; &gt;::_M_valptr (34,188,372 samples, 0.10%)</title><rect x="1148.3" y="613" width="1.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1151.33" y="623.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (102,198,586 samples, 0.29%)</title><rect x="652.7" y="325" width="3.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="655.75" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (57,434,911 samples, 0.17%)</title><rect x="127.8" y="549" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.78" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (68,220,276 samples, 0.20%)</title><rect x="199.9" y="837" width="2.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="202.92" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (236,819,209 samples, 0.68%)</title><rect x="152.2" y="757" width="8.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.25" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,167,361 samples, 0.08%)</title><rect x="146.6" y="309" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="149.56" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_do_relocate (136,646,889 samples, 0.39%)</title><rect x="1119.4" y="597" width="4.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1122.41" y="607.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,329,111 samples, 0.10%)</title><rect x="174.8" y="853" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="177.82" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (49,558,201 samples, 0.14%)</title><rect x="112.6" y="405" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.60" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (262,393,642 samples, 0.75%)</title><rect x="105.4" y="901" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="911.5" ></text>
</g>
<g >
<title>page_fault (34,049,393 samples, 0.10%)</title><rect x="812.2" y="613" width="1.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="815.21" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="613" width="7.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1162.88" y="623.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,329,111 samples, 0.10%)</title><rect x="174.8" y="581" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="177.82" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="629" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="639.5" ></text>
</g>
<g >
<title>PyObject_IsTrue (26,221,192 samples, 0.08%)</title><rect x="49.9" y="1013" width="0.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="52.87" y="1023.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,206,935 samples, 0.08%)</title><rect x="96.2" y="533" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="99.22" y="543.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (33,417,057 samples, 0.10%)</title><rect x="994.8" y="533" width="1.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="997.77" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (249,061,769 samples, 0.72%)</title><rect x="193.8" y="981" width="8.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (68,289,004 samples, 0.20%)</title><rect x="1185.4" y="1013" width="2.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1188.36" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,057,752 samples, 0.10%)</title><rect x="106.3" y="389" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="109.27" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,209,825 samples, 0.08%)</title><rect x="118.9" y="885" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="121.90" y="895.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,400 samples, 0.08%)</title><rect x="81.1" y="357" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="84.15" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,278,931 samples, 0.08%)</title><rect x="150.5" y="709" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="153.46" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,575 samples, 0.08%)</title><rect x="123.9" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (175,074,039 samples, 0.50%)</title><rect x="176.0" y="837" width="5.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (49,777,937 samples, 0.14%)</title><rect x="202.2" y="373" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="205.24" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,106,052 samples, 0.10%)</title><rect x="176.0" y="453" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.95" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,847 samples, 0.08%)</title><rect x="151.4" y="757" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.36" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,666,663 samples, 0.08%)</title><rect x="129.7" y="517" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="132.73" y="527.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (34,220,794 samples, 0.10%)</title><rect x="137.5" y="405" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="140.54" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,329,111 samples, 0.10%)</title><rect x="174.8" y="613" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="177.82" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (128,216,512 samples, 0.37%)</title><rect x="105.4" y="613" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (84,618,929 samples, 0.24%)</title><rect x="109.7" y="709" width="2.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="112.73" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,732 samples, 0.08%)</title><rect x="103.6" y="901" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.60" y="911.5" ></text>
</g>
<g >
<title>page_fault (34,106,052 samples, 0.10%)</title><rect x="176.0" y="309" width="1.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="178.95" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (47,332,264 samples, 0.14%)</title><rect x="185.7" y="373" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.73" y="383.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="501" width="7.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1162.88" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (175,074,039 samples, 0.50%)</title><rect x="176.0" y="805" width="5.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.95" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (34,117,307 samples, 0.10%)</title><rect x="538.6" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="541.63" y="703.5" ></text>
</g>
<g >
<title>unmap_single_vma (134,989,158 samples, 0.39%)</title><rect x="1169.7" y="901" width="4.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1172.68" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (49,777,937 samples, 0.14%)</title><rect x="202.2" y="725" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.24" y="735.5" ></text>
</g>
<g >
<title>alloc_pages_vma (36,796,981 samples, 0.11%)</title><rect x="132.7" y="213" width="1.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="135.72" y="223.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,528 samples, 0.08%)</title><rect x="104.5" y="597" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.49" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,825 samples, 0.08%)</title><rect x="118.9" y="421" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="121.90" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,528 samples, 0.08%)</title><rect x="104.5" y="437" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="107.49" y="447.5" ></text>
</g>
<g >
<title>do_page_fault (34,049,393 samples, 0.10%)</title><rect x="812.2" y="597" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="815.21" y="607.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;std::vector&lt;IT_outputs, std::allocator&lt;IT_outputs&gt; &gt;, diff_Nexullance_IT_interface, std::vector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, std::allocator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (10,207,392,610 samples, 29.37%)</title><rect x="813.4" y="805" width="346.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="816.36" y="815.5" >pybind11::cpp_function::initialize&lt;pybind11::c..</text>
</g>
<g >
<title>[python3.12] (52,806,279 samples, 0.15%)</title><rect x="134.9" y="661" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,257,327 samples, 0.08%)</title><rect x="173.1" y="341" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.05" y="351.5" ></text>
</g>
<g >
<title>PyObject_GetItem (32,924,646 samples, 0.09%)</title><rect x="48.8" y="1013" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="51.76" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,212,602 samples, 0.08%)</title><rect x="180.1" y="469" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="183.12" y="479.5" ></text>
</g>
<g >
<title>Py_FinalizeEx (748,691,385 samples, 2.15%)</title><rect x="505.0" y="965" width="25.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="507.99" y="975.5" >P..</text>
</g>
<g >
<title>_PyObject_Call (26,278,931 samples, 0.08%)</title><rect x="150.5" y="805" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="153.46" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (53,886,826 samples, 0.16%)</title><rect x="160.3" y="421" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="163.29" y="431.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (67,384,058 samples, 0.19%)</title><rect x="650.5" y="325" width="2.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="653.46" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (140,967,987 samples, 0.41%)</title><rect x="177.1" y="709" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="180.11" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,225,113 samples, 0.08%)</title><rect x="136.6" y="277" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="287.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (34,139,811 samples, 0.10%)</title><rect x="21.0" y="1013" width="1.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="24.04" y="1023.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,390,467 samples, 0.15%)</title><rect x="197.3" y="549" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="200.25" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (7,651,198,344 samples, 22.01%)</title><rect x="546.7" y="613" width="259.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="549.68" y="623.5" >[python3.12]</text>
</g>
<g >
<title>do_page_fault (34,117,307 samples, 0.10%)</title><rect x="538.6" y="501" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="541.63" y="511.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (26,212,527 samples, 0.08%)</title><rect x="188.4" y="389" width="0.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="191.43" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (377,112,606 samples, 1.08%)</title><rect x="69.2" y="661" width="12.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.23" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (60,445,907 samples, 0.17%)</title><rect x="136.6" y="709" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="719.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (34,017,255 samples, 0.10%)</title><rect x="920.8" y="533" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="923.80" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (78,732,820 samples, 0.23%)</title><rect x="197.3" y="709" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.25" y="719.5" ></text>
</g>
<g >
<title>call_init (33,469,038 samples, 0.10%)</title><rect x="90.4" y="245" width="1.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="93.40" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (60,275,703 samples, 0.17%)</title><rect x="105.4" y="437" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (203,732,287 samples, 0.59%)</title><rect x="1135.6" y="645" width="6.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1138.63" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (53,173,386 samples, 0.15%)</title><rect x="183.0" y="453" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (52,806,279 samples, 0.15%)</title><rect x="134.9" y="693" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (92,596,871 samples, 0.27%)</title><rect x="82.0" y="645" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="85.04" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (102,108,673 samples, 0.29%)</title><rect x="193.8" y="853" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="196.78" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="837" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (121,865,673 samples, 0.35%)</title><rect x="119.8" y="885" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.79" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (53,038,442 samples, 0.15%)</title><rect x="530.4" y="725" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.41" y="735.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (459,740,990 samples, 1.32%)</title><rect x="134.9" y="997" width="15.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="137.86" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,008 samples, 0.08%)</title><rect x="144.8" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="147.78" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (34,226,065 samples, 0.10%)</title><rect x="924.3" y="533" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="927.27" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="533" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (85,101,574 samples, 0.24%)</title><rect x="127.8" y="757" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.78" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (138,764,894 samples, 0.40%)</title><rect x="142.7" y="405" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.74" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (78,732,820 samples, 0.23%)</title><rect x="197.3" y="629" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.25" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_read (27,174,690 samples, 0.08%)</title><rect x="161.2" y="213" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="164.19" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (32,647,249 samples, 0.09%)</title><rect x="152.2" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.25" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (52,496,117 samples, 0.15%)</title><rect x="91.5" y="613" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.53" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (34,108,281 samples, 0.10%)</title><rect x="1150.6" y="629" width="1.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1153.65" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,946,386 samples, 0.08%)</title><rect x="124.8" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.82" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_S_key (68,421,352 samples, 0.20%)</title><rect x="1147.2" y="629" width="2.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1150.16" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (52,429,517 samples, 0.15%)</title><rect x="110.8" y="661" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.82" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="869" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="879.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (59,392,419 samples, 0.17%)</title><rect x="138.7" y="629" width="2.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="141.70" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,404 samples, 0.08%)</title><rect x="73.4" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.39" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (112,597,533 samples, 0.32%)</title><rect x="142.7" y="357" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.74" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (162,163,084 samples, 0.47%)</title><rect x="114.3" y="965" width="5.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="117.29" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,547,019 samples, 0.08%)</title><rect x="192.9" y="677" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="195.88" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,157,411 samples, 0.08%)</title><rect x="60.0" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,004 samples, 0.08%)</title><rect x="111.7" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.71" y="383.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (33,329,108 samples, 0.10%)</title><rect x="1065.1" y="629" width="1.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1068.11" y="639.5" ></text>
</g>
<g >
<title>mmput (134,989,158 samples, 0.39%)</title><rect x="1169.7" y="949" width="4.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1172.68" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,935 samples, 0.08%)</title><rect x="96.2" y="485" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.22" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,405,974 samples, 0.08%)</title><rect x="123.0" y="325" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="126.03" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="677" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="319.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (31,199,465 samples, 0.09%)</title><rect x="128.7" y="373" width="1.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="131.67" y="383.5" ></text>
</g>
<g >
<title>__GI___xstat (26,217,823 samples, 0.08%)</title><rect x="162.1" y="325" width="0.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="165.12" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,157,411 samples, 0.08%)</title><rect x="60.0" y="613" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,237,174 samples, 0.08%)</title><rect x="91.5" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.53" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="261" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="271.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (33,858,164 samples, 0.10%)</title><rect x="108.6" y="373" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="111.58" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="597" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="607.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (102,392,919 samples, 0.29%)</title><rect x="1129.8" y="597" width="3.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1132.84" y="607.5" ></text>
</g>
<g >
<title>do_anonymous_page (169,582,644 samples, 0.49%)</title><rect x="650.5" y="357" width="5.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="653.46" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (32,647,249 samples, 0.09%)</title><rect x="152.2" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.25" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (159,139,959 samples, 0.46%)</title><rect x="183.0" y="869" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (52,428,438 samples, 0.15%)</title><rect x="530.4" y="389" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.43" y="399.5" ></text>
</g>
<g >
<title>do_page_fault (28,349,249 samples, 0.08%)</title><rect x="72.4" y="341" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="75.43" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (33,194,204 samples, 0.10%)</title><rect x="138.7" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.70" y="351.5" ></text>
</g>
<g >
<title>__vfs_read (27,174,690 samples, 0.08%)</title><rect x="161.2" y="165" width="0.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="164.19" y="175.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,004,184 samples, 0.07%)</title><rect x="98.0" y="293" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.00" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (57,434,911 samples, 0.17%)</title><rect x="127.8" y="613" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.78" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (204,171,960 samples, 0.59%)</title><rect x="153.4" y="549" width="6.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="156.35" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="277" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,428,438 samples, 0.15%)</title><rect x="530.4" y="293" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="533.43" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (26,258,943 samples, 0.08%)</title><rect x="92.4" y="357" width="0.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="95.42" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (49,777,937 samples, 0.14%)</title><rect x="202.2" y="853" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="205.24" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,235,446 samples, 0.08%)</title><rect x="127.8" y="421" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.78" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,445,907 samples, 0.17%)</title><rect x="136.6" y="773" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="139.65" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="597" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,329,111 samples, 0.10%)</title><rect x="174.8" y="373" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="177.82" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,186,157 samples, 0.08%)</title><rect x="80.2" y="341" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="83.22" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,445,907 samples, 0.17%)</title><rect x="136.6" y="757" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="139.65" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (85,101,574 samples, 0.24%)</title><rect x="127.8" y="869" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.78" y="879.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (34,149,566 samples, 0.10%)</title><rect x="1081.3" y="549" width="1.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1084.26" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="885" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,117,307 samples, 0.10%)</title><rect x="538.6" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="541.63" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,445,907 samples, 0.17%)</title><rect x="136.6" y="677" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="139.65" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_read (26,279,161 samples, 0.08%)</title><rect x="125.7" y="293" width="0.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="128.73" y="303.5" ></text>
</g>
<g >
<title>inflate (433,022,469 samples, 1.25%)</title><rect x="789.4" y="453" width="14.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="792.42" y="463.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (67,688,230 samples, 0.19%)</title><rect x="1082.4" y="485" width="2.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1085.42" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (52,806,279 samples, 0.15%)</title><rect x="134.9" y="885" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (175,074,039 samples, 0.50%)</title><rect x="176.0" y="949" width="5.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="959.5" ></text>
</g>
<g >
<title>PyObject_CallFunctionObjArgs (26,216,513 samples, 0.08%)</title><rect x="110.8" y="389" width="0.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="113.82" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (159,139,959 samples, 0.46%)</title><rect x="183.0" y="853" width="5.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="186.03" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,806,279 samples, 0.15%)</title><rect x="134.9" y="549" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.86" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (406,934,711 samples, 1.17%)</title><rect x="136.6" y="981" width="13.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,400 samples, 0.08%)</title><rect x="81.1" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.15" y="303.5" ></text>
</g>
<g >
<title>task_work_run (32,189,412 samples, 0.09%)</title><rect x="109.7" y="245" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="112.73" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~vector (340,341,893 samples, 0.98%)</title><rect x="1090.5" y="645" width="11.6" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1093.52" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,946,386 samples, 0.08%)</title><rect x="124.8" y="709" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.82" y="719.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt; (68,301,440 samples, 0.20%)</title><rect x="1030.5" y="565" width="2.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1033.46" y="575.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,428,438 samples, 0.15%)</title><rect x="530.4" y="421" width="1.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="533.43" y="431.5" ></text>
</g>
<g >
<title>change_prot_numa (34,170,051 samples, 0.10%)</title><rect x="777.9" y="357" width="1.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="780.87" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,233,202 samples, 0.15%)</title><rect x="60.0" y="741" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="62.99" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (140,967,987 samples, 0.41%)</title><rect x="177.1" y="677" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.11" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (97,129,996 samples, 0.28%)</title><rect x="130.7" y="805" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.67" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (29,004,945 samples, 0.08%)</title><rect x="149.5" y="357" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="152.48" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="613" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (49,777,937 samples, 0.14%)</title><rect x="202.2" y="757" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="205.24" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (63,006,133 samples, 0.18%)</title><rect x="131.8" y="485" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.83" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (64,266,963 samples, 0.18%)</title><rect x="158.1" y="277" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.10" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (30,376,332 samples, 0.09%)</title><rect x="177.1" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.11" y="527.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (53,396,557 samples, 0.15%)</title><rect x="80.2" y="517" width="1.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="83.22" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (49,777,937 samples, 0.14%)</title><rect x="202.2" y="741" width="1.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="205.24" y="751.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,547,019 samples, 0.08%)</title><rect x="192.9" y="581" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="195.88" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (94,150,571 samples, 0.27%)</title><rect x="69.2" y="517" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.23" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (85,827,428 samples, 0.25%)</title><rect x="66.3" y="917" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.32" y="927.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,845,919 samples, 0.07%)</title><rect x="173.9" y="581" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="176.94" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="837" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (121,865,673 samples, 0.35%)</title><rect x="119.8" y="869" width="4.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="122.79" y="879.5" ></text>
</g>
<g >
<title>PyUnicode_New (26,207,392 samples, 0.08%)</title><rect x="166.3" y="341" width="0.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="169.32" y="351.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (100,614,998 samples, 0.29%)</title><rect x="62.9" y="421" width="3.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="65.90" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (153,672,736 samples, 0.44%)</title><rect x="85.2" y="565" width="5.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.18" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (60,275,703 samples, 0.17%)</title><rect x="105.4" y="453" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="463.5" ></text>
</g>
<g >
<title>vfs_statx (26,217,823 samples, 0.08%)</title><rect x="162.1" y="245" width="0.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="165.12" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (36,796,981 samples, 0.11%)</title><rect x="132.7" y="261" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="135.72" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (135,953,259 samples, 0.39%)</title><rect x="114.3" y="885" width="4.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="117.29" y="895.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,278,931 samples, 0.08%)</title><rect x="150.5" y="469" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="153.46" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,162,268 samples, 0.10%)</title><rect x="69.2" y="437" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.23" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,237,493 samples, 0.10%)</title><rect x="141.6" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.61" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="149" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="159.5" ></text>
</g>
<g >
<title>[anon] (271,374,397 samples, 0.78%)</title><rect x="48.8" y="1029" width="9.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="51.76" y="1039.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,127,559 samples, 0.10%)</title><rect x="126.6" y="437" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="129.62" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,237,174 samples, 0.08%)</title><rect x="91.5" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.53" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (231,878,020 samples, 0.67%)</title><rect x="140.7" y="565" width="7.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.72" y="575.5" ></text>
</g>
<g >
<title>ksys_read (27,174,690 samples, 0.08%)</title><rect x="161.2" y="197" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="164.19" y="207.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (131,042,499 samples, 0.38%)</title><rect x="188.4" y="869" width="4.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="191.43" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,258,943 samples, 0.08%)</title><rect x="92.4" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.42" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (85,101,574 samples, 0.24%)</title><rect x="127.8" y="789" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="130.78" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,466,419 samples, 0.08%)</title><rect x="172.2" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.15" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="613" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (145,508,294 samples, 0.42%)</title><rect x="125.7" y="901" width="5.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="128.73" y="911.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,469,038 samples, 0.10%)</title><rect x="90.4" y="645" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="93.40" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (428,172,389 samples, 1.23%)</title><rect x="160.3" y="885" width="14.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="163.29" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (7,888,865,271 samples, 22.70%)</title><rect x="542.1" y="693" width="267.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="545.08" y="703.5" >[python3.12]</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (102,108,673 samples, 0.29%)</title><rect x="193.8" y="581" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="196.78" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (60,406,720 samples, 0.17%)</title><rect x="125.7" y="757" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,237,174 samples, 0.08%)</title><rect x="91.5" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.53" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (52,429,517 samples, 0.15%)</title><rect x="110.8" y="421" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.82" y="431.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="725" width="7.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1162.88" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (52,449,576 samples, 0.15%)</title><rect x="67.5" y="693" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.45" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (142,885,243 samples, 0.41%)</title><rect x="155.4" y="485" width="4.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="158.44" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (33,682,193 samples, 0.10%)</title><rect x="119.8" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.84" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,233,202 samples, 0.15%)</title><rect x="60.0" y="725" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="62.99" y="735.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,329,111 samples, 0.10%)</title><rect x="174.8" y="757" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="177.82" y="767.5" ></text>
</g>
<g >
<title>array_setstate (34,015,426 samples, 0.10%)</title><rect x="809.9" y="661" width="1.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="812.89" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,106,052 samples, 0.10%)</title><rect x="176.0" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,004,945 samples, 0.08%)</title><rect x="149.5" y="709" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="152.48" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,235,446 samples, 0.08%)</title><rect x="127.8" y="405" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="130.78" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (49,777,937 samples, 0.14%)</title><rect x="202.2" y="789" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.24" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (61,014,405 samples, 0.18%)</title><rect x="532.2" y="837" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="535.21" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="357" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="367.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (26,129,470 samples, 0.08%)</title><rect x="134.0" y="245" width="0.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="136.97" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;float*, unsigned long&gt; (34,216,106 samples, 0.10%)</title><rect x="1038.6" y="565" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1041.55" y="575.5" ></text>
</g>
<g >
<title>boost::optional&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::optional (67,199,904 samples, 0.19%)</title><rect x="830.6" y="629" width="2.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="833.61" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,390,467 samples, 0.15%)</title><rect x="197.3" y="581" width="1.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="200.25" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (61,286,717 samples, 0.18%)</title><rect x="153.4" y="469" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.35" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="933" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="789" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (34,156,159 samples, 0.10%)</title><rect x="811.0" y="661" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="814.05" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="837" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="847.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (67,822,126 samples, 0.20%)</title><rect x="1156.4" y="645" width="2.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1159.42" y="655.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (34,040,737 samples, 0.10%)</title><rect x="553.6" y="389" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="556.59" y="399.5" ></text>
</g>
<g >
<title>numamigrate_isolate_page (34,117,307 samples, 0.10%)</title><rect x="538.6" y="389" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="541.63" y="399.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (45,251,910 samples, 0.13%)</title><rect x="163.0" y="421" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="166.01" y="431.5" ></text>
</g>
<g >
<title>__Pyx_PyObject_Call (26,004,184 samples, 0.07%)</title><rect x="98.0" y="325" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.00" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (33,641,241 samples, 0.10%)</title><rect x="154.3" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.29" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (236,819,209 samples, 0.68%)</title><rect x="152.2" y="853" width="8.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="155.25" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (128,216,512 samples, 0.37%)</title><rect x="105.4" y="789" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="108.38" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,329,111 samples, 0.10%)</title><rect x="174.8" y="661" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="177.82" y="671.5" ></text>
</g>
<g >
<title>_int_malloc (34,119,824 samples, 0.10%)</title><rect x="503.8" y="1029" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="506.83" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (27,666,663 samples, 0.08%)</title><rect x="129.7" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.73" y="479.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (34,079,130 samples, 0.10%)</title><rect x="961.3" y="469" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="964.29" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,806,279 samples, 0.15%)</title><rect x="134.9" y="805" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.86" y="815.5" ></text>
</g>
<g >
<title>_PyObject_Call (142,885,243 samples, 0.41%)</title><rect x="155.4" y="533" width="4.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="158.44" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="709" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,400 samples, 0.08%)</title><rect x="81.1" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.15" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (236,819,209 samples, 0.68%)</title><rect x="152.2" y="677" width="8.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.25" y="687.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_examine_vertex&gt; (34,167,273 samples, 0.10%)</title><rect x="24.5" y="1013" width="1.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="27.51" y="1023.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (63,006,133 samples, 0.18%)</title><rect x="131.8" y="517" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="134.83" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (34,236,690 samples, 0.10%)</title><rect x="808.7" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="811.73" y="655.5" ></text>
</g>
<g >
<title>boost::optional_detail::aligned_storage&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::ptr_ref (67,937,378 samples, 0.20%)</title><rect x="835.2" y="597" width="2.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="838.20" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (59,988,303 samples, 0.17%)</title><rect x="70.4" y="389" width="2.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="73.39" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (34,127,559 samples, 0.10%)</title><rect x="126.6" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.62" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,181,352 samples, 0.08%)</title><rect x="122.1" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.14" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (231,878,020 samples, 0.67%)</title><rect x="140.7" y="629" width="7.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.72" y="639.5" ></text>
</g>
<g >
<title>error_entry (33,793,345 samples, 0.10%)</title><rect x="510.8" y="869" width="1.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="513.76" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,449,828 samples, 0.10%)</title><rect x="181.9" y="869" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.90" y="879.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (26,342,353 samples, 0.08%)</title><rect x="199.0" y="309" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="202.03" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (62,296,377 samples, 0.18%)</title><rect x="177.1" y="597" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.11" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="165" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="175.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,194,060 samples, 0.08%)</title><rect x="191.1" y="421" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.10" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,210,575 samples, 0.08%)</title><rect x="123.9" y="677" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="126.93" y="687.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,946,386 samples, 0.08%)</title><rect x="124.8" y="645" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="127.82" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (102,108,673 samples, 0.29%)</title><rect x="193.8" y="725" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="196.78" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (69,278,347 samples, 0.20%)</title><rect x="119.8" y="565" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="122.79" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (53,038,442 samples, 0.15%)</title><rect x="530.4" y="613" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="533.41" y="623.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (172,002,387 samples, 0.49%)</title><rect x="141.6" y="469" width="5.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="144.61" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (53,156,961 samples, 0.15%)</title><rect x="123.9" y="853" width="1.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="126.93" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (32,189,412 samples, 0.09%)</title><rect x="109.7" y="581" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.73" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,258,943 samples, 0.08%)</title><rect x="92.4" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.42" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,279,161 samples, 0.08%)</title><rect x="125.7" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,602 samples, 0.08%)</title><rect x="180.1" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.12" y="415.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (34,110,366 samples, 0.10%)</title><rect x="975.2" y="549" width="1.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="978.17" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="613" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (59,392,419 samples, 0.17%)</title><rect x="138.7" y="469" width="2.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="141.70" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethod (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="901" width="7.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1162.88" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="901" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="911.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,213,420 samples, 0.08%)</title><rect x="148.6" y="821" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="151.59" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,167,361 samples, 0.08%)</title><rect x="146.6" y="325" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="149.56" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (34,110,184 samples, 0.10%)</title><rect x="546.7" y="517" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="549.68" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (45,251,910 samples, 0.13%)</title><rect x="163.0" y="405" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.01" y="415.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,278,931 samples, 0.08%)</title><rect x="150.5" y="725" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="153.46" y="735.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (34,128,532 samples, 0.10%)</title><rect x="933.5" y="533" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="936.52" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (29,004,945 samples, 0.08%)</title><rect x="149.5" y="277" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.48" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,258,943 samples, 0.08%)</title><rect x="92.4" y="533" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="95.42" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (63,006,133 samples, 0.18%)</title><rect x="131.8" y="581" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="134.83" y="591.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (36,796,981 samples, 0.11%)</title><rect x="132.7" y="197" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="135.72" y="207.5" ></text>
</g>
<g >
<title>arch_setup_additional_pages (15,855,993 samples, 0.05%)</title><rect x="1169.1" y="933" width="0.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1172.15" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,526 samples, 0.08%)</title><rect x="100.0" y="997" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.04" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (85,626,136 samples, 0.25%)</title><rect x="93.3" y="645" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.31" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (59,392,419 samples, 0.17%)</title><rect x="138.7" y="405" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.70" y="415.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,004,184 samples, 0.07%)</title><rect x="98.0" y="597" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="101.00" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,404 samples, 0.08%)</title><rect x="73.4" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.39" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (49,777,937 samples, 0.14%)</title><rect x="202.2" y="869" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.24" y="879.5" ></text>
</g>
<g >
<title>ext4_getblk (33,449,828 samples, 0.10%)</title><rect x="181.9" y="117" width="1.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="184.90" y="127.5" ></text>
</g>
<g >
<title>[python3.12] (544,916,836 samples, 1.57%)</title><rect x="511.9" y="949" width="18.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="514.91" y="959.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (67,963,689 samples, 0.20%)</title><rect x="766.4" y="325" width="2.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="769.39" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,506 samples, 0.08%)</title><rect x="135.8" y="325" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="138.76" y="335.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (34,217,685 samples, 0.10%)</title><rect x="1054.7" y="629" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1057.71" y="639.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,099,048 samples, 0.10%)</title><rect x="79.1" y="373" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="82.07" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (34,102,824 samples, 0.10%)</title><rect x="121.0" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.99" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (102,108,673 samples, 0.29%)</title><rect x="193.8" y="501" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="196.78" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,528 samples, 0.08%)</title><rect x="104.5" y="693" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.49" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (33,194,204 samples, 0.10%)</title><rect x="138.7" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.70" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (138,881,420 samples, 0.40%)</title><rect x="169.2" y="453" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.23" y="463.5" ></text>
</g>
<g >
<title>_dl_open (49,777,937 samples, 0.14%)</title><rect x="202.2" y="501" width="1.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="205.24" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,116 samples, 0.08%)</title><rect x="192.0" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.99" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (102,108,673 samples, 0.29%)</title><rect x="193.8" y="661" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="196.78" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,164,670 samples, 0.10%)</title><rect x="95.1" y="357" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.10" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="453" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,563,345 samples, 0.10%)</title><rect x="171.0" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.01" y="319.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,547,019 samples, 0.08%)</title><rect x="192.9" y="773" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="195.88" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,856 samples, 0.08%)</title><rect x="155.4" y="405" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="158.44" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (428,172,389 samples, 1.23%)</title><rect x="160.3" y="837" width="14.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.29" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,205,247 samples, 0.08%)</title><rect x="145.7" y="325" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="148.67" y="335.5" ></text>
</g>
<g >
<title>PyObject_Free (34,190,930 samples, 0.10%)</title><rect x="786.0" y="453" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="788.96" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,920,045 samples, 0.09%)</title><rect x="178.1" y="453" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="181.14" y="463.5" ></text>
</g>
<g >
<title>search_binary_handler (15,855,993 samples, 0.05%)</title><rect x="1169.1" y="965" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1172.15" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,858,164 samples, 0.10%)</title><rect x="108.6" y="341" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="111.58" y="351.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (68,169,442 samples, 0.20%)</title><rect x="898.8" y="501" width="2.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="901.83" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (52,806,279 samples, 0.15%)</title><rect x="134.9" y="901" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (53,038,442 samples, 0.15%)</title><rect x="530.4" y="629" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.41" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,217,823 samples, 0.08%)</title><rect x="162.1" y="389" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="165.12" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (102,108,673 samples, 0.29%)</title><rect x="193.8" y="885" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="196.78" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (377,929,766 samples, 1.09%)</title><rect x="136.6" y="837" width="12.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="139.65" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,506 samples, 0.08%)</title><rect x="135.8" y="277" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.76" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (102,108,673 samples, 0.29%)</title><rect x="193.8" y="789" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="196.78" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (164,051,206 samples, 0.47%)</title><rect x="93.3" y="757" width="5.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.31" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (175,074,039 samples, 0.50%)</title><rect x="176.0" y="901" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="178.95" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (29,004,945 samples, 0.08%)</title><rect x="149.5" y="853" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.48" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (52,806,279 samples, 0.15%)</title><rect x="134.9" y="757" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,373 samples, 0.08%)</title><rect x="184.8" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.84" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (29,004,945 samples, 0.08%)</title><rect x="149.5" y="677" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.48" y="687.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_finish_vertex&gt; (34,122,452 samples, 0.10%)</title><rect x="863.0" y="549" width="1.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="865.97" y="559.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4,163,897 samples, 0.01%)</title><rect x="503.7" y="869" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="506.68" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,244,854 samples, 0.08%)</title><rect x="181.0" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.01" y="335.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (511,162,747 samples, 1.47%)</title><rect x="956.7" y="533" width="17.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="959.66" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (27,666,663 samples, 0.08%)</title><rect x="129.7" y="709" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.73" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (205,678,842 samples, 0.59%)</title><rect x="141.6" y="549" width="7.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="144.61" y="559.5" ></text>
</g>
<g >
<title>dlopen_doit (25,845,919 samples, 0.07%)</title><rect x="173.9" y="453" width="0.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="176.94" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (135,953,259 samples, 0.39%)</title><rect x="114.3" y="901" width="4.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="117.29" y="911.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,420 samples, 0.08%)</title><rect x="148.6" y="757" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="151.59" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (78,645,323 samples, 0.23%)</title><rect x="188.4" y="613" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="623.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (34,083,459 samples, 0.10%)</title><rect x="981.0" y="533" width="1.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="983.96" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,400 samples, 0.08%)</title><rect x="81.1" y="373" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="84.15" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (49,558,201 samples, 0.14%)</title><rect x="112.6" y="549" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.60" y="559.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,847 samples, 0.08%)</title><rect x="151.4" y="933" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="154.36" y="943.5" ></text>
</g>
<g >
<title>__do_page_fault (28,349,249 samples, 0.08%)</title><rect x="72.4" y="325" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="75.43" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,513 samples, 0.08%)</title><rect x="110.8" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.82" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_check_len (68,310,583 samples, 0.20%)</title><rect x="1085.9" y="613" width="2.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1088.88" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,237,174 samples, 0.08%)</title><rect x="91.5" y="501" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="94.53" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,157,411 samples, 0.08%)</title><rect x="60.0" y="549" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="62.99" y="559.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (6,912,553,746 samples, 19.89%)</title><rect x="549.0" y="533" width="234.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="551.99" y="543.5" >PyObject_VectorcallMethod</text>
</g>
<g >
<title>PyObject_CallOneArg (34,123,863 samples, 0.10%)</title><rect x="130.7" y="405" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="133.67" y="415.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (169,316,384 samples, 0.49%)</title><rect x="984.4" y="533" width="5.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="987.43" y="543.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (34,054,724 samples, 0.10%)</title><rect x="1053.6" y="485" width="1.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1056.55" y="495.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,215,732 samples, 0.08%)</title><rect x="103.6" y="453" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="106.60" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,400 samples, 0.08%)</title><rect x="81.1" y="437" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="84.15" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (68,220,276 samples, 0.20%)</title><rect x="199.9" y="421" width="2.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="202.92" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_do_relocate (34,212,379 samples, 0.10%)</title><rect x="1088.2" y="597" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1091.20" y="607.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,004,184 samples, 0.07%)</title><rect x="98.0" y="357" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="101.00" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,825 samples, 0.08%)</title><rect x="118.9" y="709" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.90" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (28,349,249 samples, 0.08%)</title><rect x="72.4" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.43" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (49,777,937 samples, 0.14%)</title><rect x="202.2" y="645" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="205.24" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (68,205,552 samples, 0.20%)</title><rect x="811.0" y="709" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="814.05" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,258,943 samples, 0.08%)</title><rect x="92.4" y="341" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="95.42" y="351.5" ></text>
</g>
<g >
<title>__GI___xstat (26,205,247 samples, 0.08%)</title><rect x="145.7" y="341" width="0.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="148.67" y="351.5" ></text>
</g>
<g >
<title>std::plus&lt;float&gt;::operator (34,003,687 samples, 0.10%)</title><rect x="1020.1" y="549" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1023.15" y="559.5" ></text>
</g>
<g >
<title>PyArrayMethod_FromSpec_int (114,696,998 samples, 0.33%)</title><rect x="75.2" y="341" width="3.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="78.17" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (67,770,169 samples, 0.19%)</title><rect x="1151.8" y="629" width="2.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1154.81" y="639.5" ></text>
</g>
<g >
<title>PyObject_Dir (26,215,732 samples, 0.08%)</title><rect x="103.6" y="293" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="106.60" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,951 samples, 0.08%)</title><rect x="97.1" y="421" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="100.11" y="431.5" ></text>
</g>
<g >
<title>_PyRun_AnyFileObject (18,542,365,970 samples, 53.35%)</title><rect x="530.4" y="965" width="629.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="533.41" y="975.5" >_PyRun_AnyFileObject</text>
</g>
<g >
<title>_PyObject_Call (332,234,762 samples, 0.96%)</title><rect x="82.0" y="773" width="11.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.04" y="783.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (33,682,193 samples, 0.10%)</title><rect x="119.8" y="357" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="122.84" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (138,088,491 samples, 0.40%)</title><rect x="164.5" y="437" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.54" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (52,449,576 samples, 0.15%)</title><rect x="67.5" y="773" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.45" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (377,112,606 samples, 1.08%)</title><rect x="69.2" y="741" width="12.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.23" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (406,934,711 samples, 1.17%)</title><rect x="136.6" y="885" width="13.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,004,945 samples, 0.08%)</title><rect x="149.5" y="325" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="152.48" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,466,419 samples, 0.08%)</title><rect x="172.2" y="245" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="175.15" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="981" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (33,754,012 samples, 0.10%)</title><rect x="823.7" y="597" width="1.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="826.68" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (68,097,003 samples, 0.20%)</title><rect x="1078.9" y="517" width="2.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1081.94" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (167,117,181 samples, 0.48%)</title><rect x="73.4" y="485" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="76.39" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,258,943 samples, 0.08%)</title><rect x="92.4" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.42" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (332,234,762 samples, 0.96%)</title><rect x="82.0" y="821" width="11.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.04" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (33,449,828 samples, 0.10%)</title><rect x="181.9" y="277" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="184.90" y="287.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (34,010,288 samples, 0.10%)</title><rect x="934.7" y="501" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="937.68" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (34,215,817 samples, 0.10%)</title><rect x="817.9" y="661" width="1.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="820.91" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (68,220,276 samples, 0.20%)</title><rect x="199.9" y="917" width="2.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="202.92" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,064,540 samples, 0.10%)</title><rect x="543.2" y="645" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="546.20" y="655.5" ></text>
</g>
<g >
<title>free_unref_page_list (67,534,621 samples, 0.19%)</title><rect x="1172.0" y="805" width="2.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1174.97" y="815.5" ></text>
</g>
<g >
<title>dlopen_doit (49,777,937 samples, 0.14%)</title><rect x="202.2" y="517" width="1.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="205.24" y="527.5" ></text>
</g>
<g >
<title>change_protection_range (34,079,130 samples, 0.10%)</title><rect x="961.3" y="389" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="964.29" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (262,393,642 samples, 0.75%)</title><rect x="105.4" y="981" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,192,648 samples, 0.08%)</title><rect x="198.1" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="201.14" y="319.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,164,670 samples, 0.10%)</title><rect x="95.1" y="421" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="98.10" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (159,139,959 samples, 0.46%)</title><rect x="183.0" y="805" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (135,953,259 samples, 0.39%)</title><rect x="114.3" y="677" width="4.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="117.29" y="687.5" ></text>
</g>
<g >
<title>do_page_fault (676,030,300 samples, 1.94%)</title><rect x="750.4" y="421" width="22.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="753.35" y="431.5" >d..</text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (34,279,956 samples, 0.10%)</title><rect x="834.0" y="597" width="1.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="837.04" y="607.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (237,704,810 samples, 0.68%)</title><rect x="982.1" y="565" width="8.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="985.11" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,405,974 samples, 0.08%)</title><rect x="123.0" y="421" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="126.03" y="431.5" ></text>
</g>
<g >
<title>migrate_misplaced_page (34,117,307 samples, 0.10%)</title><rect x="538.6" y="405" width="1.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="541.63" y="415.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,951 samples, 0.08%)</title><rect x="97.1" y="517" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="100.11" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (205,678,842 samples, 0.59%)</title><rect x="141.6" y="485" width="7.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="144.61" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="789" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,186,157 samples, 0.08%)</title><rect x="80.2" y="277" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="83.22" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (33,995,049 samples, 0.10%)</title><rect x="1116.0" y="597" width="1.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1118.96" y="607.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (25,845,919 samples, 0.07%)</title><rect x="173.9" y="741" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="176.94" y="751.5" ></text>
</g>
<g >
<title>__GI___libc_read (27,174,690 samples, 0.08%)</title><rect x="161.2" y="277" width="0.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="164.19" y="287.5" ></text>
</g>
<g >
<title>_PyObject_Call (85,626,136 samples, 0.25%)</title><rect x="93.3" y="533" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.31" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (153,672,736 samples, 0.44%)</title><rect x="85.2" y="581" width="5.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.18" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (60,445,907 samples, 0.17%)</title><rect x="136.6" y="661" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.65" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (29,004,945 samples, 0.08%)</title><rect x="149.5" y="293" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.48" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,547,019 samples, 0.08%)</title><rect x="192.9" y="693" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="195.88" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (100,614,998 samples, 0.29%)</title><rect x="62.9" y="965" width="3.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="65.90" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (53,396,557 samples, 0.15%)</title><rect x="80.2" y="549" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.22" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (33,682,193 samples, 0.10%)</title><rect x="119.8" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.84" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (121,865,673 samples, 0.35%)</title><rect x="119.8" y="933" width="4.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="122.79" y="943.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,213,951 samples, 0.08%)</title><rect x="97.1" y="405" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="100.11" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (68,220,276 samples, 0.20%)</title><rect x="199.9" y="661" width="2.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="202.92" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,162,268 samples, 0.10%)</title><rect x="69.2" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.23" y="415.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator++ (271,518,468 samples, 0.78%)</title><rect x="828.3" y="661" width="9.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="831.29" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (377,112,606 samples, 1.08%)</title><rect x="69.2" y="629" width="12.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.23" y="639.5" ></text>
</g>
<g >
<title>[_ctypes.cpython-312-x86_64-linux-gnu.so] (33,469,038 samples, 0.10%)</title><rect x="90.4" y="421" width="1.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="93.40" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Rb_tree (34,114,493 samples, 0.10%)</title><rect x="814.5" y="645" width="1.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="817.48" y="655.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,129,470 samples, 0.08%)</title><rect x="134.0" y="741" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="136.97" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,329,111 samples, 0.10%)</title><rect x="174.8" y="389" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.82" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (53,886,826 samples, 0.16%)</title><rect x="160.3" y="389" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="163.29" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (32,421,936 samples, 0.09%)</title><rect x="187.3" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.33" y="383.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,075,791 samples, 0.08%)</title><rect x="60.9" y="405" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="63.88" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (53,886,826 samples, 0.16%)</title><rect x="160.3" y="661" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="163.29" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="373" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (7,753,495,284 samples, 22.31%)</title><rect x="544.4" y="677" width="263.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="547.36" y="687.5" >[python3.12]</text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,342,268 samples, 0.08%)</title><rect x="88.6" y="421" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="91.61" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,258,943 samples, 0.08%)</title><rect x="92.4" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.42" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::new_allocator (33,817,690 samples, 0.10%)</title><rect x="18.7" y="1013" width="1.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="21.74" y="1023.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,167,361 samples, 0.08%)</title><rect x="146.6" y="357" width="0.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="149.56" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (121,865,673 samples, 0.35%)</title><rect x="119.8" y="917" width="4.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="122.79" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (53,156,961 samples, 0.15%)</title><rect x="123.9" y="981" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,796 samples, 0.15%)</title><rect x="189.3" y="405" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.32" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,400 samples, 0.08%)</title><rect x="81.1" y="229" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.15" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (33,669,434 samples, 0.10%)</title><rect x="926.6" y="517" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="929.59" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (131,042,499 samples, 0.38%)</title><rect x="188.4" y="789" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="853" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (32,647,249 samples, 0.09%)</title><rect x="152.2" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.25" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (57,434,911 samples, 0.17%)</title><rect x="127.8" y="709" width="1.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="130.78" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (34,117,307 samples, 0.10%)</title><rect x="538.6" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="541.63" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (873,398,574 samples, 2.51%)</title><rect x="69.2" y="1013" width="29.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="72.23" y="1023.5" >Py..</text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,212,602 samples, 0.08%)</title><rect x="180.1" y="485" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="183.12" y="495.5" ></text>
</g>
<g >
<title>alloc_pages_vma (28,349,249 samples, 0.08%)</title><rect x="72.4" y="245" width="1.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="75.43" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="117" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="127.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (68,334,394 samples, 0.20%)</title><rect x="1126.4" y="533" width="2.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1129.36" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (105,966,573 samples, 0.30%)</title><rect x="184.8" y="469" width="3.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="187.84" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (85,626,136 samples, 0.25%)</title><rect x="93.3" y="581" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.31" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (195,466,430 samples, 0.56%)</title><rect x="72.4" y="501" width="6.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="75.43" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,527 samples, 0.08%)</title><rect x="188.4" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (121,865,673 samples, 0.35%)</title><rect x="119.8" y="837" width="4.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="122.79" y="847.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,429,517 samples, 0.15%)</title><rect x="110.8" y="613" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="113.82" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (52,397,176 samples, 0.15%)</title><rect x="191.1" y="597" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.10" y="607.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,208,528 samples, 0.08%)</title><rect x="104.5" y="357" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="107.49" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,946,386 samples, 0.08%)</title><rect x="124.8" y="565" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="127.82" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="261" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="271.5" ></text>
</g>
<g >
<title>gentype_alloc (34,049,393 samples, 0.10%)</title><rect x="812.2" y="661" width="1.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="815.21" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,237,174 samples, 0.08%)</title><rect x="91.5" y="485" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="94.53" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (135,953,259 samples, 0.39%)</title><rect x="114.3" y="693" width="4.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="117.29" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,268 samples, 0.08%)</title><rect x="88.6" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.61" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,677 samples, 0.08%)</title><rect x="67.5" y="405" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.45" y="415.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (135,953,259 samples, 0.39%)</title><rect x="114.3" y="661" width="4.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="117.29" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (49,777,937 samples, 0.14%)</title><rect x="202.2" y="981" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.24" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,806,279 samples, 0.15%)</title><rect x="134.9" y="981" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="137.86" y="991.5" ></text>
</g>
<g >
<title>do_page_fault (36,796,981 samples, 0.11%)</title><rect x="132.7" y="309" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="135.72" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (34,099,048 samples, 0.10%)</title><rect x="79.1" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.07" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,449,828 samples, 0.10%)</title><rect x="181.9" y="789" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="184.90" y="799.5" ></text>
</g>
<g >
<title>task_work_run (33,950,108 samples, 0.10%)</title><rect x="643.6" y="405" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="646.55" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,528 samples, 0.08%)</title><rect x="104.5" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.49" y="575.5" ></text>
</g>
<g >
<title>PyRun_StringFlags (26,214,154 samples, 0.08%)</title><rect x="179.2" y="549" width="0.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="182.23" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27,174,690 samples, 0.08%)</title><rect x="161.2" y="245" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="164.19" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (510,707,122 samples, 1.47%)</title><rect x="511.9" y="933" width="17.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="514.91" y="943.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (47,332,264 samples, 0.14%)</title><rect x="185.7" y="277" width="1.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="188.73" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,129,470 samples, 0.08%)</title><rect x="134.0" y="389" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="136.97" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,469,038 samples, 0.10%)</title><rect x="90.4" y="469" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.40" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="933" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="943.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (84,618,929 samples, 0.24%)</title><rect x="109.7" y="677" width="2.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="112.73" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="773" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="981" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="991.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (68,220,276 samples, 0.20%)</title><rect x="199.9" y="741" width="2.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="202.92" y="751.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (68,097,003 samples, 0.20%)</title><rect x="1078.9" y="469" width="2.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1081.94" y="479.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (101,794,299 samples, 0.29%)</title><rect x="887.3" y="485" width="3.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="890.27" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,075,791 samples, 0.08%)</title><rect x="60.9" y="581" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.88" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (18,542,365,970 samples, 53.35%)</title><rect x="530.4" y="933" width="629.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.41" y="943.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (34,220,794 samples, 0.10%)</title><rect x="137.5" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.54" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (579,513,087 samples, 1.67%)</title><rect x="954.3" y="549" width="19.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="957.34" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (322,221,821 samples, 0.93%)</title><rect x="163.0" y="517" width="10.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.01" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,244,854 samples, 0.08%)</title><rect x="181.0" y="485" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="184.01" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (873,394,748 samples, 2.51%)</title><rect x="152.2" y="997" width="29.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="155.25" y="1007.5" >_P..</text>
</g>
<g >
<title>[python3.12] (34,127,559 samples, 0.10%)</title><rect x="126.6" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.62" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,424,260 samples, 0.15%)</title><rect x="103.6" y="997" width="1.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="106.60" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,712,136 samples, 0.08%)</title><rect x="160.3" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="303.5" ></text>
</g>
<g >
<title>retint_user (34,013,022 samples, 0.10%)</title><rect x="552.4" y="389" width="1.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="555.44" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (377,112,606 samples, 1.08%)</title><rect x="69.2" y="757" width="12.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.23" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,528 samples, 0.08%)</title><rect x="104.5" y="853" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.49" y="863.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (34,192,284 samples, 0.10%)</title><rect x="1006.3" y="501" width="1.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1009.31" y="511.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (67,665,463 samples, 0.19%)</title><rect x="769.8" y="309" width="2.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="772.85" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,856 samples, 0.08%)</title><rect x="155.4" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.44" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="933" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="943.5" ></text>
</g>
<g >
<title>mmap_region (49,777,937 samples, 0.14%)</title><rect x="202.2" y="277" width="1.7" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="205.24" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (52,449,576 samples, 0.15%)</title><rect x="67.5" y="869" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.45" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,420 samples, 0.08%)</title><rect x="148.6" y="677" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="151.59" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,215,732 samples, 0.08%)</title><rect x="103.6" y="757" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.60" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (316,729,477 samples, 0.91%)</title><rect x="183.0" y="949" width="10.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="959.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (162,163,084 samples, 0.47%)</title><rect x="114.3" y="981" width="5.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="117.29" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (34,079,130 samples, 0.10%)</title><rect x="961.3" y="517" width="1.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="964.29" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,279,161 samples, 0.08%)</title><rect x="125.7" y="405" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="128.73" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (34,102,824 samples, 0.10%)</title><rect x="121.0" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.99" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,208,528 samples, 0.08%)</title><rect x="104.5" y="469" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="107.49" y="479.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator++ (136,108,477 samples, 0.39%)</title><rect x="832.9" y="645" width="4.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="835.89" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,258,943 samples, 0.08%)</title><rect x="92.4" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.42" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,117,307 samples, 0.10%)</title><rect x="538.6" y="741" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="541.63" y="751.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (34,110,184 samples, 0.10%)</title><rect x="546.7" y="549" width="1.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="549.68" y="559.5" ></text>
</g>
<g >
<title>_PyModule_ClearDict (34,209,714 samples, 0.10%)</title><rect x="529.2" y="933" width="1.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="532.25" y="943.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (69,278,347 samples, 0.20%)</title><rect x="119.8" y="693" width="2.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="122.79" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,279,161 samples, 0.08%)</title><rect x="125.7" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,237,174 samples, 0.08%)</title><rect x="91.5" y="469" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="94.53" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (53,886,826 samples, 0.16%)</title><rect x="160.3" y="325" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,329,111 samples, 0.10%)</title><rect x="174.8" y="677" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.82" y="687.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (26,214,847 samples, 0.08%)</title><rect x="151.4" y="517" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="154.36" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,935 samples, 0.08%)</title><rect x="96.2" y="517" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.22" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; const&amp;&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="421" width="1.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="817.48" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,951 samples, 0.08%)</title><rect x="97.1" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.11" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (64,266,963 samples, 0.18%)</title><rect x="158.1" y="341" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="161.10" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,004 samples, 0.08%)</title><rect x="111.7" y="357" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.71" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,004,184 samples, 0.07%)</title><rect x="98.0" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.00" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (59,988,303 samples, 0.17%)</title><rect x="70.4" y="469" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.39" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,075,791 samples, 0.08%)</title><rect x="60.9" y="613" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.88" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,106,052 samples, 0.10%)</title><rect x="176.0" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (49,558,201 samples, 0.14%)</title><rect x="112.6" y="629" width="1.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="115.60" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (69,278,347 samples, 0.20%)</title><rect x="119.8" y="677" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.79" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (242,638,290 samples, 0.70%)</title><rect x="125.7" y="997" width="8.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="128.73" y="1007.5" ></text>
</g>
<g >
<title>PyList_Append (33,641,241 samples, 0.10%)</title><rect x="154.3" y="389" width="1.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="157.29" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (53,886,826 samples, 0.16%)</title><rect x="160.3" y="437" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="447.5" ></text>
</g>
<g >
<title>PyObject_Malloc (36,796,981 samples, 0.11%)</title><rect x="132.7" y="341" width="1.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="135.72" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,425,070 samples, 0.23%)</title><rect x="96.2" y="677" width="2.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="99.22" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,157,411 samples, 0.08%)</title><rect x="60.0" y="357" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="62.99" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (709,347,368 samples, 2.04%)</title><rect x="69.2" y="869" width="24.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="72.23" y="879.5" >P..</text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (305,407,666 samples, 0.88%)</title><rect x="645.8" y="469" width="10.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="648.85" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,279,161 samples, 0.08%)</title><rect x="125.7" y="261" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="128.73" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (102,108,673 samples, 0.29%)</title><rect x="193.8" y="533" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (131,042,499 samples, 0.38%)</title><rect x="188.4" y="885" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.43" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (159,139,959 samples, 0.46%)</title><rect x="183.0" y="837" width="5.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="186.03" y="847.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,547,019 samples, 0.08%)</title><rect x="192.9" y="853" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="195.88" y="863.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4,163,897 samples, 0.01%)</title><rect x="503.7" y="837" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="506.68" y="847.5" ></text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (33,952,468 samples, 0.10%)</title><rect x="860.7" y="533" width="1.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="863.66" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,682,193 samples, 0.10%)</title><rect x="119.8" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.84" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,194,060 samples, 0.08%)</title><rect x="191.1" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.10" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::empty (34,141,482 samples, 0.10%)</title><rect x="1069.7" y="645" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1072.71" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,420 samples, 0.08%)</title><rect x="148.6" y="805" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.59" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,858,164 samples, 0.10%)</title><rect x="108.6" y="357" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="111.58" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,123,863 samples, 0.10%)</title><rect x="130.7" y="469" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="133.67" y="479.5" ></text>
</g>
<g >
<title>_PyObject_NewVar (36,796,981 samples, 0.11%)</title><rect x="132.7" y="357" width="1.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="135.72" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (290,182,458 samples, 0.83%)</title><rect x="183.0" y="901" width="9.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="186.03" y="911.5" ></text>
</g>
<g >
<title>_int_free (34,190,930 samples, 0.10%)</title><rect x="786.0" y="437" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="788.96" y="447.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (68,415,580 samples, 0.20%)</title><rect x="918.5" y="517" width="2.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="921.48" y="527.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,575 samples, 0.08%)</title><rect x="123.9" y="421" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="126.93" y="431.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (33,755,151 samples, 0.10%)</title><rect x="1173.1" y="773" width="1.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1176.12" y="783.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,217,585 samples, 0.10%)</title><rect x="1133.3" y="533" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1136.32" y="543.5" ></text>
</g>
<g >
<title>do_user_addr_fault (641,854,835 samples, 1.85%)</title><rect x="750.4" y="389" width="21.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="753.35" y="399.5" >d..</text>
</g>
<g >
<title>handle_mm_fault (28,349,249 samples, 0.08%)</title><rect x="72.4" y="293" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="75.43" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (377,112,606 samples, 1.08%)</title><rect x="69.2" y="677" width="12.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.23" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,237,174 samples, 0.08%)</title><rect x="91.5" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.53" y="367.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (6,354,041 samples, 0.02%)</title><rect x="212.3" y="949" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="215.27" y="959.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (33,682,193 samples, 0.10%)</title><rect x="119.8" y="501" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="122.84" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (33,641,241 samples, 0.10%)</title><rect x="154.3" y="357" width="1.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="157.29" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::__uniq_ptr_impl (33,250,872 samples, 0.10%)</title><rect x="816.8" y="629" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="819.79" y="639.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_discover_vertex&gt; (68,169,256 samples, 0.20%)</title><rect x="859.5" y="549" width="2.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="862.50" y="559.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,212,602 samples, 0.08%)</title><rect x="180.1" y="565" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="183.12" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,181,352 samples, 0.08%)</title><rect x="122.1" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.14" y="335.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (26,707,493 samples, 0.08%)</title><rect x="183.0" y="325" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="186.03" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (127,467,141 samples, 0.37%)</title><rect x="85.2" y="453" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="88.18" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (49,777,937 samples, 0.14%)</title><rect x="202.2" y="837" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="205.24" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (33,194,204 samples, 0.10%)</title><rect x="138.7" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.70" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (49,558,201 samples, 0.14%)</title><rect x="112.6" y="581" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.60" y="591.5" ></text>
</g>
<g >
<title>_int_malloc (169,573,750 samples, 0.49%)</title><rect x="549.0" y="421" width="5.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="551.99" y="431.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (135,781,502 samples, 0.39%)</title><rect x="1055.9" y="645" width="4.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1058.87" y="655.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (33,923,277 samples, 0.10%)</title><rect x="1059.3" y="597" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1062.33" y="607.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,258,943 samples, 0.08%)</title><rect x="92.4" y="469" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="95.42" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,406,720 samples, 0.17%)</title><rect x="125.7" y="693" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="128.73" y="703.5" ></text>
</g>
<g >
<title>filename_lookup (26,205,247 samples, 0.08%)</title><rect x="145.7" y="229" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="148.67" y="239.5" ></text>
</g>
<g >
<title>call_init (33,469,038 samples, 0.10%)</title><rect x="90.4" y="229" width="1.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="93.40" y="239.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,575 samples, 0.08%)</title><rect x="123.9" y="469" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="126.93" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (608,252,246 samples, 1.75%)</title><rect x="751.5" y="373" width="20.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="754.49" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (121,865,673 samples, 0.35%)</title><rect x="119.8" y="901" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.79" y="911.5" ></text>
</g>
<g >
<title>dl_open_worker (33,469,038 samples, 0.10%)</title><rect x="90.4" y="293" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="93.40" y="303.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (33,521,991 samples, 0.10%)</title><rect x="917.3" y="517" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="920.34" y="527.5" ></text>
</g>
<g >
<title>futex_wait (3,780,530 samples, 0.01%)</title><rect x="1174.3" y="965" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1177.27" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (34,069,284 samples, 0.10%)</title><rect x="1142.5" y="645" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1145.54" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (85,827,428 samples, 0.25%)</title><rect x="66.3" y="901" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.32" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,279,161 samples, 0.08%)</title><rect x="125.7" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (102,108,673 samples, 0.29%)</title><rect x="193.8" y="805" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="815.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,946,386 samples, 0.08%)</title><rect x="124.8" y="501" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="127.82" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,157,411 samples, 0.08%)</title><rect x="60.0" y="437" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="62.99" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,205,552 samples, 0.20%)</title><rect x="811.0" y="725" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="814.05" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,528 samples, 0.08%)</title><rect x="104.5" y="613" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="107.49" y="623.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (136,388,555 samples, 0.39%)</title><rect x="866.4" y="549" width="4.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="869.44" y="559.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt; (34,052,945 samples, 0.10%)</title><rect x="821.4" y="629" width="1.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="824.39" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="965" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="975.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,181,352 samples, 0.08%)</title><rect x="122.1" y="421" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="125.14" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (52,407,666 samples, 0.15%)</title><rect x="166.3" y="357" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.32" y="367.5" ></text>
</g>
<g >
<title>boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt;::bgl_named_params (34,138,628 samples, 0.10%)</title><rect x="844.5" y="629" width="1.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="847.47" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,682,193 samples, 0.10%)</title><rect x="119.8" y="437" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="122.84" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (52,390,467 samples, 0.15%)</title><rect x="197.3" y="469" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.25" y="479.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (33,569,444 samples, 0.10%)</title><rect x="993.6" y="549" width="1.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="996.63" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,647,249 samples, 0.09%)</title><rect x="152.2" y="453" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="155.25" y="463.5" ></text>
</g>
<g >
<title>PyUnicode_FromFormatV (26,237,174 samples, 0.08%)</title><rect x="91.5" y="293" width="0.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="94.53" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (52,587,326 samples, 0.15%)</title><rect x="122.1" y="789" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.14" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,004 samples, 0.08%)</title><rect x="111.7" y="261" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.71" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,506 samples, 0.08%)</title><rect x="135.8" y="453" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="138.76" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (406,934,711 samples, 1.17%)</title><rect x="136.6" y="917" width="13.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="139.65" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (33,862,357 samples, 0.10%)</title><rect x="1134.5" y="629" width="1.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1137.48" y="639.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,208,528 samples, 0.08%)</title><rect x="104.5" y="533" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="107.49" y="543.5" ></text>
</g>
<g >
<title>PyUnicode_AsUTF8AndSize (52,402,424 samples, 0.15%)</title><rect x="156.3" y="341" width="1.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="159.32" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (85,101,574 samples, 0.24%)</title><rect x="127.8" y="821" width="2.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="130.78" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,946,386 samples, 0.08%)</title><rect x="124.8" y="789" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="127.82" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,075,791 samples, 0.08%)</title><rect x="60.9" y="325" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="63.88" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,235,446 samples, 0.08%)</title><rect x="127.8" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.78" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::max_size (34,151,361 samples, 0.10%)</title><rect x="1085.9" y="597" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1088.88" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (377,112,606 samples, 1.08%)</title><rect x="69.2" y="725" width="12.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="72.23" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="479.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (33,986,036 samples, 0.10%)</title><rect x="824.8" y="597" width="1.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="827.82" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,342,353 samples, 0.08%)</title><rect x="199.0" y="517" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="202.03" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (53,038,442 samples, 0.15%)</title><rect x="530.4" y="677" width="1.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="533.41" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (127,467,141 samples, 0.37%)</title><rect x="85.2" y="469" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.18" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,123,863 samples, 0.10%)</title><rect x="130.7" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.67" y="575.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,215,856 samples, 0.08%)</title><rect x="155.4" y="389" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="158.44" y="399.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (67,408,941 samples, 0.19%)</title><rect x="1015.6" y="533" width="2.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1018.56" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,082,645 samples, 0.10%)</title><rect x="107.4" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.42" y="351.5" ></text>
</g>
<g >
<title>llvm::cl::opt&lt;llvm::InliningAdvisorMode, false, llvm::cl::parser&lt;llvm::InliningAdvisorMode&gt; &gt;::opt&lt;char [18], llvm::cl::initializer&lt;llvm::InliningAdvisorMode&gt;, llvm::cl::OptionHidden, llvm::cl::desc, llvm::cl::ValuesClass&gt; (33,469,038 samples, 0.10%)</title><rect x="90.4" y="197" width="1.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="93.40" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (85,626,136 samples, 0.25%)</title><rect x="93.3" y="517" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.31" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,806,279 samples, 0.15%)</title><rect x="134.9" y="565" width="1.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="137.86" y="575.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,397,176 samples, 0.15%)</title><rect x="191.1" y="549" width="1.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="194.10" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="645" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (159,139,959 samples, 0.46%)</title><rect x="183.0" y="629" width="5.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="186.03" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,106,526 samples, 0.08%)</title><rect x="100.0" y="981" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.04" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,547,019 samples, 0.08%)</title><rect x="192.9" y="869" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="195.88" y="879.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,117,307 samples, 0.10%)</title><rect x="538.6" y="453" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="541.63" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,602 samples, 0.08%)</title><rect x="180.1" y="437" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="183.12" y="447.5" ></text>
</g>
<g >
<title>do_anonymous_page (34,106,052 samples, 0.10%)</title><rect x="176.0" y="213" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="178.95" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="933" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,420 samples, 0.08%)</title><rect x="148.6" y="725" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.59" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="197" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="207.5" ></text>
</g>
<g >
<title>do_numa_page (34,117,307 samples, 0.10%)</title><rect x="538.6" y="421" width="1.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="541.63" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="367.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (204,231,897 samples, 0.59%)</title><rect x="967.1" y="517" width="6.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="970.08" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,157,411 samples, 0.08%)</title><rect x="60.0" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,244,854 samples, 0.08%)</title><rect x="181.0" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.01" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,682,193 samples, 0.10%)</title><rect x="119.8" y="229" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.84" y="239.5" ></text>
</g>
<g >
<title>__do_page_fault (36,796,981 samples, 0.11%)</title><rect x="132.7" y="293" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="135.72" y="303.5" ></text>
</g>
<g >
<title>PyList_Append (26,707,493 samples, 0.08%)</title><rect x="183.0" y="405" width="0.9" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="186.03" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (69,278,347 samples, 0.20%)</title><rect x="119.8" y="741" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.79" y="751.5" ></text>
</g>
<g >
<title>schedule (4,563,457 samples, 0.01%)</title><rect x="503.7" y="933" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="506.68" y="943.5" ></text>
</g>
<g >
<title>_dl_open (25,845,919 samples, 0.07%)</title><rect x="173.9" y="437" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="176.94" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,397,176 samples, 0.15%)</title><rect x="191.1" y="517" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="194.10" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (92,596,871 samples, 0.27%)</title><rect x="82.0" y="437" width="3.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="85.04" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (180,841,493 samples, 0.52%)</title><rect x="193.8" y="965" width="6.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="196.78" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,595 samples, 0.08%)</title><rect x="89.5" y="501" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.51" y="511.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::operator[] (67,770,169 samples, 0.19%)</title><rect x="1151.8" y="661" width="2.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1154.81" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="485" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (85,626,136 samples, 0.25%)</title><rect x="93.3" y="629" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.31" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="869" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (67,940,809 samples, 0.20%)</title><rect x="107.4" y="405" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.42" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,208,528 samples, 0.08%)</title><rect x="104.5" y="645" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="107.49" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,217,823 samples, 0.08%)</title><rect x="162.1" y="309" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="165.12" y="319.5" ></text>
</g>
<g >
<title>PyArray_NewLegacyWrappingArrayMethod (114,696,998 samples, 0.33%)</title><rect x="75.2" y="357" width="3.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="78.17" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (32,647,249 samples, 0.09%)</title><rect x="152.2" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.25" y="399.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (170,173,031 samples, 0.49%)</title><rect x="1001.7" y="549" width="5.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1004.69" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (159,139,959 samples, 0.46%)</title><rect x="183.0" y="741" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.03" y="751.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (164,051,206 samples, 0.47%)</title><rect x="93.3" y="853" width="5.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="96.31" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,935 samples, 0.08%)</title><rect x="96.2" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.22" y="447.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (47,332,264 samples, 0.14%)</title><rect x="185.7" y="293" width="1.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="188.73" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (34,117,307 samples, 0.10%)</title><rect x="538.6" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="541.63" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,189,412 samples, 0.09%)</title><rect x="109.7" y="501" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="112.73" y="511.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (68,298,346 samples, 0.20%)</title><rect x="1096.3" y="581" width="2.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1099.29" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (28,349,249 samples, 0.08%)</title><rect x="72.4" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.43" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (63,006,133 samples, 0.18%)</title><rect x="131.8" y="469" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.83" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (128,216,512 samples, 0.37%)</title><rect x="105.4" y="677" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="108.38" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,400 samples, 0.08%)</title><rect x="81.1" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.15" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,178 samples, 0.08%)</title><rect x="140.7" y="437" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.72" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,946,386 samples, 0.08%)</title><rect x="124.8" y="437" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="127.82" y="447.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (33,563,345 samples, 0.10%)</title><rect x="171.0" y="341" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="174.01" y="351.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (27,666,663 samples, 0.08%)</title><rect x="129.7" y="581" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="132.73" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,587,326 samples, 0.15%)</title><rect x="122.1" y="581" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="125.14" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,404 samples, 0.08%)</title><rect x="73.4" y="277" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.39" y="287.5" ></text>
</g>
<g >
<title>ksys_read (26,279,161 samples, 0.08%)</title><rect x="125.7" y="229" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="128.73" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,825 samples, 0.08%)</title><rect x="118.9" y="229" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.90" y="239.5" ></text>
</g>
<g >
<title>recalc_sigpending (3,153,794 samples, 0.01%)</title><rect x="212.1" y="965" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="215.08" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (135,953,259 samples, 0.39%)</title><rect x="114.3" y="757" width="4.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="117.29" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,496,117 samples, 0.15%)</title><rect x="91.5" y="581" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="94.53" y="591.5" ></text>
</g>
<g >
<title>PyDict_SetItemString (26,946,386 samples, 0.08%)</title><rect x="124.8" y="277" width="0.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="127.82" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,106,052 samples, 0.10%)</title><rect x="176.0" y="517" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.95" y="527.5" ></text>
</g>
<g >
<title>__do_munmap (33,925,019 samples, 0.10%)</title><rect x="528.1" y="757" width="1.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="531.10" y="767.5" ></text>
</g>
<g >
<title>handle_mm_fault (33,906,054 samples, 0.10%)</title><rect x="86.3" y="213" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="89.33" y="223.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (34,099,586 samples, 0.10%)</title><rect x="84.0" y="373" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="87.02" y="383.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,157,411 samples, 0.08%)</title><rect x="60.0" y="629" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="62.99" y="639.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (31,920,045 samples, 0.09%)</title><rect x="178.1" y="165" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="181.14" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (26,194,060 samples, 0.08%)</title><rect x="191.1" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.10" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,420 samples, 0.08%)</title><rect x="148.6" y="789" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.59" y="799.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (33,950,108 samples, 0.10%)</title><rect x="643.6" y="453" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="646.55" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (34,064,540 samples, 0.10%)</title><rect x="543.2" y="661" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="546.20" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,200,274 samples, 0.08%)</title><rect x="167.2" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.21" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (236,819,209 samples, 0.68%)</title><rect x="152.2" y="901" width="8.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="155.25" y="911.5" ></text>
</g>
<g >
<title>PyUnicode_FromString (26,946,386 samples, 0.08%)</title><rect x="124.8" y="261" width="0.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="127.82" y="271.5" ></text>
</g>
<g >
<title>_PyObject_Call (164,051,206 samples, 0.47%)</title><rect x="93.3" y="821" width="5.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.31" y="831.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (33,661,863 samples, 0.10%)</title><rect x="26.8" y="1013" width="1.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="29.83" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,390,467 samples, 0.15%)</title><rect x="197.3" y="501" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="200.25" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,935 samples, 0.08%)</title><rect x="96.2" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.22" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,129,470 samples, 0.08%)</title><rect x="134.0" y="277" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="136.97" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (78,425,070 samples, 0.23%)</title><rect x="96.2" y="725" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.22" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,220,276 samples, 0.20%)</title><rect x="199.9" y="581" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="202.92" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (86,157,674 samples, 0.25%)</title><rect x="169.2" y="373" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.23" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (49,777,937 samples, 0.14%)</title><rect x="202.2" y="693" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.24" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,405,974 samples, 0.08%)</title><rect x="123.0" y="453" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="126.03" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,206,935 samples, 0.08%)</title><rect x="96.2" y="501" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="99.22" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (138,764,894 samples, 0.40%)</title><rect x="142.7" y="421" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.74" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (49,777,937 samples, 0.14%)</title><rect x="202.2" y="709" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="205.24" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (67,940,809 samples, 0.20%)</title><rect x="107.4" y="501" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.42" y="511.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (715,619,269 samples, 2.06%)</title><rect x="949.7" y="565" width="24.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="952.72" y="575.5" >b..</text>
</g>
<g >
<title>[python3.12] (26,205,595 samples, 0.08%)</title><rect x="89.5" y="309" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="92.51" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (428,172,389 samples, 1.23%)</title><rect x="160.3" y="821" width="14.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="163.29" y="831.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (131,042,499 samples, 0.38%)</title><rect x="188.4" y="757" width="4.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="191.43" y="767.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (169,316,384 samples, 0.49%)</title><rect x="984.4" y="549" width="5.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="987.43" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,946,386 samples, 0.08%)</title><rect x="124.8" y="389" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="127.82" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (60,275,703 samples, 0.17%)</title><rect x="105.4" y="549" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="559.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (67,963,689 samples, 0.20%)</title><rect x="766.4" y="277" width="2.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="769.39" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (34,162,268 samples, 0.10%)</title><rect x="69.2" y="469" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="72.23" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,203,116 samples, 0.08%)</title><rect x="192.0" y="325" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.99" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,342,353 samples, 0.08%)</title><rect x="199.0" y="469" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="202.03" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,217,823 samples, 0.08%)</title><rect x="162.1" y="373" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.12" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,099,048 samples, 0.10%)</title><rect x="79.1" y="325" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="82.07" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase_at_end (34,212,684 samples, 0.10%)</title><rect x="1154.1" y="645" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1157.11" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (52,390,467 samples, 0.15%)</title><rect x="197.3" y="357" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.25" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (105,966,573 samples, 0.30%)</title><rect x="184.8" y="501" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="187.84" y="511.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (34,238,297 samples, 0.10%)</title><rect x="923.1" y="533" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="926.11" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (18,542,365,970 samples, 53.35%)</title><rect x="530.4" y="901" width="629.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.41" y="911.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,210,575 samples, 0.08%)</title><rect x="123.9" y="693" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,547,019 samples, 0.08%)</title><rect x="192.9" y="597" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="195.88" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,194,060 samples, 0.08%)</title><rect x="191.1" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.10" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,445,907 samples, 0.17%)</title><rect x="136.6" y="741" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="139.65" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (27,666,663 samples, 0.08%)</title><rect x="129.7" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.73" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (52,496,117 samples, 0.15%)</title><rect x="91.5" y="693" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.53" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,279,161 samples, 0.08%)</title><rect x="125.7" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="479.5" ></text>
</g>
<g >
<title>PyObject_GC_Del (26,192,648 samples, 0.08%)</title><rect x="198.1" y="293" width="0.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="201.14" y="303.5" ></text>
</g>
<g >
<title>[interval.cpython-312-x86_64-linux-gnu.so] (26,157,411 samples, 0.08%)</title><rect x="60.0" y="469" width="0.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="62.99" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (34,114,493 samples, 0.10%)</title><rect x="814.5" y="597" width="1.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="817.48" y="607.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::parent (34,157,827 samples, 0.10%)</title><rect x="913.9" y="533" width="1.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="916.87" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,847 samples, 0.08%)</title><rect x="151.4" y="981" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.36" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,279,161 samples, 0.08%)</title><rect x="125.7" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="128.73" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,647,249 samples, 0.09%)</title><rect x="152.2" y="565" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="155.25" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (53,038,442 samples, 0.15%)</title><rect x="530.4" y="709" width="1.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="533.41" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,353 samples, 0.08%)</title><rect x="199.0" y="293" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.03" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (52,233,202 samples, 0.15%)</title><rect x="60.0" y="757" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.99" y="767.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (31,199,465 samples, 0.09%)</title><rect x="128.7" y="453" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="131.67" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,528 samples, 0.08%)</title><rect x="104.5" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.49" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,847 samples, 0.08%)</title><rect x="151.4" y="645" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="154.36" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (34,117,307 samples, 0.10%)</title><rect x="538.6" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="541.63" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (45,251,910 samples, 0.13%)</title><rect x="163.0" y="357" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="166.01" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (49,777,937 samples, 0.14%)</title><rect x="202.2" y="901" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.24" y="911.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,951 samples, 0.08%)</title><rect x="97.1" y="501" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="100.11" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (33,329,111 samples, 0.10%)</title><rect x="174.8" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.82" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (203,774,549 samples, 0.59%)</title><rect x="505.0" y="933" width="6.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="507.99" y="943.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,449,828 samples, 0.10%)</title><rect x="181.9" y="629" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="184.90" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (53,396,557 samples, 0.15%)</title><rect x="80.2" y="501" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.22" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,215,732 samples, 0.08%)</title><rect x="103.6" y="613" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="106.60" y="623.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::get_ptr_impl (67,937,378 samples, 0.20%)</title><rect x="835.2" y="613" width="2.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="838.20" y="623.5" ></text>
</g>
<g >
<title>release_pages (101,273,660 samples, 0.29%)</title><rect x="1170.8" y="821" width="3.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1173.83" y="831.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,946,386 samples, 0.08%)</title><rect x="124.8" y="725" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="127.82" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (153,672,736 samples, 0.44%)</title><rect x="85.2" y="661" width="5.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="88.18" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,194,060 samples, 0.08%)</title><rect x="191.1" y="373" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.10" y="383.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms (32,421,936 samples, 0.09%)</title><rect x="187.3" y="309" width="1.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="190.33" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size (34,015,106 samples, 0.10%)</title><rect x="1114.8" y="581" width="1.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1117.81" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,268 samples, 0.08%)</title><rect x="88.6" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.61" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (7,617,418,747 samples, 21.91%)</title><rect x="546.7" y="581" width="258.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="549.68" y="591.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>[python3.12] (8,092,876,072 samples, 23.28%)</title><rect x="538.6" y="821" width="274.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="541.63" y="831.5" >[python3.12]</text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,732,820 samples, 0.23%)</title><rect x="197.3" y="693" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="200.25" y="703.5" ></text>
</g>
<g >
<title>_Py_VaBuildStack_SizeT (33,779,597 samples, 0.10%)</title><rect x="805.3" y="597" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="808.27" y="607.5" ></text>
</g>
<g >
<title>_int_malloc (34,110,184 samples, 0.10%)</title><rect x="546.7" y="501" width="1.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="549.68" y="511.5" ></text>
</g>
<g >
<title>__count_memcg_events (33,237,517 samples, 0.10%)</title><rect x="549.0" y="325" width="1.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="551.99" y="335.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (68,138,820 samples, 0.20%)</title><rect x="933.5" y="549" width="2.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="936.52" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (63,006,133 samples, 0.18%)</title><rect x="131.8" y="693" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="134.83" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (52,390,467 samples, 0.15%)</title><rect x="197.3" y="453" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.25" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (135,861,298 samples, 0.39%)</title><rect x="969.4" y="469" width="4.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="972.40" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (34,045,713 samples, 0.10%)</title><rect x="845.6" y="629" width="1.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="848.63" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (59,392,419 samples, 0.17%)</title><rect x="138.7" y="453" width="2.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.70" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (102,108,673 samples, 0.29%)</title><rect x="193.8" y="821" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="196.78" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,075,791 samples, 0.08%)</title><rect x="60.9" y="549" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="63.88" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (33,449,828 samples, 0.10%)</title><rect x="181.9" y="965" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.90" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,178 samples, 0.08%)</title><rect x="140.7" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.72" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (348,439,644 samples, 1.00%)</title><rect x="162.1" y="629" width="11.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="165.12" y="639.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,208,528 samples, 0.08%)</title><rect x="104.5" y="869" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.49" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,575 samples, 0.08%)</title><rect x="123.9" y="725" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,181,352 samples, 0.08%)</title><rect x="122.1" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.14" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,429,517 samples, 0.15%)</title><rect x="110.8" y="645" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="113.82" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (291,270,439 samples, 0.84%)</title><rect x="138.7" y="773" width="9.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.70" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (272,498,563 samples, 0.78%)</title><rect x="924.3" y="549" width="9.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="927.27" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,575 samples, 0.08%)</title><rect x="123.9" y="325" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="126.93" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,258,943 samples, 0.08%)</title><rect x="92.4" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.42" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,429,517 samples, 0.15%)</title><rect x="110.8" y="597" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="113.82" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="517" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.88" y="527.5" ></text>
</g>
<g >
<title>std::multimap&lt;float, unsigned long, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::insert&lt;std::pair&lt;float, unsigned long&gt; &gt; (170,388,510 samples, 0.49%)</title><rect x="1143.7" y="661" width="5.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1146.70" y="671.5" ></text>
</g>
<g >
<title>_int_free (33,669,434 samples, 0.10%)</title><rect x="926.6" y="469" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="929.59" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (85,762,981 samples, 0.25%)</title><rect x="60.0" y="1013" width="2.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="62.99" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (100,614,998 samples, 0.29%)</title><rect x="62.9" y="373" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.90" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (34,162,268 samples, 0.10%)</title><rect x="69.2" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.23" y="399.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,466,419 samples, 0.08%)</title><rect x="172.2" y="325" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="175.15" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (52,449,576 samples, 0.15%)</title><rect x="67.5" y="661" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.45" y="671.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,506 samples, 0.08%)</title><rect x="135.8" y="373" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="138.76" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,214,847 samples, 0.08%)</title><rect x="151.4" y="869" width="0.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="154.36" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (59,392,419 samples, 0.17%)</title><rect x="138.7" y="533" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.70" y="543.5" ></text>
</g>
<g >
<title>__do_sys_newstat (26,205,247 samples, 0.08%)</title><rect x="145.7" y="277" width="0.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="148.67" y="287.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,275,703 samples, 0.17%)</title><rect x="105.4" y="469" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.38" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (26,129,470 samples, 0.08%)</title><rect x="134.0" y="997" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="136.97" y="1007.5" ></text>
</g>
<g >
<title>unmap_vmas (33,925,019 samples, 0.10%)</title><rect x="528.1" y="725" width="1.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="531.10" y="735.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (34,167,153 samples, 0.10%)</title><rect x="37.2" y="1013" width="1.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="40.20" y="1023.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (49,558,201 samples, 0.14%)</title><rect x="112.6" y="565" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="115.60" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (34,220,794 samples, 0.10%)</title><rect x="137.5" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.54" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (608,252,246 samples, 1.75%)</title><rect x="751.5" y="357" width="20.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="754.49" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,935 samples, 0.08%)</title><rect x="96.2" y="373" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.22" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (68,220,276 samples, 0.20%)</title><rect x="199.9" y="757" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.92" y="767.5" ></text>
</g>
<g >
<title>handle_mm_fault (101,519,991 samples, 0.29%)</title><rect x="549.0" y="341" width="3.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="551.99" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,528 samples, 0.08%)</title><rect x="104.5" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.49" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (47,332,264 samples, 0.14%)</title><rect x="185.7" y="341" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.73" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,329,111 samples, 0.10%)</title><rect x="174.8" y="565" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="177.82" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (127,467,141 samples, 0.37%)</title><rect x="85.2" y="501" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.18" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (101,124,873 samples, 0.29%)</title><rect x="85.2" y="389" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.18" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,376,332 samples, 0.09%)</title><rect x="177.1" y="485" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="180.11" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (85,626,136 samples, 0.25%)</title><rect x="93.3" y="709" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.31" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (332,234,762 samples, 0.96%)</title><rect x="82.0" y="853" width="11.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.04" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (102,421,526 samples, 0.29%)</title><rect x="927.7" y="517" width="3.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="930.74" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (67,770,169 samples, 0.19%)</title><rect x="1151.8" y="613" width="2.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1154.81" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,154 samples, 0.08%)</title><rect x="179.2" y="597" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.23" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (428,172,389 samples, 1.23%)</title><rect x="160.3" y="789" width="14.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,329,111 samples, 0.10%)</title><rect x="174.8" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.82" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,244,854 samples, 0.08%)</title><rect x="181.0" y="565" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.01" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (121,865,673 samples, 0.35%)</title><rect x="119.8" y="965" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.79" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,181,352 samples, 0.08%)</title><rect x="122.1" y="405" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="125.14" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (67,940,809 samples, 0.20%)</title><rect x="107.4" y="469" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.42" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (53,038,442 samples, 0.15%)</title><rect x="530.4" y="773" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="533.41" y="783.5" ></text>
</g>
<g >
<title>_PyObject_Call (348,439,644 samples, 1.00%)</title><rect x="162.1" y="645" width="11.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="165.12" y="655.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (32,189,412 samples, 0.09%)</title><rect x="109.7" y="277" width="1.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="112.73" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,129,470 samples, 0.08%)</title><rect x="134.0" y="261" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.97" y="271.5" ></text>
</g>
<g >
<title>_PyObject_Call (59,392,419 samples, 0.17%)</title><rect x="138.7" y="437" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="141.70" y="447.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (33,469,038 samples, 0.10%)</title><rect x="90.4" y="309" width="1.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="93.40" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,806,279 samples, 0.15%)</title><rect x="134.9" y="853" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="137.86" y="863.5" ></text>
</g>
<g >
<title>do_exit (134,989,158 samples, 0.39%)</title><rect x="1169.7" y="965" width="4.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1172.68" y="975.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,275,703 samples, 0.17%)</title><rect x="105.4" y="421" width="2.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="108.38" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,425,070 samples, 0.23%)</title><rect x="96.2" y="709" width="2.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="99.22" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (102,108,673 samples, 0.29%)</title><rect x="193.8" y="453" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="196.78" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,406,720 samples, 0.17%)</title><rect x="125.7" y="869" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="128.73" y="879.5" ></text>
</g>
<g >
<title>unmap_page_range (33,925,019 samples, 0.10%)</title><rect x="528.1" y="693" width="1.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="531.10" y="703.5" ></text>
</g>
<g >
<title>__do_page_fault (34,106,052 samples, 0.10%)</title><rect x="176.0" y="277" width="1.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="178.95" y="287.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~d_ary_heap_indirect (34,092,675 samples, 0.10%)</title><rect x="935.8" y="565" width="1.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="938.83" y="575.5" ></text>
</g>
<g >
<title>PyInit__multiarray_umath (114,696,998 samples, 0.33%)</title><rect x="75.2" y="437" width="3.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="78.17" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (62,296,377 samples, 0.18%)</title><rect x="177.1" y="533" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="180.11" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (135,953,259 samples, 0.39%)</title><rect x="114.3" y="773" width="4.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="117.29" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (138,764,894 samples, 0.40%)</title><rect x="142.7" y="389" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.74" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::vector (34,032,296 samples, 0.10%)</title><rect x="1155.3" y="661" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1158.27" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,247,899 samples, 0.08%)</title><rect x="68.3" y="373" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="71.34" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (262,393,642 samples, 0.75%)</title><rect x="105.4" y="965" width="8.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="108.38" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,449,828 samples, 0.10%)</title><rect x="181.9" y="757" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="184.90" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,209,825 samples, 0.08%)</title><rect x="118.9" y="597" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="121.90" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,420 samples, 0.08%)</title><rect x="148.6" y="661" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="151.59" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (33,925,019 samples, 0.10%)</title><rect x="528.1" y="805" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="531.10" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,732 samples, 0.08%)</title><rect x="103.6" y="421" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.60" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (53,038,442 samples, 0.15%)</title><rect x="530.4" y="597" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="533.41" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_emplace_equal&lt;std::pair&lt;float, unsigned long&gt; &gt; (170,388,510 samples, 0.49%)</title><rect x="1143.7" y="645" width="5.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1146.70" y="655.5" ></text>
</g>
<g >
<title>PyList_Sort (26,214,847 samples, 0.08%)</title><rect x="151.4" y="565" width="0.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="154.36" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,806,279 samples, 0.15%)</title><rect x="134.9" y="949" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="137.86" y="959.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,212,684 samples, 0.10%)</title><rect x="1154.1" y="629" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1157.11" y="639.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (169,324,932 samples, 0.49%)</title><rect x="822.5" y="613" width="5.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="825.54" y="623.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (26,244,854 samples, 0.08%)</title><rect x="181.0" y="613" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="184.01" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,129,470 samples, 0.08%)</title><rect x="134.0" y="293" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="136.97" y="303.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (169,573,750 samples, 0.49%)</title><rect x="549.0" y="469" width="5.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="551.99" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,004,184 samples, 0.07%)</title><rect x="98.0" y="389" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.00" y="399.5" ></text>
</g>
<g >
<title>page_fault (34,110,184 samples, 0.10%)</title><rect x="546.7" y="485" width="1.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="549.68" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (49,777,937 samples, 0.14%)</title><rect x="202.2" y="997" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.24" y="1007.5" ></text>
</g>
<g >
<title>PyObject_Malloc (34,049,393 samples, 0.10%)</title><rect x="812.2" y="645" width="1.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="815.21" y="655.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (127,467,141 samples, 0.37%)</title><rect x="85.2" y="517" width="4.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="88.18" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,587,326 samples, 0.15%)</title><rect x="122.1" y="805" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="125.14" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (34,099,048 samples, 0.10%)</title><rect x="79.1" y="565" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="82.07" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,432,796 samples, 0.15%)</title><rect x="189.3" y="517" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="192.32" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,645,323 samples, 0.23%)</title><rect x="188.4" y="581" width="2.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="191.43" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,106,052 samples, 0.10%)</title><rect x="176.0" y="613" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="178.95" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,258,943 samples, 0.08%)</title><rect x="92.4" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.42" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,951 samples, 0.08%)</title><rect x="97.1" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.11" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (85,626,136 samples, 0.25%)</title><rect x="93.3" y="693" width="2.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="96.31" y="703.5" ></text>
</g>
<g >
<title>boost::tuples::tie&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (33,807,023 samples, 0.10%)</title><rect x="1064.0" y="645" width="1.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1066.96" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (33,329,111 samples, 0.10%)</title><rect x="174.8" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.82" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,847 samples, 0.08%)</title><rect x="151.4" y="821" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.36" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (100,614,998 samples, 0.29%)</title><rect x="62.9" y="645" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="65.90" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (8,025,048,125 samples, 23.09%)</title><rect x="540.9" y="741" width="272.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="543.93" y="751.5" >[python3.12]</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,244,854 samples, 0.08%)</title><rect x="181.0" y="517" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="184.01" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (29,004,945 samples, 0.08%)</title><rect x="149.5" y="661" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="152.48" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,189,412 samples, 0.09%)</title><rect x="109.7" y="469" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="112.73" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (53,038,442 samples, 0.15%)</title><rect x="530.4" y="741" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.41" y="751.5" ></text>
</g>
<g >
<title>PyObject_Hash (30,202,057 samples, 0.09%)</title><rect x="536.5" y="853" width="1.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="539.45" y="863.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,203,116 samples, 0.08%)</title><rect x="192.0" y="405" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="194.99" y="415.5" ></text>
</g>
<g >
<title>do_page_fault (34,106,052 samples, 0.10%)</title><rect x="176.0" y="293" width="1.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="178.95" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,592,773 samples, 0.08%)</title><rect x="134.9" y="453" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.86" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,377,852 samples, 0.10%)</title><rect x="66.3" y="853" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.32" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::operator++ (34,195,005 samples, 0.10%)</title><rect x="841.0" y="645" width="1.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="843.99" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (49,558,201 samples, 0.14%)</title><rect x="112.6" y="373" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.60" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,329,111 samples, 0.10%)</title><rect x="174.8" y="501" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="177.82" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (442,329,411 samples, 1.27%)</title><rect x="514.2" y="901" width="15.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="517.23" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,233,202 samples, 0.15%)</title><rect x="60.0" y="645" width="1.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="62.99" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,106,052 samples, 0.10%)</title><rect x="176.0" y="645" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="178.95" y="655.5" ></text>
</g>
<g >
<title>diff_Nexullance_IT_interface::run_for_batch_matrices (10,207,392,610 samples, 29.37%)</title><rect x="813.4" y="725" width="346.5" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="816.36" y="735.5" >diff_Nexullance_IT_interface::run_for_batch_ma..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,946,386 samples, 0.08%)</title><rect x="124.8" y="405" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="127.82" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (142,885,243 samples, 0.41%)</title><rect x="155.4" y="469" width="4.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="158.44" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="645" width="7.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1162.88" y="655.5" ></text>
</g>
<g >
<title>PyArray_DescrFromType (34,156,159 samples, 0.10%)</title><rect x="811.0" y="597" width="1.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="814.05" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (57,434,911 samples, 0.17%)</title><rect x="127.8" y="693" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="130.78" y="703.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;unsigned long, unsigned long&gt; (34,185,731 samples, 0.10%)</title><rect x="1122.9" y="565" width="1.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1125.89" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,329,111 samples, 0.10%)</title><rect x="174.8" y="309" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.82" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (26,212,602 samples, 0.08%)</title><rect x="180.1" y="197" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="183.12" y="207.5" ></text>
</g>
<g >
<title>do_futex (3,780,530 samples, 0.01%)</title><rect x="1174.3" y="981" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1177.27" y="991.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (100,614,998 samples, 0.29%)</title><rect x="62.9" y="325" width="3.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="65.90" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,449,828 samples, 0.10%)</title><rect x="181.9" y="933" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="184.90" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,946,386 samples, 0.08%)</title><rect x="124.8" y="805" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.82" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,237,174 samples, 0.08%)</title><rect x="91.5" y="453" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.53" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (101,858,225 samples, 0.29%)</title><rect x="1055.9" y="597" width="3.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1058.87" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (135,953,259 samples, 0.39%)</title><rect x="114.3" y="917" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.29" y="927.5" ></text>
</g>
<g >
<title>__handle_mm_fault (68,282,474 samples, 0.20%)</title><rect x="550.1" y="325" width="2.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="553.12" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,806,279 samples, 0.15%)</title><rect x="134.9" y="821" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="137.86" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (100,614,998 samples, 0.29%)</title><rect x="62.9" y="869" width="3.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="65.90" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (291,270,439 samples, 0.84%)</title><rect x="138.7" y="805" width="9.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.70" y="815.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (68,334,394 samples, 0.20%)</title><rect x="1126.4" y="581" width="2.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1129.36" y="591.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (68,255,742 samples, 0.20%)</title><rect x="1032.8" y="581" width="2.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1035.78" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (53,886,826 samples, 0.16%)</title><rect x="160.3" y="341" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="351.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (53,038,442 samples, 0.15%)</title><rect x="530.4" y="853" width="1.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="533.41" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,575 samples, 0.08%)</title><rect x="123.9" y="549" width="0.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="126.93" y="559.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33,906,054 samples, 0.10%)</title><rect x="86.3" y="197" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="89.33" y="207.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (25,845,919 samples, 0.07%)</title><rect x="173.9" y="421" width="0.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="176.94" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (32,189,412 samples, 0.09%)</title><rect x="109.7" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.73" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (92,596,871 samples, 0.27%)</title><rect x="82.0" y="453" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.04" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,220,794 samples, 0.10%)</title><rect x="137.5" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.54" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (231,878,020 samples, 0.67%)</title><rect x="140.7" y="613" width="7.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="143.72" y="623.5" ></text>
</g>
<g >
<title>change_pte_range (32,189,412 samples, 0.09%)</title><rect x="109.7" y="165" width="1.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="112.73" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (94,150,571 samples, 0.27%)</title><rect x="69.2" y="549" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.23" y="559.5" ></text>
</g>
<g >
<title>PySequence_List (26,466,419 samples, 0.08%)</title><rect x="172.2" y="373" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="175.15" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (135,953,259 samples, 0.39%)</title><rect x="114.3" y="469" width="4.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="117.29" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (52,428,438 samples, 0.15%)</title><rect x="530.4" y="549" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="533.43" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,215,856 samples, 0.08%)</title><rect x="155.4" y="357" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="158.44" y="367.5" ></text>
</g>
<g >
<title>_PyCode_Validate (68,220,276 samples, 0.20%)</title><rect x="199.9" y="309" width="2.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="202.92" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (175,074,039 samples, 0.50%)</title><rect x="176.0" y="917" width="5.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.95" y="927.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (78,732,820 samples, 0.23%)</title><rect x="197.3" y="757" width="2.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="200.25" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (101,124,873 samples, 0.29%)</title><rect x="85.2" y="357" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.18" y="367.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (34,049,393 samples, 0.10%)</title><rect x="812.2" y="485" width="1.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="815.21" y="495.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,203,116 samples, 0.08%)</title><rect x="192.0" y="373" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="194.99" y="383.5" ></text>
</g>
<g >
<title>boost::edge&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (66,955,526 samples, 0.19%)</title><rect x="815.6" y="677" width="2.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="818.64" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (135,660,801 samples, 0.39%)</title><rect x="507.3" y="885" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="510.31" y="895.5" ></text>
</g>
<g >
<title>PyObject_CallFunctionObjArgs (27,186,157 samples, 0.08%)</title><rect x="80.2" y="389" width="0.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="83.22" y="399.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,193,006 samples, 0.10%)</title><rect x="1113.6" y="581" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1116.65" y="591.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (408,685,387 samples, 1.18%)</title><rect x="909.2" y="549" width="13.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="912.23" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (52,429,517 samples, 0.15%)</title><rect x="110.8" y="565" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.82" y="575.5" ></text>
</g>
<g >
<title>PyImport_Import (25,845,919 samples, 0.07%)</title><rect x="173.9" y="725" width="0.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="176.94" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (164,051,206 samples, 0.47%)</title><rect x="93.3" y="885" width="5.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="96.31" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (63,006,133 samples, 0.18%)</title><rect x="131.8" y="629" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.83" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (348,439,644 samples, 1.00%)</title><rect x="162.1" y="693" width="11.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="165.12" y="703.5" ></text>
</g>
<g >
<title>boost::tuples::detail::cnull (33,807,023 samples, 0.10%)</title><rect x="1064.0" y="629" width="1.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1066.96" y="639.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (34,102,824 samples, 0.10%)</title><rect x="121.0" y="357" width="1.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="123.99" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (236,819,209 samples, 0.68%)</title><rect x="152.2" y="645" width="8.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="155.25" y="655.5" ></text>
</g>
<g >
<title>boost::relax_target&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::plus&lt;float&gt;, std::less&lt;float&gt; &gt; (748,030,837 samples, 2.15%)</title><rect x="995.9" y="565" width="25.4" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="998.91" y="575.5" >b..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,547,019 samples, 0.08%)</title><rect x="192.9" y="741" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="195.88" y="751.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (204,503,478 samples, 0.59%)</title><rect x="894.2" y="533" width="6.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="897.20" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,342,268 samples, 0.08%)</title><rect x="88.6" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.61" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (67,951,264 samples, 0.20%)</title><rect x="987.9" y="501" width="2.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="990.88" y="511.5" ></text>
</g>
<g >
<title>[_queue.cpython-312-x86_64-linux-gnu.so] (26,946,386 samples, 0.08%)</title><rect x="124.8" y="309" width="0.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="127.82" y="319.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (238,547,510 samples, 0.69%)</title><rect x="974.0" y="565" width="8.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="977.02" y="575.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (101,794,299 samples, 0.29%)</title><rect x="887.3" y="501" width="3.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="890.27" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (94,150,571 samples, 0.27%)</title><rect x="69.2" y="565" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="72.23" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (135,953,259 samples, 0.39%)</title><rect x="114.3" y="869" width="4.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="117.29" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,592,773 samples, 0.08%)</title><rect x="134.9" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.86" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (25,845,919 samples, 0.07%)</title><rect x="173.9" y="533" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.94" y="543.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (5,547,027,720 samples, 15.96%)</title><rect x="846.8" y="597" width="188.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="849.79" y="607.5" >boost::dijkstra_shortest..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (291,270,439 samples, 0.84%)</title><rect x="138.7" y="741" width="9.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.70" y="751.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (32,445,759 samples, 0.09%)</title><rect x="82.9" y="341" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="85.92" y="351.5" ></text>
</g>
<g >
<title>change_protection (34,079,130 samples, 0.10%)</title><rect x="961.3" y="405" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="964.29" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,099,586 samples, 0.10%)</title><rect x="84.0" y="341" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="87.02" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (57,434,911 samples, 0.17%)</title><rect x="127.8" y="661" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="130.78" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,157,411 samples, 0.08%)</title><rect x="60.0" y="533" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="62.99" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (61,286,717 samples, 0.18%)</title><rect x="153.4" y="437" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.35" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (262,393,642 samples, 0.75%)</title><rect x="105.4" y="933" width="8.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.38" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (47,332,264 samples, 0.14%)</title><rect x="185.7" y="405" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.73" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (128,216,512 samples, 0.37%)</title><rect x="105.4" y="773" width="4.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="108.38" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (128,216,512 samples, 0.37%)</title><rect x="105.4" y="821" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.38" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,212,602 samples, 0.08%)</title><rect x="180.1" y="325" width="0.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="183.12" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (52,429,517 samples, 0.15%)</title><rect x="110.8" y="629" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.82" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (27,186,157 samples, 0.08%)</title><rect x="80.2" y="405" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.22" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (67,822,126 samples, 0.20%)</title><rect x="1156.4" y="661" width="2.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1159.42" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,102,824 samples, 0.10%)</title><rect x="121.0" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.99" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,220,276 samples, 0.20%)</title><rect x="199.9" y="725" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="202.92" y="735.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,225,113 samples, 0.08%)</title><rect x="136.6" y="533" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="139.65" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (145,508,294 samples, 0.42%)</title><rect x="125.7" y="885" width="5.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="128.73" y="895.5" ></text>
</g>
<g >
<title>array_subscript (31,556,724 samples, 0.09%)</title><rect x="534.3" y="837" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="537.28" y="847.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (34,106,052 samples, 0.10%)</title><rect x="176.0" y="197" width="1.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="178.95" y="207.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (205,749,074 samples, 0.59%)</title><rect x="1159.9" y="821" width="7.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1162.88" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (26,004,184 samples, 0.07%)</title><rect x="98.0" y="533" width="0.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="101.00" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (31,920,045 samples, 0.09%)</title><rect x="178.1" y="197" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="181.14" y="207.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (34,106,052 samples, 0.10%)</title><rect x="176.0" y="341" width="1.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="178.95" y="351.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,106,052 samples, 0.10%)</title><rect x="176.0" y="501" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="178.95" y="511.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (33,950,108 samples, 0.10%)</title><rect x="643.6" y="421" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="646.55" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (377,112,606 samples, 1.08%)</title><rect x="69.2" y="821" width="12.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="72.23" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,796 samples, 0.15%)</title><rect x="189.3" y="421" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.32" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (53,886,826 samples, 0.16%)</title><rect x="160.3" y="517" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.29" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,209,825 samples, 0.08%)</title><rect x="118.9" y="805" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="121.90" y="815.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,212,602 samples, 0.08%)</title><rect x="180.1" y="389" width="0.9" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="183.12" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (53,156,961 samples, 0.15%)</title><rect x="123.9" y="885" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.93" y="895.5" ></text>
</g>
</g>
</svg>
