<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1158" onload="init(evt)" viewBox="0 0 1200 1158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1158.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1141" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1141" > </text>
<g id="frames">
<g >
<title>PyImport_ImportModuleLevelObject (255,899,018 samples, 0.91%)</title><rect x="96.5" y="933" width="10.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="99.45" y="943.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (27,036,548 samples, 0.10%)</title><rect x="79.9" y="581" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="82.91" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,067 samples, 0.09%)</title><rect x="167.8" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.81" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (112,874,269 samples, 0.40%)</title><rect x="160.6" y="661" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.58" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,220,774 samples, 0.09%)</title><rect x="211.2" y="517" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="214.22" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,583,276 samples, 0.12%)</title><rect x="126.3" y="469" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="129.29" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="623.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,576 samples, 0.09%)</title><rect x="55.0" y="469" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="57.96" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,243 samples, 0.09%)</title><rect x="90.0" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.03" y="431.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,546,263 samples, 0.09%)</title><rect x="164.2" y="549" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="167.18" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,230,863 samples, 0.09%)</title><rect x="141.8" y="565" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="144.82" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,760 samples, 0.09%)</title><rect x="108.6" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.56" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (52,411,367 samples, 0.19%)</title><rect x="105.0" y="453" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.95" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (34,138,378 samples, 0.12%)</title><rect x="113.3" y="437" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="116.27" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (79,651,363 samples, 0.28%)</title><rect x="182.8" y="645" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.85" y="655.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (173,502,057 samples, 0.61%)</title><rect x="196.3" y="693" width="7.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="199.34" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (29,096,832 samples, 0.10%)</title><rect x="75.4" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.41" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,138,378 samples, 0.12%)</title><rect x="113.3" y="469" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="116.27" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (68,127,382 samples, 0.24%)</title><rect x="919.0" y="677" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="922.03" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (189,899,606 samples, 0.67%)</title><rect x="152.6" y="709" width="8.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="155.64" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (31,958,704 samples, 0.11%)</title><rect x="127.7" y="421" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.69" y="431.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (2,972,839,879 samples, 10.53%)</title><rect x="951.8" y="661" width="124.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="954.80" y="671.5" >boost::dijkstra..</text>
</g>
<g >
<title>array_where (33,998,165 samples, 0.12%)</title><rect x="140.4" y="453" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="143.40" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,583,276 samples, 0.12%)</title><rect x="126.3" y="501" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.29" y="511.5" ></text>
</g>
<g >
<title>PyDataMem_UserNEW (34,103,010 samples, 0.12%)</title><rect x="929.0" y="693" width="1.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="931.99" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (25,434,141 samples, 0.09%)</title><rect x="210.2" y="917" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.16" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (132,285,678 samples, 0.47%)</title><rect x="78.8" y="1029" width="5.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="81.81" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (33,583,276 samples, 0.12%)</title><rect x="126.3" y="405" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.29" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,613,512 samples, 0.19%)</title><rect x="39.5" y="581" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.53" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (134,305,359 samples, 0.48%)</title><rect x="71.0" y="869" width="5.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="74.01" y="879.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (273,583,347 samples, 0.97%)</title><rect x="1088.8" y="709" width="11.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1091.81" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (78,964,161 samples, 0.28%)</title><rect x="120.5" y="533" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="543.5" ></text>
</g>
<g >
<title>__do_page_fault (33,745,010 samples, 0.12%)</title><rect x="64.9" y="165" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="67.90" y="175.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,094,188 samples, 0.12%)</title><rect x="91.1" y="501" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="94.13" y="511.5" ></text>
</g>
<g >
<title>PyNumber_Remainder (26,210,408 samples, 0.09%)</title><rect x="159.5" y="405" width="1.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="162.48" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,426,582 samples, 0.28%)</title><rect x="46.7" y="613" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="49.66" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (119,467,939 samples, 0.42%)</title><rect x="191.3" y="693" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.35" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (31,958,704 samples, 0.11%)</title><rect x="127.7" y="565" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.69" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,287,366 samples, 0.11%)</title><rect x="41.7" y="773" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="44.73" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,811 samples, 0.09%)</title><rect x="48.8" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.84" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,546,263 samples, 0.09%)</title><rect x="164.2" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.18" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (220,599,939 samples, 0.78%)</title><rect x="173.6" y="533" width="9.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.63" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,728 samples, 0.09%)</title><rect x="78.8" y="741" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="81.81" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,185 samples, 0.09%)</title><rect x="158.4" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.39" y="511.5" ></text>
</g>
<g >
<title>security_vm_enough_memory_mm (26,315,552 samples, 0.09%)</title><rect x="620.2" y="309" width="1.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="623.23" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,557 samples, 0.09%)</title><rect x="74.3" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.31" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,164,292 samples, 0.12%)</title><rect x="142.9" y="661" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.92" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (52,431,830 samples, 0.19%)</title><rect x="206.9" y="405" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="209.87" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,535,481 samples, 0.09%)</title><rect x="72.1" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.11" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (34,212,967 samples, 0.12%)</title><rect x="998.9" y="597" width="1.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1001.93" y="607.5" ></text>
</g>
<g >
<title>search_binary_handler (10,138,758 samples, 0.04%)</title><rect x="1176.6" y="1013" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1179.57" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (33,829,123 samples, 0.12%)</title><rect x="107.1" y="437" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,583,276 samples, 0.12%)</title><rect x="126.3" y="485" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.29" y="495.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,209,557 samples, 0.09%)</title><rect x="74.3" y="245" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="77.31" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="981" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,984,802 samples, 0.12%)</title><rect x="44.1" y="469" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="47.14" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,209 samples, 0.09%)</title><rect x="102.8" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,857,821 samples, 0.12%)</title><rect x="160.6" y="549" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.58" y="559.5" ></text>
</g>
<g >
<title>__fget_light (26,642,433 samples, 0.09%)</title><rect x="83.2" y="245" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="86.23" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,197,038 samples, 0.09%)</title><rect x="212.3" y="645" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.32" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,728 samples, 0.09%)</title><rect x="78.8" y="645" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="81.81" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,408 samples, 0.09%)</title><rect x="159.5" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.48" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (674,690,555 samples, 2.39%)</title><rect x="886.6" y="581" width="28.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="889.60" y="591.5" >[..</text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="709" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (94,108,505 samples, 0.33%)</title><rect x="87.2" y="773" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.19" y="783.5" ></text>
</g>
<g >
<title>_PyObject_NewVar (26,206,950 samples, 0.09%)</title><rect x="81.0" y="437" width="1.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="84.04" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,217 samples, 0.09%)</title><rect x="166.7" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.72" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (297,676,062 samples, 1.05%)</title><rect x="56.1" y="805" width="12.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,209,109 samples, 0.09%)</title><rect x="92.6" y="645" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="95.55" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (106,073,950 samples, 0.38%)</title><rect x="79.9" y="965" width="4.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="975.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,426,582 samples, 0.28%)</title><rect x="46.7" y="741" width="3.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="49.66" y="751.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (7,995,886,656 samples, 28.32%)</title><rect x="596.2" y="837" width="334.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="599.23" y="847.5" >PyObject_Vectorcall</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,745,010 samples, 0.12%)</title><rect x="64.9" y="581" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="67.90" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (271,564,553 samples, 0.96%)</title><rect x="56.1" y="757" width="11.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="59.06" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (118,036,668 samples, 0.42%)</title><rect x="38.1" y="1045" width="4.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="41.11" y="1055.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,408 samples, 0.09%)</title><rect x="159.5" y="453" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="162.48" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,174,437 samples, 0.09%)</title><rect x="76.6" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,220,774 samples, 0.09%)</title><rect x="211.2" y="533" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="214.22" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,424,646 samples, 0.09%)</title><rect x="168.9" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.91" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,161,388 samples, 0.09%)</title><rect x="138.2" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.23" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,252,462 samples, 0.09%)</title><rect x="115.8" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="479.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,829,123 samples, 0.12%)</title><rect x="107.1" y="453" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="110.15" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (34,030,025 samples, 0.12%)</title><rect x="165.3" y="485" width="1.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="168.29" y="495.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,058,837 samples, 0.12%)</title><rect x="93.6" y="501" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="96.65" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,428,829 samples, 0.09%)</title><rect x="63.8" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.80" y="351.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (34,138,378 samples, 0.12%)</title><rect x="113.3" y="725" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="116.27" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (33,521,481 samples, 0.12%)</title><rect x="931.8" y="645" width="1.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="934.83" y="655.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (102,374,777 samples, 0.36%)</title><rect x="1131.6" y="677" width="4.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1134.59" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (34,098,849 samples, 0.12%)</title><rect x="85.8" y="597" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.77" y="607.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,208,261 samples, 0.09%)</title><rect x="214.5" y="549" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="217.51" y="559.5" ></text>
</g>
<g >
<title>_PyCode_New (26,206,950 samples, 0.09%)</title><rect x="81.0" y="453" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="84.04" y="463.5" ></text>
</g>
<g >
<title>do_anonymous_page (170,851,108 samples, 0.61%)</title><rect x="699.4" y="405" width="7.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="702.39" y="415.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (26,206,950 samples, 0.09%)</title><rect x="81.0" y="357" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="84.04" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,356,437 samples, 0.09%)</title><rect x="99.2" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="102.15" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,219,217 samples, 0.09%)</title><rect x="166.7" y="453" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="169.72" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,583,276 samples, 0.12%)</title><rect x="126.3" y="421" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.29" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (86,453,309 samples, 0.31%)</title><rect x="165.3" y="933" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="168.29" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (198,469,697 samples, 0.70%)</title><rect x="144.3" y="629" width="8.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="147.34" y="639.5" ></text>
</g>
<g >
<title>get_page_from_freelist (26,202,934 samples, 0.09%)</title><rect x="162.0" y="229" width="1.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="164.99" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (83,900,878 samples, 0.30%)</title><rect x="39.5" y="981" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.53" y="991.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,206,613 samples, 0.24%)</title><rect x="60.9" y="469" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="63.95" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,098,849 samples, 0.12%)</title><rect x="85.8" y="581" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.77" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="933" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="943.5" ></text>
</g>
<g >
<title>__do_sys_madvise (30,080,530 samples, 0.11%)</title><rect x="220.1" y="965" width="1.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="223.11" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (34,005,797 samples, 0.12%)</title><rect x="188.8" y="501" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.83" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (102,392,917 samples, 0.36%)</title><rect x="196.3" y="421" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.34" y="431.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (26,211,802 samples, 0.09%)</title><rect x="155.1" y="149" width="1.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="158.10" y="159.5" ></text>
</g>
<g >
<title>[python3.12] (68,206,613 samples, 0.24%)</title><rect x="60.9" y="373" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.95" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (102,392,917 samples, 0.36%)</title><rect x="196.3" y="389" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,431,830 samples, 0.19%)</title><rect x="206.9" y="373" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="209.87" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (31,958,704 samples, 0.11%)</title><rect x="127.7" y="613" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="130.69" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (34,194,435 samples, 0.12%)</title><rect x="1163.0" y="661" width="1.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1165.96" y="671.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (34,255,579 samples, 0.12%)</title><rect x="934.6" y="629" width="1.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="937.65" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,261 samples, 0.09%)</title><rect x="214.5" y="469" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.51" y="479.5" ></text>
</g>
<g >
<title>_int_malloc (26,210,185 samples, 0.09%)</title><rect x="158.4" y="293" width="1.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="161.39" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (173,502,057 samples, 0.61%)</title><rect x="196.3" y="917" width="7.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.34" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (60,337,946 samples, 0.21%)</title><rect x="43.0" y="821" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,434,141 samples, 0.09%)</title><rect x="210.2" y="421" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="213.16" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,766,166 samples, 0.28%)</title><rect x="52.8" y="901" width="3.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="55.77" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,557 samples, 0.09%)</title><rect x="74.3" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.31" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (31,958,704 samples, 0.11%)</title><rect x="127.7" y="357" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.69" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (26,061,732 samples, 0.09%)</title><rect x="114.7" y="853" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="117.70" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (102,392,917 samples, 0.36%)</title><rect x="196.3" y="501" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.34" y="511.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (7,563,427 samples, 0.03%)</title><rect x="553.2" y="1029" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="556.19" y="1039.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,230,863 samples, 0.09%)</title><rect x="141.8" y="789" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="144.82" y="799.5" ></text>
</g>
<g >
<title>__do_sys_newstat (26,495,990 samples, 0.09%)</title><rect x="137.1" y="325" width="1.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="140.12" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,837,821 samples, 0.12%)</title><rect x="68.5" y="533" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="71.50" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (94,409,782 samples, 0.33%)</title><rect x="59.9" y="485" width="3.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="62.85" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,104,293 samples, 0.12%)</title><rect x="110.7" y="389" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="113.75" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (81,505,875 samples, 0.29%)</title><rect x="73.2" y="773" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.22" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,223,173 samples, 0.09%)</title><rect x="112.2" y="757" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.17" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (31,287,366 samples, 0.11%)</title><rect x="41.7" y="805" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="44.73" y="815.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,210,661 samples, 0.09%)</title><rect x="213.4" y="853" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="216.41" y="863.5" ></text>
</g>
<g >
<title>__x64_sys_openat (27,198,707 samples, 0.10%)</title><rect x="183.9" y="277" width="1.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="186.94" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,728 samples, 0.09%)</title><rect x="78.8" y="965" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="81.81" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,642,433 samples, 0.09%)</title><rect x="83.2" y="325" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="86.23" y="335.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,267,251 samples, 0.09%)</title><rect x="163.1" y="453" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="166.09" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,642,433 samples, 0.09%)</title><rect x="83.2" y="757" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.23" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,235,612 samples, 0.24%)</title><rect x="84.3" y="837" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="87.34" y="847.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (34,219,007 samples, 0.12%)</title><rect x="1154.4" y="645" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1157.38" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,228,460 samples, 0.09%)</title><rect x="52.8" y="549" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.77" y="559.5" ></text>
</g>
<g >
<title>PyType_GenericNew (26,230,863 samples, 0.09%)</title><rect x="141.8" y="309" width="1.1" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="144.82" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,261 samples, 0.09%)</title><rect x="214.5" y="485" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="217.51" y="495.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (27,198,707 samples, 0.10%)</title><rect x="183.9" y="181" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="186.94" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_free (34,204,566 samples, 0.12%)</title><rect x="1165.8" y="645" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1168.82" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,287,437 samples, 0.09%)</title><rect x="186.2" y="757" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="189.18" y="767.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,710,685 samples, 0.09%)</title><rect x="118.3" y="581" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="121.25" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (220,599,939 samples, 0.78%)</title><rect x="173.6" y="661" width="9.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.63" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (86,742,635 samples, 0.31%)</title><rect x="168.9" y="629" width="3.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="171.91" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (25,843,098 samples, 0.09%)</title><rect x="139.3" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.32" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,423,284 samples, 0.19%)</title><rect x="166.7" y="693" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="169.72" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (439,496,438 samples, 1.56%)</title><rect x="168.9" y="965" width="18.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="171.91" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,728 samples, 0.09%)</title><rect x="78.8" y="565" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="81.81" y="575.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,089,505 samples, 0.12%)</title><rect x="1107.4" y="693" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1110.38" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,208,261 samples, 0.09%)</title><rect x="214.5" y="901" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="217.51" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,509 samples, 0.09%)</title><rect x="67.4" y="693" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.41" y="703.5" ></text>
</g>
<g >
<title>handle_mm_fault (33,745,010 samples, 0.12%)</title><rect x="64.9" y="133" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="67.90" y="143.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,799,484 samples, 0.19%)</title><rect x="71.0" y="437" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="74.01" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,223,173 samples, 0.09%)</title><rect x="112.2" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.17" y="527.5" ></text>
</g>
<g >
<title>PyObject_Malloc (26,206,950 samples, 0.09%)</title><rect x="81.0" y="421" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="84.04" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,211,728 samples, 0.09%)</title><rect x="78.8" y="997" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="81.81" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (25,843,098 samples, 0.09%)</title><rect x="139.3" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.32" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (68,265,967 samples, 0.24%)</title><rect x="1155.8" y="709" width="2.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1158.81" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,378 samples, 0.09%)</title><rect x="69.9" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.91" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (52,373,735 samples, 0.19%)</title><rect x="76.6" y="565" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,199,486 samples, 0.09%)</title><rect x="73.2" y="533" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="76.22" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (326,538,739 samples, 1.16%)</title><rect x="173.6" y="885" width="13.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="176.63" y="895.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (26,206,950 samples, 0.09%)</title><rect x="81.0" y="405" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="84.04" y="415.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (1,635,074,058 samples, 5.79%)</title><rect x="626.8" y="517" width="68.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="629.79" y="527.5" >[libz.s..</text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="773" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="783.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (34,244,037 samples, 0.12%)</title><rect x="22.2" y="1061" width="1.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="25.18" y="1071.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,213,235 samples, 0.09%)</title><rect x="66.3" y="501" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="69.31" y="511.5" ></text>
</g>
<g >
<title>__pyx_pw_5numpy_6random_13bit_generator_12SeedSequence_5generate_state (25,925,031 samples, 0.09%)</title><rect x="101.7" y="325" width="1.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="104.68" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="693" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,353,144 samples, 0.09%)</title><rect x="43.0" y="517" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.04" y="527.5" ></text>
</g>
<g >
<title>_dlerror_run (33,745,010 samples, 0.12%)</title><rect x="64.9" y="437" width="1.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="67.90" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,843,098 samples, 0.09%)</title><rect x="139.3" y="421" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="142.32" y="431.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,215,064 samples, 0.09%)</title><rect x="172.5" y="661" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="175.53" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="469" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; const&amp;&gt; (33,521,481 samples, 0.12%)</title><rect x="931.8" y="501" width="1.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="934.83" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,109 samples, 0.09%)</title><rect x="92.6" y="661" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.55" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,642,433 samples, 0.09%)</title><rect x="83.2" y="693" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="86.23" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (71,109,140 samples, 0.25%)</title><rect x="200.6" y="677" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.62" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,135,790 samples, 0.12%)</title><rect x="38.1" y="965" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="41.11" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,200,433 samples, 0.09%)</title><rect x="203.6" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="543.5" ></text>
</g>
<g >
<title>do_user_addr_fault (33,595,188 samples, 0.12%)</title><rect x="563.4" y="885" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="566.43" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,780 samples, 0.09%)</title><rect x="149.4" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.35" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (130,950,700 samples, 0.46%)</title><rect x="203.6" y="741" width="5.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="206.59" y="751.5" ></text>
</g>
<g >
<title>PyList_Sort (26,210,679 samples, 0.09%)</title><rect x="209.1" y="645" width="1.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="212.07" y="655.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,728 samples, 0.09%)</title><rect x="78.8" y="389" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="81.81" y="399.5" ></text>
</g>
<g >
<title>raw_array_assign_scalar (67,775,131 samples, 0.24%)</title><rect x="49.9" y="837" width="2.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="52.93" y="847.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (151,060,758 samples, 0.54%)</title><rect x="96.5" y="789" width="6.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="99.45" y="799.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,215,064 samples, 0.09%)</title><rect x="172.5" y="565" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="175.53" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,509 samples, 0.09%)</title><rect x="67.4" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.41" y="447.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (26,315,552 samples, 0.09%)</title><rect x="620.2" y="277" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="623.23" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (33,712,665 samples, 0.12%)</title><rect x="147.9" y="357" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.94" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,024,701 samples, 0.12%)</title><rect x="95.1" y="517" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.07" y="527.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,267,251 samples, 0.09%)</title><rect x="163.1" y="389" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="166.09" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (34,253,870 samples, 0.12%)</title><rect x="1164.4" y="677" width="1.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1167.39" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (172,858,073 samples, 0.61%)</title><rect x="120.5" y="645" width="7.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="655.5" ></text>
</g>
<g >
<title>__do_page_fault (33,595,188 samples, 0.12%)</title><rect x="563.4" y="901" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="566.43" y="911.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,109 samples, 0.09%)</title><rect x="92.6" y="469" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="95.55" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (31,287,366 samples, 0.11%)</title><rect x="41.7" y="837" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="44.73" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (30,080,530 samples, 0.11%)</title><rect x="220.1" y="981" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="223.11" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,710,685 samples, 0.09%)</title><rect x="118.3" y="421" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.25" y="431.5" ></text>
</g>
<g >
<title>PyDict_GetItemWithError (26,207,530 samples, 0.09%)</title><rect x="157.3" y="341" width="1.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="160.29" y="351.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,535,481 samples, 0.09%)</title><rect x="72.1" y="405" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="75.11" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,950 samples, 0.09%)</title><rect x="81.0" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.04" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (34,030,025 samples, 0.12%)</title><rect x="165.3" y="645" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="168.29" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (34,132,003 samples, 0.12%)</title><rect x="100.3" y="437" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="103.25" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (232,633,989 samples, 0.82%)</title><rect x="142.9" y="693" width="9.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.92" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (60,060,755 samples, 0.21%)</title><rect x="160.6" y="613" width="2.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="163.58" y="623.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pop (580,807,690 samples, 2.06%)</title><rect x="966.1" y="629" width="24.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="969.08" y="639.5" >b..</text>
</g>
<g >
<title>[_ctypes.cpython-312-x86_64-linux-gnu.so] (33,745,010 samples, 0.12%)</title><rect x="64.9" y="469" width="1.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="67.90" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,219,217 samples, 0.09%)</title><rect x="166.7" y="373" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="169.72" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,679 samples, 0.09%)</title><rect x="209.1" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.07" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (570,796,786 samples, 2.02%)</title><rect x="52.8" y="1061" width="23.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="55.77" y="1071.5" >P..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,546,263 samples, 0.09%)</title><rect x="164.2" y="517" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.18" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (162,344,117 samples, 0.58%)</title><rect x="84.3" y="1013" width="6.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="87.34" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,315,552 samples, 0.09%)</title><rect x="620.2" y="373" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="623.23" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,857,821 samples, 0.12%)</title><rect x="160.6" y="469" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="163.58" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (60,337,946 samples, 0.21%)</title><rect x="43.0" y="933" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,182 samples, 0.09%)</title><rect x="150.4" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.45" y="335.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (162,344,117 samples, 0.58%)</title><rect x="84.3" y="901" width="6.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="87.34" y="911.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,408 samples, 0.09%)</title><rect x="159.5" y="437" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="162.48" y="447.5" ></text>
</g>
<g >
<title>_int_free (34,137,840 samples, 0.12%)</title><rect x="576.2" y="901" width="1.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="579.23" y="911.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,132,139 samples, 0.12%)</title><rect x="96.5" y="85" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="99.45" y="95.5" ></text>
</g>
<g >
<title>[python3.12] (120,325,477 samples, 0.43%)</title><rect x="107.1" y="709" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,156 samples, 0.09%)</title><rect x="591.2" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="594.19" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,109 samples, 0.09%)</title><rect x="92.6" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.55" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (83,900,878 samples, 0.30%)</title><rect x="39.5" y="853" width="3.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="42.53" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,576 samples, 0.09%)</title><rect x="55.0" y="421" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="57.96" y="431.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,235 samples, 0.09%)</title><rect x="66.3" y="277" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="69.31" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="1013" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1173.11" y="1023.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,323,130 samples, 0.09%)</title><rect x="53.9" y="597" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="56.86" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,298 samples, 0.09%)</title><rect x="77.7" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.72" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,209 samples, 0.09%)</title><rect x="102.8" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (119,467,939 samples, 0.42%)</title><rect x="191.3" y="597" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.35" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (436,586,046 samples, 1.55%)</title><rect x="96.5" y="981" width="18.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (33,837,821 samples, 0.12%)</title><rect x="68.5" y="805" width="1.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="71.50" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,261 samples, 0.09%)</title><rect x="214.5" y="661" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="217.51" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,111,509 samples, 0.09%)</title><rect x="67.4" y="581" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="70.41" y="591.5" ></text>
</g>
<g >
<title>do_anonymous_page (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="789" width="3.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1173.11" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,067 samples, 0.09%)</title><rect x="167.8" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.81" y="367.5" ></text>
</g>
<g >
<title>__mod_memcg_state (34,055,544 samples, 0.12%)</title><rect x="703.7" y="309" width="1.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="706.67" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,417,812 samples, 0.19%)</title><rect x="211.2" y="789" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="214.22" y="799.5" ></text>
</g>
<g >
<title>_PyCode_New (26,223,173 samples, 0.09%)</title><rect x="112.2" y="421" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="115.17" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (86,742,635 samples, 0.31%)</title><rect x="168.9" y="613" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.91" y="623.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (102,333,447 samples, 0.36%)</title><rect x="1051.8" y="581" width="4.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1054.81" y="591.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (29,096,832 samples, 0.10%)</title><rect x="75.4" y="341" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="78.41" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (130,950,700 samples, 0.46%)</title><rect x="203.6" y="837" width="5.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="206.59" y="847.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,215,154 samples, 0.24%)</title><rect x="927.6" y="773" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="930.56" y="783.5" ></text>
</g>
<g >
<title>__GI___xstat (26,495,990 samples, 0.09%)</title><rect x="137.1" y="389" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="140.12" y="399.5" ></text>
</g>
<g >
<title>PyObject_Free (34,185,861 samples, 0.12%)</title><rect x="587.6" y="885" width="1.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="590.63" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,934 samples, 0.09%)</title><rect x="162.0" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.99" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (67,902,262 samples, 0.24%)</title><rect x="87.2" y="517" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="90.19" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,135,790 samples, 0.12%)</title><rect x="38.1" y="981" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="41.11" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (67,083,538 samples, 0.24%)</title><rect x="93.6" y="981" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.65" y="991.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,024,701 samples, 0.12%)</title><rect x="95.1" y="885" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="98.07" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,174,437 samples, 0.09%)</title><rect x="76.6" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,235 samples, 0.09%)</title><rect x="66.3" y="597" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.31" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (34,136,763 samples, 0.12%)</title><rect x="84.3" y="501" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (78,622,051 samples, 0.28%)</title><rect x="103.9" y="581" width="3.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="106.86" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,509 samples, 0.09%)</title><rect x="67.4" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.41" y="575.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (60,049,199 samples, 0.21%)</title><rect x="68.5" y="917" width="2.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="71.50" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,530 samples, 0.09%)</title><rect x="157.3" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.29" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (189,899,606 samples, 0.67%)</title><rect x="152.6" y="549" width="8.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.64" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (173,502,057 samples, 0.61%)</title><rect x="196.3" y="965" width="7.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="199.34" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,661 samples, 0.09%)</title><rect x="213.4" y="773" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.41" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (54,665,706 samples, 0.19%)</title><rect x="129.0" y="549" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.02" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,633,721 samples, 0.09%)</title><rect x="145.7" y="469" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="148.74" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,837,821 samples, 0.12%)</title><rect x="68.5" y="869" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="71.50" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (34,164,292 samples, 0.12%)</title><rect x="142.9" y="565" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,642,433 samples, 0.09%)</title><rect x="83.2" y="741" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="86.23" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (83,900,878 samples, 0.30%)</title><rect x="39.5" y="1013" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.53" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (94,108,505 samples, 0.33%)</title><rect x="87.2" y="789" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.19" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,200,433 samples, 0.09%)</title><rect x="203.6" y="421" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="206.59" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,287,437 samples, 0.09%)</title><rect x="186.2" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.18" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,200,433 samples, 0.09%)</title><rect x="203.6" y="613" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="206.59" y="623.5" ></text>
</g>
<g >
<title>native_write_msr (4,802,171 samples, 0.02%)</title><rect x="219.9" y="949" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="222.86" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,243 samples, 0.09%)</title><rect x="90.0" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.03" y="543.5" ></text>
</g>
<g >
<title>_dlerror_run (44,903,039 samples, 0.16%)</title><rect x="201.7" y="517" width="1.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="204.72" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (173,502,057 samples, 0.61%)</title><rect x="196.3" y="885" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,661 samples, 0.09%)</title><rect x="213.4" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.41" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,223,173 samples, 0.09%)</title><rect x="112.2" y="789" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.17" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,515 samples, 0.09%)</title><rect x="146.8" y="453" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="149.85" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (165,180,376 samples, 0.59%)</title><rect x="145.7" y="533" width="6.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="148.74" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,642,433 samples, 0.09%)</title><rect x="83.2" y="581" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.23" y="591.5" ></text>
</g>
<g >
<title>elf_dynamic_do_Rela (44,903,039 samples, 0.16%)</title><rect x="201.7" y="389" width="1.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="204.72" y="399.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (34,030,025 samples, 0.12%)</title><rect x="165.3" y="597" width="1.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="168.29" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="559.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (34,279,247 samples, 0.12%)</title><rect x="622.8" y="325" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="625.76" y="335.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,208,261 samples, 0.09%)</title><rect x="214.5" y="933" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="217.51" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,408 samples, 0.09%)</title><rect x="159.5" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.48" y="335.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,378 samples, 0.09%)</title><rect x="69.9" y="869" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="72.91" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,684 samples, 0.09%)</title><rect x="103.9" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.86" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,287,437 samples, 0.09%)</title><rect x="186.2" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.18" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,323,130 samples, 0.09%)</title><rect x="53.9" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.86" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,557 samples, 0.09%)</title><rect x="74.3" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.31" y="447.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (27,198,707 samples, 0.10%)</title><rect x="183.9" y="469" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="186.94" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="741" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="751.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,058,837 samples, 0.12%)</title><rect x="93.6" y="757" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="96.65" y="767.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (147,540,499 samples, 0.52%)</title><rect x="1178.5" y="917" width="6.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1181.49" y="927.5" ></text>
</g>
<g >
<title>[unknown] (4,315,137,429 samples, 15.28%)</title><rect x="38.1" y="1077" width="180.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="41.11" y="1087.5" >[unknown]</text>
</g>
<g >
<title>[python3.12] (31,958,704 samples, 0.11%)</title><rect x="127.7" y="373" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.69" y="383.5" ></text>
</g>
<g >
<title>PyGILState_Ensure (102,077,362 samples, 0.36%)</title><rect x="923.3" y="661" width="4.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="926.30" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (68,235,612 samples, 0.24%)</title><rect x="84.3" y="789" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (120,838,611 samples, 0.43%)</title><rect x="59.9" y="645" width="5.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="62.85" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,064 samples, 0.09%)</title><rect x="172.5" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.53" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (52,373,735 samples, 0.19%)</title><rect x="76.6" y="709" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="719.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch2&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (2,972,839,879 samples, 10.53%)</title><rect x="951.8" y="677" width="124.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="954.80" y="687.5" >boost::detail::..</text>
</g>
<g >
<title>ksys_read (26,211,802 samples, 0.09%)</title><rect x="155.1" y="245" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="158.10" y="255.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (104,838,260 samples, 0.37%)</title><rect x="102.8" y="901" width="4.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="105.76" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,934 samples, 0.09%)</title><rect x="162.0" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.99" y="415.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (34,190,749 samples, 0.12%)</title><rect x="996.1" y="597" width="1.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="999.07" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (67,902,262 samples, 0.24%)</title><rect x="87.2" y="709" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="90.19" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,199,298 samples, 0.09%)</title><rect x="77.7" y="341" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="80.72" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,838,260 samples, 0.37%)</title><rect x="102.8" y="853" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.76" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,220,771 samples, 0.18%)</title><rect x="46.7" y="469" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="49.66" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (189,899,606 samples, 0.67%)</title><rect x="152.6" y="677" width="8.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.64" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (78,628,266 samples, 0.28%)</title><rect x="177.4" y="453" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.36" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (26,061,732 samples, 0.09%)</title><rect x="114.7" y="917" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="117.70" y="927.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,424,646 samples, 0.09%)</title><rect x="168.9" y="485" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="171.91" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (338,124,702 samples, 1.20%)</title><rect x="127.7" y="709" width="14.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.69" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,408 samples, 0.09%)</title><rect x="159.5" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.48" y="351.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,392,061 samples, 0.19%)</title><rect x="108.6" y="453" width="2.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="111.56" y="463.5" ></text>
</g>
<g >
<title>do_anonymous_page (34,132,139 samples, 0.12%)</title><rect x="96.5" y="37" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="99.45" y="47.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,030,025 samples, 0.12%)</title><rect x="165.3" y="773" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="168.29" y="783.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (13,902,443,116 samples, 49.24%)</title><rect x="589.1" y="933" width="581.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="592.06" y="943.5" >PyEval_EvalCode</text>
</g>
<g >
<title>[python3.12] (78,426,582 samples, 0.28%)</title><rect x="46.7" y="597" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.66" y="607.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (68,206,613 samples, 0.24%)</title><rect x="60.9" y="389" width="2.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="63.95" y="399.5" ></text>
</g>
<g >
<title>do_user_addr_fault (26,202,934 samples, 0.09%)</title><rect x="162.0" y="325" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="164.99" y="335.5" ></text>
</g>
<g >
<title>do_page_fault (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="869" width="3.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1173.11" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (134,305,359 samples, 0.48%)</title><rect x="71.0" y="885" width="5.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="74.01" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (29,096,832 samples, 0.10%)</title><rect x="75.4" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.41" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (102,392,917 samples, 0.36%)</title><rect x="196.3" y="517" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="199.34" y="527.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt; (34,066,070 samples, 0.12%)</title><rect x="1148.7" y="645" width="1.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1151.67" y="655.5" ></text>
</g>
<g >
<title>__GI___libc_read (34,132,139 samples, 0.12%)</title><rect x="96.5" y="357" width="1.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="99.45" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallFunctionObjArgs (26,230,863 samples, 0.09%)</title><rect x="141.8" y="373" width="1.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="144.82" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,583,276 samples, 0.12%)</title><rect x="126.3" y="389" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="129.29" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (53,479,760 samples, 0.19%)</title><rect x="183.9" y="581" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.94" y="591.5" ></text>
</g>
<g >
<title>PyObject_Malloc (34,194,426 samples, 0.12%)</title><rect x="916.2" y="677" width="1.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="919.17" y="687.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (103,555,233 samples, 0.37%)</title><rect x="589.1" y="901" width="4.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="592.06" y="911.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (67,509,856 samples, 0.24%)</title><rect x="1059.0" y="581" width="2.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1061.95" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (102,313,557 samples, 0.36%)</title><rect x="1115.9" y="629" width="4.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1118.93" y="639.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,199,298 samples, 0.09%)</title><rect x="77.7" y="485" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="80.72" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,223,173 samples, 0.09%)</title><rect x="112.2" y="581" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.17" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_brk (26,315,552 samples, 0.09%)</title><rect x="620.2" y="341" width="1.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="623.23" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,197,038 samples, 0.09%)</title><rect x="212.3" y="533" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="215.32" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (52,220,771 samples, 0.18%)</title><rect x="46.7" y="485" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.66" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,132,139 samples, 0.12%)</title><rect x="96.5" y="485" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (37,174,366 samples, 0.13%)</title><rect x="187.3" y="453" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="190.28" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,058,837 samples, 0.12%)</title><rect x="93.6" y="837" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="96.65" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (33,289,321 samples, 0.12%)</title><rect x="144.3" y="549" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="147.34" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (86,742,635 samples, 0.31%)</title><rect x="168.9" y="533" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.91" y="543.5" ></text>
</g>
<g >
<title>do_anonymous_page (26,061,732 samples, 0.09%)</title><rect x="114.7" y="885" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="117.70" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (78,766,166 samples, 0.28%)</title><rect x="52.8" y="693" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (29,096,832 samples, 0.10%)</title><rect x="75.4" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.41" y="319.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (34,152,612 samples, 0.12%)</title><rect x="1083.1" y="645" width="1.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1086.12" y="655.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (25,925,031 samples, 0.09%)</title><rect x="101.7" y="309" width="1.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="104.68" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,219,217 samples, 0.09%)</title><rect x="166.7" y="405" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="169.72" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (31,287,366 samples, 0.11%)</title><rect x="41.7" y="645" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="44.73" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,464,585 samples, 0.09%)</title><rect x="180.6" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.65" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,323,130 samples, 0.09%)</title><rect x="53.9" y="469" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="56.86" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,583,276 samples, 0.12%)</title><rect x="126.3" y="437" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="129.29" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (90,767,697 samples, 0.32%)</title><rect x="56.1" y="613" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (116,928,619 samples, 0.41%)</title><rect x="97.9" y="629" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.88" y="639.5" ></text>
</g>
<g >
<title>do_page_fault (34,278,517 samples, 0.12%)</title><rect x="611.7" y="517" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="614.66" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (570,796,786 samples, 2.02%)</title><rect x="52.8" y="997" width="23.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.77" y="1007.5" >_..</text>
</g>
<g >
<title>[python3.12] (26,216,209 samples, 0.09%)</title><rect x="102.8" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,197,038 samples, 0.09%)</title><rect x="212.3" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.32" y="447.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (60,303,297 samples, 0.21%)</title><rect x="91.1" y="997" width="2.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="94.13" y="1007.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,220,086 samples, 0.09%)</title><rect x="181.8" y="437" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="184.75" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,984,802 samples, 0.12%)</title><rect x="44.1" y="405" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="47.14" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,287,366 samples, 0.11%)</title><rect x="41.7" y="693" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="44.73" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (33,957,819 samples, 0.12%)</title><rect x="58.4" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.43" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,030,025 samples, 0.12%)</title><rect x="165.3" y="709" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="168.29" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,235 samples, 0.09%)</title><rect x="66.3" y="485" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.31" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,169 samples, 0.09%)</title><rect x="59.9" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.85" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,633,721 samples, 0.09%)</title><rect x="145.7" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="148.74" y="415.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (68,229,250 samples, 0.24%)</title><rect x="1131.6" y="645" width="2.8" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1134.59" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (34,253,870 samples, 0.12%)</title><rect x="1164.4" y="693" width="1.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1167.39" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (81,505,875 samples, 0.29%)</title><rect x="73.2" y="661" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.22" y="671.5" ></text>
</g>
<g >
<title>get_page_from_freelist (475,288,109 samples, 1.68%)</title><rect x="853.9" y="341" width="19.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="856.91" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,323,130 samples, 0.09%)</title><rect x="53.9" y="549" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="56.86" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,135,790 samples, 0.12%)</title><rect x="38.1" y="853" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="41.11" y="863.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,230,863 samples, 0.09%)</title><rect x="141.8" y="341" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="144.82" y="351.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (34,127,861 samples, 0.12%)</title><rect x="1060.3" y="565" width="1.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1063.35" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,030,025 samples, 0.12%)</title><rect x="165.3" y="693" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="168.29" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,829,123 samples, 0.12%)</title><rect x="107.1" y="357" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.15" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (13,902,443,116 samples, 49.24%)</title><rect x="589.1" y="949" width="581.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.06" y="959.5" >[python3.12]</text>
</g>
<g >
<title>alloc_pages_vma (501,884,542 samples, 1.78%)</title><rect x="852.8" y="373" width="21.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="855.80" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (68,440,040 samples, 0.24%)</title><rect x="621.3" y="357" width="2.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="624.33" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (34,094,188 samples, 0.12%)</title><rect x="91.1" y="597" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,857,821 samples, 0.12%)</title><rect x="160.6" y="421" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.58" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,287,366 samples, 0.11%)</title><rect x="41.7" y="501" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="44.73" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,373,735 samples, 0.19%)</title><rect x="76.6" y="613" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="79.62" y="623.5" ></text>
</g>
<g >
<title>call_init (33,745,010 samples, 0.12%)</title><rect x="64.9" y="293" width="1.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="67.90" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (34,145,527 samples, 0.12%)</title><rect x="1134.4" y="629" width="1.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1137.44" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (60,303,297 samples, 0.21%)</title><rect x="91.1" y="901" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="911.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (216,889,615 samples, 0.77%)</title><rect x="187.3" y="821" width="9.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="190.28" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,750,267 samples, 0.37%)</title><rect x="204.7" y="549" width="4.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="207.69" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (79,431,517 samples, 0.28%)</title><rect x="79.9" y="853" width="3.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.91" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (34,104,293 samples, 0.12%)</title><rect x="110.7" y="421" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.75" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (97,421,676 samples, 0.35%)</title><rect x="187.3" y="613" width="4.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="190.28" y="623.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::LookupBucketFor (33,745,010 samples, 0.12%)</title><rect x="64.9" y="213" width="1.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="67.90" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (33,453,730 samples, 0.12%)</title><rect x="596.2" y="773" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="599.23" y="783.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,411,367 samples, 0.19%)</title><rect x="105.0" y="405" width="2.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="107.95" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (26,199,298 samples, 0.09%)</title><rect x="77.7" y="245" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="80.72" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,434,141 samples, 0.09%)</title><rect x="210.2" y="693" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="213.16" y="703.5" ></text>
</g>
<g >
<title>boost::optional_detail::aligned_storage&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::ref (34,194,642 samples, 0.12%)</title><rect x="943.2" y="645" width="1.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="946.22" y="655.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (304,452,757 samples, 1.08%)</title><rect x="196.3" y="981" width="12.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="199.34" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (232,633,989 samples, 0.82%)</title><rect x="142.9" y="901" width="9.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.92" y="911.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,576 samples, 0.09%)</title><rect x="55.0" y="581" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="57.96" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (119,467,939 samples, 0.42%)</title><rect x="191.3" y="661" width="5.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.35" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="357" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,036,548 samples, 0.10%)</title><rect x="79.9" y="645" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.91" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (232,633,989 samples, 0.82%)</title><rect x="142.9" y="933" width="9.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,353,144 samples, 0.09%)</title><rect x="43.0" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,411,367 samples, 0.19%)</title><rect x="105.0" y="421" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.95" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,323,130 samples, 0.09%)</title><rect x="53.9" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.86" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (172,858,073 samples, 0.61%)</title><rect x="120.5" y="629" width="7.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (111,920,957 samples, 0.40%)</title><rect x="115.8" y="1013" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,424,646 samples, 0.09%)</title><rect x="168.9" y="405" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="171.91" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (191,659,029 samples, 0.68%)</title><rect x="131.3" y="453" width="8.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="134.31" y="463.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,041,472 samples, 0.12%)</title><rect x="1111.7" y="661" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1114.66" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (656,386,053 samples, 2.32%)</title><rect x="168.9" y="1045" width="27.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="171.91" y="1055.5" >_..</text>
</g>
<g >
<title>[python3.12] (26,204,067 samples, 0.09%)</title><rect x="167.8" y="645" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.81" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (52,417,812 samples, 0.19%)</title><rect x="211.2" y="805" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.22" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (130,950,700 samples, 0.46%)</title><rect x="203.6" y="677" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,353,144 samples, 0.09%)</title><rect x="43.0" y="581" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,064 samples, 0.09%)</title><rect x="172.5" y="645" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.53" y="655.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::evaluator (33,802,756 samples, 0.12%)</title><rect x="930.4" y="725" width="1.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="933.41" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,934 samples, 0.09%)</title><rect x="162.0" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.99" y="495.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;, IT_outputs, , pybind11::name, pybind11::is_method, pybind11::sibling&gt; (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="837" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1171.68" y="847.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::destroy_impl (34,194,642 samples, 0.12%)</title><rect x="943.2" y="661" width="1.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="946.22" y="671.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,679 samples, 0.09%)</title><rect x="209.1" y="709" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="212.07" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,216,209 samples, 0.09%)</title><rect x="102.8" y="613" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="105.76" y="623.5" ></text>
</g>
<g >
<title>PyLong_FromLong (34,114,595 samples, 0.12%)</title><rect x="12.2" y="1061" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="15.20" y="1071.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (102,374,777 samples, 0.36%)</title><rect x="1131.6" y="661" width="4.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1134.59" y="671.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (34,117,101 samples, 0.12%)</title><rect x="1103.1" y="693" width="1.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1106.10" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,576 samples, 0.09%)</title><rect x="55.0" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.96" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (326,538,739 samples, 1.16%)</title><rect x="173.6" y="837" width="13.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.63" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (29,096,832 samples, 0.10%)</title><rect x="75.4" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.41" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (30,515,148 samples, 0.11%)</title><rect x="97.9" y="517" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.88" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,580,982 samples, 0.12%)</title><rect x="594.8" y="853" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="597.82" y="863.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (60,488,440 samples, 0.21%)</title><rect x="99.2" y="469" width="2.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="102.15" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (656,386,053 samples, 2.32%)</title><rect x="168.9" y="1013" width="27.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.91" y="1023.5" >[..</text>
</g>
<g >
<title>PyModule_ExecDef (25,434,141 samples, 0.09%)</title><rect x="210.2" y="1013" width="1.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="213.16" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_Call (130,950,700 samples, 0.46%)</title><rect x="203.6" y="885" width="5.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="206.59" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,679 samples, 0.09%)</title><rect x="209.1" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.07" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,206,946 samples, 0.09%)</title><rect x="195.2" y="373" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="198.25" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (97,421,676 samples, 0.35%)</title><rect x="187.3" y="677" width="4.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="190.28" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (104,750,267 samples, 0.37%)</title><rect x="204.7" y="613" width="4.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.69" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (32,746,492 samples, 0.12%)</title><rect x="116.9" y="373" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.88" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (173,502,057 samples, 0.61%)</title><rect x="196.3" y="853" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="863.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (34,255,579 samples, 0.12%)</title><rect x="934.6" y="645" width="1.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="937.65" y="655.5" ></text>
</g>
<g >
<title>path_openat (27,198,707 samples, 0.10%)</title><rect x="183.9" y="229" width="1.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="186.94" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (71,109,140 samples, 0.25%)</title><rect x="200.6" y="613" width="3.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="203.62" y="623.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (68,183,134 samples, 0.24%)</title><rect x="1081.7" y="677" width="2.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1084.69" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (102,392,917 samples, 0.36%)</title><rect x="196.3" y="453" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,613,512 samples, 0.19%)</title><rect x="39.5" y="677" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="42.53" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (34,135,790 samples, 0.12%)</title><rect x="38.1" y="997" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.11" y="1007.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,209,557 samples, 0.09%)</title><rect x="74.3" y="453" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="77.31" y="463.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,378 samples, 0.09%)</title><rect x="69.9" y="805" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="72.91" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (67,083,538 samples, 0.24%)</title><rect x="93.6" y="949" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="959.5" ></text>
</g>
<g >
<title>std::make_pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (34,250,573 samples, 0.12%)</title><rect x="1098.8" y="693" width="1.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1101.81" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,230,863 samples, 0.09%)</title><rect x="141.8" y="517" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="144.82" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (34,030,025 samples, 0.12%)</title><rect x="165.3" y="517" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="168.29" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (302,773,875 samples, 1.07%)</title><rect x="152.6" y="789" width="12.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="155.64" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (58,998,954 samples, 0.21%)</title><rect x="115.8" y="581" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="118.79" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,287,437 samples, 0.09%)</title><rect x="186.2" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.18" y="463.5" ></text>
</g>
<g >
<title>_PyObject_NewVar (30,515,148 samples, 0.11%)</title><rect x="97.9" y="421" width="1.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="100.88" y="431.5" ></text>
</g>
<g >
<title>PyNumber_Remainder (26,215,064 samples, 0.09%)</title><rect x="172.5" y="469" width="1.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="175.53" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,423,284 samples, 0.19%)</title><rect x="166.7" y="757" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.72" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (33,521,481 samples, 0.12%)</title><rect x="931.8" y="629" width="1.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="934.83" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned long&gt;, unsigned long&gt;::_S_select_on_copy (34,124,038 samples, 0.12%)</title><rect x="1153.0" y="693" width="1.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1155.96" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,628,266 samples, 0.28%)</title><rect x="177.4" y="341" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="180.36" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (68,534,392 samples, 0.24%)</title><rect x="1120.2" y="597" width="2.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1123.21" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="773" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (54,665,706 samples, 0.19%)</title><rect x="129.0" y="469" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.02" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (34,132,139 samples, 0.12%)</title><rect x="96.5" y="309" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="99.45" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (34,098,849 samples, 0.12%)</title><rect x="85.8" y="501" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.77" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (78,622,051 samples, 0.28%)</title><rect x="103.9" y="741" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.86" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (34,135,790 samples, 0.12%)</title><rect x="38.1" y="725" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.11" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,434,141 samples, 0.09%)</title><rect x="210.2" y="885" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="213.16" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,394,969 samples, 0.19%)</title><rect x="81.0" y="677" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="84.04" y="687.5" ></text>
</g>
<g >
<title>[_json.cpython-312-x86_64-linux-gnu.so] (26,208,513 samples, 0.09%)</title><rect x="151.5" y="485" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.54" y="495.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,829,123 samples, 0.12%)</title><rect x="107.1" y="421" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="110.15" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,167,861 samples, 0.09%)</title><rect x="45.6" y="773" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (297,676,062 samples, 1.05%)</title><rect x="56.1" y="853" width="12.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="59.06" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,323,130 samples, 0.09%)</title><rect x="53.9" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.86" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,058,837 samples, 0.12%)</title><rect x="93.6" y="661" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.65" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (191,659,029 samples, 0.68%)</title><rect x="131.3" y="437" width="8.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.31" y="447.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (86,128,627 samples, 0.31%)</title><rect x="147.9" y="437" width="3.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="150.94" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,431,830 samples, 0.19%)</title><rect x="206.9" y="421" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="209.87" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,486 samples, 0.09%)</title><rect x="73.2" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.22" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,121,926 samples, 0.12%)</title><rect x="171.1" y="421" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.11" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,235,612 samples, 0.24%)</title><rect x="84.3" y="629" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="87.34" y="639.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (26,428,829 samples, 0.09%)</title><rect x="63.8" y="309" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="66.80" y="319.5" ></text>
</g>
<g >
<title>page_fault (34,135,790 samples, 0.12%)</title><rect x="38.1" y="373" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="41.11" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (120,325,477 samples, 0.43%)</title><rect x="107.1" y="677" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (112,957,699 samples, 0.40%)</title><rect x="168.9" y="853" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.91" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (33,521,481 samples, 0.12%)</title><rect x="931.8" y="693" width="1.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="934.83" y="703.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,210,679 samples, 0.09%)</title><rect x="209.1" y="821" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="212.07" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (52,799,484 samples, 0.19%)</title><rect x="71.0" y="757" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.01" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_do_relocate (34,066,070 samples, 0.12%)</title><rect x="1148.7" y="661" width="1.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1151.67" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,223,173 samples, 0.09%)</title><rect x="112.2" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.17" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (83,900,878 samples, 0.30%)</title><rect x="39.5" y="885" width="3.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="42.53" y="895.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::parent (34,251,110 samples, 0.12%)</title><rect x="991.8" y="597" width="1.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="994.79" y="607.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (34,219,007 samples, 0.12%)</title><rect x="1154.4" y="629" width="1.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1157.38" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (25,434,141 samples, 0.09%)</title><rect x="210.2" y="773" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="213.16" y="783.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (68,208,075 samples, 0.24%)</title><rect x="702.2" y="357" width="2.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="705.24" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (33,837,821 samples, 0.12%)</title><rect x="68.5" y="629" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.50" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,869,282 samples, 0.10%)</title><rect x="56.1" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,156 samples, 0.09%)</title><rect x="591.2" y="485" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="594.19" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,323,130 samples, 0.09%)</title><rect x="53.9" y="485" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="56.86" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (338,124,702 samples, 1.20%)</title><rect x="127.7" y="853" width="14.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.69" y="863.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (34,057,180 samples, 0.12%)</title><rect x="1061.8" y="613" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1064.77" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (232,633,989 samples, 0.82%)</title><rect x="142.9" y="917" width="9.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.92" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,243 samples, 0.09%)</title><rect x="90.0" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.03" y="383.5" ></text>
</g>
<g >
<title>pybind11::list::list&lt;unsigned long, 0&gt; (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="741" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1171.68" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,209 samples, 0.09%)</title><rect x="102.8" y="645" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,376 samples, 0.09%)</title><rect x="123.8" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.76" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (52,411,367 samples, 0.19%)</title><rect x="105.0" y="389" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.95" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,376 samples, 0.09%)</title><rect x="123.8" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.76" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,058,837 samples, 0.12%)</title><rect x="93.6" y="293" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.65" y="303.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,557 samples, 0.09%)</title><rect x="74.3" y="565" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="77.31" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (58,998,954 samples, 0.21%)</title><rect x="115.8" y="597" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="607.5" ></text>
</g>
<g >
<title>clear_page_erms (372,901,835 samples, 1.32%)</title><rect x="853.9" y="325" width="15.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="856.91" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (52,613,512 samples, 0.19%)</title><rect x="39.5" y="517" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.53" y="527.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,745,010 samples, 0.12%)</title><rect x="64.9" y="565" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="67.90" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (180,687,028 samples, 0.64%)</title><rect x="107.1" y="917" width="7.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="110.15" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,378 samples, 0.12%)</title><rect x="113.3" y="565" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.27" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,950 samples, 0.09%)</title><rect x="81.0" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.04" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (112,874,269 samples, 0.40%)</title><rect x="160.6" y="693" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="163.58" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (60,337,946 samples, 0.21%)</title><rect x="43.0" y="965" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,169 samples, 0.09%)</title><rect x="59.9" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.85" y="415.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (34,055,020 samples, 0.12%)</title><rect x="601.9" y="645" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="604.87" y="655.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,281,053 samples, 0.09%)</title><rect x="185.1" y="421" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="188.08" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,178 samples, 0.09%)</title><rect x="156.2" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.19" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,728 samples, 0.09%)</title><rect x="78.8" y="837" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="81.81" y="847.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,230,863 samples, 0.09%)</title><rect x="141.8" y="629" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="144.82" y="639.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (68,397,652 samples, 0.24%)</title><rect x="617.4" y="325" width="2.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="620.38" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (34,229,627 samples, 0.12%)</title><rect x="913.4" y="501" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="916.37" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (102,161,695 samples, 0.36%)</title><rect x="599.0" y="709" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="602.03" y="719.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (67,083,538 samples, 0.24%)</title><rect x="93.6" y="917" width="2.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="96.65" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (232,633,989 samples, 0.82%)</title><rect x="142.9" y="805" width="9.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,205,811 samples, 0.09%)</title><rect x="48.8" y="389" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="51.84" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,811 samples, 0.09%)</title><rect x="48.8" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.84" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (7,962,432,926 samples, 28.20%)</title><rect x="597.6" y="789" width="332.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="600.63" y="799.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (60,303,297 samples, 0.21%)</title><rect x="91.1" y="965" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="975.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (26,174,437 samples, 0.09%)</title><rect x="76.6" y="325" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="79.62" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (68,235,612 samples, 0.24%)</title><rect x="84.3" y="885" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="87.34" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (27,036,548 samples, 0.10%)</title><rect x="79.9" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; const&amp;&gt; (33,521,481 samples, 0.12%)</title><rect x="931.8" y="517" width="1.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="934.83" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (60,337,946 samples, 0.21%)</title><rect x="43.0" y="949" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="959.5" ></text>
</g>
<g >
<title>PyArray_Nonzero (33,998,165 samples, 0.12%)</title><rect x="140.4" y="421" width="1.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="143.40" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (89,287,002 samples, 0.32%)</title><rect x="173.6" y="405" width="3.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="176.63" y="415.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,679 samples, 0.09%)</title><rect x="209.1" y="773" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="212.07" y="783.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,098,849 samples, 0.12%)</title><rect x="85.8" y="517" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="88.77" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,642,433 samples, 0.09%)</title><rect x="83.2" y="725" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="86.23" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,064 samples, 0.09%)</title><rect x="172.5" y="581" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="175.53" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (220,599,939 samples, 0.78%)</title><rect x="173.6" y="693" width="9.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="176.63" y="703.5" ></text>
</g>
<g >
<title>llvm::StringMap&lt;llvm::cl::Option*, llvm::MallocAllocator&gt;::try_emplace&lt;llvm::cl::Option*&gt; (33,745,010 samples, 0.12%)</title><rect x="64.9" y="229" width="1.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="67.90" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (173,502,057 samples, 0.61%)</title><rect x="196.3" y="789" width="7.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.34" y="799.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (162,344,117 samples, 0.58%)</title><rect x="84.3" y="1045" width="6.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="87.34" y="1055.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (102,392,917 samples, 0.36%)</title><rect x="196.3" y="549" width="4.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="199.34" y="559.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (26,211,802 samples, 0.09%)</title><rect x="155.1" y="117" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="158.10" y="127.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,408 samples, 0.09%)</title><rect x="159.5" y="421" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="162.48" y="431.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (34,190,749 samples, 0.12%)</title><rect x="996.1" y="613" width="1.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="999.07" y="623.5" ></text>
</g>
<g >
<title>operator new (34,101,417 samples, 0.12%)</title><rect x="1108.8" y="629" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1111.80" y="639.5" ></text>
</g>
<g >
<title>__pyx_pymod_exec__batch (25,434,141 samples, 0.09%)</title><rect x="210.2" y="997" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="213.16" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,209 samples, 0.09%)</title><rect x="102.8" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,005,797 samples, 0.12%)</title><rect x="188.8" y="469" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="191.83" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,323,130 samples, 0.09%)</title><rect x="53.9" y="565" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="56.86" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (97,421,676 samples, 0.35%)</title><rect x="187.3" y="693" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.28" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (60,303,297 samples, 0.21%)</title><rect x="91.1" y="757" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="767.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,205,811 samples, 0.09%)</title><rect x="48.8" y="469" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="51.84" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (216,889,615 samples, 0.77%)</title><rect x="187.3" y="933" width="9.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="190.28" y="943.5" ></text>
</g>
<g >
<title>_PyObject_Call (434,726,050 samples, 1.54%)</title><rect x="196.3" y="1061" width="18.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="199.34" y="1071.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,204,780 samples, 0.09%)</title><rect x="149.4" y="373" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="152.35" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (34,257,870 samples, 0.12%)</title><rect x="1020.4" y="485" width="1.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1023.36" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (31,958,704 samples, 0.11%)</title><rect x="127.7" y="597" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.69" y="607.5" ></text>
</g>
<g >
<title>array__reconstruct (68,215,154 samples, 0.24%)</title><rect x="927.6" y="741" width="2.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="930.56" y="751.5" ></text>
</g>
<g >
<title>PyObject_Str (29,096,832 samples, 0.10%)</title><rect x="75.4" y="405" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="78.41" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (172,858,073 samples, 0.61%)</title><rect x="120.5" y="757" width="7.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,167,861 samples, 0.09%)</title><rect x="45.6" y="853" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="863.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,376 samples, 0.09%)</title><rect x="123.8" y="421" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="126.76" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,005,797 samples, 0.12%)</title><rect x="188.8" y="421" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="191.83" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (34,104,293 samples, 0.12%)</title><rect x="110.7" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.75" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size (68,532,130 samples, 0.24%)</title><rect x="1145.8" y="645" width="2.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1148.81" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,799,484 samples, 0.19%)</title><rect x="71.0" y="421" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="74.01" y="431.5" ></text>
</g>
<g >
<title>PyUnicode_New (26,216,381 samples, 0.09%)</title><rect x="590.1" y="501" width="1.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="593.10" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,922,003 samples, 0.19%)</title><rect x="118.3" y="661" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="121.25" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (172,858,073 samples, 0.61%)</title><rect x="120.5" y="805" width="7.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="123.46" y="815.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;unsigned long*&gt; (68,534,392 samples, 0.24%)</title><rect x="1120.2" y="549" width="2.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1123.21" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (34,005,797 samples, 0.12%)</title><rect x="188.8" y="517" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.83" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,287,366 samples, 0.11%)</title><rect x="41.7" y="629" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="44.73" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (251,500,292 samples, 0.89%)</title><rect x="131.3" y="565" width="10.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.31" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,434,141 samples, 0.09%)</title><rect x="210.2" y="341" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="213.16" y="351.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (37,174,366 samples, 0.13%)</title><rect x="187.3" y="533" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="190.28" y="543.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (34,289,059 samples, 0.12%)</title><rect x="1087.4" y="677" width="1.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1090.37" y="687.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="645" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1171.68" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (306,165,998 samples, 1.08%)</title><rect x="129.0" y="613" width="12.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="132.02" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,378 samples, 0.09%)</title><rect x="69.9" y="741" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.91" y="751.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,205,811 samples, 0.09%)</title><rect x="48.8" y="533" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="51.84" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,211,728 samples, 0.09%)</title><rect x="78.8" y="693" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="81.81" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,211,802 samples, 0.09%)</title><rect x="155.1" y="277" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="158.10" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (83,900,878 samples, 0.30%)</title><rect x="39.5" y="901" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.53" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,030,025 samples, 0.12%)</title><rect x="165.3" y="373" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="168.29" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (68,235,612 samples, 0.24%)</title><rect x="84.3" y="757" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="87.34" y="767.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (136,591,375 samples, 0.48%)</title><rect x="990.4" y="613" width="5.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="993.36" y="623.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (136,579,782 samples, 0.48%)</title><rect x="1124.5" y="645" width="5.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1127.50" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (58,998,954 samples, 0.21%)</title><rect x="115.8" y="565" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.79" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,934 samples, 0.09%)</title><rect x="162.0" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.99" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,030,025 samples, 0.12%)</title><rect x="165.3" y="549" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="168.29" y="559.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,679 samples, 0.09%)</title><rect x="209.1" y="869" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="212.07" y="879.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (134,305,359 samples, 0.48%)</title><rect x="71.0" y="789" width="5.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="74.01" y="799.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (112,957,699 samples, 0.40%)</title><rect x="168.9" y="693" width="4.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="171.91" y="703.5" ></text>
</g>
<g >
<title>PyObject_GC_Del (34,137,840 samples, 0.12%)</title><rect x="576.2" y="917" width="1.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="579.23" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (34,094,188 samples, 0.12%)</title><rect x="91.1" y="405" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,208,261 samples, 0.09%)</title><rect x="214.5" y="517" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="217.51" y="527.5" ></text>
</g>
<g >
<title>do_numa_page (33,595,188 samples, 0.12%)</title><rect x="563.4" y="837" width="1.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="566.43" y="847.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,167,861 samples, 0.09%)</title><rect x="45.6" y="709" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="48.56" y="719.5" ></text>
</g>
<g >
<title>rmqueue (34,147,701 samples, 0.12%)</title><rect x="700.8" y="341" width="1.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="703.82" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,760 samples, 0.09%)</title><rect x="108.6" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.56" y="351.5" ></text>
</g>
<g >
<title>__Pyx_Import.constprop.485 (25,434,141 samples, 0.09%)</title><rect x="210.2" y="789" width="1.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="213.16" y="799.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,515 samples, 0.09%)</title><rect x="146.8" y="437" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="149.85" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,661 samples, 0.09%)</title><rect x="213.4" y="757" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.41" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,235,612 samples, 0.24%)</title><rect x="84.3" y="821" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.34" y="831.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,139,620 samples, 0.12%)</title><rect x="1158.7" y="677" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1161.67" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (52,373,735 samples, 0.19%)</title><rect x="76.6" y="1013" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="1023.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,417,812 samples, 0.19%)</title><rect x="211.2" y="853" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="214.22" y="863.5" ></text>
</g>
<g >
<title>_PyObject_Call (251,500,292 samples, 0.89%)</title><rect x="131.3" y="597" width="10.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="134.31" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,337,946 samples, 0.21%)</title><rect x="43.0" y="1045" width="2.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="46.04" y="1055.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (34,265,017 samples, 0.12%)</title><rect x="1157.2" y="661" width="1.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1160.23" y="671.5" ></text>
</g>
<g >
<title>copy_page_to_iter (26,211,802 samples, 0.09%)</title><rect x="155.1" y="133" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="158.10" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (52,318,437 samples, 0.19%)</title><rect x="204.7" y="421" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.69" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (326,538,739 samples, 1.16%)</title><rect x="173.6" y="901" width="13.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.63" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (239,184,991 samples, 0.85%)</title><rect x="1113.1" y="645" width="10.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1116.08" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,337,946 samples, 0.21%)</title><rect x="43.0" y="917" width="2.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="46.04" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,428,829 samples, 0.09%)</title><rect x="63.8" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.80" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (31,287,366 samples, 0.11%)</title><rect x="41.7" y="453" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="44.73" y="463.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,230,863 samples, 0.09%)</title><rect x="141.8" y="773" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="144.82" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (34,229,627 samples, 0.12%)</title><rect x="913.4" y="485" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="916.37" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (27,036,548 samples, 0.10%)</title><rect x="79.9" y="709" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="719.5" ></text>
</g>
<g >
<title>[[heap]] (52,429,184 samples, 0.19%)</title><rect x="10.0" y="1077" width="2.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.01" y="1087.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,171,603 samples, 0.09%)</title><rect x="182.8" y="453" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="185.85" y="463.5" ></text>
</g>
<g >
<title>blas_thread_server (7,946,853,313 samples, 28.15%)</title><rect x="221.4" y="1045" width="332.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="224.37" y="1055.5" >blas_thread_server</text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,261 samples, 0.09%)</title><rect x="214.5" y="837" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="217.51" y="847.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (6,509,877,586 samples, 23.06%)</title><rect x="614.5" y="581" width="272.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="617.52" y="591.5" >PyObject_VectorcallMethod</text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,235 samples, 0.09%)</title><rect x="66.3" y="693" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="69.31" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,223,173 samples, 0.09%)</title><rect x="112.2" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.17" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (34,055,020 samples, 0.12%)</title><rect x="601.9" y="629" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="604.87" y="639.5" ></text>
</g>
<g >
<title>PyObject_GetAttrString (26,200,433 samples, 0.09%)</title><rect x="203.6" y="341" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="206.59" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (32,470,195 samples, 0.12%)</title><rect x="152.6" y="389" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.64" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,243 samples, 0.09%)</title><rect x="90.0" y="565" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.03" y="575.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (34,242,696 samples, 0.12%)</title><rect x="705.1" y="373" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="708.09" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (53,479,760 samples, 0.19%)</title><rect x="183.9" y="517" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="186.94" y="527.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,318 samples, 0.09%)</title><rect x="119.4" y="533" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="122.37" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (251,500,292 samples, 0.89%)</title><rect x="131.3" y="581" width="10.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.31" y="591.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,206,101 samples, 0.09%)</title><rect x="200.6" y="453" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="203.62" y="463.5" ></text>
</g>
<g >
<title>llvm::AssumptionCacheTracker::getAssumptionCache (34,135,790 samples, 0.12%)</title><rect x="38.1" y="501" width="1.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="41.11" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (31,287,366 samples, 0.11%)</title><rect x="41.7" y="757" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="44.73" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (89,287,002 samples, 0.32%)</title><rect x="173.6" y="437" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.63" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,583,276 samples, 0.12%)</title><rect x="126.3" y="517" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="129.29" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (510,982,775 samples, 1.81%)</title><rect x="120.5" y="885" width="21.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="123.46" y="895.5" >_..</text>
</g>
<g >
<title>[python3.12] (67,902,262 samples, 0.24%)</title><rect x="87.2" y="421" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.19" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,287,366 samples, 0.11%)</title><rect x="41.7" y="789" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="44.73" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,679 samples, 0.09%)</title><rect x="209.1" y="789" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="212.07" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,185 samples, 0.09%)</title><rect x="158.4" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.39" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (90,767,697 samples, 0.32%)</title><rect x="56.1" y="597" width="3.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="59.06" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,337,946 samples, 0.21%)</title><rect x="43.0" y="677" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.04" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (67,083,538 samples, 0.24%)</title><rect x="93.6" y="965" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.65" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call (656,386,053 samples, 2.32%)</title><rect x="168.9" y="1029" width="27.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="171.91" y="1039.5" >_..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,219,217 samples, 0.09%)</title><rect x="166.7" y="613" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="169.72" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,164,292 samples, 0.12%)</title><rect x="142.9" y="597" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="145.92" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,252,462 samples, 0.09%)</title><rect x="115.8" y="421" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="118.79" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (68,127,382 samples, 0.24%)</title><rect x="919.0" y="661" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="922.03" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (29,940,596 samples, 0.11%)</title><rect x="57.2" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="60.18" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,281,053 samples, 0.09%)</title><rect x="185.1" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.08" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,642,433 samples, 0.09%)</title><rect x="83.2" y="869" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.23" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,376 samples, 0.09%)</title><rect x="123.8" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.76" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,766,166 samples, 0.28%)</title><rect x="52.8" y="837" width="3.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.77" y="847.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,132,139 samples, 0.12%)</title><rect x="96.5" y="629" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="99.45" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,957,819 samples, 0.12%)</title><rect x="58.4" y="389" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="61.43" y="399.5" ></text>
</g>
<g >
<title>PyInit__multiarray_umath (37,174,366 samples, 0.13%)</title><rect x="187.3" y="389" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="190.28" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (130,950,700 samples, 0.46%)</title><rect x="203.6" y="917" width="5.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="206.59" y="927.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (53,479,760 samples, 0.19%)</title><rect x="183.9" y="565" width="2.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="186.94" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (27,036,548 samples, 0.10%)</title><rect x="79.9" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="463.5" ></text>
</g>
<g >
<title>page_fault (34,104,293 samples, 0.12%)</title><rect x="110.7" y="357" width="1.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="113.75" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,642,433 samples, 0.09%)</title><rect x="83.2" y="661" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="86.23" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,613,512 samples, 0.19%)</title><rect x="39.5" y="837" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="42.53" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,030,025 samples, 0.12%)</title><rect x="165.3" y="629" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="168.29" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,228,460 samples, 0.09%)</title><rect x="52.8" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="543.5" ></text>
</g>
<g >
<title>dl_open_worker (44,903,039 samples, 0.16%)</title><rect x="201.7" y="421" width="1.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="204.72" y="431.5" ></text>
</g>
<g >
<title>__vma_link_file (10,138,758 samples, 0.04%)</title><rect x="1176.6" y="885" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1179.57" y="895.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,219,217 samples, 0.09%)</title><rect x="166.7" y="485" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="169.72" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (52,799,484 samples, 0.19%)</title><rect x="71.0" y="677" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.01" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,178 samples, 0.09%)</title><rect x="156.2" y="389" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="159.19" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,185 samples, 0.09%)</title><rect x="158.4" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.39" y="399.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (60,303,297 samples, 0.21%)</title><rect x="91.1" y="709" width="2.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="94.13" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,061,732 samples, 0.09%)</title><rect x="114.7" y="1013" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.70" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,205,811 samples, 0.09%)</title><rect x="48.8" y="485" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="51.84" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (510,982,775 samples, 1.81%)</title><rect x="120.5" y="965" width="21.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="123.46" y="975.5" >_..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,235 samples, 0.09%)</title><rect x="66.3" y="293" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.31" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,167,861 samples, 0.09%)</title><rect x="45.6" y="789" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,058,837 samples, 0.12%)</title><rect x="93.6" y="517" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.65" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,267,251 samples, 0.09%)</title><rect x="163.1" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.09" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (180,687,028 samples, 0.64%)</title><rect x="107.1" y="933" width="7.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="943.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (439,496,438 samples, 1.56%)</title><rect x="168.9" y="949" width="18.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="171.91" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,323,130 samples, 0.09%)</title><rect x="53.9" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.86" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,557 samples, 0.09%)</title><rect x="74.3" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.31" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (27,036,548 samples, 0.10%)</title><rect x="79.9" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="511.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (68,534,392 samples, 0.24%)</title><rect x="1120.2" y="565" width="2.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1123.21" y="575.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="613" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1171.68" y="623.5" ></text>
</g>
<g >
<title>_PyCode_New (27,036,548 samples, 0.10%)</title><rect x="79.9" y="405" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="82.91" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (34,185,861 samples, 0.12%)</title><rect x="587.6" y="917" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="590.63" y="927.5" ></text>
</g>
<g >
<title>walk_component (26,495,990 samples, 0.09%)</title><rect x="137.1" y="245" width="1.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="140.12" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,679 samples, 0.09%)</title><rect x="209.1" y="693" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.07" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="853" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,576 samples, 0.09%)</title><rect x="55.0" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.96" y="543.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,135,790 samples, 0.12%)</title><rect x="38.1" y="325" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="41.11" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="853" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="863.5" ></text>
</g>
<g >
<title>PyDict_SetItem (26,710,685 samples, 0.09%)</title><rect x="118.3" y="357" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="121.25" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,934 samples, 0.09%)</title><rect x="162.0" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.99" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (34,136,763 samples, 0.12%)</title><rect x="84.3" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,167,861 samples, 0.09%)</title><rect x="45.6" y="453" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="48.56" y="463.5" ></text>
</g>
<g >
<title>ksys_ioctl (26,642,433 samples, 0.09%)</title><rect x="83.2" y="277" width="1.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="86.23" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (68,440,040 samples, 0.24%)</title><rect x="621.3" y="421" width="2.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="624.33" y="431.5" ></text>
</g>
<g >
<title>boost::tuples::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type&gt; &gt;::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const&gt; (34,212,083 samples, 0.12%)</title><rect x="1100.2" y="677" width="1.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1103.24" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,213,235 samples, 0.09%)</title><rect x="66.3" y="405" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.31" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,950 samples, 0.09%)</title><rect x="81.0" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.04" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="645" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (79,431,517 samples, 0.28%)</title><rect x="79.9" y="869" width="3.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="82.91" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (306,165,998 samples, 1.08%)</title><rect x="129.0" y="677" width="12.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.02" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,323,450 samples, 0.09%)</title><rect x="120.5" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,220,774 samples, 0.09%)</title><rect x="211.2" y="453" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="214.22" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (94,108,505 samples, 0.33%)</title><rect x="87.2" y="741" width="3.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.19" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (33,837,821 samples, 0.12%)</title><rect x="68.5" y="549" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.50" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (79,651,363 samples, 0.28%)</title><rect x="182.8" y="629" width="3.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="185.85" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,067 samples, 0.09%)</title><rect x="167.8" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.81" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (32,746,492 samples, 0.12%)</title><rect x="116.9" y="453" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.88" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,204,067 samples, 0.09%)</title><rect x="167.8" y="405" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="170.81" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,261 samples, 0.09%)</title><rect x="214.5" y="325" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.51" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (26,642,433 samples, 0.09%)</title><rect x="83.2" y="293" width="1.1" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="86.23" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,064 samples, 0.09%)</title><rect x="172.5" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.53" y="559.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,408 samples, 0.09%)</title><rect x="159.5" y="501" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="162.48" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (32,746,492 samples, 0.12%)</title><rect x="116.9" y="533" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.88" y="543.5" ></text>
</g>
<g >
<title>_Py_read (26,211,802 samples, 0.09%)</title><rect x="155.1" y="341" width="1.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="158.10" y="351.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (33,745,010 samples, 0.12%)</title><rect x="64.9" y="325" width="1.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="67.90" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,213,235 samples, 0.09%)</title><rect x="66.3" y="389" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="69.31" y="399.5" ></text>
</g>
<g >
<title>__GI___default_morecore (26,315,552 samples, 0.09%)</title><rect x="620.2" y="437" width="1.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="623.23" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (120,838,611 samples, 0.43%)</title><rect x="59.9" y="581" width="5.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="62.85" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (27,198,707 samples, 0.10%)</title><rect x="183.9" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.94" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,058,837 samples, 0.12%)</title><rect x="93.6" y="677" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="96.65" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (136,769,693 samples, 0.48%)</title><rect x="1150.1" y="709" width="5.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1153.10" y="719.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_finish_vertex&gt; (68,335,274 samples, 0.24%)</title><rect x="1173.7" y="1061" width="2.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1176.72" y="1071.5" ></text>
</g>
<g >
<title>PySequence_GetSlice (26,401,014 samples, 0.09%)</title><rect x="122.7" y="357" width="1.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="125.66" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,434,141 samples, 0.09%)</title><rect x="210.2" y="709" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="213.16" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,710,685 samples, 0.09%)</title><rect x="118.3" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.25" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,188,019 samples, 0.09%)</title><rect x="82.1" y="405" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="85.13" y="415.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,228,460 samples, 0.09%)</title><rect x="52.8" y="421" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="55.77" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,005,797 samples, 0.12%)</title><rect x="188.8" y="485" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.83" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (34,030,025 samples, 0.12%)</title><rect x="165.3" y="725" width="1.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="168.29" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,378 samples, 0.12%)</title><rect x="113.3" y="517" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.27" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (54,665,706 samples, 0.19%)</title><rect x="129.0" y="581" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.02" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,728 samples, 0.09%)</title><rect x="78.8" y="821" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="81.81" y="831.5" ></text>
</g>
<g >
<title>PyNumber_InPlaceAdd (34,283,025 samples, 0.12%)</title><rect x="593.4" y="901" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="596.39" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (238,812,782 samples, 0.85%)</title><rect x="577.7" y="917" width="9.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="580.65" y="927.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,215,064 samples, 0.09%)</title><rect x="172.5" y="437" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="175.53" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,209,109 samples, 0.09%)</title><rect x="92.6" y="613" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="95.55" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,220,086 samples, 0.09%)</title><rect x="181.8" y="405" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.75" y="415.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_HexagonMCShuffler.cpp (33,745,010 samples, 0.12%)</title><rect x="64.9" y="261" width="1.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="67.90" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (189,899,606 samples, 0.67%)</title><rect x="152.6" y="693" width="8.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.64" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,281,053 samples, 0.09%)</title><rect x="185.1" y="437" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="188.08" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,072,235 samples, 0.12%)</title><rect x="1140.1" y="677" width="1.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1143.10" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (27,036,548 samples, 0.10%)</title><rect x="79.9" y="629" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.91" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (94,409,782 samples, 0.33%)</title><rect x="59.9" y="501" width="3.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="62.85" y="511.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (204,659,644 samples, 0.72%)</title><rect x="903.4" y="485" width="8.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="906.40" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,401,014 samples, 0.09%)</title><rect x="122.7" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.66" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,378 samples, 0.12%)</title><rect x="113.3" y="789" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.27" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,356,437 samples, 0.09%)</title><rect x="99.2" y="389" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="102.15" y="399.5" ></text>
</g>
<g >
<title>clear_page_erms (26,202,934 samples, 0.09%)</title><rect x="162.0" y="213" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="164.99" y="223.5" ></text>
</g>
<g >
<title>__Pyx_Import.constprop.57 (25,434,141 samples, 0.09%)</title><rect x="210.2" y="981" width="1.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="213.16" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (232,633,989 samples, 0.82%)</title><rect x="142.9" y="869" width="9.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (120,325,477 samples, 0.43%)</title><rect x="107.1" y="773" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (25,434,141 samples, 0.09%)</title><rect x="210.2" y="661" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.16" y="671.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (101,720,318 samples, 0.36%)</title><rect x="1057.5" y="597" width="4.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1060.52" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,356,437 samples, 0.09%)</title><rect x="99.2" y="437" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.15" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (58,998,954 samples, 0.21%)</title><rect x="115.8" y="709" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="118.79" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="821" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (86,082,622 samples, 0.30%)</title><rect x="192.7" y="517" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.74" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,167,861 samples, 0.09%)</title><rect x="45.6" y="725" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,378 samples, 0.09%)</title><rect x="69.9" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.91" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (34,194,435 samples, 0.12%)</title><rect x="1163.0" y="677" width="1.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1165.96" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (112,957,699 samples, 0.40%)</title><rect x="168.9" y="773" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="171.91" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (220,599,939 samples, 0.78%)</title><rect x="173.6" y="613" width="9.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.63" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,417,812 samples, 0.19%)</title><rect x="211.2" y="821" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="214.22" y="831.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (103,555,233 samples, 0.37%)</title><rect x="589.1" y="725" width="4.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="592.06" y="735.5" ></text>
</g>
<g >
<title>__do_page_fault (26,061,732 samples, 0.09%)</title><rect x="114.7" y="949" width="1.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="117.70" y="959.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (32,746,492 samples, 0.12%)</title><rect x="116.9" y="501" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="119.88" y="511.5" ></text>
</g>
<g >
<title>do_user_addr_fault (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="837" width="3.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1173.11" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (216,889,615 samples, 0.77%)</title><rect x="187.3" y="853" width="9.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="190.28" y="863.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,188,019 samples, 0.09%)</title><rect x="82.1" y="565" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.13" y="575.5" ></text>
</g>
<g >
<title>inode_permission (26,252,462 samples, 0.09%)</title><rect x="115.8" y="229" width="1.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="118.79" y="239.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,111,509 samples, 0.09%)</title><rect x="67.4" y="613" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="70.41" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,622,051 samples, 0.28%)</title><rect x="103.9" y="597" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.86" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (27,036,548 samples, 0.10%)</title><rect x="79.9" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (81,505,875 samples, 0.29%)</title><rect x="73.2" y="741" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.22" y="751.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,208,261 samples, 0.09%)</title><rect x="214.5" y="693" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="217.51" y="703.5" ></text>
</g>
<g >
<title>_PyObject_LookupAttr (34,005,797 samples, 0.12%)</title><rect x="188.8" y="373" width="1.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="191.83" y="383.5" ></text>
</g>
<g >
<title>__mod_memcg_state (35,008,014 samples, 0.12%)</title><rect x="1178.5" y="837" width="1.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1181.49" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::max_size (34,192,299 samples, 0.12%)</title><rect x="1123.1" y="661" width="1.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1126.08" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,252,462 samples, 0.09%)</title><rect x="115.8" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (510,982,775 samples, 1.81%)</title><rect x="120.5" y="933" width="21.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="943.5" >[..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (302,773,875 samples, 1.07%)</title><rect x="152.6" y="885" width="12.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="155.64" y="895.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (34,160,793 samples, 0.12%)</title><rect x="621.3" y="325" width="1.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="624.33" y="335.5" ></text>
</g>
<g >
<title>PyArray_NewFromDescr (68,215,154 samples, 0.24%)</title><rect x="927.6" y="725" width="2.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="930.56" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,642,433 samples, 0.09%)</title><rect x="83.2" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.23" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,189,301 samples, 0.09%)</title><rect x="109.7" y="325" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.65" y="335.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,253,870 samples, 0.12%)</title><rect x="1164.4" y="629" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1167.39" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (67,083,538 samples, 0.24%)</title><rect x="93.6" y="997" width="2.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="96.65" y="1007.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,024,701 samples, 0.12%)</title><rect x="95.1" y="741" width="1.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="98.07" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,378 samples, 0.09%)</title><rect x="69.9" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.91" y="623.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (34,289,059 samples, 0.12%)</title><rect x="1087.4" y="661" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1090.37" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,383,005 samples, 0.09%)</title><rect x="592.3" y="501" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="595.29" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,064 samples, 0.09%)</title><rect x="172.5" y="341" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="175.53" y="351.5" ></text>
</g>
<g >
<title>dl_open_worker (33,745,010 samples, 0.12%)</title><rect x="64.9" y="341" width="1.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="67.90" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,642,433 samples, 0.09%)</title><rect x="83.2" y="821" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="86.23" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (52,318,437 samples, 0.19%)</title><rect x="204.7" y="485" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.69" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,434,141 samples, 0.09%)</title><rect x="210.2" y="933" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="213.16" y="943.5" ></text>
</g>
<g >
<title>alloc_pages_vma (26,202,934 samples, 0.09%)</title><rect x="162.0" y="261" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="164.99" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,101,260 samples, 0.12%)</title><rect x="124.9" y="549" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="127.86" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (31,287,366 samples, 0.11%)</title><rect x="41.7" y="821" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="44.73" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,661 samples, 0.09%)</title><rect x="213.4" y="725" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.41" y="735.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,167,861 samples, 0.09%)</title><rect x="45.6" y="501" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.56" y="511.5" ></text>
</g>
<g >
<title>__GI___sbrk (26,315,552 samples, 0.09%)</title><rect x="620.2" y="421" width="1.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="623.23" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,067 samples, 0.09%)</title><rect x="167.8" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.81" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="901" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (102,392,917 samples, 0.36%)</title><rect x="196.3" y="597" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="607.5" ></text>
</g>
<g >
<title>do_anonymous_page (34,104,293 samples, 0.12%)</title><rect x="110.7" y="261" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="113.75" y="271.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (90,767,697 samples, 0.32%)</title><rect x="56.1" y="565" width="3.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="59.06" y="575.5" ></text>
</g>
<g >
<title>__lru_cache_add (68,208,075 samples, 0.24%)</title><rect x="702.2" y="373" width="2.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="705.24" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (103,555,233 samples, 0.37%)</title><rect x="589.1" y="805" width="4.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="592.06" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (67,902,262 samples, 0.24%)</title><rect x="87.2" y="565" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.19" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="709" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,206,243 samples, 0.09%)</title><rect x="90.0" y="485" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="93.03" y="495.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (26,495,990 samples, 0.09%)</title><rect x="137.1" y="261" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="140.12" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="453" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (189,899,606 samples, 0.67%)</title><rect x="152.6" y="725" width="8.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="155.64" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (31,958,704 samples, 0.11%)</title><rect x="127.7" y="549" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="130.69" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (33,453,730 samples, 0.12%)</title><rect x="596.2" y="741" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="599.23" y="751.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 1&gt;::operator (33,802,756 samples, 0.12%)</title><rect x="930.4" y="757" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="933.41" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,378 samples, 0.09%)</title><rect x="69.9" y="725" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.91" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (511,318,997 samples, 1.81%)</title><rect x="566.3" y="981" width="21.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="569.26" y="991.5" >[..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,230,863 samples, 0.09%)</title><rect x="141.8" y="757" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="144.82" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,064 samples, 0.09%)</title><rect x="172.5" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.53" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,546,263 samples, 0.09%)</title><rect x="164.2" y="581" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.18" y="591.5" ></text>
</g>
<g >
<title>page_fault (26,061,732 samples, 0.09%)</title><rect x="114.7" y="981" width="1.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="117.70" y="991.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,206,243 samples, 0.09%)</title><rect x="90.0" y="437" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="93.03" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,799,484 samples, 0.19%)</title><rect x="71.0" y="517" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="74.01" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (302,773,875 samples, 1.07%)</title><rect x="152.6" y="917" width="12.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.64" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="399.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (4,206,067,251 samples, 14.90%)</title><rect x="709.4" y="501" width="175.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="712.38" y="511.5" >[libz.so.1.2.11]</text>
</g>
<g >
<title>[python3.12] (78,622,051 samples, 0.28%)</title><rect x="103.9" y="565" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.86" y="575.5" ></text>
</g>
<g >
<title>__do_page_fault (30,515,148 samples, 0.11%)</title><rect x="97.9" y="357" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="100.88" y="367.5" ></text>
</g>
<g >
<title>boost::range_detail::integer_iterator&lt;unsigned long&gt;::integer_iterator (34,279,544 samples, 0.12%)</title><rect x="1074.6" y="597" width="1.5" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1077.62" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,203,110 samples, 0.09%)</title><rect x="106.1" y="357" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="109.05" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (29,940,596 samples, 0.11%)</title><rect x="57.2" y="405" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="60.18" y="415.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,210,679 samples, 0.09%)</title><rect x="209.1" y="981" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="212.07" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (34,135,790 samples, 0.12%)</title><rect x="38.1" y="805" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.11" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,376 samples, 0.09%)</title><rect x="123.8" y="437" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="126.76" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,219,217 samples, 0.09%)</title><rect x="166.7" y="645" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="169.72" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,202,934 samples, 0.09%)</title><rect x="162.0" y="533" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="164.99" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (326,538,739 samples, 1.16%)</title><rect x="173.6" y="917" width="13.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="176.63" y="927.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (118,036,668 samples, 0.42%)</title><rect x="38.1" y="1061" width="4.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="41.11" y="1071.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (90,767,697 samples, 0.32%)</title><rect x="56.1" y="677" width="3.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="59.06" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (302,773,875 samples, 1.07%)</title><rect x="152.6" y="837" width="12.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.64" y="847.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,287,437 samples, 0.09%)</title><rect x="186.2" y="789" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="189.18" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,373,735 samples, 0.19%)</title><rect x="76.6" y="501" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.62" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,684 samples, 0.09%)</title><rect x="103.9" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.86" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,583,276 samples, 0.12%)</title><rect x="126.3" y="357" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.29" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (434,726,050 samples, 1.54%)</title><rect x="196.3" y="1045" width="18.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="1055.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,495,990 samples, 0.09%)</title><rect x="137.1" y="373" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="140.12" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (68,440,040 samples, 0.24%)</title><rect x="621.3" y="405" width="2.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="624.33" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (85,057,305 samples, 0.30%)</title><rect x="152.6" y="437" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="155.64" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (67,902,262 samples, 0.24%)</title><rect x="87.2" y="405" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.19" y="415.5" ></text>
</g>
<g >
<title>_PyCode_New (26,323,450 samples, 0.09%)</title><rect x="120.5" y="405" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="123.46" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,171,603 samples, 0.09%)</title><rect x="182.8" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.85" y="479.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_all_s_d (34,255,579 samples, 0.12%)</title><rect x="934.6" y="725" width="1.5" height="15.0" fill="rgb(230,117,27)" rx="2" ry="2" />
<text  x="937.65" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,287,437 samples, 0.09%)</title><rect x="186.2" y="565" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="189.18" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (37,174,366 samples, 0.13%)</title><rect x="187.3" y="405" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.28" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (106,073,950 samples, 0.38%)</title><rect x="79.9" y="997" width="4.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,223,173 samples, 0.09%)</title><rect x="112.2" y="645" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="115.17" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (112,957,699 samples, 0.40%)</title><rect x="168.9" y="917" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.91" y="927.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,197,038 samples, 0.09%)</title><rect x="212.3" y="517" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="215.32" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,837,821 samples, 0.12%)</title><rect x="68.5" y="709" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.50" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (81,505,875 samples, 0.29%)</title><rect x="73.2" y="629" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="76.22" y="639.5" ></text>
</g>
<g >
<title>do_user_addr_fault (672,277,121 samples, 2.38%)</title><rect x="852.8" y="437" width="28.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="855.80" y="447.5" >d..</text>
</g>
<g >
<title>_PyObject_Call (52,593,161 samples, 0.19%)</title><rect x="591.2" y="629" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="594.19" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,557 samples, 0.09%)</title><rect x="74.3" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.31" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,287,437 samples, 0.09%)</title><rect x="186.2" y="661" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="189.18" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (132,285,678 samples, 0.47%)</title><rect x="78.8" y="1045" width="5.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="81.81" y="1055.5" ></text>
</g>
<g >
<title>PyObject_Free (26,208,257 samples, 0.09%)</title><rect x="105.0" y="357" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="107.95" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (33,453,730 samples, 0.12%)</title><rect x="596.2" y="645" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="599.23" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,243 samples, 0.09%)</title><rect x="90.0" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.03" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (151,060,758 samples, 0.54%)</title><rect x="96.5" y="885" width="6.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="99.45" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,633,721 samples, 0.09%)</title><rect x="145.7" y="341" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="148.74" y="351.5" ></text>
</g>
<g >
<title>do_fault (33,745,010 samples, 0.12%)</title><rect x="64.9" y="101" width="1.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="67.90" y="111.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,323,130 samples, 0.09%)</title><rect x="53.9" y="453" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="56.86" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (78,426,582 samples, 0.28%)</title><rect x="46.7" y="757" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.66" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (60,303,297 samples, 0.21%)</title><rect x="91.1" y="869" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="879.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,132,139 samples, 0.12%)</title><rect x="96.5" y="469" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="99.45" y="479.5" ></text>
</g>
<g >
<title>[internals.cpython-312-x86_64-linux-gnu.so] (26,197,979 samples, 0.09%)</title><rect x="47.7" y="357" width="1.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="50.74" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (102,161,695 samples, 0.36%)</title><rect x="599.0" y="725" width="4.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="602.03" y="735.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,353,144 samples, 0.09%)</title><rect x="43.0" y="453" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="46.04" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (31,287,366 samples, 0.11%)</title><rect x="41.7" y="533" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="44.73" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,136,763 samples, 0.12%)</title><rect x="84.3" y="421" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (78,964,161 samples, 0.28%)</title><rect x="120.5" y="565" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (52,220,771 samples, 0.18%)</title><rect x="46.7" y="517" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.66" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (34,094,188 samples, 0.12%)</title><rect x="91.1" y="549" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="559.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,376 samples, 0.09%)</title><rect x="123.8" y="469" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="126.76" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (90,767,697 samples, 0.32%)</title><rect x="56.1" y="581" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="591.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (34,035,779 samples, 0.12%)</title><rect x="917.6" y="677" width="1.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="920.60" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,661 samples, 0.09%)</title><rect x="213.4" y="709" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="216.41" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,383,005 samples, 0.09%)</title><rect x="592.3" y="549" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="595.29" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (120,325,477 samples, 0.43%)</title><rect x="107.1" y="789" width="5.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="110.15" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (83,900,878 samples, 0.30%)</title><rect x="39.5" y="965" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="42.53" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (60,303,297 samples, 0.21%)</title><rect x="91.1" y="885" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,356,437 samples, 0.09%)</title><rect x="99.2" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="102.15" y="415.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (34,255,579 samples, 0.12%)</title><rect x="934.6" y="597" width="1.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="937.65" y="607.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,411,367 samples, 0.19%)</title><rect x="105.0" y="437" width="2.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="107.95" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,998,165 samples, 0.12%)</title><rect x="140.4" y="469" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.40" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (130,950,700 samples, 0.46%)</title><rect x="203.6" y="693" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (338,124,702 samples, 1.20%)</title><rect x="127.7" y="821" width="14.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.69" y="831.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (68,235,612 samples, 0.24%)</title><rect x="84.3" y="645" width="2.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="87.34" y="655.5" ></text>
</g>
<g >
<title>_int_malloc (34,278,517 samples, 0.12%)</title><rect x="611.7" y="549" width="1.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="614.66" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,230,863 samples, 0.09%)</title><rect x="141.8" y="581" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="144.82" y="591.5" ></text>
</g>
<g >
<title>alloc_pages_vma (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="773" width="3.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1173.11" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,138,378 samples, 0.12%)</title><rect x="113.3" y="677" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.27" y="687.5" ></text>
</g>
<g >
<title>_PyObject_NewVar (26,174,437 samples, 0.09%)</title><rect x="76.6" y="357" width="1.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="79.62" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,216,209 samples, 0.09%)</title><rect x="102.8" y="709" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="105.76" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,024,701 samples, 0.12%)</title><rect x="95.1" y="677" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="98.07" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (79,651,363 samples, 0.28%)</title><rect x="182.8" y="757" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.85" y="767.5" ></text>
</g>
<g >
<title>do_anonymous_page (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="597" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1171.68" y="607.5" ></text>
</g>
<g >
<title>PyDict_MergeFromSeq2 (33,453,730 samples, 0.12%)</title><rect x="596.2" y="709" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="599.23" y="719.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (26,207,530 samples, 0.09%)</title><rect x="157.3" y="325" width="1.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="160.29" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,922,003 samples, 0.19%)</title><rect x="118.3" y="693" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="121.25" y="703.5" ></text>
</g>
<g >
<title>do_filp_open (26,252,462 samples, 0.09%)</title><rect x="115.8" y="293" width="1.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="118.79" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (27,036,548 samples, 0.10%)</title><rect x="79.9" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,576 samples, 0.09%)</title><rect x="55.0" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.96" y="399.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4,802,171 samples, 0.02%)</title><rect x="219.9" y="1013" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="222.86" y="1023.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (81,505,875 samples, 0.29%)</title><rect x="73.2" y="725" width="3.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="76.22" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (34,098,849 samples, 0.12%)</title><rect x="85.8" y="565" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.77" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,728 samples, 0.09%)</title><rect x="78.8" y="341" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="81.81" y="351.5" ></text>
</g>
<g >
<title>clear_page_erms (34,104,293 samples, 0.12%)</title><rect x="110.7" y="197" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="113.75" y="207.5" ></text>
</g>
<g >
<title>__libc_calloc (26,210,185 samples, 0.09%)</title><rect x="158.4" y="309" width="1.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="161.39" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (68,318,366 samples, 0.24%)</title><rect x="963.2" y="597" width="2.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="966.23" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (34,094,188 samples, 0.12%)</title><rect x="91.1" y="421" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,984,802 samples, 0.12%)</title><rect x="44.1" y="421" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.14" y="431.5" ></text>
</g>
<g >
<title>__Pyx_PyObject_FastCallDict.constprop.0 (25,925,031 samples, 0.09%)</title><rect x="101.7" y="469" width="1.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="104.68" y="479.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (102,604,225 samples, 0.36%)</title><rect x="1007.5" y="629" width="4.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1010.50" y="639.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,998,165 samples, 0.12%)</title><rect x="140.4" y="485" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="143.40" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (172,858,073 samples, 0.61%)</title><rect x="120.5" y="613" width="7.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="123.46" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call (112,957,699 samples, 0.40%)</title><rect x="168.9" y="741" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="171.91" y="751.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (239,416,562 samples, 0.85%)</title><rect x="1011.8" y="629" width="10.0" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1014.79" y="639.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (34,132,003 samples, 0.12%)</title><rect x="100.3" y="421" width="1.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="103.25" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,837,821 samples, 0.12%)</title><rect x="68.5" y="389" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="71.50" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,209,109 samples, 0.09%)</title><rect x="92.6" y="373" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="95.55" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (189,899,606 samples, 0.67%)</title><rect x="152.6" y="533" width="8.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="155.64" y="543.5" ></text>
</g>
<g >
<title>PyObject_Malloc (34,278,517 samples, 0.12%)</title><rect x="611.7" y="581" width="1.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="614.66" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,188,019 samples, 0.09%)</title><rect x="82.1" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.13" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (120,325,477 samples, 0.43%)</title><rect x="107.1" y="725" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.15" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (189,899,606 samples, 0.67%)</title><rect x="152.6" y="661" width="8.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.64" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (120,325,477 samples, 0.43%)</title><rect x="107.1" y="741" width="5.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.15" y="751.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (68,215,999 samples, 0.24%)</title><rect x="875.2" y="309" width="2.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="878.19" y="319.5" ></text>
</g>
<g >
<title>PyNumber_Add (26,267,251 samples, 0.09%)</title><rect x="163.1" y="613" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="166.09" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,086 samples, 0.09%)</title><rect x="181.8" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.75" y="479.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (34,035,779 samples, 0.12%)</title><rect x="917.6" y="661" width="1.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="920.60" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,209,515 samples, 0.09%)</title><rect x="146.8" y="405" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="149.85" y="415.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (78,628,266 samples, 0.28%)</title><rect x="177.4" y="421" width="3.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="180.36" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (172,858,073 samples, 0.61%)</title><rect x="120.5" y="597" width="7.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="123.46" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,188,019 samples, 0.09%)</title><rect x="82.1" y="501" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="85.13" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (162,344,117 samples, 0.58%)</title><rect x="84.3" y="933" width="6.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="87.34" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (34,265,349 samples, 0.12%)</title><rect x="986.1" y="597" width="1.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="989.08" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (570,796,786 samples, 2.02%)</title><rect x="52.8" y="1013" width="23.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="55.77" y="1023.5" >_..</text>
</g>
<g >
<title>unmap_vmas (183,190,670 samples, 0.65%)</title><rect x="1177.0" y="965" width="7.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1180.00" y="975.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,378 samples, 0.09%)</title><rect x="69.9" y="757" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="72.91" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (52,799,484 samples, 0.19%)</title><rect x="71.0" y="661" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.01" y="671.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (34,194,426 samples, 0.12%)</title><rect x="916.2" y="693" width="1.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="919.17" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (510,982,775 samples, 1.81%)</title><rect x="120.5" y="917" width="21.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="927.5" >[..</text>
</g>
<g >
<title>[python3.12] (232,633,989 samples, 0.82%)</title><rect x="142.9" y="853" width="9.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="863.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch1&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (34,255,579 samples, 0.12%)</title><rect x="934.6" y="677" width="1.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="937.65" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,934 samples, 0.09%)</title><rect x="162.0" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.99" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (7,218,752,228 samples, 25.57%)</title><rect x="613.1" y="597" width="301.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="616.09" y="607.5" >[python3.12]</text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (68,194,806 samples, 0.24%)</title><rect x="993.2" y="565" width="2.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="996.22" y="575.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (34,242,696 samples, 0.12%)</title><rect x="705.1" y="389" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="708.09" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (173,502,057 samples, 0.61%)</title><rect x="196.3" y="725" width="7.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="199.34" y="735.5" ></text>
</g>
<g >
<title>alloc_pages_vma (34,104,293 samples, 0.12%)</title><rect x="110.7" y="245" width="1.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="113.75" y="255.5" ></text>
</g>
<g >
<title>_PyObject_Call (326,538,739 samples, 1.16%)</title><rect x="173.6" y="853" width="13.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="176.63" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,434,141 samples, 0.09%)</title><rect x="210.2" y="901" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="213.16" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,426,582 samples, 0.28%)</title><rect x="46.7" y="805" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="49.66" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,303,297 samples, 0.21%)</title><rect x="91.1" y="933" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="94.13" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,337,946 samples, 0.21%)</title><rect x="43.0" y="869" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.04" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (102,392,917 samples, 0.36%)</title><rect x="196.3" y="405" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,323,130 samples, 0.09%)</title><rect x="53.9" y="581" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.86" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (83,900,878 samples, 0.30%)</title><rect x="39.5" y="933" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.53" y="943.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (338,124,702 samples, 1.20%)</title><rect x="127.7" y="725" width="14.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="130.69" y="735.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_single_s_d (5,120,654,685 samples, 18.14%)</title><rect x="944.6" y="725" width="214.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="947.65" y="735.5" >compute_all_shortest_paths_s..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,838,260 samples, 0.37%)</title><rect x="102.8" y="773" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.76" y="783.5" ></text>
</g>
<g >
<title>new_sync_read (26,211,802 samples, 0.09%)</title><rect x="155.1" y="197" width="1.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="158.10" y="207.5" ></text>
</g>
<g >
<title>PyObject_Malloc (26,199,298 samples, 0.09%)</title><rect x="77.7" y="261" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="80.72" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (63,898,415 samples, 0.23%)</title><rect x="57.2" y="469" width="2.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="60.18" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,230,863 samples, 0.09%)</title><rect x="141.8" y="501" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="144.82" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (621,861,173 samples, 2.20%)</title><rect x="142.9" y="1029" width="26.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="1039.5" >[..</text>
</g>
<g >
<title>__alloc_pages_nodemask (34,147,701 samples, 0.12%)</title><rect x="700.8" y="373" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="703.82" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,633,721 samples, 0.09%)</title><rect x="145.7" y="437" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="148.74" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (52,593,161 samples, 0.19%)</title><rect x="591.2" y="613" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="594.19" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (78,622,051 samples, 0.28%)</title><rect x="103.9" y="709" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.86" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,728 samples, 0.09%)</title><rect x="78.8" y="933" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="81.81" y="943.5" ></text>
</g>
<g >
<title>llvm::X86TargetLowering::EmitVAARGWithCustomInserter (34,088,167 samples, 0.12%)</title><rect x="215.6" y="1061" width="1.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="218.61" y="1071.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,622,051 samples, 0.28%)</title><rect x="103.9" y="725" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="106.86" y="735.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,235 samples, 0.09%)</title><rect x="66.3" y="549" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="69.31" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (180,687,028 samples, 0.64%)</title><rect x="107.1" y="837" width="7.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="110.15" y="847.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,204,067 samples, 0.09%)</title><rect x="167.8" y="453" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="170.81" y="463.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (68,194,806 samples, 0.24%)</title><rect x="993.2" y="581" width="2.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="996.22" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (52,587,110 samples, 0.19%)</title><rect x="154.0" y="373" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.00" y="383.5" ></text>
</g>
<g >
<title>dispatcher_vectorcall (33,998,165 samples, 0.12%)</title><rect x="140.4" y="501" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="143.40" y="511.5" ></text>
</g>
<g >
<title>PyObject_LengthHint (26,292,059 samples, 0.09%)</title><rect x="33.3" y="1061" width="1.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="36.26" y="1071.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (151,060,758 samples, 0.54%)</title><rect x="96.5" y="645" width="6.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="99.45" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,096,832 samples, 0.10%)</title><rect x="75.4" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="78.41" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (25,434,141 samples, 0.09%)</title><rect x="210.2" y="725" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.16" y="735.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,239,697 samples, 0.09%)</title><rect x="121.6" y="405" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="124.56" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (26,111,509 samples, 0.09%)</title><rect x="67.4" y="469" width="1.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="70.41" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (102,392,917 samples, 0.36%)</title><rect x="196.3" y="565" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,135,790 samples, 0.12%)</title><rect x="38.1" y="837" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="41.11" y="847.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::dummy_property_map, boost::detail::dummy_pmap_reference, unsigned long, unsigned long&gt; (34,037,330 samples, 0.12%)</title><rect x="17.9" y="1061" width="1.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="20.90" y="1071.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (97,421,676 samples, 0.35%)</title><rect x="187.3" y="805" width="4.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="190.28" y="815.5" ></text>
</g>
<g >
<title>alloc_pages_vma (68,400,337 samples, 0.24%)</title><rect x="699.4" y="389" width="2.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="702.39" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (86,128,627 samples, 0.31%)</title><rect x="147.9" y="405" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.94" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,557 samples, 0.09%)</title><rect x="74.3" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.31" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (151,060,758 samples, 0.54%)</title><rect x="96.5" y="917" width="6.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="99.45" y="927.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (86,082,622 samples, 0.30%)</title><rect x="192.7" y="501" width="3.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="195.74" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,104,293 samples, 0.12%)</title><rect x="110.7" y="405" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="113.75" y="415.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,135,790 samples, 0.12%)</title><rect x="38.1" y="293" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="41.11" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (97,421,676 samples, 0.35%)</title><rect x="187.3" y="789" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.28" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,679 samples, 0.09%)</title><rect x="209.1" y="853" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.07" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="901" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1173.11" y="911.5" ></text>
</g>
<g >
<title>get_task_policy.part.0 (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="549" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1171.68" y="559.5" ></text>
</g>
<g >
<title>PyObject_Dir (26,210,661 samples, 0.09%)</title><rect x="213.4" y="645" width="1.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="216.41" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (52,373,735 samples, 0.19%)</title><rect x="76.6" y="917" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,287,437 samples, 0.09%)</title><rect x="186.2" y="485" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="189.18" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (27,198,707 samples, 0.10%)</title><rect x="183.9" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.94" y="431.5" ></text>
</g>
<g >
<title>boost::tuples::tuple&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type&gt;::tuple (34,212,083 samples, 0.12%)</title><rect x="1100.2" y="693" width="1.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1103.24" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (203,498,324 samples, 0.72%)</title><rect x="554.9" y="917" width="8.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="557.93" y="927.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,167,861 samples, 0.09%)</title><rect x="45.6" y="629" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="48.56" y="639.5" ></text>
</g>
<g >
<title>boost::integer_range&lt;unsigned long&gt;::integer_range (34,279,544 samples, 0.12%)</title><rect x="1074.6" y="613" width="1.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1077.62" y="623.5" ></text>
</g>
<g >
<title>_PyObject_LookupSpecial (33,864,799 samples, 0.12%)</title><rect x="175.9" y="389" width="1.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="178.94" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,171,603 samples, 0.09%)</title><rect x="182.8" y="405" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="185.85" y="415.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (34,219,007 samples, 0.12%)</title><rect x="1154.4" y="677" width="1.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1157.38" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (33,453,730 samples, 0.12%)</title><rect x="596.2" y="693" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="599.23" y="703.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (68,465,780 samples, 0.24%)</title><rect x="1165.8" y="677" width="2.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1168.82" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,024,701 samples, 0.12%)</title><rect x="95.1" y="837" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.07" y="847.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,197,038 samples, 0.09%)</title><rect x="212.3" y="421" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="215.32" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,434,141 samples, 0.09%)</title><rect x="210.2" y="549" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="213.16" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (34,154,013 samples, 0.12%)</title><rect x="217.0" y="1061" width="1.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="220.03" y="1071.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,745,010 samples, 0.12%)</title><rect x="64.9" y="645" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="67.90" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (111,920,957 samples, 0.40%)</title><rect x="115.8" y="1029" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="118.79" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (60,337,946 samples, 0.21%)</title><rect x="43.0" y="661" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,376 samples, 0.09%)</title><rect x="123.8" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.76" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,546,263 samples, 0.09%)</title><rect x="164.2" y="469" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="167.18" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (306,165,998 samples, 1.08%)</title><rect x="129.0" y="645" width="12.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.02" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="501" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,228,460 samples, 0.09%)</title><rect x="52.8" y="613" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="55.77" y="623.5" ></text>
</g>
<g >
<title>_PyObject_GenericSetAttrWithDict (26,710,685 samples, 0.09%)</title><rect x="118.3" y="373" width="1.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="121.25" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,857,821 samples, 0.12%)</title><rect x="160.6" y="453" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.58" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (67,902,262 samples, 0.24%)</title><rect x="87.2" y="389" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.19" y="399.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,353,144 samples, 0.09%)</title><rect x="43.0" y="597" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="46.04" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="869" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,684 samples, 0.09%)</title><rect x="103.9" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.86" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,318 samples, 0.09%)</title><rect x="119.4" y="437" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="122.37" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,024,701 samples, 0.12%)</title><rect x="95.1" y="709" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="98.07" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (189,899,606 samples, 0.67%)</title><rect x="152.6" y="741" width="8.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="155.64" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (34,094,188 samples, 0.12%)</title><rect x="91.1" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (135,409,805 samples, 0.48%)</title><rect x="1131.6" y="693" width="5.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1134.59" y="703.5" ></text>
</g>
<g >
<title>boost::vertices&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (34,279,544 samples, 0.12%)</title><rect x="1074.6" y="645" width="1.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1077.62" y="655.5" ></text>
</g>
<g >
<title>get_page_from_freelist (68,397,652 samples, 0.24%)</title><rect x="617.4" y="309" width="2.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="620.38" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (33,857,821 samples, 0.12%)</title><rect x="160.6" y="501" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.58" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,197,038 samples, 0.09%)</title><rect x="212.3" y="469" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="215.32" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,135,790 samples, 0.12%)</title><rect x="38.1" y="645" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.11" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (640,703,287 samples, 2.27%)</title><rect x="888.0" y="533" width="26.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="891.02" y="543.5" >_..</text>
</g>
<g >
<title>may_open.isra.0 (26,252,462 samples, 0.09%)</title><rect x="115.8" y="245" width="1.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="118.79" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (130,950,700 samples, 0.46%)</title><rect x="203.6" y="725" width="5.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="206.59" y="735.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,642,433 samples, 0.09%)</title><rect x="83.2" y="469" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="86.23" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,171,603 samples, 0.09%)</title><rect x="182.8" y="533" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="185.85" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,030,025 samples, 0.12%)</title><rect x="165.3" y="421" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="168.29" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (151,060,758 samples, 0.54%)</title><rect x="96.5" y="709" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (112,957,699 samples, 0.40%)</title><rect x="168.9" y="789" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.91" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,580,982 samples, 0.12%)</title><rect x="594.8" y="837" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="597.82" y="847.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,202,934 samples, 0.09%)</title><rect x="162.0" y="581" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="164.99" y="591.5" ></text>
</g>
<g >
<title>PyDict_MergeFromSeq2 (33,453,730 samples, 0.12%)</title><rect x="596.2" y="789" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="599.23" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (86,453,309 samples, 0.31%)</title><rect x="165.3" y="901" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="168.29" y="911.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,353,144 samples, 0.09%)</title><rect x="43.0" y="421" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="46.04" y="431.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,220,086 samples, 0.09%)</title><rect x="181.8" y="373" width="1.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="184.75" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (86,413,471 samples, 0.31%)</title><rect x="99.2" y="517" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="102.15" y="527.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_single_source (34,255,579 samples, 0.12%)</title><rect x="934.6" y="709" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="937.65" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,613,512 samples, 0.19%)</title><rect x="39.5" y="405" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.53" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,267,251 samples, 0.09%)</title><rect x="163.1" y="501" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="166.09" y="511.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,104,293 samples, 0.12%)</title><rect x="110.7" y="309" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="113.75" y="319.5" ></text>
</g>
<g >
<title>do_brk_flags (26,315,552 samples, 0.09%)</title><rect x="620.2" y="325" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="623.23" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (302,773,875 samples, 1.07%)</title><rect x="152.6" y="933" width="12.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="155.64" y="943.5" ></text>
</g>
<g >
<title>do_syscall_64 (30,080,530 samples, 0.11%)</title><rect x="220.1" y="997" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="223.11" y="1007.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (31,287,366 samples, 0.11%)</title><rect x="41.7" y="421" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="44.73" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,613,512 samples, 0.19%)</title><rect x="39.5" y="469" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.53" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,394,969 samples, 0.19%)</title><rect x="81.0" y="757" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="84.04" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,287,437 samples, 0.09%)</title><rect x="186.2" y="405" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="189.18" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,223,173 samples, 0.09%)</title><rect x="112.2" y="693" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.17" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,774 samples, 0.09%)</title><rect x="211.2" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.22" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,267,251 samples, 0.09%)</title><rect x="163.1" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.09" y="543.5" ></text>
</g>
<g >
<title>vma_link (10,138,758 samples, 0.04%)</title><rect x="1176.6" y="901" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1179.57" y="911.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,661 samples, 0.09%)</title><rect x="213.4" y="805" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="216.41" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (50,962,072 samples, 0.18%)</title><rect x="589.1" y="565" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.06" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (173,502,057 samples, 0.61%)</title><rect x="196.3" y="869" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (34,135,790 samples, 0.12%)</title><rect x="38.1" y="917" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.11" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (102,392,917 samples, 0.36%)</title><rect x="196.3" y="373" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (197,378,070 samples, 0.70%)</title><rect x="615.9" y="485" width="8.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="618.95" y="495.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,281,053 samples, 0.09%)</title><rect x="185.1" y="357" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="188.08" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (130,950,700 samples, 0.46%)</title><rect x="203.6" y="661" width="5.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="206.59" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,710,685 samples, 0.09%)</title><rect x="118.3" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.25" y="479.5" ></text>
</g>
<g >
<title>PyImport_Import (26,111,509 samples, 0.09%)</title><rect x="67.4" y="485" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="70.41" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (31,958,704 samples, 0.11%)</title><rect x="127.7" y="341" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.69" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (119,467,939 samples, 0.42%)</title><rect x="191.3" y="565" width="5.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.35" y="575.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4,802,171 samples, 0.02%)</title><rect x="219.9" y="981" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="222.86" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (34,185,861 samples, 0.12%)</title><rect x="587.6" y="901" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="590.63" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (34,030,025 samples, 0.12%)</title><rect x="165.3" y="661" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="168.29" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,633,721 samples, 0.09%)</title><rect x="145.7" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="148.74" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (120,325,477 samples, 0.43%)</title><rect x="107.1" y="645" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="655.5" ></text>
</g>
<g >
<title>__fdget (26,642,433 samples, 0.09%)</title><rect x="83.2" y="261" width="1.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="86.23" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,378 samples, 0.09%)</title><rect x="69.9" y="837" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.91" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,546,263 samples, 0.09%)</title><rect x="164.2" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.18" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (89,287,002 samples, 0.32%)</title><rect x="173.6" y="485" width="3.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="176.63" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (139,001,651 samples, 0.49%)</title><rect x="131.3" y="389" width="5.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.31" y="399.5" ></text>
</g>
<g >
<title>PyDict_GetItemWithError (26,202,760 samples, 0.09%)</title><rect x="108.6" y="357" width="1.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="111.56" y="367.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (29,096,832 samples, 0.10%)</title><rect x="75.4" y="469" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="78.41" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (33,984,802 samples, 0.12%)</title><rect x="44.1" y="357" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.14" y="367.5" ></text>
</g>
<g >
<title>[_ctypes.cpython-312-x86_64-linux-gnu.so] (34,135,790 samples, 0.12%)</title><rect x="38.1" y="629" width="1.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="41.11" y="639.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (102,392,917 samples, 0.36%)</title><rect x="196.3" y="437" width="4.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="199.34" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,287,437 samples, 0.09%)</title><rect x="186.2" y="437" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="189.18" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (27,036,548 samples, 0.10%)</title><rect x="79.9" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (33,453,730 samples, 0.12%)</title><rect x="596.2" y="725" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="599.23" y="735.5" ></text>
</g>
<g >
<title>elf_map (10,138,758 samples, 0.04%)</title><rect x="1176.6" y="981" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1179.57" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (78,628,266 samples, 0.28%)</title><rect x="177.4" y="357" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.36" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27,198,707 samples, 0.10%)</title><rect x="183.9" y="309" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="186.94" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,373,735 samples, 0.19%)</title><rect x="76.6" y="773" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.62" y="783.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (34,005,797 samples, 0.12%)</title><rect x="188.8" y="389" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="191.83" y="399.5" ></text>
</g>
<g >
<title>__Pyx_Import.constprop.50 (25,434,141 samples, 0.09%)</title><rect x="210.2" y="597" width="1.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="213.16" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (103,555,233 samples, 0.37%)</title><rect x="589.1" y="645" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="592.06" y="655.5" ></text>
</g>
<g >
<title>do_last (26,252,462 samples, 0.09%)</title><rect x="115.8" y="261" width="1.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="118.79" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (33,837,821 samples, 0.12%)</title><rect x="68.5" y="821" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.50" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate (34,066,070 samples, 0.12%)</title><rect x="1148.7" y="677" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1151.67" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,216,209 samples, 0.09%)</title><rect x="102.8" y="677" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="105.76" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (34,094,188 samples, 0.12%)</title><rect x="91.1" y="357" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (106,073,950 samples, 0.38%)</title><rect x="79.9" y="949" width="4.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="82.91" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,331 samples, 0.09%)</title><rect x="130.2" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.21" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="613" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (165,497,641 samples, 0.59%)</title><rect x="131.3" y="421" width="6.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.31" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,219,217 samples, 0.09%)</title><rect x="166.7" y="517" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="169.72" y="527.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4,802,171 samples, 0.02%)</title><rect x="219.9" y="997" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="222.86" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,428,829 samples, 0.09%)</title><rect x="63.8" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.80" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (52,922,003 samples, 0.19%)</title><rect x="118.3" y="645" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.25" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,064 samples, 0.09%)</title><rect x="172.5" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.53" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,164,292 samples, 0.12%)</title><rect x="142.9" y="613" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.92" y="623.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (33,471,300 samples, 0.12%)</title><rect x="1084.5" y="709" width="1.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1087.54" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (27,036,548 samples, 0.10%)</title><rect x="79.9" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,185 samples, 0.09%)</title><rect x="158.4" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.39" y="479.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch1&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (2,972,839,879 samples, 10.53%)</title><rect x="951.8" y="693" width="124.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="954.80" y="703.5" >boost::detail::..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,642,433 samples, 0.09%)</title><rect x="83.2" y="853" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="86.23" y="863.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (32,892,719 samples, 0.12%)</title><rect x="1130.2" y="693" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1133.21" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,303,297 samples, 0.21%)</title><rect x="91.1" y="1013" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="94.13" y="1023.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,710,685 samples, 0.09%)</title><rect x="118.3" y="517" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="121.25" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,642,433 samples, 0.09%)</title><rect x="83.2" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.23" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,098,849 samples, 0.12%)</title><rect x="85.8" y="437" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.77" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (25,434,141 samples, 0.09%)</title><rect x="210.2" y="437" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="213.16" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (31,287,366 samples, 0.11%)</title><rect x="41.7" y="709" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="44.73" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,353,144 samples, 0.09%)</title><rect x="43.0" y="533" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="46.04" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (68,235,612 samples, 0.24%)</title><rect x="84.3" y="869" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="879.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,394,969 samples, 0.19%)</title><rect x="81.0" y="693" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="84.04" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (102,392,917 samples, 0.36%)</title><rect x="196.3" y="677" width="4.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="199.34" y="687.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt; (34,212,967 samples, 0.12%)</title><rect x="998.9" y="549" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1001.93" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,373,735 samples, 0.19%)</title><rect x="76.6" y="549" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="79.62" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::push_back (512,311,224 samples, 1.81%)</title><rect x="1108.8" y="709" width="21.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1111.80" y="719.5" >s..</text>
</g>
<g >
<title>[python3.12] (26,197,038 samples, 0.09%)</title><rect x="212.3" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.32" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (326,538,739 samples, 1.16%)</title><rect x="173.6" y="869" width="13.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="176.63" y="879.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,252,462 samples, 0.09%)</title><rect x="115.8" y="453" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="118.79" y="463.5" ></text>
</g>
<g >
<title>sync_regs (34,162,245 samples, 0.12%)</title><rect x="883.7" y="485" width="1.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="886.74" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,661 samples, 0.09%)</title><rect x="213.4" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.41" y="671.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (34,225,590 samples, 0.12%)</title><rect x="1085.9" y="709" width="1.5" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1088.94" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,267,251 samples, 0.09%)</title><rect x="163.1" y="341" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="166.09" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (33,583,276 samples, 0.12%)</title><rect x="126.3" y="373" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.29" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,216,209 samples, 0.09%)</title><rect x="102.8" y="549" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="105.76" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,464,585 samples, 0.09%)</title><rect x="180.6" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.65" y="303.5" ></text>
</g>
<g >
<title>_PyArg_ParseTuple_SizeT (26,209,376 samples, 0.09%)</title><rect x="123.8" y="373" width="1.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="126.76" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (34,229,627 samples, 0.12%)</title><rect x="913.4" y="469" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="916.37" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (111,920,957 samples, 0.40%)</title><rect x="115.8" y="869" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="118.79" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,216,209 samples, 0.09%)</title><rect x="102.8" y="357" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.76" y="367.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (34,219,100 samples, 0.12%)</title><rect x="1073.2" y="645" width="1.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1076.19" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,303,297 samples, 0.21%)</title><rect x="91.1" y="917" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="94.13" y="927.5" ></text>
</g>
<g >
<title>handle_mm_fault (672,277,121 samples, 2.38%)</title><rect x="852.8" y="421" width="28.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="855.80" y="431.5" >h..</text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (78,766,166 samples, 0.28%)</title><rect x="52.8" y="821" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,188,019 samples, 0.09%)</title><rect x="82.1" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.13" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,030,025 samples, 0.12%)</title><rect x="165.3" y="389" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="168.29" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (104,838,260 samples, 0.37%)</title><rect x="102.8" y="885" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="895.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,252,462 samples, 0.09%)</title><rect x="115.8" y="517" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="118.79" y="527.5" ></text>
</g>
<g >
<title>clear_page_erms (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="725" width="3.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1173.11" y="735.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,220,774 samples, 0.09%)</title><rect x="211.2" y="501" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="214.22" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (68,206,613 samples, 0.24%)</title><rect x="60.9" y="437" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.95" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (134,305,359 samples, 0.48%)</title><rect x="71.0" y="821" width="5.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="74.01" y="831.5" ></text>
</g>
<g >
<title>llvm::TargetLowering::TargetLowering (34,135,790 samples, 0.12%)</title><rect x="38.1" y="389" width="1.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="41.11" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (33,521,481 samples, 0.12%)</title><rect x="931.8" y="677" width="1.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="934.83" y="687.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::cpp_function&lt;IT_outputs, Nexullance_IT_interface, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (5,700,855,837 samples, 20.19%)</title><rect x="930.4" y="789" width="238.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="933.41" y="799.5" >pybind11::cpp_function::cpp_fun..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,679 samples, 0.09%)</title><rect x="209.1" y="725" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="212.07" y="735.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,216,209 samples, 0.09%)</title><rect x="102.8" y="405" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="105.76" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (52,373,735 samples, 0.19%)</title><rect x="76.6" y="645" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="437" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="447.5" ></text>
</g>
<g >
<title>do_anonymous_page (68,397,652 samples, 0.24%)</title><rect x="617.4" y="357" width="2.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="620.38" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_check_len (34,192,299 samples, 0.12%)</title><rect x="1123.1" y="677" width="1.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1126.08" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="805" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (58,998,954 samples, 0.21%)</title><rect x="115.8" y="693" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.79" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (31,958,704 samples, 0.11%)</title><rect x="127.7" y="581" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.69" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (220,599,939 samples, 0.78%)</title><rect x="173.6" y="581" width="9.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="176.63" y="591.5" ></text>
</g>
<g >
<title>PyUnicode_Append (26,208,513 samples, 0.09%)</title><rect x="151.5" y="373" width="1.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="154.54" y="383.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (31,958,704 samples, 0.11%)</title><rect x="127.7" y="389" width="1.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="130.69" y="399.5" ></text>
</g>
<g >
<title>Py_RunMain (26,208,261 samples, 0.09%)</title><rect x="214.5" y="1029" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="217.51" y="1039.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt;, boost::vertex_index_t&gt; (34,156,019 samples, 0.12%)</title><rect x="1076.1" y="709" width="1.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1079.05" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,022,792 samples, 0.09%)</title><rect x="46.7" y="373" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="49.66" y="383.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getTargetTransformInfo (34,135,790 samples, 0.12%)</title><rect x="38.1" y="453" width="1.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="41.11" y="463.5" ></text>
</g>
<g >
<title>copy_page_to_iter (34,132,139 samples, 0.12%)</title><rect x="96.5" y="165" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="99.45" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (78,622,051 samples, 0.28%)</title><rect x="103.9" y="629" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.86" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (68,296,234 samples, 0.24%)</title><rect x="1117.4" y="565" width="2.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1120.36" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (86,742,635 samples, 0.31%)</title><rect x="168.9" y="501" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="171.91" y="511.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,208,261 samples, 0.09%)</title><rect x="214.5" y="373" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="217.51" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="677" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1171.68" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (34,098,849 samples, 0.12%)</title><rect x="85.8" y="485" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="88.77" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,408 samples, 0.09%)</title><rect x="159.5" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.48" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (52,423,284 samples, 0.19%)</title><rect x="166.7" y="789" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.72" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,067 samples, 0.09%)</title><rect x="167.8" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.81" y="623.5" ></text>
</g>
<g >
<title>__do_page_fault (170,851,108 samples, 0.61%)</title><rect x="699.4" y="469" width="7.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="702.39" y="479.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (68,170,406 samples, 0.24%)</title><rect x="1049.0" y="581" width="2.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1051.96" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,167,861 samples, 0.09%)</title><rect x="45.6" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="197" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="207.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (68,459,753 samples, 0.24%)</title><rect x="980.4" y="581" width="2.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="983.37" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (640,703,287 samples, 2.27%)</title><rect x="888.0" y="549" width="26.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="891.02" y="559.5" >_..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (112,957,699 samples, 0.40%)</title><rect x="168.9" y="901" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="171.91" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (78,766,166 samples, 0.28%)</title><rect x="52.8" y="885" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (78,628,473 samples, 0.28%)</title><rect x="211.2" y="901" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.22" y="911.5" ></text>
</g>
<g >
<title>PyDict_Copy (26,214,178 samples, 0.09%)</title><rect x="156.2" y="325" width="1.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="159.19" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,423,284 samples, 0.19%)</title><rect x="166.7" y="805" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="169.72" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (85,057,305 samples, 0.30%)</title><rect x="152.6" y="453" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.64" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,984,802 samples, 0.12%)</title><rect x="44.1" y="565" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.14" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,746,492 samples, 0.12%)</title><rect x="116.9" y="485" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="119.88" y="495.5" ></text>
</g>
<g >
<title>llvm::X86TargetLowering::X86TargetLowering (34,135,790 samples, 0.12%)</title><rect x="38.1" y="405" width="1.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="41.11" y="415.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,421,708 samples, 0.19%)</title><rect x="156.2" y="501" width="2.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="159.19" y="511.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (26,230,863 samples, 0.09%)</title><rect x="141.8" y="277" width="1.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="144.82" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="853" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="863.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (112,957,699 samples, 0.40%)</title><rect x="168.9" y="805" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="171.91" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,766,166 samples, 0.28%)</title><rect x="52.8" y="725" width="3.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="55.77" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,509 samples, 0.09%)</title><rect x="67.4" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.41" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (273,246,928 samples, 0.97%)</title><rect x="1138.7" y="709" width="11.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1141.68" y="719.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (79,431,517 samples, 0.28%)</title><rect x="79.9" y="837" width="3.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="82.91" y="847.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (94,409,782 samples, 0.33%)</title><rect x="59.9" y="565" width="3.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="62.85" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (89,287,002 samples, 0.32%)</title><rect x="173.6" y="469" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.63" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,426,582 samples, 0.28%)</title><rect x="46.7" y="565" width="3.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="49.66" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,515 samples, 0.09%)</title><rect x="146.8" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="149.85" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,557 samples, 0.09%)</title><rect x="74.3" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.31" y="335.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,230,863 samples, 0.09%)</title><rect x="141.8" y="805" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="144.82" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,188,019 samples, 0.09%)</title><rect x="82.1" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.13" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (34,185,861 samples, 0.12%)</title><rect x="587.6" y="949" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="590.63" y="959.5" ></text>
</g>
<g >
<title>_PyObject_Call (119,467,939 samples, 0.42%)</title><rect x="191.3" y="725" width="5.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="194.35" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (130,950,700 samples, 0.46%)</title><rect x="203.6" y="821" width="5.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="206.59" y="831.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,613,512 samples, 0.19%)</title><rect x="39.5" y="565" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="42.53" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,230,863 samples, 0.09%)</title><rect x="141.8" y="437" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="144.82" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="181" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="191.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,211,728 samples, 0.09%)</title><rect x="78.8" y="549" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="81.81" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,169 samples, 0.09%)</title><rect x="59.9" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.85" y="383.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (68,128,777 samples, 0.24%)</title><rect x="912.0" y="517" width="2.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="914.95" y="527.5" ></text>
</g>
<g >
<title>_PyObject_GC_NewVar (34,229,627 samples, 0.12%)</title><rect x="913.4" y="437" width="1.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="916.37" y="447.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (34,219,007 samples, 0.12%)</title><rect x="1154.4" y="693" width="1.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1157.38" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,109 samples, 0.09%)</title><rect x="92.6" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.55" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (106,073,950 samples, 0.38%)</title><rect x="79.9" y="933" width="4.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.91" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,200,433 samples, 0.09%)</title><rect x="203.6" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,353,144 samples, 0.09%)</title><rect x="43.0" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,230,863 samples, 0.09%)</title><rect x="141.8" y="997" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="144.82" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,287,437 samples, 0.09%)</title><rect x="186.2" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.18" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (31,287,366 samples, 0.11%)</title><rect x="41.7" y="597" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="44.73" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,799,484 samples, 0.19%)</title><rect x="71.0" y="725" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="74.01" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (34,136,763 samples, 0.12%)</title><rect x="84.3" y="597" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="623.5" ></text>
</g>
<g >
<title>page_fault (127,912,876 samples, 0.45%)</title><rect x="1184.7" y="1077" width="5.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1187.65" y="1087.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,161,388 samples, 0.09%)</title><rect x="138.2" y="421" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="141.23" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (78,426,582 samples, 0.28%)</title><rect x="46.7" y="581" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.66" y="591.5" ></text>
</g>
<g >
<title>double_add (34,283,025 samples, 0.12%)</title><rect x="593.4" y="869" width="1.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="596.39" y="879.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (102,392,917 samples, 0.36%)</title><rect x="196.3" y="645" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="199.34" y="655.5" ></text>
</g>
<g >
<title>_int_malloc (26,199,298 samples, 0.09%)</title><rect x="77.7" y="229" width="1.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="80.72" y="239.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,094,188 samples, 0.12%)</title><rect x="91.1" y="661" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="94.13" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,423,284 samples, 0.19%)</title><rect x="166.7" y="741" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="169.72" y="751.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (102,487,547 samples, 0.36%)</title><rect x="961.8" y="629" width="4.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="964.80" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,378 samples, 0.12%)</title><rect x="113.3" y="645" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.27" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,185 samples, 0.09%)</title><rect x="158.4" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.39" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (34,136,763 samples, 0.12%)</title><rect x="84.3" y="405" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="415.5" ></text>
</g>
<g >
<title>PyTraceMalloc_Track (34,103,010 samples, 0.12%)</title><rect x="929.0" y="677" width="1.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="931.99" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,958,704 samples, 0.11%)</title><rect x="127.7" y="645" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="130.69" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (50,962,072 samples, 0.18%)</title><rect x="589.1" y="629" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.06" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,161,388 samples, 0.09%)</title><rect x="138.2" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.23" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (111,920,957 samples, 0.40%)</title><rect x="115.8" y="773" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.79" y="783.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::construct (68,455,844 samples, 0.24%)</title><rect x="937.5" y="661" width="2.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="940.51" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,209 samples, 0.09%)</title><rect x="102.8" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (26,202,934 samples, 0.09%)</title><rect x="162.0" y="245" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="164.99" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,486 samples, 0.09%)</title><rect x="73.2" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.22" y="527.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,182 samples, 0.09%)</title><rect x="150.4" y="389" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="153.45" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,167,861 samples, 0.09%)</title><rect x="45.6" y="565" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="48.56" y="575.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,557 samples, 0.09%)</title><rect x="74.3" y="405" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="77.31" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,101 samples, 0.09%)</title><rect x="200.6" y="357" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="203.62" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,104,293 samples, 0.12%)</title><rect x="110.7" y="469" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="113.75" y="479.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,109 samples, 0.09%)</title><rect x="92.6" y="533" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="95.55" y="543.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,111,509 samples, 0.09%)</title><rect x="67.4" y="341" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="70.41" y="351.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (136,894,769 samples, 0.48%)</title><rect x="1016.1" y="597" width="5.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1019.07" y="607.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (510,982,775 samples, 1.81%)</title><rect x="120.5" y="869" width="21.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="123.46" y="879.5" >P..</text>
</g>
<g >
<title>[python3.12] (26,219,217 samples, 0.09%)</title><rect x="166.7" y="629" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.72" y="639.5" ></text>
</g>
<g >
<title>page_fault (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="693" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1171.68" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,799,484 samples, 0.19%)</title><rect x="71.0" y="533" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="74.01" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::map (33,521,481 samples, 0.12%)</title><rect x="931.8" y="741" width="1.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="934.83" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (34,030,025 samples, 0.12%)</title><rect x="165.3" y="741" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="168.29" y="751.5" ></text>
</g>
<g >
<title>_PyCode_New (26,174,437 samples, 0.09%)</title><rect x="76.6" y="373" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="79.62" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,197,038 samples, 0.09%)</title><rect x="212.3" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.32" y="559.5" ></text>
</g>
<g >
<title>PyEval_RestoreThread (33,736,639 samples, 0.12%)</title><rect x="624.2" y="517" width="1.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="627.19" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (31,958,704 samples, 0.11%)</title><rect x="127.7" y="453" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.69" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (52,613,512 samples, 0.19%)</title><rect x="39.5" y="613" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.53" y="623.5" ></text>
</g>
<g >
<title>PySequence_Tuple (25,843,098 samples, 0.09%)</title><rect x="139.3" y="389" width="1.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="142.32" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,267,251 samples, 0.09%)</title><rect x="163.1" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.09" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,243 samples, 0.09%)</title><rect x="90.0" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.03" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (572,574,510 samples, 2.03%)</title><rect x="888.0" y="517" width="24.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="891.02" y="527.5" >[..</text>
</g>
<g >
<title>__do_page_fault (26,202,934 samples, 0.09%)</title><rect x="162.0" y="341" width="1.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="164.99" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (6,475,799,330 samples, 22.94%)</title><rect x="615.9" y="533" width="270.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="618.95" y="543.5" >[python3.12]</text>
</g>
<g >
<title>__handle_mm_fault (26,202,934 samples, 0.09%)</title><rect x="162.0" y="293" width="1.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="164.99" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (58,998,954 samples, 0.21%)</title><rect x="115.8" y="661" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,287,437 samples, 0.09%)</title><rect x="186.2" y="693" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.18" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,453,730 samples, 0.12%)</title><rect x="596.2" y="757" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="599.23" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,642,433 samples, 0.09%)</title><rect x="83.2" y="837" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.23" y="847.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,267,251 samples, 0.09%)</title><rect x="163.1" y="437" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="166.09" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,428,829 samples, 0.09%)</title><rect x="63.8" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.80" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (67,083,538 samples, 0.24%)</title><rect x="93.6" y="901" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.65" y="911.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,640,711 samples, 0.19%)</title><rect x="121.6" y="437" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="124.56" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (151,060,758 samples, 0.54%)</title><rect x="96.5" y="837" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,710,685 samples, 0.09%)</title><rect x="118.3" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.25" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,228,460 samples, 0.09%)</title><rect x="52.8" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,837,821 samples, 0.12%)</title><rect x="68.5" y="405" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="71.50" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (112,874,269 samples, 0.40%)</title><rect x="160.6" y="645" width="4.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="163.58" y="655.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (34,257,870 samples, 0.12%)</title><rect x="1020.4" y="501" width="1.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1023.36" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="623.5" ></text>
</g>
<g >
<title>do_page_fault (34,132,139 samples, 0.12%)</title><rect x="96.5" y="117" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="99.45" y="127.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,679 samples, 0.09%)</title><rect x="209.1" y="965" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.07" y="975.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,030,025 samples, 0.12%)</title><rect x="165.3" y="821" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="168.29" y="831.5" ></text>
</g>
<g >
<title>PyObject_Calloc (26,210,185 samples, 0.09%)</title><rect x="158.4" y="325" width="1.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="161.39" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (30,515,148 samples, 0.11%)</title><rect x="97.9" y="453" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.88" y="463.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,208,513 samples, 0.09%)</title><rect x="151.5" y="501" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="154.54" y="511.5" ></text>
</g>
<g >
<title>vfs_statx (26,495,990 samples, 0.09%)</title><rect x="137.1" y="309" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="140.12" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (621,861,173 samples, 2.20%)</title><rect x="142.9" y="1013" width="26.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="1023.5" >[..</text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,378 samples, 0.09%)</title><rect x="69.9" y="693" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="72.91" y="703.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,104,293 samples, 0.12%)</title><rect x="110.7" y="277" width="1.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="113.75" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="261" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (251,500,292 samples, 0.89%)</title><rect x="131.3" y="533" width="10.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.31" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (60,337,946 samples, 0.21%)</title><rect x="43.0" y="773" width="2.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="46.04" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,167,861 samples, 0.09%)</title><rect x="45.6" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,215,064 samples, 0.09%)</title><rect x="172.5" y="629" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="175.53" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,298 samples, 0.09%)</title><rect x="77.7" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.72" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,337,946 samples, 0.21%)</title><rect x="43.0" y="709" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="46.04" y="719.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (68,337,042 samples, 0.24%)</title><rect x="1113.1" y="629" width="2.8" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1116.08" y="639.5" ></text>
</g>
<g >
<title>do_user_addr_fault (68,440,040 samples, 0.24%)</title><rect x="621.3" y="389" width="2.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="624.33" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (54,665,706 samples, 0.19%)</title><rect x="129.0" y="485" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.02" y="495.5" ></text>
</g>
<g >
<title>handle_mm_fault (26,202,934 samples, 0.09%)</title><rect x="162.0" y="309" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="164.99" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (52,799,484 samples, 0.19%)</title><rect x="71.0" y="629" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.01" y="639.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (26,208,261 samples, 0.09%)</title><rect x="214.5" y="997" width="1.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="217.51" y="1007.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; (34,255,579 samples, 0.12%)</title><rect x="934.6" y="693" width="1.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="937.65" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,530 samples, 0.09%)</title><rect x="157.3" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.29" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;float&gt;::~allocator (34,112,963 samples, 0.12%)</title><rect x="23.6" y="1061" width="1.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="26.62" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,109 samples, 0.09%)</title><rect x="92.6" y="693" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.55" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,613,512 samples, 0.19%)</title><rect x="39.5" y="421" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="42.53" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (31,287,366 samples, 0.11%)</title><rect x="41.7" y="437" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="44.73" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,136,763 samples, 0.12%)</title><rect x="84.3" y="469" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="87.34" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,024,701 samples, 0.12%)</title><rect x="95.1" y="773" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="98.07" y="783.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,058,837 samples, 0.12%)</title><rect x="93.6" y="565" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="96.65" y="575.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (31,958,704 samples, 0.11%)</title><rect x="127.7" y="437" width="1.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="130.69" y="447.5" ></text>
</g>
<g >
<title>__dlopen (44,903,039 samples, 0.16%)</title><rect x="201.7" y="533" width="1.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="204.72" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (79,651,363 samples, 0.28%)</title><rect x="182.8" y="677" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="185.85" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (7,253,030,745 samples, 25.69%)</title><rect x="611.7" y="629" width="303.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="614.66" y="639.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,488,440 samples, 0.21%)</title><rect x="99.2" y="485" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="102.15" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (33,385,317 samples, 0.12%)</title><rect x="191.3" y="533" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.35" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,513 samples, 0.09%)</title><rect x="151.5" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.54" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,684 samples, 0.09%)</title><rect x="103.9" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.86" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (52,799,484 samples, 0.19%)</title><rect x="71.0" y="565" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.01" y="575.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (68,532,130 samples, 0.24%)</title><rect x="1145.8" y="629" width="2.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1148.81" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,950 samples, 0.09%)</title><rect x="81.0" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.04" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (621,861,173 samples, 2.20%)</title><rect x="142.9" y="1045" width="26.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="145.92" y="1055.5" >_..</text>
</g>
<g >
<title>PyObject_GC_Del (27,438,240 samples, 0.10%)</title><rect x="32.1" y="1061" width="1.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="35.12" y="1071.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (26,642,433 samples, 0.09%)</title><rect x="83.2" y="405" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="86.23" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,417,812 samples, 0.19%)</title><rect x="211.2" y="757" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="214.22" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (32,746,492 samples, 0.12%)</title><rect x="116.9" y="517" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.88" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,197,038 samples, 0.09%)</title><rect x="212.3" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.32" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,197,979 samples, 0.09%)</title><rect x="47.7" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="50.74" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,760 samples, 0.09%)</title><rect x="108.6" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.56" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (34,203,804 samples, 0.12%)</title><rect x="26.5" y="1061" width="1.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="29.47" y="1071.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,104,293 samples, 0.12%)</title><rect x="110.7" y="453" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="113.75" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,171,603 samples, 0.09%)</title><rect x="182.8" y="517" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="185.85" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,708 samples, 0.19%)</title><rect x="156.2" y="405" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.19" y="415.5" ></text>
</g>
<g >
<title>[_json.cpython-312-x86_64-linux-gnu.so] (26,208,513 samples, 0.09%)</title><rect x="151.5" y="453" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.54" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (7,453,139,964 samples, 26.40%)</title><rect x="603.3" y="693" width="311.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="606.30" y="703.5" >[python3.12]</text>
</g>
<g >
<title>boost::detail::get_dispatch&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt;, boost::vertex_index_t&gt; (34,156,019 samples, 0.12%)</title><rect x="1076.1" y="693" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1079.05" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (134,305,359 samples, 0.48%)</title><rect x="71.0" y="805" width="5.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="74.01" y="815.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,204,067 samples, 0.09%)</title><rect x="167.8" y="565" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="170.81" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="213" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="223.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,204,067 samples, 0.09%)</title><rect x="167.8" y="485" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="170.81" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,869,282 samples, 0.10%)</title><rect x="56.1" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,298 samples, 0.09%)</title><rect x="77.7" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.72" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (52,613,512 samples, 0.19%)</title><rect x="39.5" y="741" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.53" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,209 samples, 0.09%)</title><rect x="102.8" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,156 samples, 0.09%)</title><rect x="591.2" y="501" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="594.19" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,223,173 samples, 0.09%)</title><rect x="112.2" y="741" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="115.17" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,287,437 samples, 0.09%)</title><rect x="186.2" y="677" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="189.18" y="687.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; (2,972,839,879 samples, 10.53%)</title><rect x="951.8" y="709" width="124.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="954.80" y="719.5" >boost::dijkstra..</text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (33,035,028 samples, 0.12%)</title><rect x="1135.9" y="677" width="1.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1138.87" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,161,388 samples, 0.09%)</title><rect x="138.2" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.23" y="351.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (34,047,402 samples, 0.12%)</title><rect x="1063.2" y="613" width="1.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1066.20" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (59,875,676 samples, 0.21%)</title><rect x="192.7" y="437" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="195.74" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,375,308 samples, 0.09%)</title><rect x="154.0" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.00" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (34,198,793 samples, 0.12%)</title><rect x="1137.2" y="677" width="1.5" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1140.25" y="687.5" ></text>
</g>
<g >
<title>filemap_map_pages (34,135,790 samples, 0.12%)</title><rect x="38.1" y="261" width="1.4" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="41.11" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (180,687,028 samples, 0.64%)</title><rect x="107.1" y="901" width="7.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.15" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (172,858,073 samples, 0.61%)</title><rect x="120.5" y="677" width="7.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="123.46" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,281,053 samples, 0.09%)</title><rect x="185.1" y="501" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="188.08" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (86,742,635 samples, 0.31%)</title><rect x="168.9" y="597" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="171.91" y="607.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (102,598,202 samples, 0.36%)</title><rect x="1091.7" y="693" width="4.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1094.66" y="703.5" ></text>
</g>
<g >
<title>std::multimap&lt;float, unsigned long, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::insert&lt;std::pair&lt;float, unsigned long&gt; &gt; (68,396,614 samples, 0.24%)</title><rect x="1158.7" y="725" width="2.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1161.67" y="735.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,431,830 samples, 0.19%)</title><rect x="206.9" y="453" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="209.87" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,200,433 samples, 0.09%)</title><rect x="203.6" y="437" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="206.59" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (34,267,848 samples, 0.12%)</title><rect x="1161.5" y="693" width="1.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1164.52" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,267,251 samples, 0.09%)</title><rect x="163.1" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.09" y="607.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,837,821 samples, 0.12%)</title><rect x="68.5" y="853" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="71.50" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,067 samples, 0.09%)</title><rect x="167.8" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.81" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (33,984,802 samples, 0.12%)</title><rect x="44.1" y="341" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.14" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (111,920,957 samples, 0.40%)</title><rect x="115.8" y="965" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="118.79" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,200,433 samples, 0.09%)</title><rect x="203.6" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="527.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (26,210,684 samples, 0.09%)</title><rect x="103.9" y="389" width="1.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="106.86" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,281,053 samples, 0.09%)</title><rect x="185.1" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.08" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,185 samples, 0.09%)</title><rect x="158.4" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.39" y="367.5" ></text>
</g>
<g >
<title>[anon] (143,357,448 samples, 0.51%)</title><rect x="32.1" y="1077" width="6.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="35.12" y="1087.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,230,863 samples, 0.09%)</title><rect x="141.8" y="725" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="144.82" y="735.5" ></text>
</g>
<g >
<title>__GI___clone (7,989,972,127 samples, 28.30%)</title><rect x="219.6" y="1077" width="333.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="222.56" y="1087.5" >__GI___clone</text>
</g>
<g >
<title>mem_cgroup_try_charge (34,279,247 samples, 0.12%)</title><rect x="622.8" y="309" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="625.76" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (172,858,073 samples, 0.61%)</title><rect x="120.5" y="821" width="7.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="123.46" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (31,958,704 samples, 0.11%)</title><rect x="127.7" y="533" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.69" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,164,292 samples, 0.12%)</title><rect x="142.9" y="485" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.92" y="495.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (34,240,427 samples, 0.12%)</title><rect x="878.0" y="357" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="881.04" y="367.5" ></text>
</g>
<g >
<title>page_fault (33,595,188 samples, 0.12%)</title><rect x="563.4" y="933" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="566.43" y="943.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (130,950,700 samples, 0.46%)</title><rect x="203.6" y="773" width="5.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="206.59" y="783.5" ></text>
</g>
<g >
<title>_PyObject_Call (120,325,477 samples, 0.43%)</title><rect x="107.1" y="597" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.15" y="607.5" ></text>
</g>
<g >
<title>std::plus&lt;float&gt;::operator (102,482,642 samples, 0.36%)</title><rect x="1064.6" y="613" width="4.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1067.62" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="629" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,925,031 samples, 0.09%)</title><rect x="101.7" y="373" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="104.68" y="383.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (191,659,029 samples, 0.68%)</title><rect x="131.3" y="517" width="8.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="134.31" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,746,492 samples, 0.12%)</title><rect x="116.9" y="549" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="119.88" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (338,124,702 samples, 1.20%)</title><rect x="127.7" y="741" width="14.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.69" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (29,096,832 samples, 0.10%)</title><rect x="75.4" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.41" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,215,064 samples, 0.09%)</title><rect x="172.5" y="533" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="175.53" y="543.5" ></text>
</g>
<g >
<title>__do_page_fault (34,104,293 samples, 0.12%)</title><rect x="110.7" y="325" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="113.75" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,426,582 samples, 0.28%)</title><rect x="46.7" y="645" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="49.66" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,252,462 samples, 0.09%)</title><rect x="115.8" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,857,821 samples, 0.12%)</title><rect x="160.6" y="533" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="163.58" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Rb_tree (33,521,481 samples, 0.12%)</title><rect x="931.8" y="725" width="1.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="934.83" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,428,829 samples, 0.09%)</title><rect x="63.8" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.80" y="543.5" ></text>
</g>
<g >
<title>do_user_addr_fault (170,851,108 samples, 0.61%)</title><rect x="699.4" y="453" width="7.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="702.39" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,281,053 samples, 0.09%)</title><rect x="185.1" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.08" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,449 samples, 0.09%)</title><rect x="136.0" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="139.02" y="351.5" ></text>
</g>
<g >
<title>__mmdrop (5,536,516 samples, 0.02%)</title><rect x="219.6" y="1013" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="222.63" y="1023.5" ></text>
</g>
<g >
<title>__libc_open64 (26,252,462 samples, 0.09%)</title><rect x="115.8" y="373" width="1.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="118.79" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,287,366 samples, 0.11%)</title><rect x="41.7" y="405" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="44.73" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="1029" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1173.11" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (68,462,283 samples, 0.24%)</title><rect x="1161.5" y="709" width="2.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1164.52" y="719.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (147,540,499 samples, 0.52%)</title><rect x="1178.5" y="885" width="6.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1181.49" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (34,135,790 samples, 0.12%)</title><rect x="38.1" y="901" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.11" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,197,979 samples, 0.09%)</title><rect x="47.7" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="50.74" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (172,858,073 samples, 0.61%)</title><rect x="120.5" y="661" width="7.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="123.46" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (102,161,695 samples, 0.36%)</title><rect x="599.0" y="693" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="602.03" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (68,465,780 samples, 0.24%)</title><rect x="1165.8" y="661" width="2.9" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1168.82" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,132,139 samples, 0.12%)</title><rect x="96.5" y="389" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="399.5" ></text>
</g>
<g >
<title>boost::optional&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::optional (68,455,844 samples, 0.24%)</title><rect x="937.5" y="693" width="2.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="940.51" y="703.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::top (68,124,241 samples, 0.24%)</title><rect x="1000.4" y="629" width="2.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1003.36" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (58,998,954 samples, 0.21%)</title><rect x="115.8" y="629" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="639.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,957,819 samples, 0.12%)</title><rect x="58.4" y="453" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="61.43" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,228,460 samples, 0.09%)</title><rect x="52.8" y="485" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="55.77" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,613,512 samples, 0.19%)</title><rect x="39.5" y="485" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.53" y="495.5" ></text>
</g>
<g >
<title>__fget (26,642,433 samples, 0.09%)</title><rect x="83.2" y="229" width="1.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="86.23" y="239.5" ></text>
</g>
<g >
<title>[offsets.cpython-312-x86_64-linux-gnu.so] (26,111,509 samples, 0.09%)</title><rect x="67.4" y="517" width="1.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="70.41" y="527.5" ></text>
</g>
<g >
<title>__do_page_fault (34,135,790 samples, 0.12%)</title><rect x="38.1" y="341" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="41.11" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (34,164,292 samples, 0.12%)</title><rect x="142.9" y="549" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,138,378 samples, 0.12%)</title><rect x="113.3" y="757" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="116.27" y="767.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (106,073,950 samples, 0.38%)</title><rect x="79.9" y="981" width="4.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="82.91" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (119,467,939 samples, 0.42%)</title><rect x="191.3" y="741" width="5.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.35" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,642,433 samples, 0.09%)</title><rect x="83.2" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.23" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (28,657,867 samples, 0.10%)</title><rect x="174.7" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.75" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (27,036,548 samples, 0.10%)</title><rect x="79.9" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (52,613,512 samples, 0.19%)</title><rect x="39.5" y="549" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.53" y="559.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (26,134,360 samples, 0.09%)</title><rect x="204.7" y="405" width="1.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="207.69" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,101,260 samples, 0.12%)</title><rect x="124.9" y="405" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="127.86" y="415.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms (26,281,053 samples, 0.09%)</title><rect x="185.1" y="277" width="1.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="188.08" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,622,051 samples, 0.28%)</title><rect x="103.9" y="501" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.86" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (211,606,308 samples, 0.75%)</title><rect x="56.1" y="741" width="8.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="59.06" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,984,802 samples, 0.12%)</title><rect x="44.1" y="485" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="47.14" y="495.5" ></text>
</g>
<g >
<title>vmacache_find (34,278,517 samples, 0.12%)</title><rect x="611.7" y="453" width="1.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="614.66" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (52,394,969 samples, 0.19%)</title><rect x="81.0" y="613" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.04" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (52,799,484 samples, 0.19%)</title><rect x="71.0" y="693" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.01" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,223,173 samples, 0.09%)</title><rect x="112.2" y="661" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="115.17" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (63,898,415 samples, 0.23%)</title><rect x="57.2" y="501" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="60.18" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="725" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="735.5" ></text>
</g>
<g >
<title>page_remove_rmap (35,650,171 samples, 0.13%)</title><rect x="1177.0" y="917" width="1.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1180.00" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (103,555,233 samples, 0.37%)</title><rect x="589.1" y="741" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="592.06" y="751.5" ></text>
</g>
<g >
<title>__GI_madvise (30,080,530 samples, 0.11%)</title><rect x="220.1" y="1029" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="223.11" y="1039.5" ></text>
</g>
<g >
<title>Py_InitializeFromConfig (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="997" width="3.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1173.11" y="1007.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (68,534,392 samples, 0.24%)</title><rect x="1120.2" y="613" width="2.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1123.21" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (180,687,028 samples, 0.64%)</title><rect x="107.1" y="869" width="7.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="879.5" ></text>
</g>
<g >
<title>rmqueue (102,386,274 samples, 0.36%)</title><rect x="869.5" y="325" width="4.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="872.49" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,373,735 samples, 0.19%)</title><rect x="76.6" y="693" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="79.62" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,583,276 samples, 0.12%)</title><rect x="126.3" y="453" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="129.29" y="463.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (86,128,627 samples, 0.31%)</title><rect x="147.9" y="453" width="3.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="150.94" y="463.5" ></text>
</g>
<g >
<title>PyObject_Dir (26,211,378 samples, 0.09%)</title><rect x="69.9" y="645" width="1.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="72.91" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (34,022,386 samples, 0.12%)</title><rect x="1000.4" y="581" width="1.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1003.36" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (436,491,427 samples, 1.55%)</title><rect x="52.8" y="949" width="18.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="55.77" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (130,950,700 samples, 0.46%)</title><rect x="203.6" y="645" width="5.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="206.59" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (67,083,538 samples, 0.24%)</title><rect x="93.6" y="1013" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (34,094,188 samples, 0.12%)</title><rect x="91.1" y="613" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="623.5" ></text>
</g>
<g >
<title>PyObject_Dir (26,210,679 samples, 0.09%)</title><rect x="209.1" y="661" width="1.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="212.07" y="671.5" ></text>
</g>
<g >
<title>PyUnicode_New (26,202,934 samples, 0.09%)</title><rect x="162.0" y="389" width="1.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="164.99" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (34,265,017 samples, 0.12%)</title><rect x="1157.2" y="693" width="1.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1160.23" y="703.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,197,038 samples, 0.09%)</title><rect x="212.3" y="453" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="215.32" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,235,612 samples, 0.24%)</title><rect x="84.3" y="709" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="87.34" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (34,005,797 samples, 0.12%)</title><rect x="188.8" y="437" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.83" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (86,413,471 samples, 0.31%)</title><rect x="99.2" y="533" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="102.15" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,216,209 samples, 0.09%)</title><rect x="102.8" y="741" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="105.76" y="751.5" ></text>
</g>
<g >
<title>find_vma (30,515,148 samples, 0.11%)</title><rect x="97.9" y="325" width="1.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="100.88" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (302,773,875 samples, 1.07%)</title><rect x="152.6" y="805" width="12.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="155.64" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,215,064 samples, 0.09%)</title><rect x="172.5" y="501" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="175.53" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (29,096,832 samples, 0.10%)</title><rect x="75.4" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.41" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (29,096,832 samples, 0.10%)</title><rect x="75.4" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.41" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (434,726,050 samples, 1.54%)</title><rect x="196.3" y="1029" width="18.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (26,323,450 samples, 0.09%)</title><rect x="120.5" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,957,819 samples, 0.12%)</title><rect x="58.4" y="437" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.43" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (170,851,108 samples, 0.61%)</title><rect x="699.4" y="421" width="7.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="702.39" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,712,665 samples, 0.12%)</title><rect x="147.9" y="341" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.94" y="351.5" ></text>
</g>
<g >
<title>page_fault (102,622,478 samples, 0.36%)</title><rect x="615.9" y="453" width="4.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="618.95" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (216,889,615 samples, 0.77%)</title><rect x="187.3" y="965" width="9.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="190.28" y="975.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::destroy (68,333,881 samples, 0.24%)</title><rect x="941.8" y="677" width="2.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="944.79" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,204,067 samples, 0.09%)</title><rect x="167.8" y="501" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="170.81" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,303,297 samples, 0.21%)</title><rect x="91.1" y="981" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="94.13" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,200,433 samples, 0.09%)</title><rect x="203.6" y="485" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="206.59" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (31,287,366 samples, 0.11%)</title><rect x="41.7" y="581" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="44.73" y="591.5" ></text>
</g>
<g >
<title>sysmalloc (26,206,950 samples, 0.09%)</title><rect x="81.0" y="373" width="1.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="84.04" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,633,721 samples, 0.09%)</title><rect x="145.7" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="148.74" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (86,221,184 samples, 0.31%)</title><rect x="107.1" y="485" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="495.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,213,235 samples, 0.09%)</title><rect x="66.3" y="581" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="69.31" y="591.5" ></text>
</g>
<g >
<title>Nexullance_IT::optimize (5,633,531,600 samples, 19.95%)</title><rect x="933.2" y="757" width="235.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="936.23" y="767.5" >Nexullance_IT::optimize</text>
</g>
<g >
<title>[python3.12] (26,203,169 samples, 0.09%)</title><rect x="59.9" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.85" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (52,799,484 samples, 0.19%)</title><rect x="71.0" y="485" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.01" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,925,031 samples, 0.09%)</title><rect x="101.7" y="341" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="104.68" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (193,329,428 samples, 0.68%)</title><rect x="1176.6" y="1061" width="8.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1179.57" y="1071.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (34,101,260 samples, 0.12%)</title><rect x="124.9" y="485" width="1.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="127.86" y="495.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,728 samples, 0.09%)</title><rect x="78.8" y="437" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="81.81" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,289,321 samples, 0.12%)</title><rect x="144.3" y="565" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="147.34" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,710,685 samples, 0.09%)</title><rect x="118.3" y="437" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="121.25" y="447.5" ></text>
</g>
<g >
<title>call_init (33,745,010 samples, 0.12%)</title><rect x="64.9" y="277" width="1.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="67.90" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,323,450 samples, 0.09%)</title><rect x="120.5" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="495.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (44,903,039 samples, 0.16%)</title><rect x="201.7" y="437" width="1.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="204.72" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (579,660,979 samples, 2.05%)</title><rect x="564.8" y="997" width="24.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="567.84" y="1007.5" >[..</text>
</g>
<g >
<title>PyObject_VectorcallMethod (674,690,555 samples, 2.39%)</title><rect x="886.6" y="565" width="28.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="889.60" y="575.5" >P..</text>
</g>
<g >
<title>[python3.12] (29,096,832 samples, 0.10%)</title><rect x="75.4" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.41" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (7,995,886,656 samples, 28.32%)</title><rect x="596.2" y="805" width="334.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="599.23" y="815.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (7,453,139,964 samples, 26.40%)</title><rect x="603.3" y="725" width="311.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="606.30" y="735.5" >[python3.12]</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (34,136,763 samples, 0.12%)</title><rect x="84.3" y="613" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="87.34" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (33,289,321 samples, 0.12%)</title><rect x="144.3" y="517" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="147.34" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,417,812 samples, 0.19%)</title><rect x="211.2" y="837" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.22" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,710,685 samples, 0.09%)</title><rect x="118.3" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.25" y="575.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,206,243 samples, 0.09%)</title><rect x="90.0" y="389" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="93.03" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (27,198,707 samples, 0.10%)</title><rect x="183.9" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.94" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (27,036,548 samples, 0.10%)</title><rect x="79.9" y="741" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (162,344,117 samples, 0.58%)</title><rect x="84.3" y="965" width="6.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,957,819 samples, 0.12%)</title><rect x="58.4" y="405" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="61.43" y="415.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,576 samples, 0.09%)</title><rect x="55.0" y="517" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="57.96" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (220,599,939 samples, 0.78%)</title><rect x="173.6" y="645" width="9.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.63" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (27,036,548 samples, 0.10%)</title><rect x="79.9" y="661" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="82.91" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="277" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (34,058,837 samples, 0.12%)</title><rect x="93.6" y="773" width="1.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="96.65" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,167,861 samples, 0.09%)</title><rect x="45.6" y="821" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.56" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (25,434,141 samples, 0.09%)</title><rect x="210.2" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.16" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="981" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1173.11" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (330,663,436 samples, 1.17%)</title><rect x="196.3" y="997" width="13.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.34" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,287,437 samples, 0.09%)</title><rect x="186.2" y="773" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.18" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (52,417,812 samples, 0.19%)</title><rect x="211.2" y="725" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.22" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (90,767,697 samples, 0.32%)</title><rect x="56.1" y="709" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (33,521,481 samples, 0.12%)</title><rect x="931.8" y="565" width="1.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="934.83" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,434,141 samples, 0.09%)</title><rect x="210.2" y="517" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="213.16" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,267,251 samples, 0.09%)</title><rect x="163.1" y="405" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="166.09" y="415.5" ></text>
</g>
<g >
<title>__handle_mm_fault (672,277,121 samples, 2.38%)</title><rect x="852.8" y="405" width="28.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="855.80" y="415.5" >_..</text>
</g>
<g >
<title>PyEval_EvalCode (232,633,989 samples, 0.82%)</title><rect x="142.9" y="709" width="9.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="145.92" y="719.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,204,067 samples, 0.09%)</title><rect x="167.8" y="517" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="170.81" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (172,369,574 samples, 0.61%)</title><rect x="45.6" y="981" width="7.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.56" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,228,460 samples, 0.09%)</title><rect x="52.8" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (33,521,481 samples, 0.12%)</title><rect x="931.8" y="661" width="1.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="934.83" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (33,580,982 samples, 0.12%)</title><rect x="594.8" y="885" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="597.82" y="895.5" ></text>
</g>
<g >
<title>schedule (4,761,400 samples, 0.02%)</title><rect x="553.2" y="981" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="556.23" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (180,687,028 samples, 0.64%)</title><rect x="107.1" y="853" width="7.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (255,899,018 samples, 0.91%)</title><rect x="96.5" y="949" width="10.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.45" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,058,837 samples, 0.12%)</title><rect x="93.6" y="581" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.65" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,228,460 samples, 0.09%)</title><rect x="52.8" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (68,482,111 samples, 0.24%)</title><rect x="1018.9" y="549" width="2.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1021.93" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (71,109,140 samples, 0.25%)</title><rect x="200.6" y="581" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.62" y="591.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,235 samples, 0.09%)</title><rect x="66.3" y="357" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="69.31" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,984,802 samples, 0.12%)</title><rect x="44.1" y="533" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.14" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,710,685 samples, 0.09%)</title><rect x="118.3" y="501" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.25" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (112,796,386 samples, 0.40%)</title><rect x="132.4" y="357" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.40" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (7,758,635,643 samples, 27.48%)</title><rect x="599.0" y="741" width="324.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="602.03" y="751.5" >[python3.12]</text>
</g>
<g >
<title>_PyObject_Call (52,394,969 samples, 0.19%)</title><rect x="81.0" y="741" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.04" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,546,263 samples, 0.09%)</title><rect x="164.2" y="437" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.18" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (297,676,062 samples, 1.05%)</title><rect x="56.1" y="901" width="12.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (25,925,031 samples, 0.09%)</title><rect x="101.7" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.68" y="463.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,373,735 samples, 0.19%)</title><rect x="76.6" y="581" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="79.62" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (86,453,309 samples, 0.31%)</title><rect x="165.3" y="885" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="168.29" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (273,246,928 samples, 0.97%)</title><rect x="1138.7" y="693" width="11.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1141.68" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,209,109 samples, 0.09%)</title><rect x="92.6" y="565" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="95.55" y="575.5" ></text>
</g>
<g >
<title>PyModule_AddObject (37,174,366 samples, 0.13%)</title><rect x="187.3" y="357" width="1.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="190.28" y="367.5" ></text>
</g>
<g >
<title>[internals.cpython-312-x86_64-linux-gnu.so] (26,197,979 samples, 0.09%)</title><rect x="47.7" y="373" width="1.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="50.74" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (232,633,989 samples, 0.82%)</title><rect x="142.9" y="773" width="9.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.92" y="783.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,223,173 samples, 0.09%)</title><rect x="112.2" y="709" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="115.17" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (570,796,786 samples, 2.02%)</title><rect x="52.8" y="981" width="23.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="991.5" >[..</text>
</g>
<g >
<title>[python3.12] (26,206,243 samples, 0.09%)</title><rect x="90.0" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.03" y="527.5" ></text>
</g>
<g >
<title>release_pages (147,540,499 samples, 0.52%)</title><rect x="1178.5" y="869" width="6.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1181.49" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,353,144 samples, 0.09%)</title><rect x="43.0" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="399.5" ></text>
</g>
<g >
<title>_PyRuntime (26,494,507 samples, 0.09%)</title><rect x="218.5" y="1077" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="221.46" y="1087.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,228,460 samples, 0.09%)</title><rect x="52.8" y="581" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="55.77" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,098,849 samples, 0.12%)</title><rect x="85.8" y="613" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.77" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,230,863 samples, 0.09%)</title><rect x="141.8" y="709" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="144.82" y="719.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4,761,400 samples, 0.02%)</title><rect x="553.2" y="997" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="556.23" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (162,344,117 samples, 0.58%)</title><rect x="84.3" y="997" width="6.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="87.34" y="1007.5" ></text>
</g>
<g >
<title>__ieee754_pow_sse2 (34,209,108 samples, 0.12%)</title><rect x="936.1" y="709" width="1.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="939.08" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (67,902,262 samples, 0.24%)</title><rect x="87.2" y="437" width="2.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="90.19" y="447.5" ></text>
</g>
<g >
<title>do_filp_open (27,198,707 samples, 0.10%)</title><rect x="183.9" y="245" width="1.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="186.94" y="255.5" ></text>
</g>
<g >
<title>_dl_open (33,745,010 samples, 0.12%)</title><rect x="64.9" y="373" width="1.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="67.90" y="383.5" ></text>
</g>
<g >
<title>do_group_exit (183,190,670 samples, 0.65%)</title><rect x="1177.0" y="1029" width="7.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1180.00" y="1039.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,303,297 samples, 0.21%)</title><rect x="91.1" y="741" width="2.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="94.13" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (116,928,619 samples, 0.41%)</title><rect x="97.9" y="565" width="4.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="100.88" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,411,367 samples, 0.19%)</title><rect x="105.0" y="485" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.95" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,167,861 samples, 0.09%)</title><rect x="45.6" y="677" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.56" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (220,599,939 samples, 0.78%)</title><rect x="173.6" y="549" width="9.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.63" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="709" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (216,889,615 samples, 0.77%)</title><rect x="187.3" y="917" width="9.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="190.28" y="927.5" ></text>
</g>
<g >
<title>_PyObject_Call (162,344,117 samples, 0.58%)</title><rect x="84.3" y="981" width="6.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.34" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (81,505,875 samples, 0.29%)</title><rect x="73.2" y="677" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.22" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,486 samples, 0.09%)</title><rect x="73.2" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.22" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,431,830 samples, 0.19%)</title><rect x="206.9" y="485" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="209.87" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,378 samples, 0.09%)</title><rect x="69.9" y="789" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.91" y="799.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (103,555,233 samples, 0.37%)</title><rect x="589.1" y="869" width="4.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="592.06" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (25,843,098 samples, 0.09%)</title><rect x="139.3" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.32" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,684 samples, 0.09%)</title><rect x="103.9" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.86" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (52,373,735 samples, 0.19%)</title><rect x="76.6" y="997" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="1007.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,622,051 samples, 0.28%)</title><rect x="103.9" y="613" width="3.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="106.86" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (63,898,415 samples, 0.23%)</title><rect x="57.2" y="517" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="60.18" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,167,861 samples, 0.09%)</title><rect x="45.6" y="597" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="48.56" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,138,378 samples, 0.12%)</title><rect x="113.3" y="389" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.27" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (13,902,443,116 samples, 49.24%)</title><rect x="589.1" y="965" width="581.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.06" y="975.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,171,603 samples, 0.09%)</title><rect x="182.8" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.85" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (112,874,269 samples, 0.40%)</title><rect x="160.6" y="773" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.58" y="783.5" ></text>
</g>
<g >
<title>Py_BytesMain (26,208,261 samples, 0.09%)</title><rect x="214.5" y="1045" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="217.51" y="1055.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,557 samples, 0.09%)</title><rect x="74.3" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.31" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;::pair (33,521,481 samples, 0.12%)</title><rect x="931.8" y="469" width="1.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="934.83" y="479.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (34,055,544 samples, 0.12%)</title><rect x="703.7" y="325" width="1.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="706.67" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,121,926 samples, 0.12%)</title><rect x="171.1" y="453" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.11" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,167,861 samples, 0.09%)</title><rect x="45.6" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="479.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,264,999 samples, 0.12%)</title><rect x="1151.5" y="693" width="1.5" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1154.52" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (94,108,505 samples, 0.33%)</title><rect x="87.2" y="757" width="3.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="90.19" y="767.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::verify_heap (34,158,897 samples, 0.12%)</title><rect x="976.1" y="597" width="1.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="979.09" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (61,811,881 samples, 0.22%)</title><rect x="35.5" y="1061" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="38.52" y="1071.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,984,802 samples, 0.12%)</title><rect x="44.1" y="453" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="47.14" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (86,742,635 samples, 0.31%)</title><rect x="168.9" y="549" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.91" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,453,730 samples, 0.12%)</title><rect x="596.2" y="629" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="599.23" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (52,431,830 samples, 0.19%)</title><rect x="206.9" y="437" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="209.87" y="447.5" ></text>
</g>
<g >
<title>PyObject_Call (26,241,513 samples, 0.09%)</title><rect x="190.3" y="517" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="193.25" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,230,863 samples, 0.09%)</title><rect x="141.8" y="981" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="144.82" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (52,373,735 samples, 0.19%)</title><rect x="76.6" y="805" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="815.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (78,426,582 samples, 0.28%)</title><rect x="46.7" y="709" width="3.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="49.66" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (34,132,139 samples, 0.12%)</title><rect x="96.5" y="517" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,171,603 samples, 0.09%)</title><rect x="182.8" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.85" y="447.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4,617,123 samples, 0.02%)</title><rect x="553.2" y="901" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="556.23" y="911.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,204,067 samples, 0.09%)</title><rect x="167.8" y="421" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="170.81" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (78,628,473 samples, 0.28%)</title><rect x="211.2" y="981" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.22" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,219,217 samples, 0.09%)</title><rect x="166.7" y="389" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.72" y="399.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,196,063 samples, 0.09%)</title><rect x="170.0" y="373" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="173.01" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (307,437,726 samples, 1.09%)</title><rect x="1110.2" y="677" width="12.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1113.23" y="687.5" ></text>
</g>
<g >
<title>initumath (37,174,366 samples, 0.13%)</title><rect x="187.3" y="373" width="1.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="190.28" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,206,243 samples, 0.09%)</title><rect x="90.0" y="581" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="93.03" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,094,188 samples, 0.12%)</title><rect x="91.1" y="437" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="94.13" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,837,821 samples, 0.12%)</title><rect x="68.5" y="565" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="71.50" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (13,902,443,116 samples, 49.24%)</title><rect x="589.1" y="981" width="581.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.06" y="991.5" >[python3.12]</text>
</g>
<g >
<title>[_json.cpython-312-x86_64-linux-gnu.so] (26,208,513 samples, 0.09%)</title><rect x="151.5" y="437" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.54" y="447.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (105,092,851 samples, 0.37%)</title><rect x="177.4" y="485" width="4.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="180.36" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,799,484 samples, 0.19%)</title><rect x="71.0" y="741" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="74.01" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,267,251 samples, 0.09%)</title><rect x="163.1" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.09" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,132,139 samples, 0.12%)</title><rect x="96.5" y="453" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.45" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (6,509,877,586 samples, 23.06%)</title><rect x="614.5" y="565" width="272.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="617.52" y="575.5" >_PyFunction_Vectorcall</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,206,243 samples, 0.09%)</title><rect x="90.0" y="693" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="93.03" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (104,750,267 samples, 0.37%)</title><rect x="204.7" y="597" width="4.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="207.69" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,005,797 samples, 0.12%)</title><rect x="188.8" y="533" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="191.83" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,228,460 samples, 0.09%)</title><rect x="52.8" y="453" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="55.77" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (52,373,735 samples, 0.19%)</title><rect x="76.6" y="885" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="895.5" ></text>
</g>
<g >
<title>PyThread_tss_get (33,734,429 samples, 0.12%)</title><rect x="924.7" y="645" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="927.72" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,661 samples, 0.09%)</title><rect x="213.4" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.41" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::allocate (34,101,417 samples, 0.12%)</title><rect x="1108.8" y="645" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1111.80" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (112,957,699 samples, 0.40%)</title><rect x="168.9" y="933" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="171.91" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (34,283,025 samples, 0.12%)</title><rect x="593.4" y="885" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="596.39" y="895.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,287,437 samples, 0.09%)</title><rect x="186.2" y="549" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="189.18" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,679 samples, 0.09%)</title><rect x="209.1" y="901" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.07" y="911.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (34,058,837 samples, 0.12%)</title><rect x="93.6" y="885" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="96.65" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,950 samples, 0.09%)</title><rect x="81.0" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.04" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (97,421,676 samples, 0.35%)</title><rect x="187.3" y="645" width="4.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="190.28" y="655.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,998,165 samples, 0.12%)</title><rect x="140.4" y="517" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="143.40" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,171,603 samples, 0.09%)</title><rect x="182.8" y="549" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="185.85" y="559.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,267,251 samples, 0.09%)</title><rect x="163.1" y="357" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="166.09" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,188,019 samples, 0.09%)</title><rect x="82.1" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.13" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,289,321 samples, 0.12%)</title><rect x="144.3" y="485" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="147.34" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (60,337,946 samples, 0.21%)</title><rect x="43.0" y="837" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="383.5" ></text>
</g>
<g >
<title>generic_permission (26,252,462 samples, 0.09%)</title><rect x="115.8" y="213" width="1.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="118.79" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (103,555,233 samples, 0.37%)</title><rect x="589.1" y="885" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.06" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (94,409,782 samples, 0.33%)</title><rect x="59.9" y="517" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.85" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,228,460 samples, 0.09%)</title><rect x="52.8" y="565" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="55.77" y="575.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (27,198,707 samples, 0.10%)</title><rect x="183.9" y="165" width="1.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="186.94" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::allocate (34,101,417 samples, 0.12%)</title><rect x="1108.8" y="661" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1111.80" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,138,378 samples, 0.12%)</title><rect x="113.3" y="597" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.27" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,323,450 samples, 0.09%)</title><rect x="120.5" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (172,858,073 samples, 0.61%)</title><rect x="120.5" y="837" width="7.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="949" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1173.11" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,708 samples, 0.19%)</title><rect x="156.2" y="485" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.19" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (52,373,735 samples, 0.19%)</title><rect x="76.6" y="629" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="639.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,241,513 samples, 0.09%)</title><rect x="190.3" y="485" width="1.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="193.25" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,030,025 samples, 0.12%)</title><rect x="165.3" y="805" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="168.29" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,217 samples, 0.09%)</title><rect x="166.7" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.72" y="511.5" ></text>
</g>
<g >
<title>PyGC_Collect (271,185,936 samples, 0.96%)</title><rect x="553.5" y="997" width="11.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="556.50" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (120,838,611 samples, 0.43%)</title><rect x="59.9" y="693" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.85" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (50,962,072 samples, 0.18%)</title><rect x="589.1" y="549" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.06" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,576 samples, 0.09%)</title><rect x="55.0" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.96" y="511.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,235 samples, 0.09%)</title><rect x="66.3" y="677" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="69.31" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,058,837 samples, 0.12%)</title><rect x="93.6" y="645" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.65" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,167,861 samples, 0.09%)</title><rect x="45.6" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="495.5" ></text>
</g>
<g >
<title>__do_page_fault (34,278,517 samples, 0.12%)</title><rect x="611.7" y="501" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="614.66" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,613,512 samples, 0.19%)</title><rect x="39.5" y="597" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="42.53" y="607.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (27,036,548 samples, 0.10%)</title><rect x="79.9" y="549" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="82.91" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (53,479,760 samples, 0.19%)</title><rect x="183.9" y="549" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.94" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,546,263 samples, 0.09%)</title><rect x="164.2" y="389" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.18" y="399.5" ></text>
</g>
<g >
<title>__vfs_read (26,211,802 samples, 0.09%)</title><rect x="155.1" y="213" width="1.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="158.10" y="223.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,281,053 samples, 0.09%)</title><rect x="185.1" y="453" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="188.08" y="463.5" ></text>
</g>
<g >
<title>vma_interval_tree_insert (10,138,758 samples, 0.04%)</title><rect x="1176.6" y="869" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1179.57" y="879.5" ></text>
</g>
<g >
<title>clear_page_erms (26,061,732 samples, 0.09%)</title><rect x="114.7" y="821" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="117.70" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,424,646 samples, 0.09%)</title><rect x="168.9" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.91" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (52,220,771 samples, 0.18%)</title><rect x="46.7" y="405" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.66" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,261 samples, 0.09%)</title><rect x="214.5" y="645" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.51" y="655.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (102,132,446 samples, 0.36%)</title><rect x="873.8" y="373" width="4.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="876.77" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (162,344,117 samples, 0.58%)</title><rect x="84.3" y="949" width="6.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (34,088,167 samples, 0.12%)</title><rect x="215.6" y="1045" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="218.61" y="1055.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (85,057,305 samples, 0.30%)</title><rect x="152.6" y="501" width="3.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="155.64" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (120,838,611 samples, 0.43%)</title><rect x="59.9" y="661" width="5.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="62.85" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,958,704 samples, 0.11%)</title><rect x="127.7" y="517" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="130.69" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,464,585 samples, 0.09%)</title><rect x="180.6" y="405" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="183.65" y="415.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (2,870,198,009 samples, 10.17%)</title><rect x="951.8" y="645" width="120.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="954.80" y="655.5" >boost::dijkstr..</text>
</g>
<g >
<title>[python3.12] (34,094,188 samples, 0.12%)</title><rect x="91.1" y="677" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="687.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (197,378,070 samples, 0.70%)</title><rect x="615.9" y="517" width="8.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="618.95" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,580,982 samples, 0.12%)</title><rect x="594.8" y="901" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="597.82" y="911.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,837,821 samples, 0.12%)</title><rect x="68.5" y="613" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="71.50" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (570,796,786 samples, 2.02%)</title><rect x="52.8" y="1045" width="23.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="1055.5" >[..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,857,821 samples, 0.12%)</title><rect x="160.6" y="597" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="163.58" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (59,875,676 samples, 0.21%)</title><rect x="192.7" y="421" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.74" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,622,051 samples, 0.28%)</title><rect x="103.9" y="517" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="106.86" y="527.5" ></text>
</g>
<g >
<title>elf_machine_rela (44,903,039 samples, 0.16%)</title><rect x="201.7" y="373" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="204.72" y="383.5" ></text>
</g>
<g >
<title>__sched_text_start (4,761,400 samples, 0.02%)</title><rect x="553.2" y="965" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="556.23" y="975.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (172,369,574 samples, 0.61%)</title><rect x="45.6" y="917" width="7.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="48.56" y="927.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (78,964,161 samples, 0.28%)</title><rect x="120.5" y="581" width="3.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="123.46" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (52,394,969 samples, 0.19%)</title><rect x="81.0" y="821" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.04" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,109 samples, 0.09%)</title><rect x="92.6" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.55" y="463.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (33,745,010 samples, 0.12%)</title><rect x="64.9" y="405" width="1.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="67.90" y="415.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (34,138,378 samples, 0.12%)</title><rect x="113.3" y="629" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="116.27" y="639.5" ></text>
</g>
<g >
<title>page_counter_try_charge (34,242,696 samples, 0.12%)</title><rect x="705.1" y="341" width="1.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="708.09" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,287,437 samples, 0.09%)</title><rect x="186.2" y="581" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="189.18" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (25,434,141 samples, 0.09%)</title><rect x="210.2" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.16" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (510,982,775 samples, 1.81%)</title><rect x="120.5" y="1029" width="21.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="1039.5" >[..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (656,386,053 samples, 2.32%)</title><rect x="168.9" y="1061" width="27.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="171.91" y="1071.5" >_..</text>
</g>
<g >
<title>[python3.12] (26,209,376 samples, 0.09%)</title><rect x="123.8" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.76" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,174,437 samples, 0.09%)</title><rect x="76.6" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (120,838,611 samples, 0.43%)</title><rect x="59.9" y="597" width="5.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="62.85" y="607.5" ></text>
</g>
<g >
<title>_int_malloc (34,194,426 samples, 0.12%)</title><rect x="916.2" y="645" width="1.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="919.17" y="655.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (25,925,031 samples, 0.09%)</title><rect x="101.7" y="501" width="1.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="104.68" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (180,687,028 samples, 0.64%)</title><rect x="107.1" y="821" width="7.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.15" y="831.5" ></text>
</g>
<g >
<title>__do_page_fault (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="853" width="3.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1173.11" y="863.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,216,209 samples, 0.09%)</title><rect x="102.8" y="421" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="105.76" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (111,920,957 samples, 0.40%)</title><rect x="115.8" y="837" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="118.79" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (29,096,832 samples, 0.10%)</title><rect x="75.4" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.41" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,217 samples, 0.09%)</title><rect x="166.7" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.72" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,378 samples, 0.09%)</title><rect x="69.9" y="773" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.91" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,208,261 samples, 0.09%)</title><rect x="214.5" y="869" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="217.51" y="879.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (111,920,957 samples, 0.40%)</title><rect x="115.8" y="901" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="118.79" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="965" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1173.11" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (297,676,062 samples, 1.05%)</title><rect x="56.1" y="789" width="12.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (78,766,166 samples, 0.28%)</title><rect x="52.8" y="805" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="815.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (251,500,292 samples, 0.89%)</title><rect x="131.3" y="549" width="10.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="134.31" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,196,063 samples, 0.09%)</title><rect x="170.0" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.01" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,318 samples, 0.09%)</title><rect x="119.4" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.37" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_read (26,211,802 samples, 0.09%)</title><rect x="155.1" y="261" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="158.10" y="271.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,215,064 samples, 0.09%)</title><rect x="172.5" y="613" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="175.53" y="623.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_initialize_map (68,292,750 samples, 0.24%)</title><rect x="1104.5" y="661" width="2.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1107.52" y="671.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (622,903,732 samples, 2.21%)</title><rect x="115.8" y="1045" width="26.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="118.79" y="1055.5" >P..</text>
</g>
<g >
<title>_PyObject_Call (26,211,728 samples, 0.09%)</title><rect x="78.8" y="805" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="81.81" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,132,003 samples, 0.12%)</title><rect x="100.3" y="405" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="103.25" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (34,101,260 samples, 0.12%)</title><rect x="124.9" y="501" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="127.86" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (30,515,148 samples, 0.11%)</title><rect x="97.9" y="501" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.88" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (52,613,512 samples, 0.19%)</title><rect x="39.5" y="453" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.53" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,381 samples, 0.09%)</title><rect x="590.1" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="593.10" y="527.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::optional_base (68,455,844 samples, 0.24%)</title><rect x="937.5" y="677" width="2.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="940.51" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,220,771 samples, 0.18%)</title><rect x="46.7" y="453" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="49.66" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (130,950,700 samples, 0.46%)</title><rect x="203.6" y="901" width="5.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="206.59" y="911.5" ></text>
</g>
<g >
<title>user_path_at_empty (26,495,990 samples, 0.09%)</title><rect x="137.1" y="293" width="1.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="140.12" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (173,502,057 samples, 0.61%)</title><rect x="196.3" y="837" width="7.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="199.34" y="847.5" ></text>
</g>
<g >
<title>__GI___xstat (26,633,721 samples, 0.09%)</title><rect x="145.7" y="373" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="148.74" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (302,773,875 samples, 1.07%)</title><rect x="152.6" y="853" width="12.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.64" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="789" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="799.5" ></text>
</g>
<g >
<title>_PyCode_New (30,515,148 samples, 0.11%)</title><rect x="97.9" y="437" width="1.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="100.88" y="447.5" ></text>
</g>
<g >
<title>do_page_fault (672,277,121 samples, 2.38%)</title><rect x="852.8" y="469" width="28.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="855.80" y="479.5" >d..</text>
</g>
<g >
<title>PyEval_EvalCode (26,208,261 samples, 0.09%)</title><rect x="214.5" y="405" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="217.51" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,058,837 samples, 0.12%)</title><rect x="93.6" y="725" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.65" y="735.5" ></text>
</g>
<g >
<title>llvm::TargetTransformInfoWrapperPass::getTTI (34,135,790 samples, 0.12%)</title><rect x="38.1" y="485" width="1.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="41.11" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,766,166 samples, 0.28%)</title><rect x="52.8" y="869" width="3.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="55.77" y="879.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;IT_outputs, Nexullance_IT_interface, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (5,700,855,837 samples, 20.19%)</title><rect x="930.4" y="837" width="238.3" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="933.41" y="847.5" >pybind11::cpp_function::initial..</text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,392,061 samples, 0.19%)</title><rect x="108.6" y="405" width="2.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="111.56" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (81,505,875 samples, 0.29%)</title><rect x="73.2" y="709" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="76.22" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (120,838,611 samples, 0.43%)</title><rect x="59.9" y="613" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.85" y="623.5" ></text>
</g>
<g >
<title>p11x::(anonymous namespace)::bind_enums (26,241,513 samples, 0.09%)</title><rect x="190.3" y="533" width="1.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="193.25" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,024,701 samples, 0.12%)</title><rect x="95.1" y="581" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.07" y="591.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (34,139,830 samples, 0.12%)</title><rect x="62.4" y="309" width="1.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="65.37" y="319.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,728 samples, 0.09%)</title><rect x="78.8" y="501" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="81.81" y="511.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (26,216,224 samples, 0.09%)</title><rect x="10.0" y="1061" width="1.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="13.01" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (172,369,574 samples, 0.61%)</title><rect x="45.6" y="1013" width="7.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="1023.5" ></text>
</g>
<g >
<title>__handle_mm_fault (26,061,732 samples, 0.09%)</title><rect x="114.7" y="901" width="1.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="117.70" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,138,378 samples, 0.12%)</title><rect x="113.3" y="549" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.27" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (173,502,057 samples, 0.61%)</title><rect x="196.3" y="821" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (172,369,574 samples, 0.61%)</title><rect x="45.6" y="1029" width="7.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="48.56" y="1039.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (112,874,269 samples, 0.40%)</title><rect x="160.6" y="709" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.58" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (67,902,262 samples, 0.24%)</title><rect x="87.2" y="661" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.19" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,287,437 samples, 0.09%)</title><rect x="186.2" y="805" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.18" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,220,774 samples, 0.09%)</title><rect x="211.2" y="437" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="214.22" y="447.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (34,101,260 samples, 0.12%)</title><rect x="124.9" y="437" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="127.86" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,219,217 samples, 0.09%)</title><rect x="166.7" y="469" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.72" y="479.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (34,143,226 samples, 0.12%)</title><rect x="1071.8" y="645" width="1.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1074.76" y="655.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 3&gt;::outerStride (33,802,756 samples, 0.12%)</title><rect x="930.4" y="709" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="933.41" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,303,297 samples, 0.21%)</title><rect x="91.1" y="805" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="94.13" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,958,704 samples, 0.11%)</title><rect x="127.7" y="629" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.69" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (60,049,199 samples, 0.21%)</title><rect x="68.5" y="901" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.50" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (27,198,707 samples, 0.10%)</title><rect x="183.9" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.94" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,640,711 samples, 0.19%)</title><rect x="121.6" y="421" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="124.56" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,745,010 samples, 0.12%)</title><rect x="64.9" y="549" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.90" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,613,512 samples, 0.19%)</title><rect x="39.5" y="709" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="42.53" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (34,229,627 samples, 0.12%)</title><rect x="913.4" y="453" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="916.37" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (106,073,950 samples, 0.38%)</title><rect x="79.9" y="917" width="4.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.91" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,298 samples, 0.09%)</title><rect x="77.7" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.72" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,642,433 samples, 0.09%)</title><rect x="83.2" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.23" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (71,109,140 samples, 0.25%)</title><rect x="200.6" y="565" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.62" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (306,165,998 samples, 1.08%)</title><rect x="129.0" y="661" width="12.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="132.02" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (86,742,635 samples, 0.31%)</title><rect x="168.9" y="565" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="171.91" y="575.5" ></text>
</g>
<g >
<title>do_page_fault (34,135,790 samples, 0.12%)</title><rect x="38.1" y="357" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="41.11" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (52,318,437 samples, 0.19%)</title><rect x="204.7" y="469" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.69" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (203,498,324 samples, 0.72%)</title><rect x="554.9" y="933" width="8.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="557.93" y="943.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (68,296,234 samples, 0.24%)</title><rect x="1117.4" y="581" width="2.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1120.36" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,837,821 samples, 0.12%)</title><rect x="68.5" y="501" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.50" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,960 samples, 0.09%)</title><rect x="11.1" y="1061" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="14.10" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (134,305,359 samples, 0.48%)</title><rect x="71.0" y="837" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.01" y="847.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,230,863 samples, 0.09%)</title><rect x="141.8" y="597" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="144.82" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (180,687,028 samples, 0.64%)</title><rect x="107.1" y="949" width="7.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="110.15" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,200,433 samples, 0.09%)</title><rect x="203.6" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (33,837,821 samples, 0.12%)</title><rect x="68.5" y="453" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.50" y="463.5" ></text>
</g>
<g >
<title>PyIter_Next (34,058,837 samples, 0.12%)</title><rect x="93.6" y="325" width="1.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="96.65" y="335.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (26,111,509 samples, 0.09%)</title><rect x="67.4" y="741" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="70.41" y="751.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,628,473 samples, 0.28%)</title><rect x="211.2" y="997" width="3.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="214.22" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (52,318,437 samples, 0.19%)</title><rect x="204.7" y="453" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.69" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (151,060,758 samples, 0.54%)</title><rect x="96.5" y="821" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="831.5" ></text>
</g>
<g >
<title>_PyObject_Call (232,633,989 samples, 0.82%)</title><rect x="142.9" y="757" width="9.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="145.92" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,642,433 samples, 0.09%)</title><rect x="83.2" y="645" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="86.23" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (120,325,477 samples, 0.43%)</title><rect x="107.1" y="757" width="5.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="110.15" y="767.5" ></text>
</g>
<g >
<title>_dl_open (44,903,039 samples, 0.16%)</title><rect x="201.7" y="453" width="1.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="204.72" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,109 samples, 0.09%)</title><rect x="92.6" y="341" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="95.55" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (34,030,025 samples, 0.12%)</title><rect x="165.3" y="405" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="168.29" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (34,164,292 samples, 0.12%)</title><rect x="142.9" y="437" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (25,843,098 samples, 0.09%)</title><rect x="139.3" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="142.32" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,208,261 samples, 0.09%)</title><rect x="214.5" y="725" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="217.51" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (198,469,697 samples, 0.70%)</title><rect x="144.3" y="645" width="8.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="147.34" y="655.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,188,019 samples, 0.09%)</title><rect x="82.1" y="485" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="85.13" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,710,685 samples, 0.09%)</title><rect x="118.3" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.25" y="399.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (34,174,624 samples, 0.12%)</title><rect x="885.2" y="501" width="1.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="888.17" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,209 samples, 0.09%)</title><rect x="102.8" y="629" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,958,704 samples, 0.11%)</title><rect x="127.7" y="501" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.69" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (33,957,819 samples, 0.12%)</title><rect x="58.4" y="421" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="61.43" y="431.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (239,738,424 samples, 0.85%)</title><rect x="1026.1" y="597" width="10.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1029.08" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (111,920,957 samples, 0.40%)</title><rect x="115.8" y="821" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="831.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (10,138,758 samples, 0.04%)</title><rect x="1176.6" y="1029" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1179.57" y="1039.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (510,982,775 samples, 1.81%)</title><rect x="120.5" y="901" width="21.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="123.46" y="911.5" >P..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,202,934 samples, 0.09%)</title><rect x="162.0" y="549" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="164.99" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,267,251 samples, 0.09%)</title><rect x="163.1" y="581" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.09" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (34,132,003 samples, 0.12%)</title><rect x="100.3" y="341" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.25" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (37,174,366 samples, 0.13%)</title><rect x="187.3" y="501" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="190.28" y="511.5" ></text>
</g>
<g >
<title>page_fault (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="885" width="3.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1173.11" y="895.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,421,708 samples, 0.19%)</title><rect x="156.2" y="453" width="2.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="159.19" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (173,502,057 samples, 0.61%)</title><rect x="196.3" y="709" width="7.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.34" y="719.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (26,220,086 samples, 0.09%)</title><rect x="181.8" y="389" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="184.75" y="399.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (376,442,228 samples, 1.33%)</title><rect x="52.8" y="917" width="15.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="55.77" y="927.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (34,103,010 samples, 0.12%)</title><rect x="929.0" y="645" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="931.99" y="655.5" ></text>
</g>
<g >
<title>std::plus&lt;float&gt;::operator (34,238,794 samples, 0.12%)</title><rect x="25.0" y="1061" width="1.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="28.04" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (34,005,797 samples, 0.12%)</title><rect x="188.8" y="453" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.83" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (52,373,735 samples, 0.19%)</title><rect x="76.6" y="981" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (25,434,141 samples, 0.09%)</title><rect x="210.2" y="949" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.16" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,633,721 samples, 0.09%)</title><rect x="145.7" y="421" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="148.74" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (34,136,763 samples, 0.12%)</title><rect x="84.3" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="495.5" ></text>
</g>
<g >
<title>PyNumber_Or (26,546,263 samples, 0.09%)</title><rect x="164.2" y="613" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="167.18" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (50,962,072 samples, 0.18%)</title><rect x="589.1" y="613" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.06" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,323,130 samples, 0.09%)</title><rect x="53.9" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.86" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,708 samples, 0.19%)</title><rect x="156.2" y="421" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.19" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_execve (10,138,758 samples, 0.04%)</title><rect x="1176.6" y="1045" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1179.57" y="1055.5" ></text>
</g>
<g >
<title>PyLong_FromLong (68,206,613 samples, 0.24%)</title><rect x="60.9" y="341" width="2.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="63.95" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (656,386,053 samples, 2.32%)</title><rect x="168.9" y="997" width="27.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.91" y="1007.5" >[..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,394,969 samples, 0.19%)</title><rect x="81.0" y="597" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="84.04" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,331 samples, 0.09%)</title><rect x="130.2" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.21" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,857,821 samples, 0.12%)</title><rect x="160.6" y="565" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="163.58" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (78,426,582 samples, 0.28%)</title><rect x="46.7" y="661" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.66" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (60,337,946 samples, 0.21%)</title><rect x="43.0" y="901" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,121,926 samples, 0.12%)</title><rect x="171.1" y="437" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="174.11" y="447.5" ></text>
</g>
<g >
<title>_int_malloc (26,206,950 samples, 0.09%)</title><rect x="81.0" y="389" width="1.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="84.04" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_read (34,132,139 samples, 0.12%)</title><rect x="96.5" y="341" width="1.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="99.45" y="351.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (135,946,480 samples, 0.48%)</title><rect x="1056.1" y="613" width="5.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1059.09" y="623.5" ></text>
</g>
<g >
<title>LLVMPY_RunFunctionPassManager (34,135,790 samples, 0.12%)</title><rect x="38.1" y="565" width="1.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="41.11" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (173,502,057 samples, 0.61%)</title><rect x="196.3" y="773" width="7.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="199.34" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,188,019 samples, 0.09%)</title><rect x="82.1" y="453" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="85.13" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,679 samples, 0.09%)</title><rect x="209.1" y="885" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.07" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (34,094,188 samples, 0.12%)</title><rect x="91.1" y="389" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,837,821 samples, 0.12%)</title><rect x="68.5" y="741" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.50" y="751.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (34,240,427 samples, 0.12%)</title><rect x="878.0" y="341" width="1.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="881.04" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,167,861 samples, 0.09%)</title><rect x="45.6" y="517" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.56" y="527.5" ></text>
</g>
<g >
<title>get_page_from_freelist (26,061,732 samples, 0.09%)</title><rect x="114.7" y="837" width="1.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="117.70" y="847.5" ></text>
</g>
<g >
<title>clear_page_erms (34,132,470 samples, 0.12%)</title><rect x="617.4" y="293" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="620.38" y="303.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (71,180,163 samples, 0.25%)</title><rect x="187.3" y="565" width="3.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="190.28" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (7,453,139,964 samples, 26.40%)</title><rect x="603.3" y="709" width="311.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="606.30" y="719.5" >[python3.12]</text>
</g>
<g >
<title>tlb_flush_mmu (147,540,499 samples, 0.52%)</title><rect x="1178.5" y="901" width="6.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1181.49" y="911.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (34,257,870 samples, 0.12%)</title><rect x="1020.4" y="533" width="1.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1023.36" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (27,198,707 samples, 0.10%)</title><rect x="183.9" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.94" y="367.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (136,665,537 samples, 0.48%)</title><rect x="977.5" y="597" width="5.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="980.51" y="607.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,515 samples, 0.09%)</title><rect x="146.8" y="389" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="149.85" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,281,053 samples, 0.09%)</title><rect x="185.1" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.08" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (104,838,260 samples, 0.37%)</title><rect x="102.8" y="805" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="815.5" ></text>
</g>
<g >
<title>__pyx_pymod_exec__attrutil (25,434,141 samples, 0.09%)</title><rect x="210.2" y="613" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="213.16" y="623.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (535,407,864 samples, 1.90%)</title><rect x="142.9" y="965" width="22.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="145.92" y="975.5" >P..</text>
</g>
<g >
<title>[python3.12] (26,206,946 samples, 0.09%)</title><rect x="195.2" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="198.25" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="421" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (26,495,990 samples, 0.09%)</title><rect x="137.1" y="341" width="1.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="140.12" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,261 samples, 0.09%)</title><rect x="214.5" y="741" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.51" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,546,263 samples, 0.09%)</title><rect x="164.2" y="565" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.18" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,323,130 samples, 0.09%)</title><rect x="53.9" y="533" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.86" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (112,957,699 samples, 0.40%)</title><rect x="168.9" y="885" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="171.91" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,136,763 samples, 0.12%)</title><rect x="84.3" y="389" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="87.34" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,030,025 samples, 0.12%)</title><rect x="165.3" y="613" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="168.29" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,837,821 samples, 0.12%)</title><rect x="68.5" y="693" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="71.50" y="703.5" ></text>
</g>
<g >
<title>PyDict_GetItemWithError (31,287,366 samples, 0.11%)</title><rect x="41.7" y="389" width="1.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="44.73" y="399.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (27,198,707 samples, 0.10%)</title><rect x="183.9" y="485" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="186.94" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,622,051 samples, 0.28%)</title><rect x="103.9" y="549" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="106.86" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,111,509 samples, 0.09%)</title><rect x="67.4" y="373" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="70.41" y="383.5" ></text>
</g>
<g >
<title>__memset_erms (26,061,732 samples, 0.09%)</title><rect x="114.7" y="997" width="1.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="117.70" y="1007.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (173,502,057 samples, 0.61%)</title><rect x="196.3" y="805" width="7.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="199.34" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,298 samples, 0.09%)</title><rect x="77.7" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.72" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (67,902,262 samples, 0.24%)</title><rect x="87.2" y="629" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.19" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (52,922,003 samples, 0.19%)</title><rect x="118.3" y="629" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.25" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,167,861 samples, 0.09%)</title><rect x="45.6" y="869" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="48.56" y="879.5" ></text>
</g>
<g >
<title>handle_mm_fault (170,851,108 samples, 0.61%)</title><rect x="699.4" y="437" width="7.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="702.39" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="693" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (52,394,969 samples, 0.19%)</title><rect x="81.0" y="709" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.04" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (102,487,547 samples, 0.36%)</title><rect x="961.8" y="613" width="4.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="964.80" y="623.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,207,530 samples, 0.09%)</title><rect x="157.3" y="389" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="160.29" y="399.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,206,101 samples, 0.09%)</title><rect x="200.6" y="421" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="203.62" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (326,538,739 samples, 1.16%)</title><rect x="173.6" y="821" width="13.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.63" y="831.5" ></text>
</g>
<g >
<title>start_thread (7,976,933,843 samples, 28.25%)</title><rect x="220.1" y="1061" width="333.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="223.11" y="1071.5" >start_thread</text>
</g>
<g >
<title>[python3.12] (25,434,141 samples, 0.09%)</title><rect x="210.2" y="533" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.16" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,216,209 samples, 0.09%)</title><rect x="102.8" y="485" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.76" y="495.5" ></text>
</g>
<g >
<title>all (28,233,277,295 samples, 100%)</title><rect x="10.0" y="1109" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1119.5" ></text>
</g>
<g >
<title>alloc_pages_vma (26,061,732 samples, 0.09%)</title><rect x="114.7" y="869" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="117.70" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (173,502,057 samples, 0.61%)</title><rect x="196.3" y="757" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (58,998,954 samples, 0.21%)</title><rect x="115.8" y="645" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="655.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (34,191,707 samples, 0.12%)</title><rect x="15.1" y="1061" width="1.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="18.05" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (26,161,388 samples, 0.09%)</title><rect x="138.2" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.23" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (37,174,366 samples, 0.13%)</title><rect x="187.3" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.28" y="495.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_examine_edge&gt; (102,502,924 samples, 0.36%)</title><rect x="957.5" y="613" width="4.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="960.52" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (85,057,305 samples, 0.30%)</title><rect x="152.6" y="469" width="3.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="155.64" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,101 samples, 0.09%)</title><rect x="200.6" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.62" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (58,998,954 samples, 0.21%)</title><rect x="115.8" y="725" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="735.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (33,745,010 samples, 0.12%)</title><rect x="64.9" y="357" width="1.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="67.90" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,417,812 samples, 0.19%)</title><rect x="211.2" y="773" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="214.22" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (52,431,830 samples, 0.19%)</title><rect x="206.9" y="517" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="209.87" y="527.5" ></text>
</g>
<g >
<title>pybind11::detail::tuple_caster&lt;std::pair, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;::cast&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="789" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1171.68" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,984,802 samples, 0.12%)</title><rect x="44.1" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.14" y="383.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (68,500,678 samples, 0.24%)</title><rect x="1003.2" y="629" width="2.9" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1006.21" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;float, unsigned long&gt; &gt; (34,139,620 samples, 0.12%)</title><rect x="1158.7" y="693" width="1.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1161.67" y="703.5" ></text>
</g>
<g >
<title>__handle_mm_fault (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="805" width="3.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1173.11" y="815.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,094,188 samples, 0.12%)</title><rect x="91.1" y="453" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="94.13" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (34,253,870 samples, 0.12%)</title><rect x="1164.4" y="645" width="1.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1167.39" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (34,253,870 samples, 0.12%)</title><rect x="1164.4" y="725" width="1.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1167.39" y="735.5" ></text>
</g>
<g >
<title>ksys_read (34,132,139 samples, 0.12%)</title><rect x="96.5" y="277" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="99.45" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (59,875,676 samples, 0.21%)</title><rect x="192.7" y="453" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.74" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,774 samples, 0.09%)</title><rect x="211.2" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.22" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (97,421,676 samples, 0.35%)</title><rect x="187.3" y="709" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.28" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,024,701 samples, 0.12%)</title><rect x="95.1" y="661" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.07" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (86,742,635 samples, 0.31%)</title><rect x="168.9" y="517" width="3.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="171.91" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,394,969 samples, 0.19%)</title><rect x="81.0" y="645" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.04" y="655.5" ></text>
</g>
<g >
<title>Py_FinalizeEx (850,846,915 samples, 3.01%)</title><rect x="553.5" y="1013" width="35.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="556.50" y="1023.5" >Py_..</text>
</g>
<g >
<title>PyObject_GetAttr (34,138,378 samples, 0.12%)</title><rect x="113.3" y="661" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="116.27" y="671.5" ></text>
</g>
<g >
<title>__free_pages_ok (4,444,031 samples, 0.02%)</title><rect x="219.6" y="933" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="222.63" y="943.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,230,863 samples, 0.09%)</title><rect x="141.8" y="885" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="144.82" y="895.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (189,899,606 samples, 0.67%)</title><rect x="152.6" y="645" width="8.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="155.64" y="655.5" ></text>
</g>
<g >
<title>vfs_read (26,211,802 samples, 0.09%)</title><rect x="155.1" y="229" width="1.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="158.10" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,197,038 samples, 0.09%)</title><rect x="212.3" y="581" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.32" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (111,920,957 samples, 0.40%)</title><rect x="115.8" y="805" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="815.5" ></text>
</g>
<g >
<title>alloc_pages_vma (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="581" width="1.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1171.68" y="591.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,837,821 samples, 0.12%)</title><rect x="68.5" y="581" width="1.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="71.50" y="591.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,121,926 samples, 0.12%)</title><rect x="171.1" y="485" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="174.11" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,197,038 samples, 0.09%)</title><rect x="212.3" y="389" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="215.32" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,428,829 samples, 0.09%)</title><rect x="63.8" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.80" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,200,433 samples, 0.09%)</title><rect x="203.6" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="607.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (44,903,039 samples, 0.16%)</title><rect x="201.7" y="485" width="1.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="204.72" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,208,261 samples, 0.09%)</title><rect x="214.5" y="581" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="217.51" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,710,685 samples, 0.09%)</title><rect x="118.3" y="485" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="121.25" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (300,251,302 samples, 1.06%)</title><rect x="173.6" y="773" width="12.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="176.63" y="783.5" ></text>
</g>
<g >
<title>Py_BytesMain (14,839,576,668 samples, 52.56%)</title><rect x="553.5" y="1045" width="620.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="556.50" y="1055.5" >Py_BytesMain</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,576 samples, 0.09%)</title><rect x="55.0" y="485" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="57.96" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,101,260 samples, 0.12%)</title><rect x="124.9" y="565" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.86" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (172,858,073 samples, 0.61%)</title><rect x="120.5" y="853" width="7.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="123.46" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator= (34,089,505 samples, 0.12%)</title><rect x="1107.4" y="709" width="1.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1110.38" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (53,479,760 samples, 0.19%)</title><rect x="183.9" y="533" width="2.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="186.94" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,171,603 samples, 0.09%)</title><rect x="182.8" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.85" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (67,902,262 samples, 0.24%)</title><rect x="87.2" y="581" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="90.19" y="591.5" ></text>
</g>
<g >
<title>__errno_location@plt (33,736,639 samples, 0.12%)</title><rect x="624.2" y="501" width="1.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="627.19" y="511.5" ></text>
</g>
<g >
<title>advise_stack_range (30,080,530 samples, 0.11%)</title><rect x="220.1" y="1045" width="1.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="223.11" y="1055.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,169 samples, 0.09%)</title><rect x="59.9" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.85" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (130,950,700 samples, 0.46%)</title><rect x="203.6" y="853" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (34,132,139 samples, 0.12%)</title><rect x="96.5" y="533" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="543.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,557 samples, 0.09%)</title><rect x="74.3" y="613" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="77.31" y="623.5" ></text>
</g>
<g >
<title>[timestamps.cpython-312-x86_64-linux-gnu.so] (26,061,732 samples, 0.09%)</title><rect x="114.7" y="1061" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="117.70" y="1071.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,164,292 samples, 0.12%)</title><rect x="142.9" y="421" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="145.92" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (302,773,875 samples, 1.07%)</title><rect x="152.6" y="821" width="12.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="155.64" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,185 samples, 0.09%)</title><rect x="158.4" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.39" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="709" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="719.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (34,132,139 samples, 0.12%)</title><rect x="96.5" y="149" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="99.45" y="159.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,111,509 samples, 0.09%)</title><rect x="67.4" y="357" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="70.41" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,925,031 samples, 0.09%)</title><rect x="101.7" y="357" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="104.68" y="367.5" ></text>
</g>
<g >
<title>page_fault (34,278,517 samples, 0.12%)</title><rect x="611.7" y="533" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="614.66" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,101 samples, 0.09%)</title><rect x="200.6" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.62" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,223,173 samples, 0.09%)</title><rect x="112.2" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.17" y="687.5" ></text>
</g>
<g >
<title>PyArray_NewFromDescr_int (68,215,154 samples, 0.24%)</title><rect x="927.6" y="709" width="2.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="930.56" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,171,603 samples, 0.09%)</title><rect x="182.8" y="581" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="185.85" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,213,235 samples, 0.09%)</title><rect x="66.3" y="517" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="69.31" y="527.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,124,038 samples, 0.12%)</title><rect x="1153.0" y="677" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1155.96" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (94,108,505 samples, 0.33%)</title><rect x="87.2" y="837" width="3.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="90.19" y="847.5" ></text>
</g>
<g >
<title>PyMem_Malloc (26,428,829 samples, 0.09%)</title><rect x="63.8" y="261" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="66.80" y="271.5" ></text>
</g>
<g >
<title>_PyObject_Call (180,687,028 samples, 0.64%)</title><rect x="107.1" y="885" width="7.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.15" y="895.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (103,555,233 samples, 0.37%)</title><rect x="589.1" y="837" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="592.06" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,811 samples, 0.09%)</title><rect x="48.8" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.84" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,121,926 samples, 0.12%)</title><rect x="171.1" y="389" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="174.11" y="399.5" ></text>
</g>
<g >
<title>__libc_start_main (26,208,261 samples, 0.09%)</title><rect x="214.5" y="1061" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="217.51" y="1071.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,428,829 samples, 0.09%)</title><rect x="63.8" y="453" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="66.80" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (89,287,002 samples, 0.32%)</title><rect x="173.6" y="421" width="3.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="176.63" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (436,586,046 samples, 1.55%)</title><rect x="96.5" y="1029" width="18.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.45" y="1039.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,922,003 samples, 0.19%)</title><rect x="118.3" y="613" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="121.25" y="623.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,101,260 samples, 0.12%)</title><rect x="124.9" y="533" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="127.86" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,197,038 samples, 0.09%)</title><rect x="212.3" y="405" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="215.32" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (97,421,676 samples, 0.35%)</title><rect x="187.3" y="773" width="4.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="190.28" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,138,378 samples, 0.12%)</title><rect x="113.3" y="613" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="116.27" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (90,767,697 samples, 0.32%)</title><rect x="56.1" y="725" width="3.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="59.06" y="735.5" ></text>
</g>
<g >
<title>do_user_addr_fault (30,515,148 samples, 0.11%)</title><rect x="97.9" y="341" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="100.88" y="351.5" ></text>
</g>
<g >
<title>[_ctypes.cpython-312-x86_64-linux-gnu.so] (34,098,849 samples, 0.12%)</title><rect x="85.8" y="389" width="1.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="88.77" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,287,366 samples, 0.11%)</title><rect x="41.7" y="485" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="44.73" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (52,318,437 samples, 0.19%)</title><rect x="204.7" y="501" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.69" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,679 samples, 0.09%)</title><rect x="209.1" y="805" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.07" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (52,922,003 samples, 0.19%)</title><rect x="118.3" y="709" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.25" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,337,946 samples, 0.21%)</title><rect x="43.0" y="885" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="46.04" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,318 samples, 0.09%)</title><rect x="119.4" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.37" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,036,548 samples, 0.10%)</title><rect x="79.9" y="773" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.91" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,223,173 samples, 0.09%)</title><rect x="112.2" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.17" y="623.5" ></text>
</g>
<g >
<title>do_page_fault (26,202,934 samples, 0.09%)</title><rect x="162.0" y="357" width="1.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="164.99" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="245" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="255.5" ></text>
</g>
<g >
<title>operator new (68,296,234 samples, 0.24%)</title><rect x="1117.4" y="549" width="2.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1120.36" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,287,437 samples, 0.09%)</title><rect x="186.2" y="741" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="189.18" y="751.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*&gt; (34,200,773 samples, 0.12%)</title><rect x="1070.3" y="613" width="1.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1073.33" y="623.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (204,774,513 samples, 0.73%)</title><rect x="1047.5" y="613" width="8.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1050.53" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (52,394,969 samples, 0.19%)</title><rect x="81.0" y="725" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.04" y="735.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (118,036,668 samples, 0.42%)</title><rect x="38.1" y="1029" width="4.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="41.11" y="1039.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,206,243 samples, 0.09%)</title><rect x="90.0" y="661" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="93.03" y="671.5" ></text>
</g>
<g >
<title>try_charge (34,242,696 samples, 0.12%)</title><rect x="705.1" y="357" width="1.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="708.09" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (858,602,676 samples, 3.04%)</title><rect x="78.8" y="1061" width="35.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="1071.5" >[py..</text>
</g>
<g >
<title>do_anonymous_page (68,440,040 samples, 0.24%)</title><rect x="621.3" y="341" width="2.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="624.33" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (27,036,548 samples, 0.10%)</title><rect x="79.9" y="517" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="82.91" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,428,829 samples, 0.09%)</title><rect x="63.8" y="325" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="66.80" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (102,826,212 samples, 0.36%)</title><rect x="1031.8" y="581" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1034.80" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,946 samples, 0.09%)</title><rect x="195.2" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="198.25" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,857,821 samples, 0.12%)</title><rect x="160.6" y="437" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="163.58" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,230,863 samples, 0.09%)</title><rect x="141.8" y="693" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="144.82" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (60,337,946 samples, 0.21%)</title><rect x="43.0" y="725" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,378 samples, 0.12%)</title><rect x="113.3" y="357" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.27" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,551,590 samples, 0.19%)</title><rect x="52.8" y="629" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="55.77" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (52,394,969 samples, 0.19%)</title><rect x="81.0" y="789" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.04" y="799.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,111,509 samples, 0.09%)</title><rect x="67.4" y="645" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="70.41" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (134,305,359 samples, 0.48%)</title><rect x="71.0" y="853" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.01" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,243 samples, 0.09%)</title><rect x="90.0" y="405" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.03" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (67,902,262 samples, 0.24%)</title><rect x="87.2" y="453" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.19" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (232,633,989 samples, 0.82%)</title><rect x="142.9" y="821" width="9.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.92" y="831.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManagerImpl::run (34,135,790 samples, 0.12%)</title><rect x="38.1" y="533" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="41.11" y="543.5" ></text>
</g>
<g >
<title>alloc_pages_vma (68,397,652 samples, 0.24%)</title><rect x="617.4" y="341" width="2.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="620.38" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (232,633,989 samples, 0.82%)</title><rect x="142.9" y="885" width="9.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="145.92" y="895.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,164,292 samples, 0.12%)</title><rect x="142.9" y="501" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.92" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,030,025 samples, 0.12%)</title><rect x="165.3" y="453" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="168.29" y="463.5" ></text>
</g>
<g >
<title>generic_file_read_iter (26,211,802 samples, 0.09%)</title><rect x="155.1" y="165" width="1.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="158.10" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,684 samples, 0.09%)</title><rect x="103.9" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.86" y="447.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,197,038 samples, 0.09%)</title><rect x="212.3" y="677" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="215.32" y="687.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (59,875,676 samples, 0.21%)</title><rect x="192.7" y="469" width="2.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="195.74" y="479.5" ></text>
</g>
<g >
<title>Py_RunMain (52,373,735 samples, 0.19%)</title><rect x="76.6" y="1061" width="2.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="79.62" y="1071.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (32,470,195 samples, 0.12%)</title><rect x="152.6" y="405" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="155.64" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,167,861 samples, 0.09%)</title><rect x="45.6" y="693" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.56" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (34,101,260 samples, 0.12%)</title><rect x="124.9" y="517" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.86" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,230,863 samples, 0.09%)</title><rect x="141.8" y="949" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="144.82" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (33,289,321 samples, 0.12%)</title><rect x="144.3" y="501" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="147.34" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back (68,423,572 samples, 0.24%)</title><rect x="984.6" y="613" width="2.9" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="987.65" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (120,325,477 samples, 0.43%)</title><rect x="107.1" y="581" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="591.5" ></text>
</g>
<g >
<title>do_page_fault (30,515,148 samples, 0.11%)</title><rect x="97.9" y="373" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="100.88" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (104,838,260 samples, 0.37%)</title><rect x="102.8" y="837" width="4.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="105.76" y="847.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,138,378 samples, 0.12%)</title><rect x="113.3" y="581" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="116.27" y="591.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (34,181,706 samples, 0.12%)</title><rect x="1006.1" y="629" width="1.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1009.07" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,356,437 samples, 0.09%)</title><rect x="99.2" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="102.15" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (52,318,437 samples, 0.19%)</title><rect x="204.7" y="517" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.69" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (439,496,438 samples, 1.56%)</title><rect x="168.9" y="981" width="18.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="171.91" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,243 samples, 0.09%)</title><rect x="90.0" y="645" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="93.03" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (119,467,939 samples, 0.42%)</title><rect x="191.3" y="677" width="5.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="194.35" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (173,502,057 samples, 0.61%)</title><rect x="196.3" y="933" width="7.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="199.34" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (34,132,003 samples, 0.12%)</title><rect x="100.3" y="373" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.25" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,576 samples, 0.09%)</title><rect x="55.0" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.96" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,101 samples, 0.09%)</title><rect x="200.6" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.62" y="495.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,210,408 samples, 0.09%)</title><rect x="159.5" y="373" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="162.48" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (52,922,003 samples, 0.19%)</title><rect x="118.3" y="741" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.25" y="751.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (26,710,685 samples, 0.09%)</title><rect x="118.3" y="405" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="121.25" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,837,821 samples, 0.12%)</title><rect x="68.5" y="661" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="71.50" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,766,166 samples, 0.28%)</title><rect x="52.8" y="709" width="3.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.77" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (54,665,706 samples, 0.19%)</title><rect x="129.0" y="533" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.02" y="543.5" ></text>
</g>
<g >
<title>__mod_node_page_state (34,210,141 samples, 0.12%)</title><rect x="876.6" y="293" width="1.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="879.61" y="303.5" ></text>
</g>
<g >
<title>dlopen_doit (44,903,039 samples, 0.16%)</title><rect x="201.7" y="469" width="1.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="204.72" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,104,293 samples, 0.12%)</title><rect x="110.7" y="501" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.75" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,204,067 samples, 0.09%)</title><rect x="167.8" y="629" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="170.81" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,964,161 samples, 0.28%)</title><rect x="120.5" y="501" width="3.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="123.46" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (31,287,366 samples, 0.11%)</title><rect x="41.7" y="725" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="44.73" y="735.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,323,130 samples, 0.09%)</title><rect x="53.9" y="389" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="56.86" y="399.5" ></text>
</g>
<g >
<title>inflate (4,274,456,841 samples, 15.14%)</title><rect x="707.9" y="517" width="178.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="710.95" y="527.5" >inflate</text>
</g>
<g >
<title>[python3.12] (26,209,376 samples, 0.09%)</title><rect x="123.8" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.76" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (28,657,867 samples, 0.10%)</title><rect x="174.7" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.75" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,984,802 samples, 0.12%)</title><rect x="44.1" y="389" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="47.14" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (79,651,363 samples, 0.28%)</title><rect x="182.8" y="613" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="185.85" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,167,861 samples, 0.09%)</title><rect x="45.6" y="741" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="48.56" y="751.5" ></text>
</g>
<g >
<title>boost::optional&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::~optional (68,333,881 samples, 0.24%)</title><rect x="941.8" y="709" width="2.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="944.79" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (34,135,790 samples, 0.12%)</title><rect x="38.1" y="933" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.11" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,298 samples, 0.09%)</title><rect x="77.7" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.72" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_read (26,211,802 samples, 0.09%)</title><rect x="155.1" y="325" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="158.10" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (134,305,359 samples, 0.48%)</title><rect x="71.0" y="917" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.01" y="927.5" ></text>
</g>
<g >
<title>dl_new_hash (44,903,039 samples, 0.16%)</title><rect x="201.7" y="341" width="1.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="204.72" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (97,421,676 samples, 0.35%)</title><rect x="187.3" y="597" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.28" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (297,676,062 samples, 1.05%)</title><rect x="56.1" y="885" width="12.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="59.06" y="895.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (27,036,548 samples, 0.10%)</title><rect x="79.9" y="821" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="82.91" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (68,206,613 samples, 0.24%)</title><rect x="60.9" y="405" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="63.95" y="415.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (86,221,184 samples, 0.31%)</title><rect x="107.1" y="517" width="3.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="110.15" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,197,038 samples, 0.09%)</title><rect x="212.3" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.32" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (151,060,758 samples, 0.54%)</title><rect x="96.5" y="901" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (33,583,276 samples, 0.12%)</title><rect x="126.3" y="309" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.29" y="319.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,213,235 samples, 0.09%)</title><rect x="66.3" y="741" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="69.31" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (52,613,512 samples, 0.19%)</title><rect x="39.5" y="725" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.53" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (34,132,139 samples, 0.12%)</title><rect x="96.5" y="405" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,337,946 samples, 0.21%)</title><rect x="43.0" y="613" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.04" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,096,832 samples, 0.10%)</title><rect x="75.4" y="501" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="78.41" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (90,767,697 samples, 0.32%)</title><rect x="56.1" y="693" width="3.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="59.06" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_emplace_equal&lt;std::pair&lt;float, unsigned long&gt; &gt; (68,396,614 samples, 0.24%)</title><rect x="1158.7" y="709" width="2.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1161.67" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (33,385,317 samples, 0.12%)</title><rect x="191.3" y="437" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.35" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,642,433 samples, 0.09%)</title><rect x="83.2" y="565" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="86.23" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (436,491,427 samples, 1.55%)</title><rect x="52.8" y="933" width="18.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="55.77" y="943.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,922,003 samples, 0.19%)</title><rect x="118.3" y="725" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="121.25" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (189,899,606 samples, 0.67%)</title><rect x="152.6" y="757" width="8.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.64" y="767.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,164,292 samples, 0.12%)</title><rect x="142.9" y="533" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.92" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,220,086 samples, 0.09%)</title><rect x="181.8" y="453" width="1.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="184.75" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate (34,212,967 samples, 0.12%)</title><rect x="998.9" y="581" width="1.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1001.93" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (375,110,149 samples, 1.33%)</title><rect x="572.0" y="933" width="15.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="574.96" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,633,721 samples, 0.09%)</title><rect x="145.7" y="357" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="148.74" y="367.5" ></text>
</g>
<g >
<title>PyGILState_Ensure (34,103,010 samples, 0.12%)</title><rect x="929.0" y="661" width="1.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="931.99" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (59,875,676 samples, 0.21%)</title><rect x="192.7" y="405" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="195.74" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (67,902,262 samples, 0.24%)</title><rect x="87.2" y="485" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.19" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (78,766,166 samples, 0.28%)</title><rect x="52.8" y="757" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (300,251,302 samples, 1.06%)</title><rect x="173.6" y="789" width="12.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="176.63" y="799.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (68,534,392 samples, 0.24%)</title><rect x="1120.2" y="581" width="2.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1123.21" y="591.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,211,318 samples, 0.09%)</title><rect x="119.4" y="581" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="122.37" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,869,282 samples, 0.10%)</title><rect x="56.1" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (112,874,269 samples, 0.40%)</title><rect x="160.6" y="725" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="163.58" y="735.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,799,484 samples, 0.19%)</title><rect x="71.0" y="501" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="74.01" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,132,139 samples, 0.12%)</title><rect x="96.5" y="565" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="99.45" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,167,861 samples, 0.09%)</title><rect x="45.6" y="645" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (34,121,926 samples, 0.12%)</title><rect x="171.1" y="405" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.11" y="415.5" ></text>
</g>
<g >
<title>PyTuple_New (24,745,691 samples, 0.09%)</title><rect x="589.1" y="533" width="1.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="592.06" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="533" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (29,096,832 samples, 0.10%)</title><rect x="75.4" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.41" y="591.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (34,181,706 samples, 0.12%)</title><rect x="1006.1" y="613" width="1.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1009.07" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,337,946 samples, 0.21%)</title><rect x="43.0" y="805" width="2.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="46.04" y="815.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,613,512 samples, 0.19%)</title><rect x="39.5" y="645" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.53" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (173,502,057 samples, 0.61%)</title><rect x="196.3" y="949" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="959.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (67,466,652 samples, 0.24%)</title><rect x="560.6" y="901" width="2.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="563.61" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="405" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (172,369,574 samples, 0.61%)</title><rect x="45.6" y="933" width="7.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="645" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,557 samples, 0.09%)</title><rect x="74.3" y="469" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="77.31" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,434,141 samples, 0.09%)</title><rect x="210.2" y="869" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="213.16" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,167,861 samples, 0.09%)</title><rect x="45.6" y="757" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (172,369,574 samples, 0.61%)</title><rect x="45.6" y="1045" width="7.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="1055.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (271,564,553 samples, 0.96%)</title><rect x="56.1" y="773" width="11.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="59.06" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (67,902,262 samples, 0.24%)</title><rect x="87.2" y="693" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.19" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,200,433 samples, 0.09%)</title><rect x="203.6" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (30,515,148 samples, 0.11%)</title><rect x="97.9" y="549" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.88" y="559.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (34,135,790 samples, 0.12%)</title><rect x="38.1" y="693" width="1.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="41.11" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,022,792 samples, 0.09%)</title><rect x="46.7" y="389" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="49.66" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,488,440 samples, 0.21%)</title><rect x="99.2" y="501" width="2.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="102.15" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,024,701 samples, 0.12%)</title><rect x="95.1" y="757" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.07" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (7,995,886,656 samples, 28.32%)</title><rect x="596.2" y="853" width="334.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="599.23" y="863.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>[python3.12] (26,215,064 samples, 0.09%)</title><rect x="172.5" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.53" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,204,067 samples, 0.09%)</title><rect x="167.8" y="597" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="170.81" y="607.5" ></text>
</g>
<g >
<title>boost::relax_target&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::plus&lt;float&gt;, std::less&lt;float&gt; &gt; (648,171,250 samples, 2.30%)</title><rect x="1041.8" y="629" width="27.1" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="1044.81" y="639.5" >b..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,182 samples, 0.09%)</title><rect x="150.4" y="357" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="153.45" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (78,426,582 samples, 0.28%)</title><rect x="46.7" y="693" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.66" y="703.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,211,318 samples, 0.09%)</title><rect x="119.4" y="469" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="122.37" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (112,874,269 samples, 0.40%)</title><rect x="160.6" y="629" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="163.58" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,174,437 samples, 0.09%)</title><rect x="76.6" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,423,284 samples, 0.19%)</title><rect x="166.7" y="661" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="169.72" y="671.5" ></text>
</g>
<g >
<title>do_sys_open (27,198,707 samples, 0.10%)</title><rect x="183.9" y="261" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="186.94" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,613,512 samples, 0.19%)</title><rect x="39.5" y="661" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.53" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,200,433 samples, 0.09%)</title><rect x="203.6" y="453" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="206.59" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,557 samples, 0.09%)</title><rect x="74.3" y="229" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.31" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (68,235,612 samples, 0.24%)</title><rect x="84.3" y="773" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (33,289,321 samples, 0.12%)</title><rect x="144.3" y="533" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="147.34" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (79,651,363 samples, 0.28%)</title><rect x="182.8" y="725" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.85" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (68,206,613 samples, 0.24%)</title><rect x="60.9" y="453" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.95" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,132,003 samples, 0.12%)</title><rect x="100.3" y="357" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.25" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,373,735 samples, 0.19%)</title><rect x="76.6" y="725" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="79.62" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (54,665,706 samples, 0.19%)</title><rect x="129.0" y="501" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.02" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,220,774 samples, 0.09%)</title><rect x="211.2" y="597" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="214.22" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (13,731,023,876 samples, 48.63%)</title><rect x="596.2" y="901" width="573.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="599.23" y="911.5" >_PyObject_MakeTpCall</text>
</g>
<g >
<title>finish_task_switch (10,809,813 samples, 0.04%)</title><rect x="219.6" y="1029" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="222.61" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (26,287,437 samples, 0.09%)</title><rect x="186.2" y="709" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.18" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (52,392,061 samples, 0.19%)</title><rect x="108.6" y="437" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.56" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (102,392,917 samples, 0.36%)</title><rect x="196.3" y="485" width="4.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="199.34" y="495.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,230,863 samples, 0.09%)</title><rect x="141.8" y="1045" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="144.82" y="1055.5" ></text>
</g>
<g >
<title>_int_free (34,261,214 samples, 0.12%)</title><rect x="1167.2" y="645" width="1.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1170.25" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (34,265,017 samples, 0.12%)</title><rect x="1157.2" y="677" width="1.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1160.23" y="687.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (501,884,542 samples, 1.78%)</title><rect x="852.8" y="357" width="21.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="855.80" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,167,861 samples, 0.09%)</title><rect x="45.6" y="389" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.56" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (34,257,870 samples, 0.12%)</title><rect x="1020.4" y="517" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1023.36" y="527.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,109 samples, 0.09%)</title><rect x="92.6" y="485" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="95.55" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,252,462 samples, 0.09%)</title><rect x="115.8" y="357" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="118.79" y="367.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,196,063 samples, 0.09%)</title><rect x="170.0" y="485" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="173.01" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (79,651,363 samples, 0.28%)</title><rect x="182.8" y="709" width="3.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="185.85" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,182 samples, 0.09%)</title><rect x="150.4" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.45" y="351.5" ></text>
</g>
<g >
<title>__do_page_fault (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="661" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1171.68" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,261 samples, 0.09%)</title><rect x="214.5" y="821" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.51" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,837,821 samples, 0.12%)</title><rect x="68.5" y="773" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="71.50" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (130,950,700 samples, 0.46%)</title><rect x="203.6" y="933" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (535,407,864 samples, 1.90%)</title><rect x="142.9" y="981" width="22.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.92" y="991.5" >_..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (68,235,612 samples, 0.24%)</title><rect x="84.3" y="853" width="2.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="87.34" y="863.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (68,158,156 samples, 0.24%)</title><rect x="880.9" y="469" width="2.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="883.89" y="479.5" ></text>
</g>
<g >
<title>_int_malloc (197,378,070 samples, 0.70%)</title><rect x="615.9" y="469" width="8.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="618.95" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (119,467,939 samples, 0.42%)</title><rect x="191.3" y="645" width="5.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="194.35" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (68,235,612 samples, 0.24%)</title><rect x="84.3" y="693" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.34" y="703.5" ></text>
</g>
<g >
<title>rmqueue (34,265,182 samples, 0.12%)</title><rect x="618.8" y="293" width="1.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="621.80" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (29,096,832 samples, 0.10%)</title><rect x="75.4" y="453" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="78.41" y="463.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 1&gt;::coeffRef (33,802,756 samples, 0.12%)</title><rect x="930.4" y="741" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="933.41" y="751.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (32,746,492 samples, 0.12%)</title><rect x="116.9" y="421" width="1.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="119.88" y="431.5" ></text>
</g>
<g >
<title>page_fault (68,440,040 samples, 0.24%)</title><rect x="621.3" y="437" width="2.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="624.33" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (183,190,670 samples, 0.65%)</title><rect x="1177.0" y="1045" width="7.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1180.00" y="1055.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (103,555,233 samples, 0.37%)</title><rect x="589.1" y="661" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="592.06" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,287,366 samples, 0.11%)</title><rect x="41.7" y="613" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="44.73" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,098,849 samples, 0.12%)</title><rect x="85.8" y="549" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.77" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (33,385,317 samples, 0.12%)</title><rect x="191.3" y="517" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.35" y="527.5" ></text>
</g>
<g >
<title>__alloc_file (27,198,707 samples, 0.10%)</title><rect x="183.9" y="197" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="186.94" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_openat (26,252,462 samples, 0.09%)</title><rect x="115.8" y="325" width="1.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="118.79" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,799,484 samples, 0.19%)</title><rect x="71.0" y="709" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="74.01" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,167,861 samples, 0.09%)</title><rect x="45.6" y="581" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="591.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,214,576 samples, 0.09%)</title><rect x="55.0" y="629" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="57.96" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (232,633,989 samples, 0.82%)</title><rect x="142.9" y="725" width="9.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,200,433 samples, 0.09%)</title><rect x="203.6" y="581" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="206.59" y="591.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,373,735 samples, 0.19%)</title><rect x="76.6" y="757" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="79.62" y="767.5" ></text>
</g>
<g >
<title>path_openat (26,252,462 samples, 0.09%)</title><rect x="115.8" y="277" width="1.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="118.79" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,546,263 samples, 0.09%)</title><rect x="164.2" y="341" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.18" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (169,300,254 samples, 0.60%)</title><rect x="914.8" y="709" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="917.80" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (54,665,706 samples, 0.19%)</title><rect x="129.0" y="453" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.02" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (34,224,658 samples, 0.12%)</title><rect x="1068.9" y="629" width="1.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1071.90" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (180,687,028 samples, 0.64%)</title><rect x="107.1" y="965" width="7.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="975.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::queue&lt;std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, void&gt; (68,292,750 samples, 0.24%)</title><rect x="1104.5" y="709" width="2.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1107.52" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (68,127,382 samples, 0.24%)</title><rect x="919.0" y="693" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="922.03" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (97,421,676 samples, 0.35%)</title><rect x="187.3" y="581" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.28" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,513 samples, 0.09%)</title><rect x="151.5" y="389" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="154.54" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,946 samples, 0.09%)</title><rect x="195.2" y="341" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="198.25" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,167,861 samples, 0.09%)</title><rect x="45.6" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (510,982,775 samples, 1.81%)</title><rect x="120.5" y="981" width="21.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="123.46" y="991.5" >_..</text>
</g>
<g >
<title>[python3.12] (26,869,282 samples, 0.10%)</title><rect x="56.1" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (193,329,428 samples, 0.68%)</title><rect x="1176.6" y="1077" width="8.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1179.57" y="1087.5" ></text>
</g>
<g >
<title>[python3.12] (52,587,110 samples, 0.19%)</title><rect x="154.0" y="357" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.00" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (29,940,596 samples, 0.11%)</title><rect x="57.2" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="60.18" y="431.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,205,811 samples, 0.09%)</title><rect x="48.8" y="421" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="51.84" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (25,434,141 samples, 0.09%)</title><rect x="210.2" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.16" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (97,421,676 samples, 0.35%)</title><rect x="187.3" y="629" width="4.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="190.28" y="639.5" ></text>
</g>
<g >
<title>PyObject_Malloc (197,378,070 samples, 0.70%)</title><rect x="615.9" y="501" width="8.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="618.95" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (25,434,141 samples, 0.09%)</title><rect x="210.2" y="565" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.16" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,745,010 samples, 0.12%)</title><rect x="64.9" y="725" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.90" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,197,038 samples, 0.09%)</title><rect x="212.3" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.32" y="671.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (34,139,830 samples, 0.12%)</title><rect x="62.4" y="325" width="1.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="65.37" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (237,093,512 samples, 0.84%)</title><rect x="554.9" y="949" width="9.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="557.93" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (130,950,700 samples, 0.46%)</title><rect x="203.6" y="869" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (7,995,886,656 samples, 28.32%)</title><rect x="596.2" y="821" width="334.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="599.23" y="831.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,210,679 samples, 0.09%)</title><rect x="209.1" y="629" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.07" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (172,369,574 samples, 0.61%)</title><rect x="45.6" y="949" width="7.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="959.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,373,735 samples, 0.19%)</title><rect x="76.6" y="901" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="79.62" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,197,038 samples, 0.09%)</title><rect x="212.3" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.32" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,287,437 samples, 0.09%)</title><rect x="186.2" y="629" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.18" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,950 samples, 0.09%)</title><rect x="81.0" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.04" y="495.5" ></text>
</g>
<g >
<title>__isatty (26,642,433 samples, 0.09%)</title><rect x="83.2" y="357" width="1.1" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="86.23" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,679 samples, 0.09%)</title><rect x="209.1" y="757" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.07" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (173,502,057 samples, 0.61%)</title><rect x="196.3" y="741" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="751.5" ></text>
</g>
<g >
<title>page_fault (26,202,934 samples, 0.09%)</title><rect x="162.0" y="373" width="1.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="164.99" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (52,318,437 samples, 0.19%)</title><rect x="204.7" y="533" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.69" y="543.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (44,903,039 samples, 0.16%)</title><rect x="201.7" y="357" width="1.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="204.72" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (119,467,939 samples, 0.42%)</title><rect x="191.3" y="757" width="5.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="194.35" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,431,830 samples, 0.19%)</title><rect x="206.9" y="469" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="209.87" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (34,098,849 samples, 0.12%)</title><rect x="85.8" y="469" width="1.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="88.77" y="479.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::~optional_base (68,333,881 samples, 0.24%)</title><rect x="941.8" y="693" width="2.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="944.79" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,417,812 samples, 0.19%)</title><rect x="211.2" y="709" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="214.22" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (338,124,702 samples, 1.20%)</title><rect x="127.7" y="789" width="14.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.69" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,385,317 samples, 0.12%)</title><rect x="191.3" y="453" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.35" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,837,821 samples, 0.12%)</title><rect x="68.5" y="469" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.50" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,200,433 samples, 0.09%)</title><rect x="203.6" y="549" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="206.59" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,576 samples, 0.09%)</title><rect x="55.0" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.96" y="559.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,220,774 samples, 0.09%)</title><rect x="211.2" y="469" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="214.22" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (63,898,415 samples, 0.23%)</title><rect x="57.2" y="533" width="2.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.18" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,135,790 samples, 0.12%)</title><rect x="38.1" y="949" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.11" y="959.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,199,298 samples, 0.09%)</title><rect x="77.7" y="437" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="80.72" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,424,646 samples, 0.09%)</title><rect x="168.9" y="421" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="171.91" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,557 samples, 0.09%)</title><rect x="74.3" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.31" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,679 samples, 0.09%)</title><rect x="209.1" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.07" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (68,235,612 samples, 0.24%)</title><rect x="84.3" y="741" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="751.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (239,738,424 samples, 0.85%)</title><rect x="1026.1" y="613" width="10.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1029.08" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (89,287,002 samples, 0.32%)</title><rect x="173.6" y="453" width="3.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="176.63" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;::vector (33,521,481 samples, 0.12%)</title><rect x="931.8" y="453" width="1.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="934.83" y="463.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (25,434,141 samples, 0.09%)</title><rect x="210.2" y="965" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="213.16" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,628,473 samples, 0.28%)</title><rect x="211.2" y="933" width="3.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="214.22" y="943.5" ></text>
</g>
<g >
<title>_PyObject_Call (37,174,366 samples, 0.13%)</title><rect x="187.3" y="437" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="190.28" y="447.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,216,209 samples, 0.09%)</title><rect x="102.8" y="469" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="105.76" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,024,701 samples, 0.12%)</title><rect x="95.1" y="821" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.07" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,576 samples, 0.09%)</title><rect x="55.0" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.96" y="607.5" ></text>
</g>
<g >
<title>PyObject_GetItem (25,843,098 samples, 0.09%)</title><rect x="139.3" y="517" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="142.32" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,642,433 samples, 0.09%)</title><rect x="83.2" y="789" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="86.23" y="799.5" ></text>
</g>
<g >
<title>PyTraceMalloc_Untrack (102,077,362 samples, 0.36%)</title><rect x="923.3" y="677" width="4.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="926.30" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,622,051 samples, 0.28%)</title><rect x="103.9" y="661" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="106.86" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (111,920,957 samples, 0.40%)</title><rect x="115.8" y="933" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="943.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,205,811 samples, 0.09%)</title><rect x="48.8" y="405" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="51.84" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,829,123 samples, 0.12%)</title><rect x="107.1" y="389" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.15" y="399.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,679 samples, 0.09%)</title><rect x="209.1" y="933" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="212.07" y="943.5" ></text>
</g>
<g >
<title>error_entry (34,066,783 samples, 0.12%)</title><rect x="60.9" y="325" width="1.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="63.95" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (68,124,241 samples, 0.24%)</title><rect x="1000.4" y="597" width="2.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1003.36" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,318 samples, 0.09%)</title><rect x="119.4" y="517" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="122.37" y="527.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33,595,188 samples, 0.12%)</title><rect x="563.4" y="853" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="566.43" y="863.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (120,325,477 samples, 0.43%)</title><rect x="107.1" y="549" width="5.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="110.15" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (33,289,321 samples, 0.12%)</title><rect x="144.3" y="581" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="147.34" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,261 samples, 0.09%)</title><rect x="214.5" y="917" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.51" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,287,437 samples, 0.09%)</title><rect x="186.2" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.18" y="543.5" ></text>
</g>
<g >
<title>__handle_mm_fault (68,397,652 samples, 0.24%)</title><rect x="617.4" y="373" width="2.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="620.38" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,058,837 samples, 0.12%)</title><rect x="93.6" y="437" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.65" y="447.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,557 samples, 0.09%)</title><rect x="74.3" y="549" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="77.31" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (102,392,917 samples, 0.36%)</title><rect x="196.3" y="613" width="4.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="199.34" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,843,098 samples, 0.09%)</title><rect x="139.3" y="485" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="142.32" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,583,276 samples, 0.12%)</title><rect x="126.3" y="533" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="129.29" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (102,392,917 samples, 0.36%)</title><rect x="196.3" y="533" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,428,829 samples, 0.09%)</title><rect x="63.8" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.80" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (60,337,946 samples, 0.21%)</title><rect x="43.0" y="1029" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="1039.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (34,135,790 samples, 0.12%)</title><rect x="38.1" y="517" width="1.4" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="41.11" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,417,812 samples, 0.19%)</title><rect x="211.2" y="741" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.22" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,712,665 samples, 0.12%)</title><rect x="147.9" y="373" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="150.94" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,161,388 samples, 0.09%)</title><rect x="138.2" y="357" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.23" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,323,130 samples, 0.09%)</title><rect x="53.9" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.86" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,230,863 samples, 0.09%)</title><rect x="141.8" y="965" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="144.82" y="975.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,058,837 samples, 0.12%)</title><rect x="93.6" y="597" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="96.65" y="607.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,211,728 samples, 0.09%)</title><rect x="78.8" y="725" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="81.81" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (169,300,254 samples, 0.60%)</title><rect x="914.8" y="725" width="7.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="917.80" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (68,277,815 samples, 0.24%)</title><rect x="197.8" y="357" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.77" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,495,990 samples, 0.09%)</title><rect x="137.1" y="357" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="140.12" y="367.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (33,745,010 samples, 0.12%)</title><rect x="64.9" y="421" width="1.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="67.90" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (86,742,635 samples, 0.31%)</title><rect x="168.9" y="661" width="3.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="171.91" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (52,613,512 samples, 0.19%)</title><rect x="39.5" y="757" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.53" y="767.5" ></text>
</g>
<g >
<title>page_fault (170,851,108 samples, 0.61%)</title><rect x="699.4" y="501" width="7.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="702.39" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,799,484 samples, 0.19%)</title><rect x="71.0" y="581" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="74.01" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,434,141 samples, 0.09%)</title><rect x="210.2" y="373" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="213.16" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,576 samples, 0.09%)</title><rect x="55.0" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.96" y="463.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (34,200,619 samples, 0.12%)</title><rect x="1094.5" y="677" width="1.5" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1097.52" y="687.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::~adj_list_edge_iterator (68,333,881 samples, 0.24%)</title><rect x="941.8" y="725" width="2.8" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="944.79" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,223,173 samples, 0.09%)</title><rect x="112.2" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.17" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,428,829 samples, 0.09%)</title><rect x="63.8" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.80" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (512,311,224 samples, 1.81%)</title><rect x="1108.8" y="693" width="21.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1111.80" y="703.5" >s..</text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,281,053 samples, 0.09%)</title><rect x="185.1" y="373" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="188.08" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (90,767,697 samples, 0.32%)</title><rect x="56.1" y="661" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.06" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (34,200,773 samples, 0.12%)</title><rect x="1070.3" y="629" width="1.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1073.33" y="639.5" ></text>
</g>
<g >
<title>_PyRun_AnyFileObject (52,373,735 samples, 0.19%)</title><rect x="76.6" y="1045" width="2.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="79.62" y="1055.5" ></text>
</g>
<g >
<title>[python3.12] (26,464,585 samples, 0.09%)</title><rect x="180.6" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.65" y="335.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::vertex_set (34,279,544 samples, 0.12%)</title><rect x="1074.6" y="629" width="1.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1077.62" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,167,861 samples, 0.09%)</title><rect x="45.6" y="533" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="48.56" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,230,863 samples, 0.09%)</title><rect x="141.8" y="917" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="144.82" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,174,437 samples, 0.09%)</title><rect x="76.6" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="399.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (34,289,059 samples, 0.12%)</title><rect x="1087.4" y="693" width="1.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1090.37" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,058,837 samples, 0.12%)</title><rect x="93.6" y="741" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.65" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (220,599,939 samples, 0.78%)</title><rect x="173.6" y="677" width="9.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.63" y="687.5" ></text>
</g>
<g >
<title>error_entry (34,259,194 samples, 0.12%)</title><rect x="849.9" y="485" width="1.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="852.93" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,464,585 samples, 0.09%)</title><rect x="180.6" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.65" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (68,235,612 samples, 0.24%)</title><rect x="84.3" y="677" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,557 samples, 0.09%)</title><rect x="74.3" y="261" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.31" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (33,984,802 samples, 0.12%)</title><rect x="44.1" y="517" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.14" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,215,064 samples, 0.09%)</title><rect x="172.5" y="373" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="175.53" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,837,821 samples, 0.12%)</title><rect x="68.5" y="837" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.50" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (78,426,582 samples, 0.28%)</title><rect x="46.7" y="773" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.66" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,745,010 samples, 0.12%)</title><rect x="64.9" y="597" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="67.90" y="607.5" ></text>
</g>
<g >
<title>Py_RunMain (14,753,290,031 samples, 52.25%)</title><rect x="553.5" y="1029" width="616.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="556.50" y="1039.5" >Py_RunMain</text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,661 samples, 0.09%)</title><rect x="213.4" y="693" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="216.41" y="703.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,145,527 samples, 0.12%)</title><rect x="1134.4" y="645" width="1.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1137.44" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,679 samples, 0.09%)</title><rect x="209.1" y="949" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.07" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (34,136,763 samples, 0.12%)</title><rect x="84.3" y="565" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (7,860,713,005 samples, 27.84%)</title><rect x="599.0" y="773" width="328.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="602.03" y="783.5" >[python3.12]</text>
</g>
<g >
<title>do_syscall_64 (26,252,462 samples, 0.09%)</title><rect x="115.8" y="341" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="118.79" y="351.5" ></text>
</g>
<g >
<title>_PyModule_ClearDict (34,185,861 samples, 0.12%)</title><rect x="587.6" y="981" width="1.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="590.63" y="991.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,211,728 samples, 0.09%)</title><rect x="78.8" y="581" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="81.81" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (198,469,697 samples, 0.70%)</title><rect x="144.3" y="613" width="8.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="147.34" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (86,453,309 samples, 0.31%)</title><rect x="165.3" y="965" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="168.29" y="975.5" ></text>
</g>
<g >
<title>__free_pages (5,536,516 samples, 0.02%)</title><rect x="219.6" y="949" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="222.63" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,383,005 samples, 0.09%)</title><rect x="592.3" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="595.29" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,217 samples, 0.09%)</title><rect x="166.7" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.72" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,318 samples, 0.09%)</title><rect x="119.4" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.37" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (172,858,073 samples, 0.61%)</title><rect x="120.5" y="709" width="7.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="719.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (86,453,309 samples, 0.31%)</title><rect x="165.3" y="837" width="3.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="168.29" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (81,505,875 samples, 0.29%)</title><rect x="73.2" y="645" width="3.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="76.22" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,613,512 samples, 0.19%)</title><rect x="39.5" y="773" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="42.53" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (271,185,936 samples, 0.96%)</title><rect x="553.5" y="981" width="11.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="556.50" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,486 samples, 0.09%)</title><rect x="73.2" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.22" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,728 samples, 0.09%)</title><rect x="78.8" y="949" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="81.81" y="959.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,431,830 samples, 0.19%)</title><rect x="206.9" y="533" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="209.87" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (97,421,676 samples, 0.35%)</title><rect x="187.3" y="661" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.28" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,061,732 samples, 0.09%)</title><rect x="114.7" y="1045" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.70" y="1055.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (68,208,075 samples, 0.24%)</title><rect x="702.2" y="341" width="2.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="705.24" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,136,763 samples, 0.12%)</title><rect x="84.3" y="549" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="87.34" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (59,917,445 samples, 0.21%)</title><rect x="147.9" y="389" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="150.94" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (52,373,735 samples, 0.19%)</title><rect x="76.6" y="741" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (34,055,020 samples, 0.12%)</title><rect x="601.9" y="661" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="604.87" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,323,450 samples, 0.09%)</title><rect x="120.5" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="447.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,428,829 samples, 0.09%)</title><rect x="63.8" y="565" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="66.80" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,109 samples, 0.09%)</title><rect x="92.6" y="517" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.55" y="527.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (34,231,577 samples, 0.12%)</title><rect x="1004.6" y="613" width="1.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1007.64" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,799,484 samples, 0.19%)</title><rect x="71.0" y="597" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="74.01" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (34,135,790 samples, 0.12%)</title><rect x="38.1" y="709" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="41.11" y="719.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="757" width="3.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1173.11" y="767.5" ></text>
</g>
<g >
<title>do_user_addr_fault (26,061,732 samples, 0.09%)</title><rect x="114.7" y="933" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="117.70" y="943.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (25,434,141 samples, 0.09%)</title><rect x="210.2" y="629" width="1.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="213.16" y="639.5" ></text>
</g>
<g >
<title>pthread_cond_signal@plt (34,098,849 samples, 0.12%)</title><rect x="85.8" y="357" width="1.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="88.77" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,223,173 samples, 0.09%)</title><rect x="112.2" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.17" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (220,599,939 samples, 0.78%)</title><rect x="173.6" y="725" width="9.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="176.63" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,642,433 samples, 0.09%)</title><rect x="83.2" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.23" y="399.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (33,829,123 samples, 0.12%)</title><rect x="107.1" y="341" width="1.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="110.15" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,058,837 samples, 0.12%)</title><rect x="93.6" y="453" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="96.65" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (297,676,062 samples, 1.05%)</title><rect x="56.1" y="869" width="12.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="879.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,206,243 samples, 0.09%)</title><rect x="90.0" y="629" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="93.03" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,223,173 samples, 0.09%)</title><rect x="112.2" y="629" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="115.17" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (132,285,678 samples, 0.47%)</title><rect x="78.8" y="1013" width="5.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="81.81" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (151,060,758 samples, 0.54%)</title><rect x="96.5" y="773" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="783.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (25,434,141 samples, 0.09%)</title><rect x="210.2" y="405" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="213.16" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (27,198,707 samples, 0.10%)</title><rect x="183.9" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.94" y="463.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,230,863 samples, 0.09%)</title><rect x="141.8" y="485" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="144.82" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (97,421,676 samples, 0.35%)</title><rect x="187.3" y="757" width="4.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="190.28" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,228,460 samples, 0.09%)</title><rect x="52.8" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (103,555,233 samples, 0.37%)</title><rect x="589.1" y="821" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="592.06" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (33,857,821 samples, 0.12%)</title><rect x="160.6" y="389" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.58" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,289,321 samples, 0.12%)</title><rect x="144.3" y="453" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="147.34" y="463.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (26,252,462 samples, 0.09%)</title><rect x="115.8" y="533" width="1.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="118.79" y="543.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (25,434,141 samples, 0.09%)</title><rect x="210.2" y="821" width="1.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="213.16" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,934 samples, 0.09%)</title><rect x="162.0" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.99" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,984,802 samples, 0.12%)</title><rect x="44.1" y="581" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.14" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (52,587,110 samples, 0.19%)</title><rect x="154.0" y="405" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.00" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (52,392,061 samples, 0.19%)</title><rect x="108.6" y="421" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.56" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_do_relocate (136,579,782 samples, 0.48%)</title><rect x="1124.5" y="661" width="5.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1127.50" y="671.5" ></text>
</g>
<g >
<title>PyArray_AssignRawScalar (67,775,131 samples, 0.24%)</title><rect x="49.9" y="853" width="2.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="52.93" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,223,173 samples, 0.09%)</title><rect x="112.2" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.17" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,613,512 samples, 0.19%)</title><rect x="39.5" y="501" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="42.53" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,353,144 samples, 0.09%)</title><rect x="43.0" y="373" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.04" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,287,437 samples, 0.09%)</title><rect x="186.2" y="501" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="189.18" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_M_get_insert_equal_pos (34,256,994 samples, 0.12%)</title><rect x="1160.1" y="693" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1163.09" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (119,467,939 samples, 0.42%)</title><rect x="191.3" y="709" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.35" y="719.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,373,735 samples, 0.19%)</title><rect x="76.6" y="933" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="79.62" y="943.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,197,038 samples, 0.09%)</title><rect x="212.3" y="613" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="215.32" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (78,426,582 samples, 0.28%)</title><rect x="46.7" y="837" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.66" y="847.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (27,036,548 samples, 0.10%)</title><rect x="79.9" y="485" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="82.91" y="495.5" ></text>
</g>
<g >
<title>_PyCode_New (26,203,169 samples, 0.09%)</title><rect x="59.9" y="389" width="1.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="62.85" y="399.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,197,038 samples, 0.09%)</title><rect x="212.3" y="565" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="215.32" y="575.5" ></text>
</g>
<g >
<title>IT_outputs::IT_outputs (33,521,481 samples, 0.12%)</title><rect x="931.8" y="757" width="1.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="934.83" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (94,108,505 samples, 0.33%)</title><rect x="87.2" y="885" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.19" y="895.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (68,235,612 samples, 0.24%)</title><rect x="84.3" y="725" width="2.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="87.34" y="735.5" ></text>
</g>
<g >
<title>boost::optional_detail::aligned_storage&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::address (34,050,388 samples, 0.12%)</title><rect x="16.5" y="1061" width="1.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="19.48" y="1071.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (120,325,477 samples, 0.43%)</title><rect x="107.1" y="661" width="5.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="110.15" y="671.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (25,434,141 samples, 0.09%)</title><rect x="210.2" y="581" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="213.16" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="1029" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="1039.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (151,060,758 samples, 0.54%)</title><rect x="96.5" y="661" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.45" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (78,628,266 samples, 0.28%)</title><rect x="177.4" y="405" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.36" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (220,599,939 samples, 0.78%)</title><rect x="173.6" y="741" width="9.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.63" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="789" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (112,796,386 samples, 0.40%)</title><rect x="132.4" y="373" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.40" y="383.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (68,234,154 samples, 0.24%)</title><rect x="1101.7" y="709" width="2.8" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1104.67" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,628,473 samples, 0.28%)</title><rect x="211.2" y="949" width="3.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="214.22" y="959.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,428,829 samples, 0.09%)</title><rect x="63.8" y="501" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="66.80" y="511.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (204,774,513 samples, 0.73%)</title><rect x="1047.5" y="597" width="8.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1050.53" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (216,889,615 samples, 0.77%)</title><rect x="187.3" y="869" width="9.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.28" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (25,434,141 samples, 0.09%)</title><rect x="210.2" y="837" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.16" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (68,127,382 samples, 0.24%)</title><rect x="919.0" y="645" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="922.03" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,902,443,116 samples, 49.24%)</title><rect x="589.1" y="917" width="581.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="592.06" y="927.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>_PyObject_Call (33,024,701 samples, 0.12%)</title><rect x="95.1" y="645" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.07" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,642,433 samples, 0.09%)</title><rect x="83.2" y="773" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.23" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (94,108,505 samples, 0.33%)</title><rect x="87.2" y="821" width="3.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.19" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,376 samples, 0.09%)</title><rect x="123.8" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.76" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (27,036,548 samples, 0.10%)</title><rect x="79.9" y="805" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,067 samples, 0.09%)</title><rect x="167.8" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.81" y="399.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (34,278,517 samples, 0.12%)</title><rect x="611.7" y="597" width="1.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="614.66" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,576 samples, 0.09%)</title><rect x="55.0" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.96" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,228,460 samples, 0.09%)</title><rect x="52.8" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,178 samples, 0.09%)</title><rect x="156.2" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.19" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="885" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (67,902,262 samples, 0.24%)</title><rect x="87.2" y="597" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.19" y="607.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (26,208,513 samples, 0.09%)</title><rect x="151.5" y="341" width="1.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="154.54" y="351.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,166,796 samples, 0.12%)</title><rect x="947.5" y="709" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="950.51" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (112,957,699 samples, 0.40%)</title><rect x="168.9" y="821" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.91" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (34,164,292 samples, 0.12%)</title><rect x="142.9" y="581" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (52,640,711 samples, 0.19%)</title><rect x="121.6" y="453" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.56" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,111,509 samples, 0.09%)</title><rect x="67.4" y="597" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="70.41" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (338,124,702 samples, 1.20%)</title><rect x="127.7" y="837" width="14.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="130.69" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,837,821 samples, 0.12%)</title><rect x="68.5" y="517" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="71.50" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,934 samples, 0.09%)</title><rect x="162.0" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.99" y="479.5" ></text>
</g>
<g >
<title>PyType_GenericAlloc (33,688,989 samples, 0.12%)</title><rect x="30.7" y="1061" width="1.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="33.71" y="1071.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,745,010 samples, 0.12%)</title><rect x="64.9" y="661" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="67.90" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (338,124,702 samples, 1.20%)</title><rect x="127.7" y="805" width="14.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="130.69" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (510,982,775 samples, 1.81%)</title><rect x="120.5" y="997" width="21.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="1007.5" >[..</text>
</g>
<g >
<title>PyObject_GetAttr (26,208,261 samples, 0.09%)</title><rect x="214.5" y="309" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="217.51" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (63,898,415 samples, 0.23%)</title><rect x="57.2" y="485" width="2.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="60.18" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,109 samples, 0.09%)</title><rect x="92.6" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.55" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,383,005 samples, 0.09%)</title><rect x="592.3" y="485" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="595.29" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (216,889,615 samples, 0.77%)</title><rect x="187.3" y="949" width="9.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.28" y="959.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch2&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (34,255,579 samples, 0.12%)</title><rect x="934.6" y="661" width="1.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="937.65" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,378 samples, 0.09%)</title><rect x="69.9" y="709" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.91" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (112,957,699 samples, 0.40%)</title><rect x="168.9" y="837" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.91" y="847.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (33,024,701 samples, 0.12%)</title><rect x="95.1" y="373" width="1.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="98.07" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (120,325,477 samples, 0.43%)</title><rect x="107.1" y="629" width="5.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="110.15" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,869,282 samples, 0.10%)</title><rect x="56.1" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (111,920,957 samples, 0.40%)</title><rect x="115.8" y="853" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.79" y="863.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,111,509 samples, 0.09%)</title><rect x="67.4" y="533" width="1.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="70.41" y="543.5" ></text>
</g>
<g >
<title>finish_task_switch (4,761,400 samples, 0.02%)</title><rect x="553.2" y="949" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="556.23" y="959.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,135,790 samples, 0.12%)</title><rect x="38.1" y="885" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="41.11" y="895.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (26,215,064 samples, 0.09%)</title><rect x="172.5" y="325" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="175.53" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (34,164,292 samples, 0.12%)</title><rect x="142.9" y="453" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,679 samples, 0.09%)</title><rect x="209.1" y="741" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.07" y="751.5" ></text>
</g>
<g >
<title>PyObject_Malloc (30,515,148 samples, 0.11%)</title><rect x="97.9" y="405" width="1.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="100.88" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,576 samples, 0.09%)</title><rect x="55.0" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.96" y="623.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,206,946 samples, 0.09%)</title><rect x="195.2" y="437" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="198.25" y="447.5" ></text>
</g>
<g >
<title>_PyArg_ParseTuple_SizeT (29,096,832 samples, 0.10%)</title><rect x="75.4" y="277" width="1.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="78.41" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (52,593,161 samples, 0.19%)</title><rect x="591.2" y="597" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="594.19" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,984,802 samples, 0.12%)</title><rect x="44.1" y="549" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="47.14" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="229" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="239.5" ></text>
</g>
<g >
<title>_PyObject_GC_New (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="709" width="1.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1171.68" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,509 samples, 0.09%)</title><rect x="67.4" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.41" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,199,298 samples, 0.09%)</title><rect x="77.7" y="421" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="80.72" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,185 samples, 0.09%)</title><rect x="158.4" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.39" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="821" width="3.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1173.11" y="831.5" ></text>
</g>
<g >
<title>_start (14,839,576,668 samples, 52.56%)</title><rect x="553.5" y="1077" width="620.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="556.50" y="1087.5" >_start</text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data (34,160,369 samples, 0.12%)</title><rect x="19.3" y="1061" width="1.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="22.33" y="1071.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,373,735 samples, 0.19%)</title><rect x="76.6" y="837" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.62" y="847.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator++ (102,550,623 samples, 0.36%)</title><rect x="937.5" y="725" width="4.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="940.51" y="735.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,138,378 samples, 0.12%)</title><rect x="113.3" y="533" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="116.27" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,223,173 samples, 0.09%)</title><rect x="112.2" y="549" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="115.17" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (111,920,957 samples, 0.40%)</title><rect x="115.8" y="949" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="959.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (68,124,241 samples, 0.24%)</title><rect x="1000.4" y="613" width="2.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1003.36" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (103,555,233 samples, 0.37%)</title><rect x="589.1" y="853" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.06" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,642,433 samples, 0.09%)</title><rect x="83.2" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.23" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (30,515,148 samples, 0.11%)</title><rect x="97.9" y="485" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.88" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,287,437 samples, 0.09%)</title><rect x="186.2" y="389" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="189.18" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (78,766,166 samples, 0.28%)</title><rect x="52.8" y="677" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,197,038 samples, 0.09%)</title><rect x="212.3" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.32" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (216,889,615 samples, 0.77%)</title><rect x="187.3" y="901" width="9.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="190.28" y="911.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,426,582 samples, 0.28%)</title><rect x="46.7" y="853" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="49.66" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,622,051 samples, 0.28%)</title><rect x="103.9" y="693" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="106.86" y="703.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (68,208,075 samples, 0.24%)</title><rect x="702.2" y="389" width="2.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="705.24" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,230,863 samples, 0.09%)</title><rect x="141.8" y="853" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="144.82" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,642,433 samples, 0.09%)</title><rect x="83.2" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.23" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (32,746,492 samples, 0.12%)</title><rect x="116.9" y="437" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.88" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,213,235 samples, 0.09%)</title><rect x="66.3" y="309" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="69.31" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (119,467,939 samples, 0.42%)</title><rect x="191.3" y="805" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.35" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,209 samples, 0.09%)</title><rect x="102.8" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="383.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::swap_heap_elements (170,991,061 samples, 0.61%)</title><rect x="968.9" y="597" width="7.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="971.94" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,593,161 samples, 0.19%)</title><rect x="591.2" y="565" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="594.19" y="575.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (26,211,802 samples, 0.09%)</title><rect x="155.1" y="181" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="158.10" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (26,196,063 samples, 0.09%)</title><rect x="170.0" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.01" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (436,586,046 samples, 1.55%)</title><rect x="96.5" y="1045" width="18.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="99.45" y="1055.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,376 samples, 0.09%)</title><rect x="123.8" y="581" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="126.76" y="591.5" ></text>
</g>
<g >
<title>__Pyx_PyObject_FastCallDict.constprop.0 (25,925,031 samples, 0.09%)</title><rect x="101.7" y="421" width="1.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="104.68" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,774 samples, 0.09%)</title><rect x="211.2" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.22" y="559.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,104,293 samples, 0.12%)</title><rect x="110.7" y="517" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="113.75" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (220,599,939 samples, 0.78%)</title><rect x="173.6" y="501" width="9.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="176.63" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (37,174,366 samples, 0.13%)</title><rect x="187.3" y="517" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.28" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,515 samples, 0.09%)</title><rect x="146.8" y="357" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="149.85" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (34,104,293 samples, 0.12%)</title><rect x="110.7" y="229" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="113.75" y="239.5" ></text>
</g>
<g >
<title>do_anonymous_page (672,277,121 samples, 2.38%)</title><rect x="852.8" y="389" width="28.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="855.80" y="399.5" >d..</text>
</g>
<g >
<title>_PyObject_Call (26,208,261 samples, 0.09%)</title><rect x="214.5" y="629" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="217.51" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (165,180,376 samples, 0.59%)</title><rect x="145.7" y="549" width="6.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="148.74" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (173,502,057 samples, 0.61%)</title><rect x="196.3" y="901" width="7.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="199.34" y="911.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,799,484 samples, 0.19%)</title><rect x="71.0" y="645" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="74.01" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,337,946 samples, 0.21%)</title><rect x="43.0" y="629" width="2.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="46.04" y="639.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (44,903,039 samples, 0.16%)</title><rect x="201.7" y="501" width="1.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="204.72" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,642,433 samples, 0.09%)</title><rect x="83.2" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.23" y="623.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (34,289,059 samples, 0.12%)</title><rect x="1087.4" y="709" width="1.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1090.37" y="719.5" ></text>
</g>
<g >
<title>get_page_from_freelist (34,147,701 samples, 0.12%)</title><rect x="700.8" y="357" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="703.82" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,428,829 samples, 0.09%)</title><rect x="63.8" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.80" y="415.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (27,815,268 samples, 0.10%)</title><rect x="34.4" y="1061" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="37.36" y="1071.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,135,790 samples, 0.12%)</title><rect x="38.1" y="773" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="41.11" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,171,603 samples, 0.09%)</title><rect x="182.8" y="421" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="185.85" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (27,198,707 samples, 0.10%)</title><rect x="183.9" y="293" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="186.94" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,337,946 samples, 0.21%)</title><rect x="43.0" y="853" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.04" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,434,141 samples, 0.09%)</title><rect x="210.2" y="501" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="213.16" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (111,920,957 samples, 0.40%)</title><rect x="115.8" y="885" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="895.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (34,101,417 samples, 0.12%)</title><rect x="1108.8" y="613" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1111.80" y="623.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,745,010 samples, 0.12%)</title><rect x="64.9" y="741" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="67.90" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (85,057,305 samples, 0.30%)</title><rect x="152.6" y="485" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.64" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,164,292 samples, 0.12%)</title><rect x="142.9" y="645" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,215,064 samples, 0.09%)</title><rect x="172.5" y="485" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="175.53" y="495.5" ></text>
</g>
<g >
<title>[[vdso]] (34,035,779 samples, 0.12%)</title><rect x="917.6" y="645" width="1.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="920.60" y="655.5" ></text>
</g>
<g >
<title>error_exit (34,033,730 samples, 0.12%)</title><rect x="921.9" y="725" width="1.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="924.87" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,546,263 samples, 0.09%)</title><rect x="164.2" y="453" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="167.18" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator- (34,158,223 samples, 0.12%)</title><rect x="984.6" y="597" width="1.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="987.65" y="607.5" ></text>
</g>
<g >
<title>handle_mm_fault (33,595,188 samples, 0.12%)</title><rect x="563.4" y="869" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="566.43" y="879.5" ></text>
</g>
<g >
<title>_PyObject_Call (97,421,676 samples, 0.35%)</title><rect x="187.3" y="741" width="4.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="190.28" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (33,712,665 samples, 0.12%)</title><rect x="147.9" y="325" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.94" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,196,063 samples, 0.09%)</title><rect x="170.0" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.01" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,211,802 samples, 0.09%)</title><rect x="155.1" y="293" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="158.10" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,136,763 samples, 0.12%)</title><rect x="84.3" y="581" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="87.34" y="591.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,211,318 samples, 0.09%)</title><rect x="119.4" y="357" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="122.37" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (27,036,548 samples, 0.10%)</title><rect x="79.9" y="693" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="82.91" y="703.5" ></text>
</g>
<g >
<title>PyFunction_NewWithQualName (34,104,293 samples, 0.12%)</title><rect x="110.7" y="373" width="1.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="113.75" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="917" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1173.11" y="927.5" ></text>
</g>
<g >
<title>free_unref_page_list (36,583,985 samples, 0.13%)</title><rect x="1180.0" y="853" width="1.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1182.95" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,633,721 samples, 0.09%)</title><rect x="145.7" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="148.74" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (112,874,269 samples, 0.40%)</title><rect x="160.6" y="757" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="163.58" y="767.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,633,721 samples, 0.09%)</title><rect x="145.7" y="501" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="148.74" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (172,858,073 samples, 0.61%)</title><rect x="120.5" y="741" width="7.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="751.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,267,251 samples, 0.09%)</title><rect x="163.1" y="421" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="166.09" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_free (33,580,982 samples, 0.12%)</title><rect x="594.8" y="789" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="597.82" y="799.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,224,658 samples, 0.12%)</title><rect x="1068.9" y="613" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1071.90" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~_Vector_base (34,198,793 samples, 0.12%)</title><rect x="1137.2" y="693" width="1.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1140.25" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,426,582 samples, 0.28%)</title><rect x="46.7" y="677" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="49.66" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (67,902,262 samples, 0.24%)</title><rect x="87.2" y="645" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="90.19" y="655.5" ></text>
</g>
<g >
<title>_PyObject_CallMethod (7,253,030,745 samples, 25.69%)</title><rect x="611.7" y="677" width="303.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="614.66" y="687.5" >_PyObject_CallMethod</text>
</g>
<g >
<title>__libc_start_main (14,839,576,668 samples, 52.56%)</title><rect x="553.5" y="1061" width="620.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="556.50" y="1071.5" >__libc_start_main</text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (102,313,557 samples, 0.36%)</title><rect x="1115.9" y="613" width="4.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1118.93" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,946 samples, 0.09%)</title><rect x="195.2" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="198.25" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,381 samples, 0.09%)</title><rect x="590.1" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="593.10" y="543.5" ></text>
</g>
<g >
<title>_Py_read (34,132,139 samples, 0.12%)</title><rect x="96.5" y="373" width="1.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="99.45" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,642,433 samples, 0.09%)</title><rect x="83.2" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.23" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,167,861 samples, 0.09%)</title><rect x="45.6" y="805" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.56" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,378 samples, 0.12%)</title><rect x="113.3" y="501" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.27" y="511.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (13,902,443,116 samples, 49.24%)</title><rect x="589.1" y="997" width="581.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="592.06" y="1007.5" >_PyRun_SimpleFileObject</text>
</g>
<g >
<title>PyDict_SetItem (34,185,861 samples, 0.12%)</title><rect x="587.6" y="965" width="1.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="590.63" y="975.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (111,920,957 samples, 0.40%)</title><rect x="115.8" y="757" width="4.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="118.79" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,094,188 samples, 0.12%)</title><rect x="91.1" y="517" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="94.13" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (112,338,142 samples, 0.40%)</title><rect x="146.8" y="485" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="149.85" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,058,837 samples, 0.12%)</title><rect x="93.6" y="869" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="96.65" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,353,144 samples, 0.09%)</title><rect x="43.0" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator (33,521,481 samples, 0.12%)</title><rect x="931.8" y="549" width="1.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="934.83" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (510,982,775 samples, 1.81%)</title><rect x="120.5" y="949" width="21.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="123.46" y="959.5" >_..</text>
</g>
<g >
<title>[python3.12] (26,206,243 samples, 0.09%)</title><rect x="90.0" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.03" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (78,628,473 samples, 0.28%)</title><rect x="211.2" y="1013" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.22" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,829,123 samples, 0.12%)</title><rect x="107.1" y="469" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.15" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (198,469,697 samples, 0.70%)</title><rect x="144.3" y="661" width="8.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="147.34" y="671.5" ></text>
</g>
<g >
<title>pybind11::detail::tuple_caster&lt;std::pair, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;::cast_impl&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, 0ul, 1ul&gt; (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="773" width="1.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1171.68" y="783.5" ></text>
</g>
<g >
<title>python3.12 (28,233,134,060 samples, 100.00%)</title><rect x="10.0" y="1093" width="1180.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="13.01" y="1103.5" >python3.12</text>
</g>
<g >
<title>[python3.12] (26,383,005 samples, 0.09%)</title><rect x="592.3" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="595.29" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (37,174,366 samples, 0.13%)</title><rect x="187.3" y="421" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.28" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,188,019 samples, 0.09%)</title><rect x="82.1" y="517" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="85.13" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,424,646 samples, 0.09%)</title><rect x="168.9" y="453" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="171.91" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (189,899,606 samples, 0.67%)</title><rect x="152.6" y="613" width="8.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="155.64" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (60,303,297 samples, 0.21%)</title><rect x="91.1" y="773" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,423,284 samples, 0.19%)</title><rect x="166.7" y="677" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.72" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt; (34,061,259 samples, 0.12%)</title><rect x="988.9" y="597" width="1.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="991.94" y="607.5" ></text>
</g>
<g >
<title>PyArray_ToList (68,206,613 samples, 0.24%)</title><rect x="60.9" y="357" width="2.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="63.95" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,728 samples, 0.09%)</title><rect x="78.8" y="661" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="81.81" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (52,318,437 samples, 0.19%)</title><rect x="204.7" y="437" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.69" y="447.5" ></text>
</g>
<g >
<title>Nexullance_IT_interface::run_IT (5,700,855,837 samples, 20.19%)</title><rect x="930.4" y="773" width="238.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="933.41" y="783.5" >Nexullance_IT_interface::run_IT</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,434,141 samples, 0.09%)</title><rect x="210.2" y="277" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="213.16" y="287.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (31,287,366 samples, 0.11%)</title><rect x="41.7" y="677" width="1.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="44.73" y="687.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (102,132,446 samples, 0.36%)</title><rect x="873.8" y="341" width="4.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="876.77" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,318 samples, 0.09%)</title><rect x="119.4" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.37" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (134,305,359 samples, 0.48%)</title><rect x="71.0" y="901" width="5.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="74.01" y="911.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,024,701 samples, 0.12%)</title><rect x="95.1" y="597" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="98.07" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (239,184,991 samples, 0.85%)</title><rect x="1113.1" y="661" width="10.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1116.08" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,642,433 samples, 0.09%)</title><rect x="83.2" y="309" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="86.23" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (443,216,937 samples, 1.57%)</title><rect x="569.1" y="949" width="18.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="572.11" y="959.5" ></text>
</g>
<g >
<title>get_page_from_freelist (34,104,293 samples, 0.12%)</title><rect x="110.7" y="213" width="1.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="113.75" y="223.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,036,548 samples, 0.10%)</title><rect x="79.9" y="469" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.91" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,426,582 samples, 0.28%)</title><rect x="46.7" y="821" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="49.66" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,373,735 samples, 0.19%)</title><rect x="76.6" y="869" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="79.62" y="879.5" ></text>
</g>
<g >
<title>array_dealloc (33,580,982 samples, 0.12%)</title><rect x="594.8" y="821" width="1.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="597.82" y="831.5" ></text>
</g>
<g >
<title>unmap_single_vma (183,190,670 samples, 0.65%)</title><rect x="1177.0" y="949" width="7.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1180.00" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,109 samples, 0.09%)</title><rect x="92.6" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.55" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,209 samples, 0.09%)</title><rect x="102.8" y="725" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,394,969 samples, 0.19%)</title><rect x="81.0" y="629" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="84.04" y="639.5" ></text>
</g>
<g >
<title>llvm::X86Subtarget::X86Subtarget (34,135,790 samples, 0.12%)</title><rect x="38.1" y="421" width="1.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="41.11" y="431.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (10,138,758 samples, 0.04%)</title><rect x="1176.6" y="949" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1179.57" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,096,832 samples, 0.10%)</title><rect x="75.4" y="421" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="78.41" y="431.5" ></text>
</g>
<g >
<title>dlopen_doit (33,745,010 samples, 0.12%)</title><rect x="64.9" y="389" width="1.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="67.90" y="399.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;IT_outputs, Nexullance_IT_interface, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (5,700,855,837 samples, 20.19%)</title><rect x="930.4" y="853" width="238.3" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="933.41" y="863.5" >pybind11::cpp_function::initial..</text>
</g>
<g >
<title>[python3.12] (26,546,263 samples, 0.09%)</title><rect x="164.2" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.18" y="383.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4,617,123 samples, 0.02%)</title><rect x="553.2" y="917" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="556.23" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,356,437 samples, 0.09%)</title><rect x="99.2" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="102.15" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,337,946 samples, 0.21%)</title><rect x="43.0" y="789" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.04" y="799.5" ></text>
</g>
<g >
<title>PyErr_Format (26,197,038 samples, 0.09%)</title><rect x="212.3" y="325" width="1.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="215.32" y="335.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,745,010 samples, 0.12%)</title><rect x="64.9" y="693" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="67.90" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (52,411,367 samples, 0.19%)</title><rect x="105.0" y="469" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.95" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (162,344,117 samples, 0.58%)</title><rect x="84.3" y="1029" width="6.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="1039.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,453,730 samples, 0.12%)</title><rect x="596.2" y="677" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="599.23" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (78,622,051 samples, 0.28%)</title><rect x="103.9" y="645" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.86" y="655.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,199,298 samples, 0.09%)</title><rect x="77.7" y="357" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="80.72" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="389" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,243 samples, 0.09%)</title><rect x="90.0" y="709" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.03" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (297,676,062 samples, 1.05%)</title><rect x="56.1" y="821" width="12.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.06" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,486 samples, 0.09%)</title><rect x="73.2" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.22" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,136,763 samples, 0.12%)</title><rect x="84.3" y="517" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.34" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,811 samples, 0.09%)</title><rect x="48.8" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.84" y="383.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (34,132,139 samples, 0.12%)</title><rect x="96.5" y="181" width="1.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="99.45" y="191.5" ></text>
</g>
<g >
<title>_PyObject_Call (112,957,699 samples, 0.40%)</title><rect x="168.9" y="869" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="171.91" y="879.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;::operator (34,256,994 samples, 0.12%)</title><rect x="1160.1" y="661" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1163.09" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,745,010 samples, 0.12%)</title><rect x="64.9" y="677" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="67.90" y="687.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (68,482,111 samples, 0.24%)</title><rect x="1018.9" y="581" width="2.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1021.93" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,337,946 samples, 0.21%)</title><rect x="43.0" y="1013" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="46.04" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,135,790 samples, 0.12%)</title><rect x="38.1" y="821" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="41.11" y="831.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (68,459,753 samples, 0.24%)</title><rect x="980.4" y="565" width="2.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="983.37" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,098,849 samples, 0.12%)</title><rect x="85.8" y="453" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="88.77" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,745,010 samples, 0.12%)</title><rect x="64.9" y="533" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.90" y="543.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (34,019,706 samples, 0.12%)</title><rect x="879.5" y="373" width="1.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="882.47" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (52,799,484 samples, 0.19%)</title><rect x="71.0" y="453" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.01" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (120,325,477 samples, 0.43%)</title><rect x="107.1" y="613" width="5.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.15" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,642,433 samples, 0.09%)</title><rect x="83.2" y="805" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="86.23" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (191,659,029 samples, 0.68%)</title><rect x="131.3" y="485" width="8.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="134.31" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (510,982,775 samples, 1.81%)</title><rect x="120.5" y="1013" width="21.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="123.46" y="1023.5" >P..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back (68,196,260 samples, 0.24%)</title><rect x="987.5" y="613" width="2.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="990.51" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,196,063 samples, 0.09%)</title><rect x="170.0" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.01" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,094,188 samples, 0.12%)</title><rect x="91.1" y="629" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="94.13" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size (68,532,130 samples, 0.24%)</title><rect x="1145.8" y="661" width="2.9" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1148.81" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,464,585 samples, 0.09%)</title><rect x="180.6" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.65" y="383.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,984,802 samples, 0.12%)</title><rect x="44.1" y="597" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="47.14" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,164,292 samples, 0.12%)</title><rect x="142.9" y="469" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="145.92" y="479.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::operator[] (68,462,283 samples, 0.24%)</title><rect x="1161.5" y="725" width="2.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1164.52" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,318 samples, 0.09%)</title><rect x="119.4" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.37" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,385,317 samples, 0.12%)</title><rect x="191.3" y="501" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.35" y="511.5" ></text>
</g>
<g >
<title>__do_page_fault (34,132,139 samples, 0.12%)</title><rect x="96.5" y="101" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="99.45" y="111.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,318 samples, 0.09%)</title><rect x="119.4" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.37" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,030,025 samples, 0.12%)</title><rect x="165.3" y="533" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="168.29" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (146,548,650 samples, 0.52%)</title><rect x="107.1" y="805" width="6.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="110.15" y="815.5" ></text>
</g>
<g >
<title>close@plt (31,958,704 samples, 0.11%)</title><rect x="127.7" y="325" width="1.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="130.69" y="335.5" ></text>
</g>
<g >
<title>_PyUnicode_IsLowercase (52,613,512 samples, 0.19%)</title><rect x="39.5" y="373" width="2.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="42.53" y="383.5" ></text>
</g>
<g >
<title>PyArray_Where (33,998,165 samples, 0.12%)</title><rect x="140.4" y="437" width="1.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="143.40" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,774 samples, 0.09%)</title><rect x="211.2" y="629" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.22" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (306,165,998 samples, 1.08%)</title><rect x="129.0" y="629" width="12.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="132.02" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (220,599,939 samples, 0.78%)</title><rect x="173.6" y="629" width="9.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="176.63" y="639.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,206,101 samples, 0.09%)</title><rect x="200.6" y="517" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="203.62" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (86,453,309 samples, 0.31%)</title><rect x="165.3" y="869" width="3.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="168.29" y="879.5" ></text>
</g>
<g >
<title>handle_mm_fault (68,397,652 samples, 0.24%)</title><rect x="617.4" y="389" width="2.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="620.38" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,486 samples, 0.09%)</title><rect x="73.2" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.22" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (34,230,652 samples, 0.12%)</title><rect x="926.1" y="645" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="929.13" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,086 samples, 0.09%)</title><rect x="181.8" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.75" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,188,019 samples, 0.09%)</title><rect x="82.1" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.13" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (33,583,276 samples, 0.12%)</title><rect x="126.3" y="549" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.29" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,094,188 samples, 0.12%)</title><rect x="91.1" y="645" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="94.13" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,613,512 samples, 0.19%)</title><rect x="39.5" y="533" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="42.53" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,464,585 samples, 0.09%)</title><rect x="180.6" y="421" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="183.65" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (120,838,611 samples, 0.43%)</title><rect x="59.9" y="725" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.85" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (31,958,704 samples, 0.11%)</title><rect x="127.7" y="677" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="130.69" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (78,628,266 samples, 0.28%)</title><rect x="177.4" y="389" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.36" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,243 samples, 0.09%)</title><rect x="90.0" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.03" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,303,297 samples, 0.21%)</title><rect x="91.1" y="821" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="94.13" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (34,094,188 samples, 0.12%)</title><rect x="91.1" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="495.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (7,563,427 samples, 0.03%)</title><rect x="553.2" y="1013" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="556.19" y="1023.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (119,467,939 samples, 0.42%)</title><rect x="191.3" y="789" width="5.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="194.35" y="799.5" ></text>
</g>
<g >
<title>do_page_fault (34,104,293 samples, 0.12%)</title><rect x="110.7" y="341" width="1.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="113.75" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,710,685 samples, 0.09%)</title><rect x="118.3" y="549" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="121.25" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (34,132,139 samples, 0.12%)</title><rect x="96.5" y="325" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="99.45" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,780 samples, 0.09%)</title><rect x="149.4" y="325" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.35" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (52,799,484 samples, 0.19%)</title><rect x="71.0" y="549" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.01" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (220,599,939 samples, 0.78%)</title><rect x="173.6" y="757" width="9.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="176.63" y="767.5" ></text>
</g>
<g >
<title>do_page_fault (170,851,108 samples, 0.61%)</title><rect x="699.4" y="485" width="7.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="702.39" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (94,108,505 samples, 0.33%)</title><rect x="87.2" y="805" width="3.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="90.19" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (33,857,821 samples, 0.12%)</title><rect x="160.6" y="405" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.58" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="549" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (86,413,471 samples, 0.31%)</title><rect x="99.2" y="549" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.15" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (151,060,758 samples, 0.54%)</title><rect x="96.5" y="677" width="6.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="99.45" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,030,025 samples, 0.12%)</title><rect x="165.3" y="789" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="168.29" y="799.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (34,194,426 samples, 0.12%)</title><rect x="916.2" y="661" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="919.17" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (33,521,481 samples, 0.12%)</title><rect x="931.8" y="581" width="1.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="934.83" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_allocate (34,101,417 samples, 0.12%)</title><rect x="1108.8" y="677" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1111.80" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,182 samples, 0.09%)</title><rect x="150.4" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.45" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (151,060,758 samples, 0.54%)</title><rect x="96.5" y="693" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,684 samples, 0.09%)</title><rect x="103.9" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.86" y="415.5" ></text>
</g>
<g >
<title>_PyRun_AnyFileObject (13,902,443,116 samples, 49.24%)</title><rect x="589.1" y="1013" width="581.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="592.06" y="1023.5" >_PyRun_AnyFileObject</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,728 samples, 0.09%)</title><rect x="78.8" y="405" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="81.81" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,220,774 samples, 0.09%)</title><rect x="211.2" y="613" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="214.22" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (106,073,950 samples, 0.38%)</title><rect x="79.9" y="901" width="4.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="911.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,220,771 samples, 0.18%)</title><rect x="46.7" y="501" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="49.66" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,837,821 samples, 0.12%)</title><rect x="68.5" y="437" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="71.50" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="431.5" ></text>
</g>
<g >
<title>get_page_from_freelist (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="741" width="3.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1173.11" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="469" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (27,036,548 samples, 0.10%)</title><rect x="79.9" y="789" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="82.91" y="799.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (79,651,363 samples, 0.28%)</title><rect x="182.8" y="741" width="3.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="185.85" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (34,101,260 samples, 0.12%)</title><rect x="124.9" y="389" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.86" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,132,139 samples, 0.12%)</title><rect x="96.5" y="581" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.45" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,230,863 samples, 0.09%)</title><rect x="141.8" y="869" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="144.82" y="879.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::~_Vector_impl (34,145,527 samples, 0.12%)</title><rect x="1134.4" y="613" width="1.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1137.44" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,922,003 samples, 0.19%)</title><rect x="118.3" y="677" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.25" y="687.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,661 samples, 0.09%)</title><rect x="213.4" y="741" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="216.41" y="751.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,423,284 samples, 0.19%)</title><rect x="166.7" y="773" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="169.72" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,209 samples, 0.09%)</title><rect x="102.8" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (33,829,123 samples, 0.12%)</title><rect x="107.1" y="405" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (52,613,512 samples, 0.19%)</title><rect x="39.5" y="821" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.53" y="831.5" ></text>
</g>
<g >
<title>pybind11::detail::map_caster&lt;std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;, std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;::cast&lt;std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt; &gt; (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="821" width="1.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1171.68" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="981" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (60,488,440 samples, 0.21%)</title><rect x="99.2" y="453" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="102.15" y="463.5" ></text>
</g>
<g >
<title>page_fault (706,520,782 samples, 2.50%)</title><rect x="851.4" y="485" width="29.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="854.37" y="495.5" >pa..</text>
</g>
<g >
<title>array_setstate (102,077,362 samples, 0.36%)</title><rect x="923.3" y="709" width="4.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="926.30" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,318 samples, 0.09%)</title><rect x="119.4" y="421" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="122.37" y="431.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (168,999,102 samples, 0.60%)</title><rect x="1077.5" y="709" width="7.0" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1080.48" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,213,235 samples, 0.09%)</title><rect x="66.3" y="437" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="69.31" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (34,068,028 samples, 0.12%)</title><rect x="1141.5" y="677" width="1.5" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1144.53" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (34,301,920 samples, 0.12%)</title><rect x="974.7" y="581" width="1.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="977.65" y="591.5" ></text>
</g>
<g >
<title>__libc_open64 (27,198,707 samples, 0.10%)</title><rect x="183.9" y="325" width="1.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="186.94" y="335.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (102,456,224 samples, 0.36%)</title><rect x="1080.3" y="693" width="4.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1083.26" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,215,064 samples, 0.09%)</title><rect x="172.5" y="597" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="175.53" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,241,513 samples, 0.09%)</title><rect x="190.3" y="453" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="193.25" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (7,253,030,745 samples, 25.69%)</title><rect x="611.7" y="661" width="303.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="614.66" y="671.5" >[python3.12]</text>
</g>
<g >
<title>do_page_fault (102,622,478 samples, 0.36%)</title><rect x="615.9" y="437" width="4.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="618.95" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (78,622,051 samples, 0.28%)</title><rect x="103.9" y="533" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.86" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (33,136,145 samples, 0.12%)</title><rect x="29.3" y="1061" width="1.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="32.32" y="1071.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (34,138,378 samples, 0.12%)</title><rect x="113.3" y="709" width="1.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="116.27" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="965" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="975.5" ></text>
</g>
<g >
<title>try_charge (34,279,247 samples, 0.12%)</title><rect x="622.8" y="293" width="1.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="625.76" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::deque (68,292,750 samples, 0.24%)</title><rect x="1104.5" y="693" width="2.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1107.52" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,378 samples, 0.12%)</title><rect x="113.3" y="453" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.27" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,208,261 samples, 0.09%)</title><rect x="214.5" y="453" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="217.51" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (120,325,477 samples, 0.43%)</title><rect x="107.1" y="693" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (535,407,864 samples, 1.90%)</title><rect x="142.9" y="997" width="22.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="145.92" y="1007.5" >P..</text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (34,281,873 samples, 0.12%)</title><rect x="948.9" y="709" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="951.94" y="719.5" ></text>
</g>
<g >
<title>pgd_free (5,536,516 samples, 0.02%)</title><rect x="219.6" y="997" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="222.63" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,136,763 samples, 0.12%)</title><rect x="84.3" y="453" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="87.34" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,138,378 samples, 0.12%)</title><rect x="113.3" y="341" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.27" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (34,194,435 samples, 0.12%)</title><rect x="1163.0" y="693" width="1.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1165.96" y="703.5" ></text>
</g>
<g >
<title>handle_mm_fault (68,440,040 samples, 0.24%)</title><rect x="621.3" y="373" width="2.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="624.33" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (52,640,711 samples, 0.19%)</title><rect x="121.6" y="469" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.56" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,557 samples, 0.09%)</title><rect x="74.3" y="213" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.31" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (216,889,615 samples, 0.77%)</title><rect x="187.3" y="885" width="9.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.28" y="895.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (35,008,014 samples, 0.12%)</title><rect x="1178.5" y="853" width="1.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1181.49" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (86,082,622 samples, 0.30%)</title><rect x="192.7" y="485" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="195.74" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,318 samples, 0.09%)</title><rect x="119.4" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.37" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,318 samples, 0.09%)</title><rect x="119.4" y="373" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="122.37" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,583,276 samples, 0.12%)</title><rect x="126.3" y="325" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.29" y="335.5" ></text>
</g>
<g >
<title>mmput (183,190,670 samples, 0.65%)</title><rect x="1177.0" y="997" width="7.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1180.00" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (191,659,029 samples, 0.68%)</title><rect x="131.3" y="469" width="8.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.31" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,394,969 samples, 0.19%)</title><rect x="81.0" y="773" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="84.04" y="783.5" ></text>
</g>
<g >
<title>PyEval_SaveThread (34,098,849 samples, 0.12%)</title><rect x="85.8" y="373" width="1.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="88.77" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,373,735 samples, 0.19%)</title><rect x="76.6" y="789" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="79.62" y="799.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (102,132,446 samples, 0.36%)</title><rect x="873.8" y="325" width="4.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="876.77" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,243 samples, 0.09%)</title><rect x="90.0" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.03" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (30,080,530 samples, 0.11%)</title><rect x="220.1" y="1013" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="223.11" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (32,746,492 samples, 0.12%)</title><rect x="116.9" y="405" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="119.88" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,235 samples, 0.09%)</title><rect x="66.3" y="373" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="69.31" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (104,838,260 samples, 0.37%)</title><rect x="102.8" y="821" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="831.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,213,235 samples, 0.09%)</title><rect x="66.3" y="469" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="69.31" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (34,138,378 samples, 0.12%)</title><rect x="113.3" y="421" width="1.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="116.27" y="431.5" ></text>
</g>
<g >
<title>PyObject_Dir (26,209,557 samples, 0.09%)</title><rect x="74.3" y="357" width="1.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="77.31" y="367.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (239,250,447 samples, 0.85%)</title><rect x="990.4" y="629" width="10.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="993.36" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,094,188 samples, 0.12%)</title><rect x="91.1" y="565" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="94.13" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,546,263 samples, 0.09%)</title><rect x="164.2" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.18" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,661 samples, 0.09%)</title><rect x="213.4" y="837" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.41" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="533" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,984,802 samples, 0.12%)</title><rect x="44.1" y="437" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.14" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,174,437 samples, 0.09%)</title><rect x="76.6" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,613,512 samples, 0.19%)</title><rect x="39.5" y="805" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="42.53" y="815.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getSubtargetImpl (34,135,790 samples, 0.12%)</title><rect x="38.1" y="437" width="1.4" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="41.11" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (104,838,260 samples, 0.37%)</title><rect x="102.8" y="789" width="4.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="105.76" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (216,889,615 samples, 0.77%)</title><rect x="187.3" y="837" width="9.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="190.28" y="847.5" ></text>
</g>
<g >
<title>do_page_fault (33,595,188 samples, 0.12%)</title><rect x="563.4" y="917" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="566.43" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (127,386,835 samples, 0.45%)</title><rect x="91.1" y="1045" width="5.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="1055.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,509 samples, 0.09%)</title><rect x="67.4" y="629" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.41" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (34,121,926 samples, 0.12%)</title><rect x="171.1" y="469" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.11" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (31,287,366 samples, 0.11%)</title><rect x="41.7" y="517" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="44.73" y="527.5" ></text>
</g>
<g >
<title>PySequence_Tuple (26,546,263 samples, 0.09%)</title><rect x="164.2" y="421" width="1.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="167.18" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (232,707,520 samples, 0.82%)</title><rect x="43.0" y="1061" width="9.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="46.04" y="1071.5" ></text>
</g>
<g >
<title>_aligned_strided_to_strided_size1_srcstride0 (67,775,131 samples, 0.24%)</title><rect x="49.9" y="821" width="2.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="52.93" y="831.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,211,728 samples, 0.09%)</title><rect x="78.8" y="757" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="81.81" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (94,409,782 samples, 0.33%)</title><rect x="59.9" y="549" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.85" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,067 samples, 0.09%)</title><rect x="167.8" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.81" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (31,287,366 samples, 0.11%)</title><rect x="41.7" y="741" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="44.73" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (172,369,574 samples, 0.61%)</title><rect x="45.6" y="901" width="7.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.56" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="901" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="911.5" ></text>
</g>
<g >
<title>boost::relax_target&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::plus&lt;float&gt;, std::less&lt;float&gt; &gt; (34,255,579 samples, 0.12%)</title><rect x="934.6" y="613" width="1.5" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="937.65" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (33,745,010 samples, 0.12%)</title><rect x="64.9" y="485" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.90" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (33,521,481 samples, 0.12%)</title><rect x="931.8" y="613" width="1.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="934.83" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,679 samples, 0.09%)</title><rect x="209.1" y="837" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="212.07" y="847.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,220,774 samples, 0.09%)</title><rect x="211.2" y="581" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="214.22" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,132,139 samples, 0.12%)</title><rect x="96.5" y="501" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="99.45" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (86,286,637 samples, 0.31%)</title><rect x="1170.1" y="933" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1173.11" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (60,049,199 samples, 0.21%)</title><rect x="68.5" y="885" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.50" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (33,857,821 samples, 0.12%)</title><rect x="160.6" y="581" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.58" y="591.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,230,863 samples, 0.09%)</title><rect x="141.8" y="421" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="144.82" y="431.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,376 samples, 0.09%)</title><rect x="123.8" y="517" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="126.76" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,376 samples, 0.09%)</title><rect x="123.8" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="126.76" y="511.5" ></text>
</g>
<g >
<title>find_vma (34,278,517 samples, 0.12%)</title><rect x="611.7" y="469" width="1.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="614.66" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,132,139 samples, 0.12%)</title><rect x="96.5" y="437" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="447.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (34,069,694 samples, 0.12%)</title><rect x="706.5" y="501" width="1.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="709.53" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (112,338,142 samples, 0.40%)</title><rect x="146.8" y="469" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="149.85" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (94,108,505 samples, 0.33%)</title><rect x="87.2" y="853" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.19" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,138,378 samples, 0.12%)</title><rect x="113.3" y="485" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.27" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (67,902,262 samples, 0.24%)</title><rect x="87.2" y="501" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.19" y="511.5" ></text>
</g>
<g >
<title>lru_add_drain (30,080,530 samples, 0.11%)</title><rect x="220.1" y="933" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="223.11" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (31,287,366 samples, 0.11%)</title><rect x="41.7" y="549" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="44.73" y="559.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator++ (34,094,779 samples, 0.12%)</title><rect x="940.4" y="709" width="1.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="943.37" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (120,325,477 samples, 0.43%)</title><rect x="107.1" y="565" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="575.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="629" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1171.68" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,356,437 samples, 0.09%)</title><rect x="99.2" y="373" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="102.15" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,766,166 samples, 0.28%)</title><rect x="52.8" y="661" width="3.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="55.77" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (120,838,611 samples, 0.43%)</title><rect x="59.9" y="709" width="5.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="62.85" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (33,984,802 samples, 0.12%)</title><rect x="44.1" y="501" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="47.14" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (52,411,367 samples, 0.19%)</title><rect x="105.0" y="373" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.95" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (34,281,873 samples, 0.12%)</title><rect x="948.9" y="693" width="1.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="951.94" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (34,030,025 samples, 0.12%)</title><rect x="165.3" y="501" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="168.29" y="511.5" ></text>
</g>
<g >
<title>schedule_tail (11,960,287 samples, 0.04%)</title><rect x="219.6" y="1045" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="222.56" y="1055.5" ></text>
</g>
<g >
<title>[python3.12] (103,555,233 samples, 0.37%)</title><rect x="589.1" y="709" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.06" y="719.5" ></text>
</g>
<g >
<title>Nexullance_IT::step_2 (5,565,326,844 samples, 19.71%)</title><rect x="936.1" y="741" width="232.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="939.08" y="751.5" >Nexullance_IT::step_2</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,109 samples, 0.09%)</title><rect x="92.6" y="389" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="95.55" y="399.5" ></text>
</g>
<g >
<title>_int_malloc (68,296,234 samples, 0.24%)</title><rect x="1117.4" y="517" width="2.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1120.36" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,208,513 samples, 0.09%)</title><rect x="151.5" y="421" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="154.54" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,101,260 samples, 0.12%)</title><rect x="124.9" y="453" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="127.86" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,337,946 samples, 0.21%)</title><rect x="43.0" y="981" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.04" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (172,858,073 samples, 0.61%)</title><rect x="120.5" y="773" width="7.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="783.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::out_edge_list (68,382,678 samples, 0.24%)</title><rect x="1096.0" y="693" width="2.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1098.95" y="703.5" ></text>
</g>
<g >
<title>_dl_relocate_object (44,903,039 samples, 0.16%)</title><rect x="201.7" y="405" width="1.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="204.72" y="415.5" ></text>
</g>
<g >
<title>alloc_empty_file (27,198,707 samples, 0.10%)</title><rect x="183.9" y="213" width="1.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="186.94" y="223.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,373,735 samples, 0.19%)</title><rect x="76.6" y="661" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.62" y="671.5" ></text>
</g>
<g >
<title>PyDict_SetItemString (37,174,366 samples, 0.13%)</title><rect x="187.3" y="341" width="1.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="190.28" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (162,344,117 samples, 0.58%)</title><rect x="84.3" y="917" width="6.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="87.34" y="927.5" ></text>
</g>
<g >
<title>pybind11::detail::argument_loader&lt;Nexullance_IT_interface*, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int&gt;::call&lt;IT_outputs, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;IT_outputs, Nexullance_IT_interface, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (5,700,855,837 samples, 20.19%)</title><rect x="930.4" y="821" width="238.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="933.41" y="831.5" >pybind11::detail::argument_load..</text>
</g>
<g >
<title>PyObject_Free (28,383,528 samples, 0.10%)</title><rect x="625.6" y="517" width="1.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="628.60" y="527.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,196,063 samples, 0.09%)</title><rect x="170.0" y="421" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="173.01" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,640,711 samples, 0.19%)</title><rect x="121.6" y="485" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="124.56" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (33,521,481 samples, 0.12%)</title><rect x="931.8" y="597" width="1.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="934.83" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,197,038 samples, 0.09%)</title><rect x="212.3" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.32" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (86,453,309 samples, 0.31%)</title><rect x="165.3" y="997" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="168.29" y="1007.5" ></text>
</g>
<g >
<title>PySequence_List (33,583,276 samples, 0.12%)</title><rect x="126.3" y="341" width="1.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="129.29" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,426,582 samples, 0.28%)</title><rect x="46.7" y="549" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="49.66" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,178 samples, 0.09%)</title><rect x="156.2" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.19" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (33,837,821 samples, 0.12%)</title><rect x="68.5" y="485" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.50" y="495.5" ></text>
</g>
<g >
<title>_PyAST_Compile (26,210,185 samples, 0.09%)</title><rect x="158.4" y="453" width="1.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="161.39" y="463.5" ></text>
</g>
<g >
<title>[conversion.cpython-312-x86_64-linux-gnu.so] (26,111,509 samples, 0.09%)</title><rect x="67.4" y="757" width="1.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="70.41" y="767.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,642,433 samples, 0.09%)</title><rect x="83.2" y="709" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="86.23" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,174,437 samples, 0.09%)</title><rect x="76.6" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,219,217 samples, 0.09%)</title><rect x="166.7" y="597" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.72" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (50,962,072 samples, 0.18%)</title><rect x="589.1" y="597" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.06" y="607.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (26,111,509 samples, 0.09%)</title><rect x="67.4" y="389" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="70.41" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (232,633,989 samples, 0.82%)</title><rect x="142.9" y="837" width="9.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="847.5" ></text>
</g>
<g >
<title>_PyObject_Call (31,287,366 samples, 0.11%)</title><rect x="41.7" y="469" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="44.73" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,946 samples, 0.09%)</title><rect x="195.2" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="198.25" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (33,385,317 samples, 0.12%)</title><rect x="191.3" y="485" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.35" y="495.5" ></text>
</g>
<g >
<title>vfs_read (34,132,139 samples, 0.12%)</title><rect x="96.5" y="261" width="1.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="99.45" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (25,434,141 samples, 0.09%)</title><rect x="210.2" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.16" y="463.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,132,139 samples, 0.12%)</title><rect x="96.5" y="53" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="99.45" y="63.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (68,482,111 samples, 0.24%)</title><rect x="1018.9" y="565" width="2.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1021.93" y="575.5" ></text>
</g>
<g >
<title>PySequence_Tuple (29,096,832 samples, 0.10%)</title><rect x="75.4" y="565" width="1.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="78.41" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,281,053 samples, 0.09%)</title><rect x="185.1" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.08" y="495.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_edge&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (136,731,608 samples, 0.48%)</title><rect x="956.1" y="629" width="5.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="959.09" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,642,433 samples, 0.09%)</title><rect x="83.2" y="677" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.23" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,434,141 samples, 0.09%)</title><rect x="210.2" y="677" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="213.16" y="687.5" ></text>
</g>
<g >
<title>do_anonymous_page (26,202,934 samples, 0.09%)</title><rect x="162.0" y="277" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="164.99" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (79,651,363 samples, 0.28%)</title><rect x="182.8" y="661" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.85" y="671.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Deque_base (68,292,750 samples, 0.24%)</title><rect x="1104.5" y="677" width="2.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1107.52" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,216,209 samples, 0.09%)</title><rect x="102.8" y="501" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="105.76" y="511.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,214,576 samples, 0.09%)</title><rect x="55.0" y="405" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="57.96" y="415.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (68,158,156 samples, 0.24%)</title><rect x="880.9" y="485" width="2.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="883.89" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,315,552 samples, 0.09%)</title><rect x="620.2" y="357" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="623.23" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (34,132,139 samples, 0.12%)</title><rect x="96.5" y="421" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="431.5" ></text>
</g>
<g >
<title>page_fault (33,745,010 samples, 0.12%)</title><rect x="64.9" y="197" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="67.90" y="207.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (68,183,134 samples, 0.24%)</title><rect x="1081.7" y="661" width="2.8" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1084.69" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,318 samples, 0.09%)</title><rect x="119.4" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.37" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (52,431,830 samples, 0.19%)</title><rect x="206.9" y="501" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="209.87" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,431,830 samples, 0.19%)</title><rect x="206.9" y="389" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="209.87" y="399.5" ></text>
</g>
<g >
<title>PyIter_Next (29,096,832 samples, 0.10%)</title><rect x="75.4" y="533" width="1.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="78.41" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~vector (169,608,598 samples, 0.60%)</title><rect x="1131.6" y="709" width="7.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1134.59" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (570,796,786 samples, 2.02%)</title><rect x="52.8" y="1029" width="23.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="55.77" y="1039.5" >_..</text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (34,159,281 samples, 0.12%)</title><rect x="13.6" y="1061" width="1.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="16.62" y="1071.5" ></text>
</g>
<g >
<title>page_evictable (34,160,793 samples, 0.12%)</title><rect x="621.3" y="277" width="1.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="624.33" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (112,957,699 samples, 0.40%)</title><rect x="168.9" y="757" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="171.91" y="767.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (111,920,957 samples, 0.40%)</title><rect x="115.8" y="789" width="4.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="118.79" y="799.5" ></text>
</g>
<g >
<title>_PyObject_Call (220,599,939 samples, 0.78%)</title><rect x="173.6" y="565" width="9.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="176.63" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,138,378 samples, 0.12%)</title><rect x="113.3" y="693" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="116.27" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (28,657,867 samples, 0.10%)</title><rect x="174.7" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.75" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,094,188 samples, 0.12%)</title><rect x="91.1" y="533" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="94.13" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,189,301 samples, 0.09%)</title><rect x="109.7" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.65" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,138,378 samples, 0.12%)</title><rect x="113.3" y="405" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="116.27" y="415.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (136,711,306 samples, 0.48%)</title><rect x="1036.1" y="629" width="5.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1039.10" y="639.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,066,070 samples, 0.12%)</title><rect x="1148.7" y="629" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1151.67" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,132,139 samples, 0.12%)</title><rect x="96.5" y="597" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="99.45" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,223,173 samples, 0.09%)</title><rect x="112.2" y="597" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="115.17" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,252,462 samples, 0.09%)</title><rect x="115.8" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,243 samples, 0.09%)</title><rect x="90.0" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.03" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (103,555,233 samples, 0.37%)</title><rect x="589.1" y="693" width="4.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="592.06" y="703.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (34,160,793 samples, 0.12%)</title><rect x="621.3" y="293" width="1.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="624.33" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (25,434,141 samples, 0.09%)</title><rect x="210.2" y="645" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.16" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,228,460 samples, 0.09%)</title><rect x="52.8" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,156 samples, 0.09%)</title><rect x="591.2" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="594.19" y="527.5" ></text>
</g>
<g >
<title>__lru_cache_add (34,160,793 samples, 0.12%)</title><rect x="621.3" y="309" width="1.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="624.33" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,428,829 samples, 0.09%)</title><rect x="63.8" y="437" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="66.80" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,486 samples, 0.09%)</title><rect x="73.2" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.22" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,205,811 samples, 0.09%)</title><rect x="48.8" y="437" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="51.84" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (151,060,758 samples, 0.54%)</title><rect x="96.5" y="853" width="6.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="99.45" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,204,067 samples, 0.09%)</title><rect x="167.8" y="581" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="170.81" y="591.5" ></text>
</g>
<g >
<title>PyUnicode_FromFormatV (26,197,038 samples, 0.09%)</title><rect x="212.3" y="309" width="1.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="215.32" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,058,837 samples, 0.12%)</title><rect x="93.6" y="821" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="96.65" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (302,773,875 samples, 1.07%)</title><rect x="152.6" y="901" width="12.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="155.64" y="911.5" ></text>
</g>
<g >
<title>ret_from_fork (13,038,284 samples, 0.05%)</title><rect x="219.6" y="1061" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="222.56" y="1071.5" ></text>
</g>
<g >
<title>[python3.12] (33,289,321 samples, 0.12%)</title><rect x="144.3" y="469" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="147.34" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (68,465,780 samples, 0.24%)</title><rect x="1165.8" y="693" width="2.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1168.82" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="341" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (54,665,706 samples, 0.19%)</title><rect x="129.0" y="565" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.02" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,101 samples, 0.09%)</title><rect x="200.6" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.62" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (86,128,627 samples, 0.31%)</title><rect x="147.9" y="421" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.94" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,161,388 samples, 0.09%)</title><rect x="138.2" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.23" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (172,858,073 samples, 0.61%)</title><rect x="120.5" y="693" width="7.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="123.46" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,843,098 samples, 0.09%)</title><rect x="139.3" y="357" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="142.32" y="367.5" ></text>
</g>
<g >
<title>unlink_chunk (34,137,840 samples, 0.12%)</title><rect x="576.2" y="885" width="1.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="579.23" y="895.5" ></text>
</g>
<g >
<title>_PyImport_ReleaseLock (26,111,509 samples, 0.09%)</title><rect x="67.4" y="293" width="1.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="70.41" y="303.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (34,132,139 samples, 0.12%)</title><rect x="96.5" y="213" width="1.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="99.45" y="223.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (103,555,233 samples, 0.37%)</title><rect x="589.1" y="757" width="4.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="592.06" y="767.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,220,774 samples, 0.09%)</title><rect x="211.2" y="677" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="214.22" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,188,019 samples, 0.09%)</title><rect x="82.1" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.13" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,373,735 samples, 0.19%)</title><rect x="76.6" y="517" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="79.62" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (52,220,771 samples, 0.18%)</title><rect x="46.7" y="421" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.66" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,401,014 samples, 0.09%)</title><rect x="122.7" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.66" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_read (34,132,139 samples, 0.12%)</title><rect x="96.5" y="293" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="99.45" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (27,036,548 samples, 0.10%)</title><rect x="79.9" y="613" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (78,426,582 samples, 0.28%)</title><rect x="46.7" y="869" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.66" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (13,731,023,876 samples, 48.63%)</title><rect x="596.2" y="885" width="573.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="599.23" y="895.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,111,509 samples, 0.09%)</title><rect x="67.4" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.41" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,642,433 samples, 0.09%)</title><rect x="83.2" y="517" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="86.23" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (25,434,141 samples, 0.09%)</title><rect x="210.2" y="757" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.16" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (54,665,706 samples, 0.19%)</title><rect x="129.0" y="517" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.02" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (116,928,619 samples, 0.41%)</title><rect x="97.9" y="597" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.88" y="607.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,376 samples, 0.09%)</title><rect x="123.8" y="533" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="126.76" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (220,599,939 samples, 0.78%)</title><rect x="173.6" y="709" width="9.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="176.63" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (34,055,020 samples, 0.12%)</title><rect x="601.9" y="677" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="604.87" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (34,132,139 samples, 0.12%)</title><rect x="96.5" y="613" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="623.5" ></text>
</g>
<g >
<title>boost::edge&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (33,949,177 samples, 0.12%)</title><rect x="933.2" y="725" width="1.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="936.23" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,934 samples, 0.09%)</title><rect x="162.0" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.99" y="431.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (32,746,492 samples, 0.12%)</title><rect x="116.9" y="469" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="119.88" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,843,098 samples, 0.09%)</title><rect x="139.3" y="437" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="142.32" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (29,096,832 samples, 0.10%)</title><rect x="75.4" y="437" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="78.41" y="447.5" ></text>
</g>
<g >
<title>do_user_addr_fault (33,745,010 samples, 0.12%)</title><rect x="64.9" y="149" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="67.90" y="159.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,298 samples, 0.09%)</title><rect x="77.7" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.72" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (102,568,870 samples, 0.36%)</title><rect x="1144.4" y="677" width="4.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1147.39" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,829,123 samples, 0.12%)</title><rect x="107.1" y="373" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="110.15" y="383.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (26,428,829 samples, 0.09%)</title><rect x="63.8" y="229" width="1.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="66.80" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (59,875,676 samples, 0.21%)</title><rect x="192.7" y="389" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="195.74" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,728 samples, 0.09%)</title><rect x="78.8" y="629" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="81.81" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,486 samples, 0.09%)</title><rect x="73.2" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.22" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,210,408 samples, 0.09%)</title><rect x="159.5" y="469" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="162.48" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,509 samples, 0.09%)</title><rect x="67.4" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.41" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="261" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,426,582 samples, 0.28%)</title><rect x="46.7" y="629" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="49.66" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (68,235,612 samples, 0.24%)</title><rect x="84.3" y="661" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,373,735 samples, 0.19%)</title><rect x="76.6" y="853" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.62" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (105,092,851 samples, 0.37%)</title><rect x="177.4" y="469" width="4.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="180.36" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,267,251 samples, 0.09%)</title><rect x="163.1" y="469" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="166.09" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (151,060,758 samples, 0.54%)</title><rect x="96.5" y="869" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.45" y="879.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,111,509 samples, 0.09%)</title><rect x="67.4" y="773" width="1.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="70.41" y="783.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,199,298 samples, 0.09%)</title><rect x="77.7" y="405" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="80.72" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,298 samples, 0.09%)</title><rect x="77.7" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.72" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (67,902,262 samples, 0.24%)</title><rect x="87.2" y="533" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="90.19" y="543.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (112,338,142 samples, 0.40%)</title><rect x="146.8" y="501" width="4.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="149.85" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,509 samples, 0.09%)</title><rect x="67.4" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.41" y="671.5" ></text>
</g>
<g >
<title>__vm_enough_memory (26,315,552 samples, 0.09%)</title><rect x="620.2" y="293" width="1.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="623.23" y="303.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,378 samples, 0.09%)</title><rect x="69.9" y="853" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="72.91" y="863.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (34,253,870 samples, 0.12%)</title><rect x="1164.4" y="661" width="1.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1167.39" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="917" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (189,899,606 samples, 0.67%)</title><rect x="152.6" y="565" width="8.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.64" y="575.5" ></text>
</g>
<g >
<title>new_sync_read (34,132,139 samples, 0.12%)</title><rect x="96.5" y="229" width="1.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="99.45" y="239.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (94,108,505 samples, 0.33%)</title><rect x="87.2" y="869" width="3.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="90.19" y="879.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,206,101 samples, 0.09%)</title><rect x="200.6" y="389" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="203.62" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,378 samples, 0.09%)</title><rect x="69.9" y="821" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.91" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,136,763 samples, 0.12%)</title><rect x="84.3" y="533" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="87.34" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,766,166 samples, 0.28%)</title><rect x="52.8" y="853" width="3.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="55.77" y="863.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,836,231 samples, 0.12%)</title><rect x="600.5" y="677" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="603.46" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (34,101,855 samples, 0.12%)</title><rect x="1001.8" y="581" width="1.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1004.78" y="591.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,171,603 samples, 0.09%)</title><rect x="182.8" y="389" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="185.85" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,303,297 samples, 0.21%)</title><rect x="91.1" y="789" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="94.13" y="799.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,628,473 samples, 0.28%)</title><rect x="211.2" y="885" width="3.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="214.22" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (33,453,730 samples, 0.12%)</title><rect x="596.2" y="661" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="599.23" y="671.5" ></text>
</g>
<g >
<title>free_pages (5,536,516 samples, 0.02%)</title><rect x="219.6" y="981" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="222.63" y="991.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,353,144 samples, 0.09%)</title><rect x="43.0" y="501" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.04" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,167,861 samples, 0.09%)</title><rect x="45.6" y="613" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.56" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,184,077 samples, 0.09%)</title><rect x="205.8" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="208.78" y="415.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (94,108,505 samples, 0.33%)</title><rect x="87.2" y="725" width="3.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="90.19" y="735.5" ></text>
</g>
<g >
<title>pybind11::detail::argument_loader&lt;Nexullance_IT_interface*, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int&gt;::call_impl&lt;IT_outputs, pybind11::cpp_function::cpp_function&lt;IT_outputs, Nexullance_IT_interface, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (5,700,855,837 samples, 20.19%)</title><rect x="930.4" y="805" width="238.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="933.41" y="815.5" >pybind11::detail::argument_load..</text>
</g>
<g >
<title>PyObject_CallOneArg (33,745,010 samples, 0.12%)</title><rect x="64.9" y="613" width="1.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="67.90" y="623.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (68,194,806 samples, 0.24%)</title><rect x="993.2" y="597" width="2.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="996.22" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (68,296,234 samples, 0.24%)</title><rect x="1117.4" y="597" width="2.8" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1120.36" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,138,378 samples, 0.12%)</title><rect x="113.3" y="805" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="116.27" y="815.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4,802,171 samples, 0.02%)</title><rect x="219.9" y="965" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="222.86" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,223,173 samples, 0.09%)</title><rect x="112.2" y="725" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="115.17" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (511,318,997 samples, 1.81%)</title><rect x="566.3" y="965" width="21.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="569.26" y="975.5" >[..</text>
</g>
<g >
<title>do_user_addr_fault (102,622,478 samples, 0.36%)</title><rect x="615.9" y="405" width="4.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="618.95" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (330,663,436 samples, 1.17%)</title><rect x="196.3" y="1013" width="13.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="199.34" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (34,101,260 samples, 0.12%)</title><rect x="124.9" y="373" width="1.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="127.86" y="383.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (170,908,736 samples, 0.61%)</title><rect x="1014.6" y="613" width="7.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1017.65" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,964,161 samples, 0.28%)</title><rect x="120.5" y="549" width="3.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="123.46" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,287,437 samples, 0.09%)</title><rect x="186.2" y="469" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="189.18" y="479.5" ></text>
</g>
<g >
<title>do_sys_open (26,252,462 samples, 0.09%)</title><rect x="115.8" y="309" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="118.79" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,383,005 samples, 0.09%)</title><rect x="592.3" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="595.29" y="543.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,661 samples, 0.09%)</title><rect x="213.4" y="789" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="216.41" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (67,902,262 samples, 0.24%)</title><rect x="87.2" y="613" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.19" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,811 samples, 0.09%)</title><rect x="48.8" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.84" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (130,950,700 samples, 0.46%)</title><rect x="203.6" y="709" width="5.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="206.59" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (86,742,635 samples, 0.31%)</title><rect x="168.9" y="645" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.91" y="655.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (26,642,433 samples, 0.09%)</title><rect x="83.2" y="485" width="1.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="86.23" y="495.5" ></text>
</g>
<g >
<title>native_write_msr (4,617,123 samples, 0.02%)</title><rect x="553.2" y="869" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="556.23" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (151,060,758 samples, 0.54%)</title><rect x="96.5" y="741" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.45" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,780 samples, 0.09%)</title><rect x="149.4" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="152.35" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (165,180,376 samples, 0.59%)</title><rect x="145.7" y="565" width="6.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="148.74" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (151,060,758 samples, 0.54%)</title><rect x="96.5" y="725" width="6.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="99.45" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,171,603 samples, 0.09%)</title><rect x="182.8" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="185.85" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (68,534,392 samples, 0.24%)</title><rect x="1120.2" y="629" width="2.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1123.21" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::vector (32,892,719 samples, 0.12%)</title><rect x="1130.2" y="709" width="1.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1133.21" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="837" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,417,812 samples, 0.19%)</title><rect x="211.2" y="693" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="214.22" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,464,585 samples, 0.09%)</title><rect x="180.6" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.65" y="319.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (34,005,797 samples, 0.12%)</title><rect x="188.8" y="357" width="1.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="191.83" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (50,962,072 samples, 0.18%)</title><rect x="589.1" y="581" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.06" y="591.5" ></text>
</g>
<g >
<title>boost::tuples::tie&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (34,212,083 samples, 0.12%)</title><rect x="1100.2" y="709" width="1.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1103.24" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (198,469,697 samples, 0.70%)</title><rect x="144.3" y="597" width="8.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="147.34" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="485" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,206,101 samples, 0.09%)</title><rect x="200.6" y="549" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="203.62" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (102,392,917 samples, 0.36%)</title><rect x="196.3" y="629" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.34" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (103,555,233 samples, 0.37%)</title><rect x="589.1" y="773" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.06" y="783.5" ></text>
</g>
<g >
<title>error_entry (33,787,832 samples, 0.12%)</title><rect x="698.0" y="501" width="1.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="700.97" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (29,940,596 samples, 0.11%)</title><rect x="57.2" y="389" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="60.18" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (67,902,262 samples, 0.24%)</title><rect x="87.2" y="677" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="90.19" y="687.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,278,517 samples, 0.12%)</title><rect x="611.7" y="485" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="614.66" y="495.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (299,457,149 samples, 1.06%)</title><rect x="890.9" y="501" width="12.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="893.88" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (58,998,954 samples, 0.21%)</title><rect x="115.8" y="741" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="118.79" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,557 samples, 0.09%)</title><rect x="74.3" y="421" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="77.31" y="431.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,109 samples, 0.09%)</title><rect x="92.6" y="421" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="95.55" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,223,173 samples, 0.09%)</title><rect x="112.2" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.17" y="543.5" ></text>
</g>
<g >
<title>__lru_cache_add (102,132,446 samples, 0.36%)</title><rect x="873.8" y="357" width="4.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="876.77" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (104,750,267 samples, 0.37%)</title><rect x="204.7" y="581" width="4.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.69" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (6,509,877,586 samples, 23.06%)</title><rect x="614.5" y="549" width="272.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="617.52" y="559.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>_PyObject_Call (189,899,606 samples, 0.67%)</title><rect x="152.6" y="581" width="8.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="155.64" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,628,473 samples, 0.28%)</title><rect x="211.2" y="869" width="3.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="214.22" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,217 samples, 0.09%)</title><rect x="166.7" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.72" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (68,215,154 samples, 0.24%)</title><rect x="927.6" y="757" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="930.56" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (33,837,821 samples, 0.12%)</title><rect x="68.5" y="421" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.50" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,557 samples, 0.09%)</title><rect x="74.3" y="293" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.31" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call (436,586,046 samples, 1.55%)</title><rect x="96.5" y="1013" width="18.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="99.45" y="1023.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,799,484 samples, 0.19%)</title><rect x="71.0" y="613" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="74.01" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,216,209 samples, 0.09%)</title><rect x="102.8" y="565" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.76" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (86,453,309 samples, 0.31%)</title><rect x="165.3" y="949" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="168.29" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,169 samples, 0.09%)</title><rect x="59.9" y="421" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.85" y="431.5" ></text>
</g>
<g >
<title>PyArray_CopyObject (67,775,131 samples, 0.24%)</title><rect x="49.9" y="869" width="2.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="52.93" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,241,513 samples, 0.09%)</title><rect x="190.3" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="193.25" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,217 samples, 0.09%)</title><rect x="166.7" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.72" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (52,373,735 samples, 0.19%)</title><rect x="76.6" y="533" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (189,899,606 samples, 0.67%)</title><rect x="152.6" y="517" width="8.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="155.64" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,281,053 samples, 0.09%)</title><rect x="185.1" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.08" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (302,773,875 samples, 1.07%)</title><rect x="152.6" y="869" width="12.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="155.64" y="879.5" ></text>
</g>
<g >
<title>PyList_Sort (26,210,661 samples, 0.09%)</title><rect x="213.4" y="629" width="1.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="216.41" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (31,958,704 samples, 0.11%)</title><rect x="127.7" y="405" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.69" y="415.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,136,763 samples, 0.12%)</title><rect x="84.3" y="437" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="87.34" y="447.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,215,064 samples, 0.09%)</title><rect x="172.5" y="517" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="175.53" y="527.5" ></text>
</g>
<g >
<title>__pyx_pw_5numpy_6random_6mtrand_11RandomState_1__init__ (25,925,031 samples, 0.09%)</title><rect x="101.7" y="437" width="1.1" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="104.68" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (68,465,780 samples, 0.24%)</title><rect x="1165.8" y="709" width="2.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1168.82" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (86,082,622 samples, 0.30%)</title><rect x="192.7" y="549" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="195.74" y="559.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,428,829 samples, 0.09%)</title><rect x="63.8" y="517" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="66.80" y="527.5" ></text>
</g>
<g >
<title>Nexullance_IT::step_1 (68,204,756 samples, 0.24%)</title><rect x="933.2" y="741" width="2.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="936.23" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,219,217 samples, 0.09%)</title><rect x="166.7" y="581" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="169.72" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,098,849 samples, 0.12%)</title><rect x="85.8" y="421" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.77" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (26,111,509 samples, 0.09%)</title><rect x="67.4" y="501" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="70.41" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (33,583,276 samples, 0.12%)</title><rect x="126.3" y="565" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.29" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (32,746,492 samples, 0.12%)</title><rect x="116.9" y="389" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="119.88" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,353,144 samples, 0.09%)</title><rect x="43.0" y="437" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.04" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (44,903,039 samples, 0.16%)</title><rect x="201.7" y="549" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.72" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,428,829 samples, 0.09%)</title><rect x="63.8" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.80" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (172,858,073 samples, 0.61%)</title><rect x="120.5" y="725" width="7.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="123.46" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (52,587,110 samples, 0.19%)</title><rect x="154.0" y="389" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="157.00" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,428,829 samples, 0.09%)</title><rect x="63.8" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.80" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (34,185,861 samples, 0.12%)</title><rect x="587.6" y="933" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="590.63" y="943.5" ></text>
</g>
<g >
<title>PyObject_Free (33,580,982 samples, 0.12%)</title><rect x="594.8" y="805" width="1.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="597.82" y="815.5" ></text>
</g>
<g >
<title>inflate (204,659,644 samples, 0.72%)</title><rect x="903.4" y="501" width="8.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="906.40" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (33,745,010 samples, 0.12%)</title><rect x="64.9" y="709" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.90" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (31,958,704 samples, 0.11%)</title><rect x="127.7" y="661" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.69" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (102,392,917 samples, 0.36%)</title><rect x="196.3" y="469" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="789" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,766,166 samples, 0.28%)</title><rect x="52.8" y="645" width="3.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="55.77" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (103,555,233 samples, 0.37%)</title><rect x="589.1" y="677" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.06" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (172,858,073 samples, 0.61%)</title><rect x="120.5" y="789" width="7.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="123.46" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,426,582 samples, 0.28%)</title><rect x="46.7" y="725" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="49.66" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,486 samples, 0.09%)</title><rect x="73.2" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.22" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,030,025 samples, 0.12%)</title><rect x="165.3" y="437" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="168.29" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,843,098 samples, 0.09%)</title><rect x="139.3" y="469" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="142.32" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (34,290,359 samples, 0.12%)</title><rect x="1143.0" y="677" width="1.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1145.95" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="629" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="639.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (34,240,427 samples, 0.12%)</title><rect x="878.0" y="373" width="1.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="881.04" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (220,599,939 samples, 0.78%)</title><rect x="173.6" y="517" width="9.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="176.63" y="527.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::finish_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (68,335,274 samples, 0.24%)</title><rect x="1173.7" y="1077" width="2.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1176.72" y="1087.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::adj_list_edge_iterator (68,455,844 samples, 0.24%)</title><rect x="937.5" y="709" width="2.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="940.51" y="719.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (78,628,266 samples, 0.28%)</title><rect x="177.4" y="437" width="3.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="180.36" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,164,292 samples, 0.12%)</title><rect x="142.9" y="629" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.92" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,220,086 samples, 0.09%)</title><rect x="181.8" y="421" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="184.75" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,373,735 samples, 0.19%)</title><rect x="76.6" y="949" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.62" y="959.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,135,790 samples, 0.12%)</title><rect x="38.1" y="1013" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="41.11" y="1023.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,394,969 samples, 0.19%)</title><rect x="81.0" y="805" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="84.04" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,241,513 samples, 0.09%)</title><rect x="190.3" y="437" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="193.25" y="447.5" ></text>
</g>
<g >
<title>PyRun_StringFlags (26,210,185 samples, 0.09%)</title><rect x="158.4" y="485" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="161.39" y="495.5" ></text>
</g>
<g >
<title>[_ctypes.cpython-312-x86_64-linux-gnu.so] (34,135,790 samples, 0.12%)</title><rect x="38.1" y="613" width="1.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="41.11" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,110 samples, 0.09%)</title><rect x="106.1" y="325" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.05" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,557 samples, 0.09%)</title><rect x="74.3" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.31" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (52,613,512 samples, 0.19%)</title><rect x="39.5" y="437" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.53" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,857,821 samples, 0.12%)</title><rect x="160.6" y="485" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.58" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,745,010 samples, 0.12%)</title><rect x="64.9" y="517" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="67.90" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="613" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (58,998,954 samples, 0.21%)</title><rect x="115.8" y="613" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="118.79" y="623.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (26,230,863 samples, 0.09%)</title><rect x="141.8" y="293" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="144.82" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,216,209 samples, 0.09%)</title><rect x="102.8" y="581" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="105.76" y="591.5" ></text>
</g>
<g >
<title>PyNumber_And (26,216,209 samples, 0.09%)</title><rect x="102.8" y="341" width="1.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="105.76" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,101 samples, 0.09%)</title><rect x="200.6" y="533" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="203.62" y="543.5" ></text>
</g>
<g >
<title>_dl_init (33,745,010 samples, 0.12%)</title><rect x="64.9" y="309" width="1.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="67.90" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config::stored_vertex, std::allocator&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config::stored_vertex&gt; &gt;::operator[] (34,271,251 samples, 0.12%)</title><rect x="1097.4" y="677" width="1.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1100.38" y="687.5" ></text>
</g>
<g >
<title>mmap_region (10,138,758 samples, 0.04%)</title><rect x="1176.6" y="917" width="0.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1179.57" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,022,792 samples, 0.09%)</title><rect x="46.7" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.66" y="351.5" ></text>
</g>
<g >
<title>lookup_fast (26,495,990 samples, 0.09%)</title><rect x="137.1" y="229" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="140.12" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::deallocate (34,198,793 samples, 0.12%)</title><rect x="1137.2" y="661" width="1.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1140.25" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,199,486 samples, 0.09%)</title><rect x="73.2" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.22" y="447.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,267,251 samples, 0.09%)</title><rect x="163.1" y="549" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="166.09" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,373,735 samples, 0.19%)</title><rect x="76.6" y="597" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.62" y="607.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,303,297 samples, 0.21%)</title><rect x="91.1" y="1029" width="2.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="94.13" y="1039.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (94,409,782 samples, 0.33%)</title><rect x="59.9" y="533" width="3.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="62.85" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,267,251 samples, 0.09%)</title><rect x="163.1" y="565" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="166.09" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,434,141 samples, 0.09%)</title><rect x="210.2" y="325" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="213.16" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (83,900,878 samples, 0.30%)</title><rect x="39.5" y="949" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.53" y="959.5" ></text>
</g>
<g >
<title>pybind11::detail::list_caster&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, unsigned long&gt;::cast&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="757" width="1.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1171.68" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,109 samples, 0.09%)</title><rect x="92.6" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.55" y="415.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,464,585 samples, 0.09%)</title><rect x="180.6" y="453" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="183.65" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,239,697 samples, 0.09%)</title><rect x="121.6" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="124.56" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,135,790 samples, 0.12%)</title><rect x="38.1" y="757" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="41.11" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (90,767,697 samples, 0.32%)</title><rect x="56.1" y="549" width="3.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="59.06" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,464,585 samples, 0.09%)</title><rect x="180.6" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.65" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="351.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,135,790 samples, 0.12%)</title><rect x="38.1" y="309" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="41.11" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,837,821 samples, 0.12%)</title><rect x="68.5" y="725" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="71.50" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,509 samples, 0.09%)</title><rect x="67.4" y="453" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.41" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,030,025 samples, 0.12%)</title><rect x="165.3" y="469" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="168.29" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,111,509 samples, 0.09%)</title><rect x="67.4" y="421" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="70.41" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,557 samples, 0.09%)</title><rect x="74.3" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.31" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (86,453,309 samples, 0.31%)</title><rect x="165.3" y="853" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="168.29" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (112,874,269 samples, 0.40%)</title><rect x="160.6" y="741" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.58" y="751.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,135,790 samples, 0.12%)</title><rect x="38.1" y="677" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="41.11" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (52,423,284 samples, 0.19%)</title><rect x="166.7" y="821" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.72" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,110 samples, 0.09%)</title><rect x="106.1" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.05" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,211,728 samples, 0.09%)</title><rect x="78.8" y="869" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="81.81" y="879.5" ></text>
</g>
<g >
<title>dispatcher_vectorcall (26,220,774 samples, 0.09%)</title><rect x="211.2" y="485" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="214.22" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,546,263 samples, 0.09%)</title><rect x="164.2" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.18" y="415.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (26,061,732 samples, 0.09%)</title><rect x="114.7" y="1029" width="1.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="117.70" y="1039.5" ></text>
</g>
<g >
<title>PyUnicode_Substring (26,219,217 samples, 0.09%)</title><rect x="166.7" y="341" width="1.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="169.72" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (33,580,982 samples, 0.12%)</title><rect x="594.8" y="869" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="597.82" y="879.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (172,369,574 samples, 0.61%)</title><rect x="45.6" y="997" width="7.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="48.56" y="1007.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (34,290,359 samples, 0.12%)</title><rect x="1143.0" y="661" width="1.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1145.95" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (189,899,606 samples, 0.67%)</title><rect x="152.6" y="597" width="8.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="155.64" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (27,036,548 samples, 0.10%)</title><rect x="79.9" y="725" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (326,538,739 samples, 1.16%)</title><rect x="173.6" y="933" width="13.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="176.63" y="943.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,210,156 samples, 0.09%)</title><rect x="591.2" y="549" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="594.19" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;::end (33,521,481 samples, 0.12%)</title><rect x="931.8" y="437" width="1.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="934.83" y="447.5" ></text>
</g>
<g >
<title>zap_page_range (30,080,530 samples, 0.11%)</title><rect x="220.1" y="949" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="223.11" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="389" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,196,063 samples, 0.09%)</title><rect x="170.0" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.01" y="399.5" ></text>
</g>
<g >
<title>load_elf_binary (10,138,758 samples, 0.04%)</title><rect x="1176.6" y="997" width="0.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1179.57" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (119,467,939 samples, 0.42%)</title><rect x="191.3" y="629" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.35" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,243 samples, 0.09%)</title><rect x="90.0" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.03" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (83,900,878 samples, 0.30%)</title><rect x="39.5" y="917" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.53" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,557 samples, 0.09%)</title><rect x="74.3" y="581" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.31" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,287,437 samples, 0.09%)</title><rect x="186.2" y="725" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="189.18" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,869,282 samples, 0.10%)</title><rect x="56.1" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (60,303,297 samples, 0.21%)</title><rect x="91.1" y="837" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (255,899,018 samples, 0.91%)</title><rect x="96.5" y="965" width="10.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="99.45" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,378 samples, 0.12%)</title><rect x="113.3" y="773" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="116.27" y="783.5" ></text>
</g>
<g >
<title>[[stack]] (442,900,130 samples, 1.57%)</title><rect x="12.2" y="1077" width="18.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="15.20" y="1087.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (297,676,062 samples, 1.05%)</title><rect x="56.1" y="837" width="12.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="59.06" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (83,900,878 samples, 0.30%)</title><rect x="39.5" y="869" width="3.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.53" y="879.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (83,900,878 samples, 0.30%)</title><rect x="39.5" y="997" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="42.53" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (106,073,950 samples, 0.38%)</title><rect x="79.9" y="885" width="4.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,318 samples, 0.09%)</title><rect x="119.4" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="122.37" y="351.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,197,038 samples, 0.09%)</title><rect x="212.3" y="629" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="215.32" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; const&amp;&gt; (33,521,481 samples, 0.12%)</title><rect x="931.8" y="485" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="934.83" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="805" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,408 samples, 0.09%)</title><rect x="159.5" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.48" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (52,613,512 samples, 0.19%)</title><rect x="39.5" y="629" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.53" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (151,060,758 samples, 0.54%)</title><rect x="96.5" y="757" width="6.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="99.45" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (34,138,851 samples, 0.12%)</title><rect x="199.2" y="341" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.19" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (30,515,148 samples, 0.11%)</title><rect x="97.9" y="469" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.88" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,392,061 samples, 0.19%)</title><rect x="108.6" y="469" width="2.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="111.56" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,058,837 samples, 0.12%)</title><rect x="93.6" y="421" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="96.65" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (86,742,635 samples, 0.31%)</title><rect x="168.9" y="581" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="171.91" y="591.5" ></text>
</g>
<g >
<title>PyList_Sort (26,211,378 samples, 0.09%)</title><rect x="69.9" y="629" width="1.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="72.91" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;float, std::pair&lt;float const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;float const, unsigned long&gt; &gt;, std::greater&lt;float&gt;, std::allocator&lt;std::pair&lt;float const, unsigned long&gt; &gt; &gt;::_S_key (34,256,994 samples, 0.12%)</title><rect x="1160.1" y="677" width="1.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1163.09" y="687.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (338,124,702 samples, 1.20%)</title><rect x="127.7" y="693" width="14.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="130.69" y="703.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (34,170,919 samples, 0.12%)</title><rect x="950.4" y="709" width="1.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="953.38" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,323,130 samples, 0.09%)</title><rect x="53.9" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.86" y="383.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (68,383,824 samples, 0.24%)</title><rect x="1127.4" y="629" width="2.8" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1130.35" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,098,849 samples, 0.12%)</title><rect x="85.8" y="533" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.77" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (570,796,786 samples, 2.02%)</title><rect x="52.8" y="965" width="23.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="975.5" >[..</text>
</g>
<g >
<title>[python3.12] (26,167,861 samples, 0.09%)</title><rect x="45.6" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.56" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (189,899,606 samples, 0.67%)</title><rect x="152.6" y="773" width="8.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="155.64" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (34,164,292 samples, 0.12%)</title><rect x="142.9" y="517" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="527.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,242,265 samples, 0.12%)</title><rect x="20.8" y="1061" width="1.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="23.75" y="1071.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,337,946 samples, 0.21%)</title><rect x="43.0" y="741" width="2.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="46.04" y="751.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (34,278,517 samples, 0.12%)</title><rect x="611.7" y="565" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="614.66" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (78,628,473 samples, 0.28%)</title><rect x="211.2" y="917" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.22" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (119,467,939 samples, 0.42%)</title><rect x="191.3" y="773" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.35" y="783.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (30,080,530 samples, 0.11%)</title><rect x="220.1" y="917" width="1.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="223.11" y="927.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,101,260 samples, 0.12%)</title><rect x="124.9" y="469" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="127.86" y="479.5" ></text>
</g>
<g >
<title>free_pages.part.0 (5,536,516 samples, 0.02%)</title><rect x="219.6" y="965" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="222.63" y="975.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,964,161 samples, 0.28%)</title><rect x="120.5" y="517" width="3.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="123.46" y="527.5" ></text>
</g>
<g >
<title>vm_mmap (10,138,758 samples, 0.04%)</title><rect x="1176.6" y="965" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1179.57" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (271,185,936 samples, 0.96%)</title><rect x="553.5" y="965" width="11.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="556.50" y="975.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,303,297 samples, 0.21%)</title><rect x="91.1" y="853" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="94.13" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,223,173 samples, 0.09%)</title><rect x="112.2" y="565" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="115.17" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,109 samples, 0.09%)</title><rect x="92.6" y="597" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="95.55" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (112,957,699 samples, 0.40%)</title><rect x="168.9" y="677" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="171.91" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,642,433 samples, 0.09%)</title><rect x="83.2" y="629" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="86.23" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,513 samples, 0.09%)</title><rect x="151.5" y="405" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="154.54" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,199,486 samples, 0.09%)</title><rect x="73.2" y="549" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="76.22" y="559.5" ></text>
</g>
<g >
<title>pybind11_init_ft2font (26,241,513 samples, 0.09%)</title><rect x="190.3" y="549" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="193.25" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (34,104,293 samples, 0.12%)</title><rect x="110.7" y="437" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="113.75" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (68,296,234 samples, 0.24%)</title><rect x="1117.4" y="533" width="2.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1120.36" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,766,166 samples, 0.28%)</title><rect x="52.8" y="773" width="3.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="55.77" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (302,773,875 samples, 1.07%)</title><rect x="152.6" y="949" width="12.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.64" y="959.5" ></text>
</g>
<g >
<title>_PyObject_Call (86,453,309 samples, 0.31%)</title><rect x="165.3" y="917" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="168.29" y="927.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (34,192,299 samples, 0.12%)</title><rect x="1123.1" y="629" width="1.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1126.08" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (34,068,028 samples, 0.12%)</title><rect x="1141.5" y="661" width="1.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1144.53" y="671.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,557 samples, 0.09%)</title><rect x="74.3" y="501" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="77.31" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (71,109,140 samples, 0.25%)</title><rect x="200.6" y="645" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.62" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,281,053 samples, 0.09%)</title><rect x="185.1" y="309" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.08" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (34,094,188 samples, 0.12%)</title><rect x="91.1" y="469" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (102,077,362 samples, 0.36%)</title><rect x="923.3" y="741" width="4.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="926.30" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="565" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="575.5" ></text>
</g>
<g >
<title>_PyRun_AnyFileObject (26,208,261 samples, 0.09%)</title><rect x="214.5" y="1013" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="217.51" y="1023.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,094,188 samples, 0.12%)</title><rect x="91.1" y="693" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="94.13" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (7,995,886,656 samples, 28.32%)</title><rect x="596.2" y="869" width="334.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="599.23" y="879.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="725" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (102,077,362 samples, 0.36%)</title><rect x="923.3" y="725" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="926.30" y="735.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,728 samples, 0.09%)</title><rect x="78.8" y="485" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="81.81" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,946 samples, 0.09%)</title><rect x="195.2" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="198.25" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,270,995,768 samples, 4.50%)</title><rect x="115.8" y="1061" width="53.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.79" y="1071.5" >_PyEv..</text>
</g>
<g >
<title>[python3.12] (151,060,758 samples, 0.54%)</title><rect x="96.5" y="805" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (25,925,031 samples, 0.09%)</title><rect x="101.7" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.68" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,811 samples, 0.09%)</title><rect x="48.8" y="517" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.84" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,030,025 samples, 0.12%)</title><rect x="165.3" y="677" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="168.29" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (116,928,619 samples, 0.41%)</title><rect x="97.9" y="581" width="4.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="100.88" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (52,392,061 samples, 0.19%)</title><rect x="108.6" y="389" width="2.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.56" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (25,434,141 samples, 0.09%)</title><rect x="210.2" y="853" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.16" y="863.5" ></text>
</g>
<g >
<title>PyObject_Malloc (26,174,437 samples, 0.09%)</title><rect x="76.6" y="341" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="79.62" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,323,450 samples, 0.09%)</title><rect x="120.5" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.46" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,138,378 samples, 0.12%)</title><rect x="113.3" y="741" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.27" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (165,180,376 samples, 0.59%)</title><rect x="145.7" y="517" width="6.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="148.74" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (27,036,548 samples, 0.10%)</title><rect x="79.9" y="565" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.91" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (54,665,706 samples, 0.19%)</title><rect x="129.0" y="597" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="132.02" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (27,036,548 samples, 0.10%)</title><rect x="79.9" y="757" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.91" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (33,385,317 samples, 0.12%)</title><rect x="191.3" y="549" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.35" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (102,392,917 samples, 0.36%)</title><rect x="196.3" y="581" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="591.5" ></text>
</g>
<g >
<title>llvm::cl::Option::addArgument (33,745,010 samples, 0.12%)</title><rect x="64.9" y="245" width="1.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="67.90" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,261 samples, 0.09%)</title><rect x="214.5" y="389" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.51" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,228,460 samples, 0.09%)</title><rect x="52.8" y="437" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="55.77" y="447.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,576 samples, 0.09%)</title><rect x="55.0" y="565" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="57.96" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (119,467,939 samples, 0.42%)</title><rect x="191.3" y="613" width="5.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="194.35" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,837,821 samples, 0.12%)</title><rect x="68.5" y="597" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="71.50" y="607.5" ></text>
</g>
<g >
<title>get_vma_policy.part.0 (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="565" width="1.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1171.68" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,030,025 samples, 0.12%)</title><rect x="165.3" y="581" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="168.29" y="591.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (29,096,832 samples, 0.10%)</title><rect x="75.4" y="613" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="78.41" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (120,838,611 samples, 0.43%)</title><rect x="59.9" y="629" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.85" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (27,198,707 samples, 0.10%)</title><rect x="183.9" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.94" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,267,251 samples, 0.09%)</title><rect x="163.1" y="325" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="166.09" y="335.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,220,086 samples, 0.09%)</title><rect x="181.8" y="485" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="184.75" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (52,373,735 samples, 0.19%)</title><rect x="76.6" y="821" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.62" y="831.5" ></text>
</g>
<g >
<title>exp_inline (34,209,108 samples, 0.12%)</title><rect x="936.1" y="693" width="1.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="939.08" y="703.5" ></text>
</g>
<g >
<title>__dlopen (33,745,010 samples, 0.12%)</title><rect x="64.9" y="453" width="1.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="67.90" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (68,468,323 samples, 0.24%)</title><rect x="997.5" y="613" width="2.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1000.50" y="623.5" ></text>
</g>
<g >
<title>sysmalloc (94,755,592 samples, 0.34%)</title><rect x="620.2" y="453" width="4.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="623.23" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,303,297 samples, 0.21%)</title><rect x="91.1" y="725" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="94.13" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,223,173 samples, 0.09%)</title><rect x="112.2" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.17" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="1013" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="1023.5" ></text>
</g>
<g >
<title>do_fault (34,135,790 samples, 0.12%)</title><rect x="38.1" y="277" width="1.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="41.11" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (86,082,622 samples, 0.30%)</title><rect x="192.7" y="533" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.74" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (31,287,366 samples, 0.11%)</title><rect x="41.7" y="661" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="44.73" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (172,369,574 samples, 0.61%)</title><rect x="45.6" y="965" width="7.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.56" y="975.5" ></text>
</g>
<g >
<title>[libffi.so.7.1.0] (34,135,790 samples, 0.12%)</title><rect x="38.1" y="597" width="1.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="41.11" y="607.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,200,433 samples, 0.09%)</title><rect x="203.6" y="325" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="206.59" y="335.5" ></text>
</g>
<g >
<title>filename_lookup (26,495,990 samples, 0.09%)</title><rect x="137.1" y="277" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="140.12" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (130,950,700 samples, 0.46%)</title><rect x="203.6" y="965" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,228,460 samples, 0.09%)</title><rect x="52.8" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (34,094,188 samples, 0.12%)</title><rect x="91.1" y="581" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.13" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (130,950,700 samples, 0.46%)</title><rect x="203.6" y="757" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="767.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,208,261 samples, 0.09%)</title><rect x="214.5" y="757" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="217.51" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::size (34,008,452 samples, 0.12%)</title><rect x="27.9" y="1061" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="30.90" y="1071.5" ></text>
</g>
<g >
<title>unmap_page_range (183,190,670 samples, 0.65%)</title><rect x="1177.0" y="933" width="7.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1180.00" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,661 samples, 0.09%)</title><rect x="213.4" y="821" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="216.41" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_relocate (136,579,782 samples, 0.48%)</title><rect x="1124.5" y="677" width="5.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1127.50" y="687.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,135,790 samples, 0.12%)</title><rect x="38.1" y="741" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="41.11" y="751.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (119,467,939 samples, 0.42%)</title><rect x="191.3" y="581" width="5.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="194.35" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,209 samples, 0.09%)</title><rect x="102.8" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (26,111,509 samples, 0.09%)</title><rect x="67.4" y="709" width="1.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="70.41" y="719.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,219,007 samples, 0.12%)</title><rect x="1154.4" y="613" width="1.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1157.38" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,216,209 samples, 0.09%)</title><rect x="102.8" y="693" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="105.76" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,464,585 samples, 0.09%)</title><rect x="180.6" y="389" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="183.65" y="399.5" ></text>
</g>
<g >
<title>[_multiarray_umath.cpython-312-x86_64-linux-gnu.so] (33,688,989 samples, 0.12%)</title><rect x="30.7" y="1077" width="1.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="33.71" y="1087.5" ></text>
</g>
<g >
<title>[python3.12] (26,216,209 samples, 0.09%)</title><rect x="102.8" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,164,292 samples, 0.12%)</title><rect x="142.9" y="389" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,024,701 samples, 0.12%)</title><rect x="95.1" y="789" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.07" y="799.5" ></text>
</g>
<g >
<title>__GI___sbrk (26,315,552 samples, 0.09%)</title><rect x="620.2" y="405" width="1.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="623.23" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,353,144 samples, 0.09%)</title><rect x="43.0" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,622,051 samples, 0.28%)</title><rect x="103.9" y="677" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="106.86" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (300,251,302 samples, 1.06%)</title><rect x="173.6" y="805" width="12.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="176.63" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (31,958,704 samples, 0.11%)</title><rect x="127.7" y="469" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.69" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,843,098 samples, 0.09%)</title><rect x="139.3" y="405" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="142.32" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,426,582 samples, 0.28%)</title><rect x="46.7" y="789" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="49.66" y="799.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (232,633,989 samples, 0.82%)</title><rect x="142.9" y="949" width="9.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.92" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (71,180,163 samples, 0.25%)</title><rect x="187.3" y="549" width="3.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="190.28" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,287,437 samples, 0.09%)</title><rect x="186.2" y="645" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="189.18" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (436,586,046 samples, 1.55%)</title><rect x="96.5" y="997" width="18.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="1007.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,593,161 samples, 0.19%)</title><rect x="591.2" y="581" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="594.19" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (67,902,262 samples, 0.24%)</title><rect x="87.2" y="469" width="2.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="90.19" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,196,063 samples, 0.09%)</title><rect x="170.0" y="437" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="173.01" y="447.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,745,010 samples, 0.12%)</title><rect x="64.9" y="501" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="67.90" y="511.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,583,276 samples, 0.12%)</title><rect x="126.3" y="581" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="129.29" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (34,135,790 samples, 0.12%)</title><rect x="38.1" y="869" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.11" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,200,433 samples, 0.09%)</title><rect x="203.6" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (120,838,611 samples, 0.43%)</title><rect x="59.9" y="677" width="5.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="62.85" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,067 samples, 0.09%)</title><rect x="167.8" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="170.81" y="383.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (130,950,700 samples, 0.46%)</title><rect x="203.6" y="805" width="5.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="206.59" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (30,515,148 samples, 0.11%)</title><rect x="97.9" y="533" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="100.88" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,223,173 samples, 0.09%)</title><rect x="112.2" y="773" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="115.17" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="853" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (90,767,697 samples, 0.32%)</title><rect x="56.1" y="629" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="639.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,024,701 samples, 0.12%)</title><rect x="95.1" y="565" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="98.07" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (67,083,538 samples, 0.24%)</title><rect x="93.6" y="1029" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="96.65" y="1039.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (104,750,267 samples, 0.37%)</title><rect x="204.7" y="565" width="4.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="207.69" y="575.5" ></text>
</g>
<g >
<title>__pyx_pw_5numpy_6random_8_mt19937_7MT19937_1__init__ (25,925,031 samples, 0.09%)</title><rect x="101.7" y="389" width="1.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="104.68" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (52,423,284 samples, 0.19%)</title><rect x="166.7" y="709" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.72" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (81,505,875 samples, 0.29%)</title><rect x="73.2" y="757" width="3.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="76.22" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="309" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,109 samples, 0.09%)</title><rect x="92.6" y="629" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="95.55" y="639.5" ></text>
</g>
<g >
<title>array_assign_subscript (67,775,131 samples, 0.24%)</title><rect x="49.9" y="885" width="2.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="52.93" y="895.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,799,484 samples, 0.19%)</title><rect x="71.0" y="469" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="74.01" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,241,513 samples, 0.09%)</title><rect x="190.3" y="469" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="193.25" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (130,950,700 samples, 0.46%)</title><rect x="203.6" y="629" width="5.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="206.59" y="639.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,101,260 samples, 0.12%)</title><rect x="124.9" y="581" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="127.86" y="591.5" ></text>
</g>
<g >
<title>PyType_GenericAlloc (26,216,209 samples, 0.09%)</title><rect x="102.8" y="293" width="1.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="105.76" y="303.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,206,243 samples, 0.09%)</title><rect x="90.0" y="549" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="93.03" y="559.5" ></text>
</g>
<g >
<title>__brk (26,315,552 samples, 0.09%)</title><rect x="620.2" y="389" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="623.23" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,546,263 samples, 0.09%)</title><rect x="164.2" y="501" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="167.18" y="511.5" ></text>
</g>
<g >
<title>__pow (34,209,108 samples, 0.12%)</title><rect x="936.1" y="725" width="1.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="939.08" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,922,003 samples, 0.19%)</title><rect x="118.3" y="597" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.25" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (86,453,309 samples, 0.31%)</title><rect x="165.3" y="981" width="3.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="168.29" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,199,486 samples, 0.09%)</title><rect x="73.2" y="581" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="76.22" y="591.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_down (410,105,723 samples, 1.45%)</title><rect x="967.5" y="613" width="17.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="970.51" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (37,174,366 samples, 0.13%)</title><rect x="187.3" y="469" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="190.28" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="549" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,837,821 samples, 0.12%)</title><rect x="68.5" y="677" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="71.50" y="687.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (29,096,832 samples, 0.10%)</title><rect x="75.4" y="485" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="78.41" y="495.5" ></text>
</g>
<g >
<title>exit_mmap (183,190,670 samples, 0.65%)</title><rect x="1177.0" y="981" width="7.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1180.00" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,613,512 samples, 0.19%)</title><rect x="39.5" y="789" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="42.53" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (102,392,917 samples, 0.36%)</title><rect x="196.3" y="661" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.34" y="671.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,093,662 samples, 0.12%)</title><rect x="1106.0" y="645" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1108.95" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,353,144 samples, 0.09%)</title><rect x="43.0" y="565" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="46.04" y="575.5" ></text>
</g>
<g >
<title>generic_file_read_iter (34,132,139 samples, 0.12%)</title><rect x="96.5" y="197" width="1.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="99.45" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (34,036,582 samples, 0.12%)</title><rect x="983.2" y="597" width="1.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="986.23" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (7,860,713,005 samples, 27.84%)</title><rect x="599.0" y="757" width="328.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="602.03" y="767.5" >[python3.12]</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (232,633,989 samples, 0.82%)</title><rect x="142.9" y="677" width="9.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="145.92" y="687.5" ></text>
</g>
<g >
<title>[index.cpython-312-x86_64-linux-gnu.so] (26,200,433 samples, 0.09%)</title><rect x="203.6" y="357" width="1.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="206.59" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,373,735 samples, 0.19%)</title><rect x="76.6" y="965" width="2.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="79.62" y="975.5" ></text>
</g>
<g >
<title>page_fault (30,515,148 samples, 0.11%)</title><rect x="97.9" y="389" width="1.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="100.88" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (216,889,615 samples, 0.77%)</title><rect x="187.3" y="981" width="9.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.28" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,546,263 samples, 0.09%)</title><rect x="164.2" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.18" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (52,423,284 samples, 0.19%)</title><rect x="166.7" y="725" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.72" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (120,325,477 samples, 0.43%)</title><rect x="107.1" y="533" width="5.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.15" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (27,036,548 samples, 0.10%)</title><rect x="79.9" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.91" y="399.5" ></text>
</g>
<g >
<title>PyImport_Import (26,111,509 samples, 0.09%)</title><rect x="67.4" y="725" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="70.41" y="735.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,206,243 samples, 0.09%)</title><rect x="90.0" y="501" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="93.03" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (90,767,697 samples, 0.32%)</title><rect x="56.1" y="645" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (7,253,030,745 samples, 25.69%)</title><rect x="611.7" y="645" width="303.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="614.66" y="655.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (52,613,512 samples, 0.19%)</title><rect x="39.5" y="389" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.53" y="399.5" ></text>
</g>
<g >
<title>do_page_fault (33,745,010 samples, 0.12%)</title><rect x="64.9" y="181" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="67.90" y="191.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.0 (75,948,500 samples, 0.27%)</title><rect x="1181.5" y="853" width="3.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1184.48" y="863.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (27,198,707 samples, 0.10%)</title><rect x="183.9" y="373" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="186.94" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (31,287,366 samples, 0.11%)</title><rect x="41.7" y="565" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="44.73" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (7,253,030,745 samples, 25.69%)</title><rect x="611.7" y="613" width="303.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="614.66" y="623.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (34,132,139 samples, 0.12%)</title><rect x="96.5" y="549" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.45" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (68,206,613 samples, 0.24%)</title><rect x="60.9" y="421" width="2.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="63.95" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (104,838,260 samples, 0.37%)</title><rect x="102.8" y="757" width="4.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="105.76" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,200,433 samples, 0.09%)</title><rect x="203.6" y="565" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="206.59" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (85,057,305 samples, 0.30%)</title><rect x="152.6" y="421" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="155.64" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (165,180,376 samples, 0.59%)</title><rect x="145.7" y="581" width="6.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="148.74" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,111,509 samples, 0.09%)</title><rect x="67.4" y="325" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="70.41" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,200,433 samples, 0.09%)</title><rect x="203.6" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (338,124,702 samples, 1.20%)</title><rect x="127.7" y="757" width="14.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.69" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,950 samples, 0.09%)</title><rect x="81.0" y="549" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.04" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,164,292 samples, 0.12%)</title><rect x="142.9" y="405" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.92" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (111,920,957 samples, 0.40%)</title><rect x="115.8" y="917" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="927.5" ></text>
</g>
<g >
<title>[_ctypes.cpython-312-x86_64-linux-gnu.so] (34,098,849 samples, 0.12%)</title><rect x="85.8" y="405" width="1.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="88.77" y="415.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,197,979 samples, 0.09%)</title><rect x="47.7" y="389" width="1.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="50.74" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (232,633,989 samples, 0.82%)</title><rect x="142.9" y="789" width="9.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.92" y="799.5" ></text>
</g>
<g >
<title>PyObject_Malloc (26,134,360 samples, 0.09%)</title><rect x="204.7" y="389" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="207.69" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,207,530 samples, 0.09%)</title><rect x="157.3" y="357" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="160.29" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (68,235,612 samples, 0.24%)</title><rect x="84.3" y="805" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.34" y="815.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (31,958,704 samples, 0.11%)</title><rect x="127.7" y="485" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="130.69" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,235 samples, 0.09%)</title><rect x="66.3" y="533" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.31" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,199,486 samples, 0.09%)</title><rect x="73.2" y="613" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="76.22" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,185 samples, 0.09%)</title><rect x="158.4" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.39" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,392,061 samples, 0.19%)</title><rect x="108.6" y="373" width="2.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="111.56" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (130,950,700 samples, 0.46%)</title><rect x="203.6" y="789" width="5.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="799.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,421,708 samples, 0.19%)</title><rect x="156.2" y="437" width="2.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="159.19" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,209,515 samples, 0.09%)</title><rect x="146.8" y="373" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="149.85" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (672,277,121 samples, 2.38%)</title><rect x="852.8" y="453" width="28.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="855.80" y="463.5" >_..</text>
</g>
<g >
<title>[python3.12] (26,281,053 samples, 0.09%)</title><rect x="185.1" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="188.08" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,401,014 samples, 0.09%)</title><rect x="122.7" y="373" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="125.66" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (134,305,359 samples, 0.48%)</title><rect x="71.0" y="933" width="5.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="74.01" y="943.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,799,484 samples, 0.19%)</title><rect x="71.0" y="773" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="74.01" y="783.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,679 samples, 0.09%)</title><rect x="209.1" y="917" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="212.07" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (52,613,512 samples, 0.19%)</title><rect x="39.5" y="693" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.53" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (111,920,957 samples, 0.40%)</title><rect x="115.8" y="981" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.79" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_do_relocate (34,212,967 samples, 0.12%)</title><rect x="998.9" y="565" width="1.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1001.93" y="575.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4,761,400 samples, 0.02%)</title><rect x="553.2" y="933" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="556.23" y="943.5" ></text>
</g>
<g >
<title>PyThread_acquire_lock_timed (34,035,779 samples, 0.12%)</title><rect x="917.6" y="693" width="1.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="920.60" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,628,473 samples, 0.28%)</title><rect x="211.2" y="965" width="3.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="214.22" y="975.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,132,139 samples, 0.12%)</title><rect x="96.5" y="69" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="99.45" y="79.5" ></text>
</g>
<g >
<title>PyBool_FromLong@plt (25,925,031 samples, 0.09%)</title><rect x="101.7" y="293" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="104.68" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (60,337,946 samples, 0.21%)</title><rect x="43.0" y="757" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (33,857,821 samples, 0.12%)</title><rect x="160.6" y="517" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.58" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,337,946 samples, 0.21%)</title><rect x="43.0" y="997" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.04" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,261 samples, 0.09%)</title><rect x="214.5" y="565" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.51" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (33,745,010 samples, 0.12%)</title><rect x="64.9" y="629" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.90" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,135,790 samples, 0.12%)</title><rect x="38.1" y="661" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="41.11" y="671.5" ></text>
</g>
<g >
<title>do_exit (183,190,670 samples, 0.65%)</title><rect x="1177.0" y="1013" width="7.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1180.00" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (103,555,233 samples, 0.37%)</title><rect x="589.1" y="789" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="592.06" y="799.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,189,301 samples, 0.09%)</title><rect x="109.7" y="357" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="112.65" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (34,101,260 samples, 0.12%)</title><rect x="124.9" y="421" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.86" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,220,771 samples, 0.18%)</title><rect x="46.7" y="533" width="2.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="49.66" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (112,874,269 samples, 0.40%)</title><rect x="160.6" y="677" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="163.58" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,708 samples, 0.19%)</title><rect x="156.2" y="469" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.19" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,135,790 samples, 0.12%)</title><rect x="38.1" y="789" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="41.11" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (34,058,837 samples, 0.12%)</title><rect x="93.6" y="405" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (104,838,260 samples, 0.37%)</title><rect x="102.8" y="869" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="105.76" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,167,861 samples, 0.09%)</title><rect x="45.6" y="437" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.56" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (112,957,699 samples, 0.40%)</title><rect x="168.9" y="709" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.91" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,220,771 samples, 0.18%)</title><rect x="46.7" y="437" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="49.66" y="447.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,323,130 samples, 0.09%)</title><rect x="53.9" y="405" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="56.86" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,261 samples, 0.09%)</title><rect x="214.5" y="949" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.51" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (86,221,184 samples, 0.31%)</title><rect x="107.1" y="501" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.15" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (34,030,025 samples, 0.12%)</title><rect x="165.3" y="757" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="168.29" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,202,934 samples, 0.09%)</title><rect x="162.0" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.99" y="511.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (34,138,378 samples, 0.12%)</title><rect x="113.3" y="373" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="116.27" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,766,166 samples, 0.28%)</title><rect x="52.8" y="741" width="3.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="55.77" y="751.5" ></text>
</g>
<g >
<title>LLVMRunFunctionPassManager (34,135,790 samples, 0.12%)</title><rect x="38.1" y="549" width="1.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="41.11" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,101 samples, 0.09%)</title><rect x="200.6" y="469" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="203.62" y="479.5" ></text>
</g>
<g >
<title>[_json.cpython-312-x86_64-linux-gnu.so] (26,208,513 samples, 0.09%)</title><rect x="151.5" y="469" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.54" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,030,025 samples, 0.12%)</title><rect x="165.3" y="565" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="168.29" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,220,774 samples, 0.09%)</title><rect x="211.2" y="645" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="214.22" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_max_size (34,192,299 samples, 0.12%)</title><rect x="1123.1" y="645" width="1.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1126.08" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,837,821 samples, 0.12%)</title><rect x="68.5" y="789" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="71.50" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,373,735 samples, 0.19%)</title><rect x="76.6" y="677" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.62" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (33,837,821 samples, 0.12%)</title><rect x="68.5" y="645" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.50" y="655.5" ></text>
</g>
<g >
<title>PyInit_ft2font (26,241,513 samples, 0.09%)</title><rect x="190.3" y="565" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="193.25" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (338,124,702 samples, 1.20%)</title><rect x="127.7" y="773" width="14.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="130.69" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (134,305,359 samples, 0.48%)</title><rect x="71.0" y="949" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.01" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,109 samples, 0.09%)</title><rect x="92.6" y="549" width="1.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="95.55" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallFunctionObjArgs (26,428,829 samples, 0.09%)</title><rect x="63.8" y="373" width="1.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="66.80" y="383.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (26,428,829 samples, 0.09%)</title><rect x="63.8" y="245" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="66.80" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,228,460 samples, 0.09%)</title><rect x="52.8" y="357" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="55.77" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (97,421,676 samples, 0.35%)</title><rect x="187.3" y="725" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.28" y="735.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::TargetTransformInfo  (34,135,790 samples, 0.12%)</title><rect x="38.1" y="469" width="1.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="41.11" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,303,297 samples, 0.21%)</title><rect x="91.1" y="949" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="94.13" y="959.5" ></text>
</g>
<g >
<title>do_page_fault (26,061,732 samples, 0.09%)</title><rect x="114.7" y="965" width="1.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="117.70" y="975.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (67,902,262 samples, 0.24%)</title><rect x="87.2" y="549" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="90.19" y="559.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (52,373,735 samples, 0.19%)</title><rect x="76.6" y="1029" width="2.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="79.62" y="1039.5" ></text>
</g>
<g >
<title>__GI___libc_read (26,211,802 samples, 0.09%)</title><rect x="155.1" y="309" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="158.10" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy (33,521,481 samples, 0.12%)</title><rect x="931.8" y="709" width="1.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="934.83" y="719.5" ></text>
</g>
<g >
<title>__pyx_pymod_exec__core (25,434,141 samples, 0.09%)</title><rect x="210.2" y="805" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="213.16" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,243 samples, 0.09%)</title><rect x="90.0" y="341" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.03" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,252,462 samples, 0.09%)</title><rect x="115.8" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (232,633,989 samples, 0.82%)</title><rect x="142.9" y="741" width="9.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.92" y="751.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (342,304,778 samples, 1.21%)</title><rect x="1021.8" y="629" width="14.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1024.79" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (112,957,699 samples, 0.40%)</title><rect x="168.9" y="725" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="171.91" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (25,434,141 samples, 0.09%)</title><rect x="210.2" y="741" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="213.16" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (33,836,231 samples, 0.12%)</title><rect x="600.5" y="661" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="603.46" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,209,109 samples, 0.09%)</title><rect x="92.6" y="677" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="95.55" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,230,863 samples, 0.09%)</title><rect x="141.8" y="405" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="144.82" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,337,946 samples, 0.21%)</title><rect x="43.0" y="693" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.04" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,837,821 samples, 0.12%)</title><rect x="68.5" y="757" width="1.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="71.50" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (78,766,166 samples, 0.28%)</title><rect x="52.8" y="789" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.77" y="799.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (306,770,194 samples, 1.09%)</title><rect x="695.1" y="517" width="12.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="698.13" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,869,282 samples, 0.10%)</title><rect x="56.1" y="485" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="495.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (27,198,707 samples, 0.10%)</title><rect x="183.9" y="405" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="186.94" y="415.5" ></text>
</g>
<g >
<title>filemap_map_pages (33,745,010 samples, 0.12%)</title><rect x="64.9" y="85" width="1.4" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="67.90" y="95.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4,617,123 samples, 0.02%)</title><rect x="553.2" y="885" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="556.23" y="895.5" ></text>
</g>
<g >
<title>_PyObject_Call (58,998,954 samples, 0.21%)</title><rect x="115.8" y="677" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="118.79" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (68,465,780 samples, 0.24%)</title><rect x="1165.8" y="725" width="2.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1168.82" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,215,064 samples, 0.09%)</title><rect x="172.5" y="421" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.53" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,196,063 samples, 0.09%)</title><rect x="170.0" y="341" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="173.01" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (220,599,939 samples, 0.78%)</title><rect x="173.6" y="597" width="9.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="176.63" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (79,651,363 samples, 0.28%)</title><rect x="182.8" y="693" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="185.85" y="703.5" ></text>
</g>
<g >
<title>[libffi.so.7.1.0] (34,135,790 samples, 0.12%)</title><rect x="38.1" y="581" width="1.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="41.11" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (116,928,619 samples, 0.41%)</title><rect x="97.9" y="613" width="4.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="100.88" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,287,437 samples, 0.09%)</title><rect x="186.2" y="613" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="189.18" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,252,462 samples, 0.09%)</title><rect x="115.8" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,188,019 samples, 0.09%)</title><rect x="82.1" y="421" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="85.13" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,864,799 samples, 0.12%)</title><rect x="175.9" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.94" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,546,263 samples, 0.09%)</title><rect x="164.2" y="597" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.18" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (34,005,797 samples, 0.12%)</title><rect x="188.8" y="341" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.83" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,728 samples, 0.09%)</title><rect x="78.8" y="885" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.81" y="895.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,213,235 samples, 0.09%)</title><rect x="66.3" y="629" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="69.31" y="639.5" ></text>
</g>
<g >
<title>__GI___tcgetattr (26,642,433 samples, 0.09%)</title><rect x="83.2" y="341" width="1.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="86.23" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (81,505,875 samples, 0.29%)</title><rect x="73.2" y="693" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="76.22" y="703.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,208,261 samples, 0.09%)</title><rect x="214.5" y="805" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="217.51" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (130,950,700 samples, 0.46%)</title><rect x="203.6" y="949" width="5.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="206.59" y="959.5" ></text>
</g>
<g >
<title>__do_page_fault (102,622,478 samples, 0.36%)</title><rect x="615.9" y="421" width="4.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="618.95" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,189,301 samples, 0.09%)</title><rect x="109.7" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.65" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (104,838,260 samples, 0.37%)</title><rect x="102.8" y="917" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="105.76" y="927.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (71,109,140 samples, 0.25%)</title><rect x="200.6" y="629" width="3.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="203.62" y="639.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (78,628,266 samples, 0.28%)</title><rect x="177.4" y="373" width="3.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="180.36" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,167,861 samples, 0.09%)</title><rect x="45.6" y="837" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="48.56" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,132,003 samples, 0.12%)</title><rect x="100.3" y="389" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.25" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (60,337,946 samples, 0.21%)</title><rect x="43.0" y="645" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.04" y="655.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (34,219,007 samples, 0.12%)</title><rect x="1154.4" y="661" width="1.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1157.38" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (25,434,141 samples, 0.09%)</title><rect x="210.2" y="469" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.16" y="479.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (68,353,793 samples, 0.24%)</title><rect x="971.8" y="581" width="2.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="974.80" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,005,797 samples, 0.12%)</title><rect x="188.8" y="405" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="191.83" y="415.5" ></text>
</g>
<g >
<title>PyObject_GetItem (29,940,596 samples, 0.11%)</title><rect x="57.2" y="453" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="60.18" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (34,253,870 samples, 0.12%)</title><rect x="1164.4" y="709" width="1.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1167.39" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,394,969 samples, 0.19%)</title><rect x="81.0" y="581" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="84.04" y="591.5" ></text>
</g>
<g >
<title>PyNumber_Remainder (26,206,946 samples, 0.09%)</title><rect x="195.2" y="469" width="1.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="198.25" y="479.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33,745,010 samples, 0.12%)</title><rect x="64.9" y="117" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="67.90" y="127.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,104,293 samples, 0.12%)</title><rect x="110.7" y="293" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="113.75" y="303.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,434,141 samples, 0.09%)</title><rect x="210.2" y="485" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="213.16" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (165,497,641 samples, 0.59%)</title><rect x="131.3" y="405" width="6.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.31" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,101 samples, 0.09%)</title><rect x="200.6" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.62" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (111,920,957 samples, 0.40%)</title><rect x="115.8" y="997" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="118.79" y="1007.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,178 samples, 0.09%)</title><rect x="156.2" y="373" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="159.19" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,494,507 samples, 0.09%)</title><rect x="218.5" y="1061" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="221.46" y="1071.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (79,651,363 samples, 0.28%)</title><rect x="182.8" y="597" width="3.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="185.85" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (191,659,029 samples, 0.68%)</title><rect x="131.3" y="501" width="8.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.31" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,022,792 samples, 0.09%)</title><rect x="46.7" y="357" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.66" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; const&amp;&gt; (33,521,481 samples, 0.12%)</title><rect x="931.8" y="533" width="1.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="934.83" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (189,899,606 samples, 0.67%)</title><rect x="152.6" y="629" width="8.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="155.64" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (104,594,443 samples, 0.37%)</title><rect x="45.6" y="885" width="4.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="48.56" y="895.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,642,433 samples, 0.09%)</title><rect x="83.2" y="533" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="86.23" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (71,109,140 samples, 0.25%)</title><rect x="200.6" y="597" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="203.62" y="607.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::dispatcher (5,735,137,220 samples, 20.31%)</title><rect x="930.4" y="869" width="239.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="933.41" y="879.5" >pybind11::cpp_function::dispatc..</text>
</g>
<g >
<title>[python3.12] (26,200,433 samples, 0.09%)</title><rect x="203.6" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="206.59" y="511.5" ></text>
</g>
<g >
<title>page_fault (34,132,139 samples, 0.12%)</title><rect x="96.5" y="133" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="99.45" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (33,385,317 samples, 0.12%)</title><rect x="191.3" y="469" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.35" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (25,434,141 samples, 0.09%)</title><rect x="210.2" y="293" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.16" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (71,109,140 samples, 0.25%)</title><rect x="200.6" y="661" width="3.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="203.62" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,252,462 samples, 0.09%)</title><rect x="115.8" y="501" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.79" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,394,969 samples, 0.19%)</title><rect x="81.0" y="661" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="84.04" y="671.5" ></text>
</g>
<g >
<title>PyList_New (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="725" width="1.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1171.68" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,206,101 samples, 0.09%)</title><rect x="200.6" y="373" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="203.62" y="383.5" ></text>
</g>
<g >
<title>__pyx_pymod_exec_mtrand (25,925,031 samples, 0.09%)</title><rect x="101.7" y="485" width="1.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="104.68" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,869,282 samples, 0.10%)</title><rect x="56.1" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.06" y="447.5" ></text>
</g>
<g >
<title>do_mmap (10,138,758 samples, 0.04%)</title><rect x="1176.6" y="933" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1179.57" y="943.5" ></text>
</g>
<g >
<title>PyDataMem_UserFREE (102,077,362 samples, 0.36%)</title><rect x="923.3" y="693" width="4.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="926.30" y="703.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,401,014 samples, 0.09%)</title><rect x="122.7" y="405" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="125.66" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,219,217 samples, 0.09%)</title><rect x="166.7" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.72" y="367.5" ></text>
</g>
<g >
<title>pybind11::detail::list_caster&lt;std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt;::cast&lt;std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="805" width="1.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1171.68" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (67,083,538 samples, 0.24%)</title><rect x="93.6" y="933" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="96.65" y="943.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;, IT_outputs, , pybind11::name, pybind11::is_method, pybind11::sibling&gt; (34,281,383 samples, 0.12%)</title><rect x="1168.7" y="853" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1171.68" y="863.5" ></text>
</g>
<g >
<title>__vfs_read (34,132,139 samples, 0.12%)</title><rect x="96.5" y="245" width="1.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="99.45" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,086 samples, 0.09%)</title><rect x="181.8" y="341" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.75" y="351.5" ></text>
</g>
</g>
</svg>
