<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1126" onload="init(evt)" viewBox="0 0 1200 1126" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1126.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1109" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1109" > </text>
<g id="frames">
<g >
<title>_PyFunction_Vectorcall (26,294,663 samples, 0.10%)</title><rect x="98.9" y="629" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.93" y="639.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch1&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (33,811,030 samples, 0.13%)</title><rect x="1049.5" y="645" width="1.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1052.46" y="655.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (78,625,471 samples, 0.31%)</title><rect x="211.1" y="341" width="3.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="214.09" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (33,828,949 samples, 0.13%)</title><rect x="56.3" y="565" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.33" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,829 samples, 0.10%)</title><rect x="114.8" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="117.77" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::max_size (34,013,806 samples, 0.13%)</title><rect x="15.6" y="1029" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="18.61" y="1039.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (101,388,277 samples, 0.40%)</title><rect x="996.8" y="469" width="4.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="999.78" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_S_key (34,208,575 samples, 0.13%)</title><rect x="1046.3" y="661" width="1.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1049.31" y="671.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (57,618,186 samples, 0.23%)</title><rect x="142.1" y="837" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.06" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (60,242,896 samples, 0.24%)</title><rect x="231.3" y="405" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.27" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (82,257,480 samples, 0.32%)</title><rect x="124.7" y="629" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.74" y="639.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (46,324,964 samples, 0.18%)</title><rect x="48.6" y="341" width="2.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="51.64" y="351.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (33,529,649 samples, 0.13%)</title><rect x="251.1" y="1013" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="254.10" y="1023.5" ></text>
</g>
<g >
<title>PyObject_Str (56,584,638 samples, 0.22%)</title><rect x="138.2" y="485" width="2.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="141.21" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,117 samples, 0.10%)</title><rect x="132.9" y="469" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="135.89" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,212,641 samples, 0.10%)</title><rect x="157.5" y="453" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="160.48" y="463.5" ></text>
</g>
<g >
<title>PyObject_Str (54,033,009 samples, 0.21%)</title><rect x="96.4" y="309" width="2.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="99.43" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,294,663 samples, 0.10%)</title><rect x="98.9" y="597" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="101.93" y="607.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,211,314 samples, 0.10%)</title><rect x="84.0" y="453" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="86.98" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (56,584,638 samples, 0.22%)</title><rect x="138.2" y="965" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.21" y="975.5" ></text>
</g>
<g >
<title>__GI___close (26,212,641 samples, 0.10%)</title><rect x="157.5" y="293" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="160.48" y="303.5" ></text>
</g>
<g >
<title>do_page_fault (34,104,445 samples, 0.13%)</title><rect x="695.3" y="485" width="1.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="698.30" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (154,447,785 samples, 0.60%)</title><rect x="222.6" y="933" width="7.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="225.55" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_openat (26,211,314 samples, 0.10%)</title><rect x="84.0" y="261" width="1.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="86.98" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,249 samples, 0.10%)</title><rect x="50.8" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="53.78" y="319.5" ></text>
</g>
<g >
<title>__lseek64 (33,529,649 samples, 0.13%)</title><rect x="251.1" y="853" width="1.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="254.10" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,828,949 samples, 0.13%)</title><rect x="56.3" y="421" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="59.33" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,859,030 samples, 0.13%)</title><rect x="1040.1" y="693" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1043.06" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,242,896 samples, 0.24%)</title><rect x="231.3" y="629" width="2.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="234.27" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,954,470 samples, 0.31%)</title><rect x="170.4" y="693" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="173.41" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (104,839,818 samples, 0.41%)</title><rect x="672.7" y="677" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (33,806,834 samples, 0.13%)</title><rect x="224.1" y="357" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.08" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (52,482,216 samples, 0.21%)</title><rect x="114.8" y="677" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.77" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,048,891 samples, 0.10%)</title><rect x="88.8" y="613" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="91.81" y="623.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::top (33,969,191 samples, 0.13%)</title><rect x="1079.3" y="597" width="1.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1082.26" y="607.5" ></text>
</g>
<g >
<title>__new_sem_post (26,294,663 samples, 0.10%)</title><rect x="98.9" y="309" width="1.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="101.93" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (33,617,398 samples, 0.13%)</title><rect x="1134.2" y="629" width="1.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1137.21" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,829 samples, 0.10%)</title><rect x="114.8" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.77" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (123,866,183 samples, 0.49%)</title><rect x="69.2" y="581" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.21" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;::_M_ptr (34,208,575 samples, 0.13%)</title><rect x="1046.3" y="629" width="1.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1049.31" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (33,332,244 samples, 0.13%)</title><rect x="668.0" y="853" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="671.04" y="863.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (78,602,695 samples, 0.31%)</title><rect x="104.9" y="453" width="3.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="107.86" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,021,995 samples, 0.13%)</title><rect x="191.1" y="549" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="559.5" ></text>
</g>
<g >
<title>do_user_addr_fault (542,678,834 samples, 2.13%)</title><rect x="954.9" y="405" width="25.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="957.91" y="415.5" >d..</text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (33,866,376 samples, 0.13%)</title><rect x="242.8" y="869" width="1.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="245.76" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,220,606 samples, 0.10%)</title><rect x="109.9" y="453" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.92" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (68,016,116 samples, 0.27%)</title><rect x="638.6" y="901" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="641.55" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (78,954,470 samples, 0.31%)</title><rect x="170.4" y="645" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.41" y="655.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (33,969,191 samples, 0.13%)</title><rect x="1079.3" y="581" width="1.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1082.26" y="591.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (35,710,632 samples, 0.14%)</title><rect x="74.9" y="469" width="1.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="77.94" y="479.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (33,951,168 samples, 0.13%)</title><rect x="54.8" y="325" width="1.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="57.76" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (34,103,598 samples, 0.13%)</title><rect x="236.8" y="1013" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="239.83" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (26,221,506 samples, 0.10%)</title><rect x="226.9" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="229.92" y="415.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,421,034 samples, 0.21%)</title><rect x="86.4" y="533" width="2.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="89.39" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (180,672,026 samples, 0.71%)</title><rect x="100.1" y="501" width="8.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.14" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (31,971,420 samples, 0.13%)</title><rect x="77.8" y="613" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="80.80" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,735,126 samples, 0.10%)</title><rect x="117.2" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.20" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (60,145,886 samples, 0.24%)</title><rect x="130.1" y="725" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="735.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (93,844,012 samples, 0.37%)</title><rect x="166.1" y="645" width="4.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="169.08" y="655.5" ></text>
</g>
<g >
<title>schedule_tail (15,118,859 samples, 0.06%)</title><rect x="254.2" y="1013" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="257.22" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (101,606,306 samples, 0.40%)</title><rect x="64.5" y="581" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.52" y="591.5" ></text>
</g>
<g >
<title>__handle_mm_fault (26,181,436 samples, 0.10%)</title><rect x="188.7" y="325" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="191.67" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (33,887,809 samples, 0.13%)</title><rect x="234.1" y="533" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (56,584,638 samples, 0.22%)</title><rect x="138.2" y="661" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.21" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,063,632 samples, 0.13%)</title><rect x="214.7" y="309" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.73" y="319.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,598,225 samples, 0.21%)</title><rect x="112.3" y="405" width="2.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="115.34" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (154,447,785 samples, 0.60%)</title><rect x="222.6" y="901" width="7.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="225.55" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,520 samples, 0.10%)</title><rect x="179.0" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.02" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (104,530,263 samples, 0.41%)</title><rect x="84.0" y="725" width="4.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="86.98" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (33,951,168 samples, 0.13%)</title><rect x="54.8" y="789" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="799.5" ></text>
</g>
<g >
<title>_int_free (33,943,229 samples, 0.13%)</title><rect x="239.6" y="1029" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="242.62" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (62,731,863 samples, 0.25%)</title><rect x="134.1" y="373" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.10" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (67,961,851 samples, 0.27%)</title><rect x="80.8" y="389" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.84" y="399.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,207,124 samples, 0.10%)</title><rect x="137.0" y="453" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="140.00" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,491 samples, 0.10%)</title><rect x="156.3" y="661" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="159.27" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,951,168 samples, 0.13%)</title><rect x="54.8" y="357" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="57.76" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (33,933,369 samples, 0.13%)</title><rect x="131.3" y="485" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.32" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_read (26,164,943 samples, 0.10%)</title><rect x="169.2" y="277" width="1.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="172.20" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (32,972,956 samples, 0.13%)</title><rect x="222.6" y="629" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="639.5" ></text>
</g>
<g >
<title>__pyx_pymod_exec__helpers (28,758,057 samples, 0.11%)</title><rect x="164.7" y="677" width="1.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="167.75" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,034 samples, 0.21%)</title><rect x="86.4" y="485" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.39" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (7,460,114,942 samples, 29.22%)</title><rect x="695.3" y="581" width="344.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="698.30" y="591.5" >[python3.12]</text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,432,581 samples, 0.21%)</title><rect x="45.0" y="933" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="48.00" y="943.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::swap_heap_elements (34,073,519 samples, 0.13%)</title><rect x="1068.2" y="565" width="1.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1071.24" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,345 samples, 0.10%)</title><rect x="52.0" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="639.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (33,898,296 samples, 0.13%)</title><rect x="1001.5" y="501" width="1.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1004.46" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (56,584,638 samples, 0.22%)</title><rect x="138.2" y="853" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="141.21" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (46,324,964 samples, 0.18%)</title><rect x="48.6" y="453" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="463.5" ></text>
</g>
<g >
<title>do_user_addr_fault (26,201,768 samples, 0.10%)</title><rect x="73.7" y="229" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="76.73" y="239.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,457,574 samples, 0.21%)</title><rect x="208.7" y="421" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="211.67" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (78,807,835 samples, 0.31%)</title><rect x="111.1" y="837" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.13" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,641 samples, 0.10%)</title><rect x="157.5" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.48" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (34,150,626 samples, 0.13%)</title><rect x="1077.7" y="533" width="1.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1080.68" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (52,420,248 samples, 0.21%)</title><rect x="672.7" y="357" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,632,261 samples, 0.31%)</title><rect x="672.7" y="453" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="675.69" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (32,142,344 samples, 0.13%)</title><rect x="69.2" y="325" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.21" y="335.5" ></text>
</g>
<g >
<title>vm_normal_page (68,237,184 samples, 0.27%)</title><rect x="121.6" y="197" width="3.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="124.59" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (196,993,364 samples, 0.77%)</title><rect x="192.7" y="693" width="9.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.66" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (101,606,306 samples, 0.40%)</title><rect x="64.5" y="565" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="67.52" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (68,298,407 samples, 0.27%)</title><rect x="1076.1" y="581" width="3.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1079.10" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (30,842,997 samples, 0.12%)</title><rect x="108.5" y="341" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.49" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (197,576,523 samples, 0.77%)</title><rect x="147.1" y="949" width="9.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="150.14" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (135,304,273 samples, 0.53%)</title><rect x="216.3" y="581" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="219.30" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="293" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="303.5" ></text>
</g>
<g >
<title>__do_page_fault (33,128,933 samples, 0.13%)</title><rect x="148.7" y="341" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="151.67" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (56,584,638 samples, 0.22%)</title><rect x="138.2" y="821" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.21" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,897,915 samples, 0.10%)</title><rect x="85.2" y="549" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.19" y="559.5" ></text>
</g>
<g >
<title>mmput (133,536,178 samples, 0.52%)</title><rect x="1171.3" y="965" width="6.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1174.26" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (60,145,886 samples, 0.24%)</title><rect x="130.1" y="629" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="639.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (25,897,915 samples, 0.10%)</title><rect x="85.2" y="341" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="88.19" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,345 samples, 0.10%)</title><rect x="52.0" y="789" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="54.99" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (136,500,219 samples, 0.53%)</title><rect x="118.4" y="389" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (57,618,186 samples, 0.23%)</title><rect x="142.1" y="853" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.06" y="863.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (196,993,364 samples, 0.77%)</title><rect x="192.7" y="661" width="9.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="195.66" y="671.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,078 samples, 0.10%)</title><rect x="207.5" y="405" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="210.46" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (52,410,200 samples, 0.21%)</title><rect x="104.9" y="373" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.86" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (197,576,523 samples, 0.77%)</title><rect x="147.1" y="773" width="9.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="783.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,828,949 samples, 0.13%)</title><rect x="56.3" y="517" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.33" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (300,450,950 samples, 1.18%)</title><rect x="208.7" y="853" width="13.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="211.67" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,164,943 samples, 0.10%)</title><rect x="169.2" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.20" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (79,018,391 samples, 0.31%)</title><rect x="150.2" y="549" width="3.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="153.21" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (530,501,428 samples, 2.08%)</title><rect x="54.8" y="901" width="24.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="57.76" y="911.5" >_..</text>
</g>
<g >
<title>[python3.12] (26,209,664 samples, 0.10%)</title><rect x="201.8" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.76" y="319.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (67,935,278 samples, 0.27%)</title><rect x="1112.2" y="581" width="3.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1115.22" y="591.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,207,124 samples, 0.10%)</title><rect x="137.0" y="501" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="140.00" y="511.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (67,577,419 samples, 0.26%)</title><rect x="705.6" y="245" width="3.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="708.56" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="453" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (56,584,638 samples, 0.22%)</title><rect x="138.2" y="917" width="2.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="141.21" y="927.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_single_source (33,811,030 samples, 0.13%)</title><rect x="1049.5" y="677" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1052.46" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_read (32,972,956 samples, 0.13%)</title><rect x="222.6" y="309" width="1.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="225.55" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,269,387 samples, 0.10%)</title><rect x="116.0" y="533" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="118.98" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="469" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (78,618,214 samples, 0.31%)</title><rect x="158.7" y="357" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.69" y="367.5" ></text>
</g>
<g >
<title>migrate_pages (3,557,578 samples, 0.01%)</title><rect x="634.8" y="821" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="637.80" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (31,408,262 samples, 0.12%)</title><rect x="142.1" y="501" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.06" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (94,352,430 samples, 0.37%)</title><rect x="229.7" y="981" width="4.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="232.69" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,345 samples, 0.10%)</title><rect x="52.0" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,829 samples, 0.10%)</title><rect x="114.8" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.77" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (28,758,057 samples, 0.11%)</title><rect x="164.7" y="581" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="167.75" y="591.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch1&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (1,428,178,587 samples, 5.59%)</title><rect x="1060.4" y="661" width="66.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1063.39" y="671.5" >boost::..</text>
</g>
<g >
<title>[python3.12] (26,192,495 samples, 0.10%)</title><rect x="107.3" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.28" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,109,534 samples, 0.13%)</title><rect x="229.7" y="389" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="232.69" y="399.5" ></text>
</g>
<g >
<title>_PyImport_GetModuleAttrString (28,613,862 samples, 0.11%)</title><rect x="175.3" y="341" width="1.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="178.27" y="351.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (34,074,924 samples, 0.13%)</title><rect x="62.9" y="421" width="1.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="65.94" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (93,844,012 samples, 0.37%)</title><rect x="166.1" y="789" width="4.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="169.08" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,212,641 samples, 0.10%)</title><rect x="157.5" y="485" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="160.48" y="495.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (33,962,576 samples, 0.13%)</title><rect x="70.7" y="165" width="1.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="73.70" y="175.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (135,304,273 samples, 0.53%)</title><rect x="216.3" y="661" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="219.30" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (52,461,699 samples, 0.21%)</title><rect x="126.1" y="565" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.12" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,209,664 samples, 0.10%)</title><rect x="201.8" y="501" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="204.76" y="511.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (26,240,471 samples, 0.10%)</title><rect x="152.6" y="341" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="155.64" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (122,777,601 samples, 0.48%)</title><rect x="181.8" y="437" width="5.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="184.79" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,972,956 samples, 0.13%)</title><rect x="222.6" y="773" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="225.55" y="783.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (30,643,022 samples, 0.12%)</title><rect x="61.5" y="341" width="1.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="64.53" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (158,025,177 samples, 0.62%)</title><rect x="111.1" y="1013" width="7.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="114.13" y="1023.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (26,203,520 samples, 0.10%)</title><rect x="179.0" y="357" width="1.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="182.02" y="367.5" ></text>
</g>
<g >
<title>page_fault (26,201,768 samples, 0.10%)</title><rect x="73.7" y="277" width="1.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="76.73" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,954,470 samples, 0.31%)</title><rect x="170.4" y="485" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="173.41" y="495.5" ></text>
</g>
<g >
<title>_dl_map_object (26,181,436 samples, 0.10%)</title><rect x="188.7" y="469" width="1.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="191.67" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,402 samples, 0.10%)</title><rect x="45.0" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_read (32,972,956 samples, 0.13%)</title><rect x="222.6" y="261" width="1.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="225.55" y="271.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,919,975 samples, 0.13%)</title><rect x="128.5" y="533" width="1.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="131.54" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,408,262 samples, 0.12%)</title><rect x="142.1" y="677" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.06" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="639.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,177 samples, 0.10%)</title><rect x="172.8" y="357" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="175.85" y="367.5" ></text>
</g>
<g >
<title>_PyErr_SetObject (30,842,997 samples, 0.12%)</title><rect x="108.5" y="277" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="111.49" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (34,021,995 samples, 0.13%)</title><rect x="191.1" y="725" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="735.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,128,933 samples, 0.13%)</title><rect x="148.7" y="517" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="151.67" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (96,572,314 samples, 0.38%)</title><rect x="183.0" y="309" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.00" y="319.5" ></text>
</g>
<g >
<title>PyUFunc_FromFuncAndDataAndSignatureAndIdentity (33,128,933 samples, 0.13%)</title><rect x="148.7" y="437" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.67" y="447.5" ></text>
</g>
<g >
<title>clear_page_erms (306,392,118 samples, 1.20%)</title><rect x="962.7" y="293" width="14.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="965.71" y="303.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,924 samples, 0.10%)</title><rect x="143.5" y="341" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="146.51" y="351.5" ></text>
</g>
<g >
<title>PyNumber_InPlaceAdd (26,226,179 samples, 0.10%)</title><rect x="46.2" y="389" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="49.22" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (60,145,886 samples, 0.24%)</title><rect x="130.1" y="757" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="767.5" ></text>
</g>
<g >
<title>__do_sys_newstat (26,155,874 samples, 0.10%)</title><rect x="162.3" y="293" width="1.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="165.33" y="303.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::verify_heap (34,030,692 samples, 0.13%)</title><rect x="18.8" y="1029" width="1.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="21.75" y="1039.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (34,185,343 samples, 0.13%)</title><rect x="1145.2" y="629" width="1.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1148.20" y="639.5" ></text>
</g>
<g >
<title>handle_mm_fault (33,931,531 samples, 0.13%)</title><rect x="244.3" y="901" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="247.32" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (83,065,672 samples, 0.33%)</title><rect x="59.1" y="469" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.11" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,294,663 samples, 0.10%)</title><rect x="98.9" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.93" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (211,129,481 samples, 0.83%)</title><rect x="54.8" y="821" width="9.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="57.76" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,632,261 samples, 0.31%)</title><rect x="672.7" y="437" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="675.69" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,128,933 samples, 0.13%)</title><rect x="148.7" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.67" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (211,129,481 samples, 0.83%)</title><rect x="54.8" y="837" width="9.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="57.76" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,540 samples, 0.10%)</title><rect x="187.5" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.46" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (336,707,307 samples, 1.32%)</title><rect x="655.6" y="885" width="15.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="658.60" y="895.5" ></text>
</g>
<g >
<title>get_page_from_freelist (26,181,436 samples, 0.10%)</title><rect x="188.7" y="261" width="1.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="191.67" y="271.5" ></text>
</g>
<g >
<title>_int_free (66,709,822 samples, 0.26%)</title><rect x="1151.5" y="597" width="3.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1154.50" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (7,742,775,792 samples, 30.32%)</title><rect x="683.8" y="741" width="357.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="686.80" y="751.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (196,993,364 samples, 0.77%)</title><rect x="192.7" y="581" width="9.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.66" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (88,938,987 samples, 0.35%)</title><rect x="134.1" y="645" width="4.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="137.10" y="655.5" ></text>
</g>
<g >
<title>_PyAST_Compile (26,220,606 samples, 0.10%)</title><rect x="109.9" y="389" width="1.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="112.92" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,807,835 samples, 0.31%)</title><rect x="111.1" y="821" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="114.13" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,491 samples, 0.10%)</title><rect x="156.3" y="325" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="159.27" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (136,720,298 samples, 0.54%)</title><rect x="1171.3" y="1045" width="6.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1174.26" y="1055.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,208,540 samples, 0.10%)</title><rect x="187.5" y="453" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="190.46" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (72,532,213 samples, 0.28%)</title><rect x="48.6" y="837" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="51.64" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (80,246,495 samples, 0.31%)</title><rect x="95.2" y="533" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.22" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,610 samples, 0.10%)</title><rect x="111.1" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.13" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (122,777,601 samples, 0.48%)</title><rect x="181.8" y="485" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="184.79" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (35,710,632 samples, 0.14%)</title><rect x="74.9" y="693" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.94" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,735,126 samples, 0.10%)</title><rect x="117.2" y="565" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="120.20" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (54,033,009 samples, 0.21%)</title><rect x="96.4" y="405" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.43" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,211,345 samples, 0.10%)</title><rect x="52.0" y="821" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="54.99" y="831.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (33,918,686 samples, 0.13%)</title><rect x="1140.5" y="613" width="1.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1143.49" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (32,972,956 samples, 0.13%)</title><rect x="222.6" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (30,842,997 samples, 0.12%)</title><rect x="108.5" y="613" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.49" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (56,584,638 samples, 0.22%)</title><rect x="138.2" y="645" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.21" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,971,420 samples, 0.13%)</title><rect x="77.8" y="373" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="80.80" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,733 samples, 0.10%)</title><rect x="155.1" y="469" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="158.06" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (177,178,313 samples, 0.69%)</title><rect x="56.3" y="741" width="8.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="59.33" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (218,757,699 samples, 0.86%)</title><rect x="118.4" y="869" width="10.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (66,343,501 samples, 0.26%)</title><rect x="147.1" y="597" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,408,262 samples, 0.12%)</title><rect x="142.1" y="453" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.06" y="463.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::dummy_property_map, boost::detail::dummy_pmap_reference, unsigned long, unsigned long&gt; (34,123,174 samples, 0.13%)</title><rect x="1123.2" y="613" width="1.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1126.24" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (211,129,481 samples, 0.83%)</title><rect x="54.8" y="853" width="9.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,048,891 samples, 0.10%)</title><rect x="88.8" y="677" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.81" y="687.5" ></text>
</g>
<g >
<title>futex_wait (3,184,120 samples, 0.01%)</title><rect x="1177.4" y="981" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1180.43" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (52,740,293 samples, 0.21%)</title><rect x="170.4" y="453" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.41" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,887,809 samples, 0.13%)</title><rect x="234.1" y="789" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="237.05" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,744,075 samples, 0.13%)</title><rect x="180.2" y="437" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.23" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,933,369 samples, 0.13%)</title><rect x="131.3" y="309" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.32" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,078 samples, 0.10%)</title><rect x="207.5" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.46" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (57,618,186 samples, 0.23%)</title><rect x="142.1" y="741" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.06" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,217,406 samples, 0.10%)</title><rect x="76.6" y="661" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.59" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,249 samples, 0.10%)</title><rect x="50.8" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="53.78" y="335.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (10,425,188,339 samples, 40.83%)</title><rect x="680.7" y="869" width="481.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="683.67" y="879.5" >_PyObject_MakeTpCall</text>
</g>
<g >
<title>[python3.12] (26,048,891 samples, 0.10%)</title><rect x="88.8" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.81" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (31,971,420 samples, 0.13%)</title><rect x="77.8" y="757" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="80.80" y="767.5" ></text>
</g>
<g >
<title>page_add_anon_rmap (3,557,578 samples, 0.01%)</title><rect x="634.8" y="741" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="637.80" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,271 samples, 0.10%)</title><rect x="221.3" y="309" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="224.34" y="319.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (1,326,053,368 samples, 5.19%)</title><rect x="1060.4" y="613" width="61.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1063.39" y="623.5" >boost:..</text>
</g>
<g >
<title>do_user_addr_fault (339,743,190 samples, 1.33%)</title><rect x="789.1" y="421" width="15.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="792.08" y="431.5" ></text>
</g>
<g >
<title>do_futex (3,038,619 samples, 0.01%)</title><rect x="634.7" y="901" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="637.66" y="911.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,919,975 samples, 0.13%)</title><rect x="128.5" y="709" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="131.54" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (62,731,863 samples, 0.25%)</title><rect x="134.1" y="405" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="137.10" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (218,757,699 samples, 0.86%)</title><rect x="118.4" y="757" width="10.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="121.43" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="885" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="693" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (33,969,191 samples, 0.13%)</title><rect x="1079.3" y="565" width="1.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1082.26" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,954,470 samples, 0.31%)</title><rect x="170.4" y="565" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="173.41" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,735,126 samples, 0.10%)</title><rect x="117.2" y="725" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.20" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (80,246,495 samples, 0.31%)</title><rect x="95.2" y="853" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.22" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (34,039,059 samples, 0.13%)</title><rect x="640.1" y="885" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="643.12" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,425,899 samples, 0.21%)</title><rect x="197.8" y="293" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="200.79" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,117 samples, 0.10%)</title><rect x="132.9" y="629" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="135.89" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,887,809 samples, 0.13%)</title><rect x="234.1" y="453" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="237.05" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="373" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="383.5" ></text>
</g>
<g >
<title>pybind11::detail::argument_loader&lt;Nexullance_IT_interface*, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int&gt;::call&lt;IT_outputs, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;IT_outputs, Nexullance_IT_interface, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (2,513,249,956 samples, 9.84%)</title><rect x="1046.3" y="789" width="116.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1049.31" y="799.5" >pybind11::deta..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (344,276,787 samples, 1.35%)</title><rect x="95.2" y="997" width="15.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.22" y="1007.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (62,857,718 samples, 0.25%)</title><rect x="204.6" y="389" width="2.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="207.55" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (34,021,995 samples, 0.13%)</title><rect x="191.1" y="533" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,117 samples, 0.10%)</title><rect x="132.9" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.89" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,221,506 samples, 0.10%)</title><rect x="226.9" y="517" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="229.92" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,177 samples, 0.10%)</title><rect x="172.8" y="325" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="175.85" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,252,610 samples, 0.10%)</title><rect x="127.3" y="325" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="130.33" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,828,949 samples, 0.13%)</title><rect x="56.3" y="581" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="59.33" y="591.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,177 samples, 0.10%)</title><rect x="172.8" y="405" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="175.85" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,608,589 samples, 0.10%)</title><rect x="140.8" y="757" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="143.83" y="767.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,212,829 samples, 0.10%)</title><rect x="114.8" y="517" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="117.77" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,177 samples, 0.10%)</title><rect x="172.8" y="373" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.85" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,951,168 samples, 0.13%)</title><rect x="54.8" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,103,680 samples, 0.10%)</title><rect x="189.9" y="581" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="192.88" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,249 samples, 0.10%)</title><rect x="50.8" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="53.78" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (104,839,818 samples, 0.41%)</title><rect x="672.7" y="773" width="4.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="675.69" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (56,584,638 samples, 0.22%)</title><rect x="138.2" y="453" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.21" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,520 samples, 0.10%)</title><rect x="179.0" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.02" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,568 samples, 0.10%)</title><rect x="235.6" y="741" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="238.62" y="751.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,735,126 samples, 0.10%)</title><rect x="117.2" y="389" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="120.20" y="399.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (67,875,365 samples, 0.27%)</title><rect x="1101.2" y="597" width="3.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1104.20" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (762,856,520 samples, 2.99%)</title><rect x="54.8" y="997" width="35.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="57.76" y="1007.5" >_P..</text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="367.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (33,485,738 samples, 0.13%)</title><rect x="1051.0" y="629" width="1.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1054.02" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,217,406 samples, 0.10%)</title><rect x="76.6" y="421" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.59" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (264,030,292 samples, 1.03%)</title><rect x="98.9" y="965" width="12.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.93" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (7,520,244,065 samples, 29.45%)</title><rect x="692.5" y="661" width="347.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="695.52" y="671.5" >[python3.12]</text>
</g>
<g >
<title>PyInit__multiarray_umath (84,707,870 samples, 0.33%)</title><rect x="192.7" y="373" width="3.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="195.66" y="383.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="757" width="5.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1167.01" y="767.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,217,406 samples, 0.10%)</title><rect x="76.6" y="437" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="79.59" y="447.5" ></text>
</g>
<g >
<title>do_last (26,211,314 samples, 0.10%)</title><rect x="84.0" y="197" width="1.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="86.98" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,641 samples, 0.10%)</title><rect x="157.5" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.48" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,664 samples, 0.10%)</title><rect x="201.8" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.76" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,164,943 samples, 0.10%)</title><rect x="169.2" y="613" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="172.20" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,125,270 samples, 0.13%)</title><rect x="203.0" y="597" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.97" y="607.5" ></text>
</g>
<g >
<title>do_page_fault (26,201,768 samples, 0.10%)</title><rect x="73.7" y="261" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="76.73" y="271.5" ></text>
</g>
<g >
<title>_PyObject_Call (28,758,057 samples, 0.11%)</title><rect x="164.7" y="549" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="167.75" y="559.5" ></text>
</g>
<g >
<title>__do_page_fault (68,237,848 samples, 0.27%)</title><rect x="702.4" y="389" width="3.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="705.40" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (136,500,219 samples, 0.53%)</title><rect x="118.4" y="629" width="6.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="121.43" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (60,253,219 samples, 0.24%)</title><rect x="42.2" y="1029" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="45.22" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (33,624,566 samples, 0.13%)</title><rect x="228.1" y="389" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.14" y="399.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (10,597,843,828 samples, 41.51%)</title><rect x="672.7" y="965" width="489.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="675.69" y="975.5" >_PyRun_SimpleFileObject</text>
</g>
<g >
<title>[python3.12] (26,226,179 samples, 0.10%)</title><rect x="46.2" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.22" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (31,971,420 samples, 0.13%)</title><rect x="77.8" y="789" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="80.80" y="799.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (182,725,196 samples, 0.72%)</title><rect x="179.0" y="549" width="8.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="182.02" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (177,178,313 samples, 0.69%)</title><rect x="56.3" y="613" width="8.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="59.33" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="741" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="751.5" ></text>
</g>
<g >
<title>_dl_init (35,710,632 samples, 0.14%)</title><rect x="74.9" y="277" width="1.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="77.94" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (185,954,992 samples, 0.73%)</title><rect x="157.5" y="773" width="8.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="160.48" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (421,288,863 samples, 1.65%)</title><rect x="170.4" y="917" width="19.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.41" y="927.5" ></text>
</g>
<g >
<title>flush_tlb_func_remote (3,557,578 samples, 0.01%)</title><rect x="634.8" y="661" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="637.80" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,139,981 samples, 0.13%)</title><rect x="688.2" y="629" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="691.17" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,164,943 samples, 0.10%)</title><rect x="169.2" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.20" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,517 samples, 0.10%)</title><rect x="130.1" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,954,470 samples, 0.31%)</title><rect x="170.4" y="709" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="173.41" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (54,033,009 samples, 0.21%)</title><rect x="96.4" y="501" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.43" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,109,534 samples, 0.13%)</title><rect x="229.7" y="933" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="232.69" y="943.5" ></text>
</g>
<g >
<title>_PyObject_Call (135,304,273 samples, 0.53%)</title><rect x="216.3" y="469" width="6.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="219.30" y="479.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch2&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (33,811,030 samples, 0.13%)</title><rect x="1049.5" y="629" width="1.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1052.46" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="677" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="687.5" ></text>
</g>
<g >
<title>_int_malloc (46,324,964 samples, 0.18%)</title><rect x="48.6" y="261" width="2.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="51.64" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,608,589 samples, 0.10%)</title><rect x="140.8" y="309" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.83" y="319.5" ></text>
</g>
<g >
<title>PyNumber_Remainder (26,209,664 samples, 0.10%)</title><rect x="201.8" y="469" width="1.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="204.76" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,887,809 samples, 0.13%)</title><rect x="234.1" y="821" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="237.05" y="831.5" ></text>
</g>
<g >
<title>mmap_region (33,962,576 samples, 0.13%)</title><rect x="70.7" y="133" width="1.6" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="73.70" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (89,071,796 samples, 0.35%)</title><rect x="204.6" y="693" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.55" y="703.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,608,589 samples, 0.10%)</title><rect x="140.8" y="549" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="143.83" y="559.5" ></text>
</g>
<g >
<title>perf_event_mmap (67,577,419 samples, 0.26%)</title><rect x="705.6" y="277" width="3.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="708.56" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (7,708,916,762 samples, 30.19%)</title><rect x="683.8" y="709" width="356.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="686.80" y="719.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="837" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="847.5" ></text>
</g>
<g >
<title>lookup_fast (26,211,314 samples, 0.10%)</title><rect x="84.0" y="181" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="86.98" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (33,214,568 samples, 0.13%)</title><rect x="147.1" y="469" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (26,155,874 samples, 0.10%)</title><rect x="162.3" y="309" width="1.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="165.33" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (72,532,213 samples, 0.28%)</title><rect x="48.6" y="645" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="51.64" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (107,219,221 samples, 0.42%)</title><rect x="174.1" y="533" width="4.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="177.06" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (264,030,292 samples, 1.03%)</title><rect x="98.9" y="901" width="12.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.93" y="911.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (89,071,796 samples, 0.35%)</title><rect x="204.6" y="485" width="4.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="207.55" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,125,270 samples, 0.13%)</title><rect x="203.0" y="421" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="205.97" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,664 samples, 0.10%)</title><rect x="201.8" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.76" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (31,408,262 samples, 0.12%)</title><rect x="142.1" y="709" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.06" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,201,768 samples, 0.10%)</title><rect x="73.7" y="469" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="76.73" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (33,962,576 samples, 0.13%)</title><rect x="70.7" y="293" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.70" y="303.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (34,124,329 samples, 0.13%)</title><rect x="1160.9" y="629" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1163.88" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,897,915 samples, 0.10%)</title><rect x="85.2" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.19" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,242,896 samples, 0.24%)</title><rect x="231.3" y="357" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="234.27" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (32,142,344 samples, 0.13%)</title><rect x="69.2" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.21" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,608,589 samples, 0.10%)</title><rect x="140.8" y="949" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.83" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (261,183,121 samples, 1.02%)</title><rect x="64.5" y="725" width="12.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="67.52" y="735.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (291,350,293 samples, 1.14%)</title><rect x="191.1" y="805" width="13.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="194.09" y="815.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (56,584,638 samples, 0.22%)</title><rect x="138.2" y="597" width="2.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="141.21" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,226,179 samples, 0.10%)</title><rect x="46.2" y="421" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="49.22" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (67,973,315 samples, 0.27%)</title><rect x="1157.7" y="645" width="3.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1160.74" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,249 samples, 0.10%)</title><rect x="50.8" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="53.78" y="447.5" ></text>
</g>
<g >
<title>dlopen_doit (26,103,680 samples, 0.10%)</title><rect x="189.9" y="453" width="1.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="192.88" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (60,049,855 samples, 0.24%)</title><rect x="689.7" y="629" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="692.74" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (182,725,196 samples, 0.72%)</title><rect x="179.0" y="517" width="8.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="182.02" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (62,731,863 samples, 0.25%)</title><rect x="134.1" y="357" width="2.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="137.10" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,828,949 samples, 0.13%)</title><rect x="56.3" y="453" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="59.33" y="463.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (27,821,923 samples, 0.11%)</title><rect x="225.6" y="389" width="1.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="228.64" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,491 samples, 0.10%)</title><rect x="156.3" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,013 samples, 0.10%)</title><rect x="675.1" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="678.11" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,211,345 samples, 0.10%)</title><rect x="52.0" y="677" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="54.99" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (78,807,835 samples, 0.31%)</title><rect x="111.1" y="565" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.13" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (34,125,270 samples, 0.13%)</title><rect x="203.0" y="613" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.97" y="623.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (34,109,324 samples, 0.13%)</title><rect x="1127.9" y="677" width="1.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1130.93" y="687.5" ></text>
</g>
<g >
<title>llvm::MCJIT::emitObject (34,103,598 samples, 0.13%)</title><rect x="236.8" y="805" width="1.6" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="239.83" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,314 samples, 0.10%)</title><rect x="84.0" y="517" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="86.98" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,641 samples, 0.10%)</title><rect x="157.5" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.48" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (60,242,896 samples, 0.24%)</title><rect x="231.3" y="373" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.27" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (62,731,863 samples, 0.25%)</title><rect x="134.1" y="421" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.10" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (196,993,364 samples, 0.77%)</title><rect x="192.7" y="709" width="9.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.66" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (182,725,196 samples, 0.72%)</title><rect x="179.0" y="501" width="8.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="182.02" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,345 samples, 0.10%)</title><rect x="52.0" y="805" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="815.5" ></text>
</g>
<g >
<title>_int_malloc (34,104,445 samples, 0.13%)</title><rect x="695.3" y="517" width="1.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="698.30" y="527.5" ></text>
</g>
<g >
<title>__do_sys_newstat (52,396,969 samples, 0.21%)</title><rect x="176.6" y="277" width="2.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="179.59" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (104,839,818 samples, 0.41%)</title><rect x="672.7" y="565" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,249 samples, 0.10%)</title><rect x="50.8" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="53.78" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,145,886 samples, 0.24%)</title><rect x="130.1" y="597" width="2.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="133.11" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="405" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (34,120,277 samples, 0.13%)</title><rect x="1080.8" y="565" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1083.83" y="575.5" ></text>
</g>
<g >
<title>[vectorized.cpython-312-x86_64-linux-gnu.so] (26,124,850 samples, 0.10%)</title><rect x="144.7" y="917" width="1.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="147.72" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (33,496,489 samples, 0.13%)</title><rect x="680.7" y="613" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="683.67" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (54,033,009 samples, 0.21%)</title><rect x="96.4" y="453" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.43" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,768 samples, 0.10%)</title><rect x="73.7" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.73" y="335.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (177,178,313 samples, 0.69%)</title><rect x="56.3" y="629" width="8.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="59.33" y="639.5" ></text>
</g>
<g >
<title>x86_pmu_enable (3,808,570 samples, 0.01%)</title><rect x="635.1" y="869" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="638.12" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (67,679,069 samples, 0.27%)</title><rect x="166.1" y="533" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.08" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,048,891 samples, 0.10%)</title><rect x="88.8" y="437" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="91.81" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,887,809 samples, 0.13%)</title><rect x="234.1" y="725" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="237.05" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,643,022 samples, 0.12%)</title><rect x="61.5" y="373" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="64.53" y="383.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,608,589 samples, 0.10%)</title><rect x="140.8" y="501" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="143.83" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (261,183,121 samples, 1.02%)</title><rect x="64.5" y="741" width="12.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="67.52" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,002,898 samples, 0.10%)</title><rect x="153.9" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.86" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,496,489 samples, 0.13%)</title><rect x="680.7" y="725" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="683.67" y="735.5" ></text>
</g>
<g >
<title>alloc_pages_vma (340,516,437 samples, 1.33%)</title><rect x="961.1" y="341" width="15.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="964.13" y="351.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (3,557,578 samples, 0.01%)</title><rect x="634.8" y="677" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="637.80" y="687.5" ></text>
</g>
<g >
<title>PyObject_Dir (26,204,568 samples, 0.10%)</title><rect x="235.6" y="613" width="1.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="238.62" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,002,898 samples, 0.10%)</title><rect x="153.9" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.86" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,735,126 samples, 0.10%)</title><rect x="117.2" y="469" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="120.20" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (72,532,213 samples, 0.28%)</title><rect x="48.6" y="629" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (101,775,938 samples, 0.40%)</title><rect x="79.3" y="517" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.28" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,768 samples, 0.10%)</title><rect x="73.7" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.73" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,034 samples, 0.21%)</title><rect x="86.4" y="309" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.39" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (68,348,513 samples, 0.27%)</title><rect x="1148.3" y="645" width="3.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1151.34" y="655.5" ></text>
</g>
<g >
<title>PyObject_Str (56,584,638 samples, 0.22%)</title><rect x="138.2" y="357" width="2.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="141.21" y="367.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (109,094,002 samples, 0.43%)</title><rect x="216.3" y="389" width="5.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="219.30" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (68,237,184 samples, 0.27%)</title><rect x="121.6" y="213" width="3.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="124.59" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (32,142,344 samples, 0.13%)</title><rect x="69.2" y="437" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.21" y="447.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,089 samples, 0.10%)</title><rect x="126.1" y="501" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="129.12" y="511.5" ></text>
</g>
<g >
<title>__vfs_read (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="789" width="5.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1167.01" y="799.5" ></text>
</g>
<g >
<title>blas_thread_server (8,153,154,475 samples, 31.93%)</title><rect x="258.6" y="1013" width="376.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="261.61" y="1023.5" >blas_thread_server</text>
</g>
<g >
<title>PyImport_Import (26,103,680 samples, 0.10%)</title><rect x="189.9" y="917" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="192.88" y="927.5" ></text>
</g>
<g >
<title>path_openat (26,211,314 samples, 0.10%)</title><rect x="84.0" y="213" width="1.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="86.98" y="223.5" ></text>
</g>
<g >
<title>_PyObject_Call (104,839,818 samples, 0.41%)</title><rect x="672.7" y="597" width="4.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="675.69" y="607.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,147,781 samples, 0.13%)</title><rect x="1076.1" y="533" width="1.6" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1079.10" y="543.5" ></text>
</g>
<g >
<title>PyRun_StringFlags (26,210,271 samples, 0.10%)</title><rect x="221.3" y="373" width="1.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="224.34" y="383.5" ></text>
</g>
<g >
<title>page_fault (339,743,190 samples, 1.33%)</title><rect x="789.1" y="469" width="15.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="792.08" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,164,943 samples, 0.10%)</title><rect x="169.2" y="549" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="172.20" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_read (26,164,943 samples, 0.10%)</title><rect x="169.2" y="229" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="172.20" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (154,444,807 samples, 0.60%)</title><rect x="229.7" y="997" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (31,971,420 samples, 0.13%)</title><rect x="77.8" y="421" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.80" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,933,369 samples, 0.13%)</title><rect x="131.3" y="341" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.32" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,390 samples, 0.10%)</title><rect x="174.1" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.06" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,217,406 samples, 0.10%)</title><rect x="76.6" y="725" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="79.59" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,639 samples, 0.10%)</title><rect x="196.6" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.57" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,252,610 samples, 0.10%)</title><rect x="127.3" y="469" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="130.33" y="479.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (34,103,797 samples, 0.13%)</title><rect x="704.0" y="293" width="1.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="706.98" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,608,589 samples, 0.10%)</title><rect x="140.8" y="821" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="143.83" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (33,962,576 samples, 0.13%)</title><rect x="70.7" y="213" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="73.70" y="223.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,971,420 samples, 0.13%)</title><rect x="77.8" y="821" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="80.80" y="831.5" ></text>
</g>
<g >
<title>user_path_at_empty (26,155,874 samples, 0.10%)</title><rect x="162.3" y="261" width="1.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="165.33" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (60,092,377 samples, 0.24%)</title><rect x="234.1" y="949" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (79,217,342 samples, 0.31%)</title><rect x="114.8" y="853" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.77" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (33,887,809 samples, 0.13%)</title><rect x="234.1" y="805" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="815.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,540,248 samples, 0.21%)</title><rect x="151.4" y="405" width="2.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="154.43" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,768 samples, 0.10%)</title><rect x="57.9" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="60.89" y="447.5" ></text>
</g>
<g >
<title>memset (26,181,436 samples, 0.10%)</title><rect x="188.7" y="421" width="1.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="191.67" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (33,969,191 samples, 0.13%)</title><rect x="1079.3" y="549" width="1.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1082.26" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,314 samples, 0.10%)</title><rect x="84.0" y="501" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="86.98" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (115,150,104 samples, 0.45%)</title><rect x="132.9" y="693" width="5.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="135.89" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,002,898 samples, 0.10%)</title><rect x="153.9" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.86" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,581 samples, 0.21%)</title><rect x="45.0" y="869" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="879.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (54,033,009 samples, 0.21%)</title><rect x="96.4" y="373" width="2.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="99.43" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,210,491 samples, 0.10%)</title><rect x="156.3" y="357" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="159.27" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,145,886 samples, 0.24%)</title><rect x="130.1" y="661" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="133.11" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (196,993,364 samples, 0.77%)</title><rect x="192.7" y="597" width="9.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="195.66" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,491 samples, 0.10%)</title><rect x="156.3" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (165,146,677 samples, 0.65%)</title><rect x="208.7" y="629" width="7.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="211.67" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,109,534 samples, 0.13%)</title><rect x="229.7" y="757" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="232.69" y="767.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,242,896 samples, 0.24%)</title><rect x="231.3" y="917" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="234.27" y="927.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (101,775,938 samples, 0.40%)</title><rect x="79.3" y="613" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="82.28" y="623.5" ></text>
</g>
<g >
<title>operator new (35,710,632 samples, 0.14%)</title><rect x="74.9" y="181" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="77.94" y="191.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,294,663 samples, 0.10%)</title><rect x="98.9" y="789" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="101.93" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,103,680 samples, 0.10%)</title><rect x="189.9" y="613" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="192.88" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (104,839,818 samples, 0.41%)</title><rect x="672.7" y="853" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (33,887,809 samples, 0.13%)</title><rect x="234.1" y="293" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,972,956 samples, 0.13%)</title><rect x="222.6" y="437" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="225.55" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,951,168 samples, 0.13%)</title><rect x="54.8" y="661" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="57.76" y="671.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,102,323 samples, 0.13%)</title><rect x="82.4" y="229" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="85.41" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (26,048,891 samples, 0.10%)</title><rect x="88.8" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.81" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (67,679,069 samples, 0.27%)</title><rect x="166.1" y="565" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="169.08" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (31,971,420 samples, 0.13%)</title><rect x="77.8" y="581" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="80.80" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (6,632,667,284 samples, 25.98%)</title><rect x="698.1" y="533" width="306.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="701.09" y="543.5" >_PyFunction_Vectorcall</text>
</g>
<g >
<title>PyObject_Format (26,211,285 samples, 0.10%)</title><rect x="31.3" y="1029" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="34.31" y="1039.5" ></text>
</g>
<g >
<title>PyFunction_NewWithQualName (26,210,369 samples, 0.10%)</title><rect x="47.4" y="1029" width="1.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="50.43" y="1039.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (67,935,278 samples, 0.27%)</title><rect x="1112.2" y="549" width="3.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1115.22" y="559.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (34,073,519 samples, 0.13%)</title><rect x="1068.2" y="549" width="1.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1071.24" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,806,834 samples, 0.13%)</title><rect x="224.1" y="549" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="227.08" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,206,402 samples, 0.10%)</title><rect x="45.0" y="677" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="48.00" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,482,216 samples, 0.21%)</title><rect x="114.8" y="629" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="117.77" y="639.5" ></text>
</g>
<g >
<title>[libffi.so.7.1.0] (34,103,598 samples, 0.13%)</title><rect x="236.8" y="885" width="1.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="239.83" y="895.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (28,613,862 samples, 0.11%)</title><rect x="175.3" y="309" width="1.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="178.27" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (101,775,938 samples, 0.40%)</title><rect x="79.3" y="565" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.28" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="309" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (89,071,796 samples, 0.35%)</title><rect x="204.6" y="565" width="4.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="207.55" y="575.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (34,109,324 samples, 0.13%)</title><rect x="1127.9" y="661" width="1.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1130.93" y="671.5" ></text>
</g>
<g >
<title>PySequence_Tuple (26,375,403 samples, 0.10%)</title><rect x="112.3" y="357" width="1.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="115.34" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,408,262 samples, 0.12%)</title><rect x="142.1" y="357" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.06" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (389,522,746 samples, 1.53%)</title><rect x="204.6" y="949" width="18.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="207.55" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (115,150,104 samples, 0.45%)</title><rect x="132.9" y="741" width="5.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.89" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,226,179 samples, 0.10%)</title><rect x="46.2" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.22" y="319.5" ></text>
</g>
<g >
<title>std::plus&lt;float&gt;::operator (34,043,625 samples, 0.13%)</title><rect x="1118.5" y="581" width="1.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1121.52" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (115,150,104 samples, 0.45%)</title><rect x="132.9" y="837" width="5.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.89" y="847.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,074,924 samples, 0.13%)</title><rect x="62.9" y="501" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="65.94" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (101,606,306 samples, 0.40%)</title><rect x="64.5" y="693" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="67.52" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (232,355,092 samples, 0.91%)</title><rect x="79.3" y="917" width="10.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.28" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (33,806,834 samples, 0.13%)</title><rect x="224.1" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.08" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (33,715,088 samples, 0.13%)</title><rect x="1162.5" y="949" width="1.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1165.45" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (62,731,863 samples, 0.25%)</title><rect x="134.1" y="485" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.10" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (300,450,950 samples, 1.18%)</title><rect x="208.7" y="837" width="13.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="211.67" y="847.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (78,634,538 samples, 0.31%)</title><rect x="196.6" y="517" width="3.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="199.57" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,125,270 samples, 0.13%)</title><rect x="203.0" y="341" width="1.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="205.97" y="351.5" ></text>
</g>
<g >
<title>PyNumber_Or (30,842,997 samples, 0.12%)</title><rect x="108.5" y="629" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="111.49" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,859,528 samples, 0.13%)</title><rect x="80.8" y="341" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="83.84" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,634,538 samples, 0.31%)</title><rect x="196.6" y="373" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="199.57" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (80,246,495 samples, 0.31%)</title><rect x="95.2" y="805" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="98.22" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (33,624,566 samples, 0.13%)</title><rect x="228.1" y="613" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.14" y="623.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator++ (67,186,199 samples, 0.26%)</title><rect x="1051.0" y="693" width="3.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1054.02" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,735,126 samples, 0.10%)</title><rect x="117.2" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.20" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,540 samples, 0.10%)</title><rect x="187.5" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.46" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (34,021,995 samples, 0.13%)</title><rect x="191.1" y="709" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (78,807,835 samples, 0.31%)</title><rect x="111.1" y="469" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.13" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (104,839,818 samples, 0.41%)</title><rect x="672.7" y="869" width="4.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="675.69" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (31,408,262 samples, 0.12%)</title><rect x="142.1" y="421" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.06" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (84,707,870 samples, 0.33%)</title><rect x="192.7" y="293" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.66" y="303.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,744,075 samples, 0.13%)</title><rect x="180.2" y="389" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="183.23" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33,866,376 samples, 0.13%)</title><rect x="242.8" y="885" width="1.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="245.76" y="895.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,664 samples, 0.10%)</title><rect x="201.8" y="517" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="204.76" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,486 samples, 0.10%)</title><rect x="95.2" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.22" y="479.5" ></text>
</g>
<g >
<title>do_user_addr_fault (33,715,088 samples, 0.13%)</title><rect x="1162.5" y="917" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1165.45" y="927.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (154,447,785 samples, 0.60%)</title><rect x="222.6" y="789" width="7.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="225.55" y="799.5" ></text>
</g>
<g >
<title>array_setstate (33,859,030 samples, 0.13%)</title><rect x="1040.1" y="677" width="1.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1043.06" y="687.5" ></text>
</g>
<g >
<title>boost::optional_detail::aligned_storage&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::ptr_ref (33,700,461 samples, 0.13%)</title><rect x="1052.6" y="629" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1055.57" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,491 samples, 0.10%)</title><rect x="156.3" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="431.5" ></text>
</g>
<g >
<title>[[vdso]] (26,218,610 samples, 0.10%)</title><rect x="696.9" y="517" width="1.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="699.87" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_free (33,840,639 samples, 0.13%)</title><rect x="1157.7" y="597" width="1.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1160.74" y="607.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (82,886,498 samples, 0.32%)</title><rect x="217.5" y="341" width="3.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="220.51" y="351.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (389,522,746 samples, 1.53%)</title><rect x="204.6" y="917" width="18.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="207.55" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,314 samples, 0.10%)</title><rect x="84.0" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.98" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,806,834 samples, 0.13%)</title><rect x="224.1" y="389" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.08" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,735,126 samples, 0.10%)</title><rect x="117.2" y="341" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="120.20" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,933,369 samples, 0.13%)</title><rect x="131.3" y="453" width="1.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="134.32" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,517 samples, 0.10%)</title><rect x="130.1" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (121,474,829 samples, 0.48%)</title><rect x="224.1" y="741" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.08" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="613" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (87,850,263 samples, 0.34%)</title><rect x="224.1" y="645" width="4.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="227.08" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,897,915 samples, 0.10%)</title><rect x="85.2" y="501" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.19" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (89,071,796 samples, 0.35%)</title><rect x="204.6" y="869" width="4.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="207.55" y="879.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (135,304,273 samples, 0.53%)</title><rect x="216.3" y="533" width="6.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="219.30" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (34,125,270 samples, 0.13%)</title><rect x="203.0" y="485" width="1.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="205.97" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,164,943 samples, 0.10%)</title><rect x="169.2" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.20" y="431.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,207,249 samples, 0.10%)</title><rect x="50.8" y="517" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="53.78" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="405" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="415.5" ></text>
</g>
<g >
<title>llvm::StringMap&lt;llvm::cl::Option*, llvm::MallocAllocator&gt;::try_emplace&lt;llvm::cl::Option*&gt; (35,710,632 samples, 0.14%)</title><rect x="74.9" y="197" width="1.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="77.94" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,207,249 samples, 0.10%)</title><rect x="50.8" y="421" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="53.78" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,341 samples, 0.10%)</title><rect x="100.1" y="341" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.14" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (197,576,523 samples, 0.77%)</title><rect x="147.1" y="933" width="9.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="150.14" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (33,828,949 samples, 0.13%)</title><rect x="56.3" y="485" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.33" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (31,408,262 samples, 0.12%)</title><rect x="142.1" y="469" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="145.06" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (177,178,313 samples, 0.69%)</title><rect x="56.3" y="661" width="8.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.33" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (52,412,226 samples, 0.21%)</title><rect x="159.9" y="309" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.90" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,217,406 samples, 0.10%)</title><rect x="76.6" y="485" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="79.59" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (102,069,331 samples, 0.40%)</title><rect x="100.1" y="421" width="4.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="103.14" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (62,857,718 samples, 0.25%)</title><rect x="204.6" y="405" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.55" y="415.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (28,758,057 samples, 0.11%)</title><rect x="164.7" y="357" width="1.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="167.75" y="367.5" ></text>
</g>
<g >
<title>boost::detail::dummy_pmap_reference::operator=&lt;unsigned long&gt; (34,103,680 samples, 0.13%)</title><rect x="20.3" y="1029" width="1.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="23.33" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (28,758,057 samples, 0.11%)</title><rect x="164.7" y="629" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.75" y="639.5" ></text>
</g>
<g >
<title>PyObject_Malloc (34,104,445 samples, 0.13%)</title><rect x="695.3" y="549" width="1.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="698.30" y="559.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (332,440,423 samples, 1.30%)</title><rect x="1012.5" y="469" width="15.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1015.45" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,206 samples, 0.10%)</title><rect x="163.5" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.53" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (72,532,213 samples, 0.28%)</title><rect x="48.6" y="853" width="3.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="51.64" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,252,610 samples, 0.10%)</title><rect x="127.3" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.33" y="447.5" ></text>
</g>
<g >
<title>Format_floatbits.constprop.0 (56,584,638 samples, 0.22%)</title><rect x="138.2" y="309" width="2.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="141.21" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (101,775,938 samples, 0.40%)</title><rect x="79.3" y="533" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.28" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,220,606 samples, 0.10%)</title><rect x="109.9" y="693" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.92" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,217,406 samples, 0.10%)</title><rect x="76.6" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.59" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,221,506 samples, 0.10%)</title><rect x="226.9" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="229.92" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (33,529,649 samples, 0.13%)</title><rect x="251.1" y="917" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="254.10" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,242,896 samples, 0.24%)</title><rect x="231.3" y="437" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="234.27" y="447.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,491 samples, 0.10%)</title><rect x="156.3" y="437" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="159.27" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,581 samples, 0.21%)</title><rect x="45.0" y="981" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (89,071,796 samples, 0.35%)</title><rect x="204.6" y="469" width="4.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="207.55" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (154,447,785 samples, 0.60%)</title><rect x="222.6" y="869" width="7.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="225.55" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,517 samples, 0.10%)</title><rect x="130.1" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,733 samples, 0.10%)</title><rect x="155.1" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="158.06" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,206 samples, 0.10%)</title><rect x="163.5" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.53" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,421,034 samples, 0.21%)</title><rect x="86.4" y="421" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="89.39" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_valptr (33,885,918 samples, 0.13%)</title><rect x="23.5" y="1029" width="1.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="26.48" y="1039.5" ></text>
</g>
<g >
<title>PyDataMem_GetHandler (33,763,538 samples, 0.13%)</title><rect x="1044.7" y="661" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1047.75" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,221,506 samples, 0.10%)</title><rect x="226.9" y="293" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="229.92" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (59,971,167 samples, 0.23%)</title><rect x="52.0" y="949" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="54.99" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,650 samples, 0.21%)</title><rect x="59.1" y="389" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.11" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (342,334,393 samples, 1.34%)</title><rect x="174.1" y="677" width="15.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.06" y="687.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (28,758,057 samples, 0.11%)</title><rect x="164.7" y="389" width="1.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="167.75" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (197,576,523 samples, 0.77%)</title><rect x="147.1" y="869" width="9.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="150.14" y="879.5" ></text>
</g>
<g >
<title>boost::iterators::operator==&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (33,485,738 samples, 0.13%)</title><rect x="1051.0" y="661" width="1.6" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="1054.02" y="671.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (67,752,252 samples, 0.27%)</title><rect x="66.1" y="357" width="3.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="69.08" y="367.5" ></text>
</g>
<g >
<title>native_write_msr (3,808,570 samples, 0.01%)</title><rect x="635.1" y="837" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="638.12" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (287,400,527 samples, 1.13%)</title><rect x="64.5" y="837" width="13.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.52" y="847.5" ></text>
</g>
<g >
<title>smp_call_function_many (79,622,491 samples, 0.31%)</title><rect x="254.9" y="837" width="3.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="257.94" y="847.5" ></text>
</g>
<g >
<title>unmap_vmas (133,536,178 samples, 0.52%)</title><rect x="1171.3" y="933" width="6.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1174.26" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,220,606 samples, 0.10%)</title><rect x="109.9" y="597" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.92" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (31,971,420 samples, 0.13%)</title><rect x="77.8" y="837" width="1.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="80.80" y="847.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (80,246,495 samples, 0.31%)</title><rect x="95.2" y="965" width="3.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="98.22" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,294,663 samples, 0.10%)</title><rect x="98.9" y="677" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.93" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,249 samples, 0.10%)</title><rect x="50.8" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="53.78" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,733 samples, 0.10%)</title><rect x="155.1" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.06" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,733 samples, 0.10%)</title><rect x="155.1" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.06" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,924 samples, 0.10%)</title><rect x="143.5" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="146.51" y="383.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,205,287 samples, 0.10%)</title><rect x="181.8" y="389" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="184.79" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,024,903 samples, 0.13%)</title><rect x="669.6" y="789" width="1.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="672.58" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,829 samples, 0.10%)</title><rect x="114.8" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.77" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (52,740,293 samples, 0.21%)</title><rect x="170.4" y="421" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.41" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,226,179 samples, 0.10%)</title><rect x="46.2" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.22" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (543,970,531 samples, 2.13%)</title><rect x="204.6" y="981" width="25.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.55" y="991.5" >[..</text>
</g>
<g >
<title>[python3.12] (26,207,249 samples, 0.10%)</title><rect x="50.8" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="53.78" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,109,534 samples, 0.13%)</title><rect x="229.7" y="469" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="232.69" y="479.5" ></text>
</g>
<g >
<title>do_page_add_anon_rmap (3,557,578 samples, 0.01%)</title><rect x="634.8" y="725" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="637.80" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (81,010,831 samples, 0.32%)</title><rect x="175.3" y="485" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.27" y="495.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (33,962,576 samples, 0.13%)</title><rect x="70.7" y="85" width="1.6" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="73.70" y="95.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,735,126 samples, 0.10%)</title><rect x="117.2" y="405" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="120.20" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,209,089 samples, 0.10%)</title><rect x="126.1" y="341" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="129.12" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (33,933,369 samples, 0.13%)</title><rect x="131.3" y="405" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.32" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,664 samples, 0.10%)</title><rect x="201.8" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.76" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (83,743,036 samples, 0.33%)</title><rect x="142.1" y="949" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.06" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (436,059,189 samples, 1.71%)</title><rect x="651.0" y="917" width="20.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="654.01" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (33,496,489 samples, 0.13%)</title><rect x="680.7" y="741" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="683.67" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (52,396,969 samples, 0.21%)</title><rect x="176.6" y="357" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="179.59" y="367.5" ></text>
</g>
<g >
<title>python3.12 (25,532,757,013 samples, 100.00%)</title><rect x="10.0" y="1061" width="1180.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="13.04" y="1071.5" >python3.12</text>
</g>
<g >
<title>__GI___libc_malloc (34,104,445 samples, 0.13%)</title><rect x="695.3" y="533" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="698.30" y="543.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,208,639 samples, 0.10%)</title><rect x="196.6" y="357" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="199.57" y="367.5" ></text>
</g>
<g >
<title>__GI___errno_location (26,704,535 samples, 0.10%)</title><rect x="708.7" y="469" width="1.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="711.68" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (26,181,436 samples, 0.10%)</title><rect x="188.7" y="341" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="191.67" y="351.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (35,710,632 samples, 0.14%)</title><rect x="74.9" y="293" width="1.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="77.94" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (62,731,863 samples, 0.25%)</title><rect x="134.1" y="437" width="2.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="137.10" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,074,924 samples, 0.13%)</title><rect x="62.9" y="389" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="65.94" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,491 samples, 0.10%)</title><rect x="156.3" y="645" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="159.27" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,402 samples, 0.10%)</title><rect x="45.0" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,919,975 samples, 0.13%)</title><rect x="128.5" y="805" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.54" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::size (68,176,878 samples, 0.27%)</title><rect x="1135.8" y="629" width="3.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1138.76" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (82,257,480 samples, 0.32%)</title><rect x="124.7" y="597" width="3.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="127.74" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (67,679,069 samples, 0.27%)</title><rect x="166.1" y="501" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="169.08" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (56,584,638 samples, 0.22%)</title><rect x="138.2" y="613" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.21" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,217,406 samples, 0.10%)</title><rect x="76.6" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.59" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,839,818 samples, 0.41%)</title><rect x="672.7" y="533" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="675.69" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (115,150,104 samples, 0.45%)</title><rect x="132.9" y="757" width="5.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="135.89" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (33,933,369 samples, 0.13%)</title><rect x="131.3" y="325" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.32" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (56,584,638 samples, 0.22%)</title><rect x="138.2" y="837" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.21" y="847.5" ></text>
</g>
<g >
<title>_PyObject_Call (89,071,796 samples, 0.35%)</title><rect x="204.6" y="837" width="4.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="207.55" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (104,839,818 samples, 0.41%)</title><rect x="672.7" y="757" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="661" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="671.5" ></text>
</g>
<g >
<title>_dl_map_object (26,103,680 samples, 0.10%)</title><rect x="189.9" y="389" width="1.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="192.88" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,345 samples, 0.10%)</title><rect x="52.0" y="581" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.99" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (316,152,957 samples, 1.24%)</title><rect x="174.1" y="597" width="14.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.06" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (56,584,638 samples, 0.22%)</title><rect x="138.2" y="581" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.21" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (31,408,262 samples, 0.12%)</title><rect x="142.1" y="565" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.06" y="575.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (33,979,109 samples, 0.13%)</title><rect x="1102.8" y="565" width="1.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1105.77" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (72,532,213 samples, 0.28%)</title><rect x="48.6" y="901" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="911.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,432,581 samples, 0.21%)</title><rect x="45.0" y="853" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="48.00" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (232,355,092 samples, 0.91%)</title><rect x="79.3" y="853" width="10.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.28" y="863.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,919,975 samples, 0.13%)</title><rect x="128.5" y="869" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="131.54" y="879.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (46,324,964 samples, 0.18%)</title><rect x="48.6" y="565" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="51.64" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (6,504,384,128 samples, 25.47%)</title><rect x="700.9" y="501" width="300.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="703.87" y="511.5" >[python3.12]</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (291,350,293 samples, 1.14%)</title><rect x="191.1" y="821" width="13.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.09" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (154,447,785 samples, 0.60%)</title><rect x="222.6" y="837" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,226,179 samples, 0.10%)</title><rect x="46.2" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.22" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,192,495 samples, 0.10%)</title><rect x="107.3" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.28" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="341" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="351.5" ></text>
</g>
<g >
<title>[_ctypes.cpython-312-x86_64-linux-gnu.so] (34,103,598 samples, 0.13%)</title><rect x="236.8" y="901" width="1.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="239.83" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (165,146,677 samples, 0.65%)</title><rect x="208.7" y="469" width="7.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="211.67" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,807,835 samples, 0.31%)</title><rect x="111.1" y="693" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="114.13" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,557 samples, 0.10%)</title><rect x="676.3" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="679.33" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (135,304,273 samples, 0.53%)</title><rect x="216.3" y="501" width="6.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="219.30" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (104,530,263 samples, 0.41%)</title><rect x="84.0" y="693" width="4.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="86.98" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (88,938,987 samples, 0.35%)</title><rect x="134.1" y="549" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.10" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (101,606,306 samples, 0.40%)</title><rect x="64.5" y="549" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.52" y="559.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (34,125,270 samples, 0.13%)</title><rect x="203.0" y="277" width="1.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="205.97" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (212,165,483 samples, 0.83%)</title><rect x="156.3" y="885" width="9.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="895.5" ></text>
</g>
<g >
<title>page_fault (33,715,088 samples, 0.13%)</title><rect x="1162.5" y="965" width="1.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1165.45" y="975.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,887,809 samples, 0.13%)</title><rect x="234.1" y="597" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="237.05" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (80,246,495 samples, 0.31%)</title><rect x="95.2" y="773" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.22" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (97,664,415 samples, 0.38%)</title><rect x="69.2" y="501" width="4.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="72.21" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (121,474,829 samples, 0.48%)</title><rect x="224.1" y="757" width="5.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="227.08" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,540 samples, 0.10%)</title><rect x="187.5" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.46" y="303.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (30,842,997 samples, 0.12%)</title><rect x="108.5" y="437" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="111.49" y="447.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,421,034 samples, 0.21%)</title><rect x="86.4" y="581" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="89.39" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,457,574 samples, 0.21%)</title><rect x="208.7" y="373" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="211.67" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (78,632,261 samples, 0.31%)</title><rect x="672.7" y="501" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="511.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,079,317 samples, 0.13%)</title><rect x="1003.0" y="501" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1006.03" y="511.5" ></text>
</g>
<g >
<title>[timedeltas.cpython-312-x86_64-linux-gnu.so] (26,103,680 samples, 0.10%)</title><rect x="189.9" y="693" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="192.88" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (31,971,420 samples, 0.13%)</title><rect x="77.8" y="661" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.80" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (96,572,314 samples, 0.38%)</title><rect x="183.0" y="389" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.00" y="399.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (78,634,538 samples, 0.31%)</title><rect x="196.6" y="469" width="3.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="199.57" y="479.5" ></text>
</g>
<g >
<title>generic_file_read_iter (32,972,956 samples, 0.13%)</title><rect x="222.6" y="165" width="1.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="225.55" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (149,865,488 samples, 0.59%)</title><rect x="33.7" y="1029" width="7.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="36.73" y="1039.5" ></text>
</g>
<g >
<title>PyLong_FromLong (33,967,381 samples, 0.13%)</title><rect x="29.7" y="1029" width="1.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="32.74" y="1039.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,217,337 samples, 0.13%)</title><rect x="1072.9" y="581" width="1.6" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1075.94" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (97,664,415 samples, 0.38%)</title><rect x="69.2" y="469" width="4.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="72.21" y="479.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (30,842,997 samples, 0.12%)</title><rect x="108.5" y="325" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="111.49" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (60,242,896 samples, 0.24%)</title><rect x="231.3" y="581" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.27" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,206 samples, 0.10%)</title><rect x="163.5" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.53" y="287.5" ></text>
</g>
<g >
<title>call_function_interrupt (3,557,578 samples, 0.01%)</title><rect x="634.8" y="709" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="637.80" y="719.5" ></text>
</g>
<g >
<title>array__reconstruct (101,460,497 samples, 0.40%)</title><rect x="1041.6" y="709" width="4.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1044.62" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,252,610 samples, 0.10%)</title><rect x="127.3" y="389" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="130.33" y="399.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,206,402 samples, 0.10%)</title><rect x="45.0" y="645" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="48.00" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (211,515,023 samples, 0.83%)</title><rect x="100.1" y="709" width="9.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.14" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (33,962,576 samples, 0.13%)</title><rect x="70.7" y="277" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.70" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (35,710,632 samples, 0.14%)</title><rect x="74.9" y="517" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.94" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (87,850,263 samples, 0.34%)</title><rect x="224.1" y="629" width="4.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="227.08" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (78,954,470 samples, 0.31%)</title><rect x="170.4" y="533" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.41" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="629" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,164,943 samples, 0.10%)</title><rect x="169.2" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.20" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (33,617,398 samples, 0.13%)</title><rect x="1134.2" y="597" width="1.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1137.21" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,520 samples, 0.10%)</title><rect x="179.0" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.02" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,425,899 samples, 0.21%)</title><rect x="197.8" y="325" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="200.79" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,208,390 samples, 0.10%)</title><rect x="174.1" y="469" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="177.06" y="479.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::front (34,011,640 samples, 0.13%)</title><rect x="1129.5" y="677" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1132.51" y="687.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,828,949 samples, 0.13%)</title><rect x="56.3" y="389" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="59.33" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (197,576,523 samples, 0.77%)</title><rect x="147.1" y="741" width="9.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="150.14" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,074,924 samples, 0.13%)</title><rect x="62.9" y="485" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="65.94" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (34,150,626 samples, 0.13%)</title><rect x="1077.7" y="549" width="1.6" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1080.68" y="559.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_not_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (102,314,013 samples, 0.40%)</title><rect x="1082.4" y="597" width="4.7" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1085.40" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (80,246,495 samples, 0.31%)</title><rect x="95.2" y="933" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="98.22" y="943.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,109,534 samples, 0.13%)</title><rect x="229.7" y="869" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="232.69" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,478,143 samples, 0.10%)</title><rect x="150.2" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.21" y="399.5" ></text>
</g>
<g >
<title>Dragon4_Scientific_LongDouble (56,584,638 samples, 0.22%)</title><rect x="138.2" y="325" width="2.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="141.21" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (67,973,315 samples, 0.27%)</title><rect x="1157.7" y="677" width="3.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1160.74" y="687.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,664 samples, 0.10%)</title><rect x="201.8" y="629" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="204.76" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,294,663 samples, 0.10%)</title><rect x="98.9" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.93" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,410,200 samples, 0.21%)</title><rect x="104.9" y="405" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.86" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (59,971,167 samples, 0.23%)</title><rect x="52.0" y="869" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="54.99" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,155,874 samples, 0.10%)</title><rect x="162.3" y="341" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="165.33" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,294,663 samples, 0.10%)</title><rect x="98.9" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.93" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (67,577,419 samples, 0.26%)</title><rect x="705.6" y="325" width="3.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="708.56" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,002,898 samples, 0.10%)</title><rect x="153.9" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.86" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (56,584,638 samples, 0.22%)</title><rect x="138.2" y="901" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.21" y="911.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (104,839,818 samples, 0.41%)</title><rect x="672.7" y="837" width="4.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="675.69" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (33,624,566 samples, 0.13%)</title><rect x="228.1" y="325" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="231.14" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,177 samples, 0.10%)</title><rect x="172.8" y="293" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.85" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (342,334,393 samples, 1.34%)</title><rect x="174.1" y="693" width="15.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="177.06" y="703.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (33,962,576 samples, 0.13%)</title><rect x="70.7" y="357" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="73.70" y="367.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (67,276,009 samples, 0.26%)</title><rect x="1088.7" y="565" width="3.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1091.70" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,491 samples, 0.10%)</title><rect x="156.3" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,205,287 samples, 0.10%)</title><rect x="181.8" y="405" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="184.79" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,269,387 samples, 0.10%)</title><rect x="116.0" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.98" y="559.5" ></text>
</g>
<g >
<title>__handle_mm_fault (68,237,848 samples, 0.27%)</title><rect x="702.4" y="341" width="3.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="705.40" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,294,663 samples, 0.10%)</title><rect x="98.9" y="773" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.93" y="783.5" ></text>
</g>
<g >
<title>__lru_cache_add (68,040,040 samples, 0.27%)</title><rect x="798.5" y="341" width="3.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="801.50" y="351.5" ></text>
</g>
<g >
<title>operator new (68,348,513 samples, 0.27%)</title><rect x="1148.3" y="597" width="3.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1151.34" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (31,559,495 samples, 0.12%)</title><rect x="72.3" y="357" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.27" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,103,680 samples, 0.10%)</title><rect x="189.9" y="805" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="192.88" y="815.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (294,941,468 samples, 1.16%)</title><rect x="980.0" y="453" width="13.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="982.99" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,211,314 samples, 0.10%)</title><rect x="84.0" y="277" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="86.98" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (28,758,057 samples, 0.11%)</title><rect x="164.7" y="277" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.75" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (33,814,087 samples, 0.13%)</title><rect x="79.3" y="357" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.28" y="367.5" ></text>
</g>
<g >
<title>ret_from_fork (15,118,859 samples, 0.06%)</title><rect x="254.2" y="1029" width="0.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="257.22" y="1039.5" ></text>
</g>
<g >
<title>PySlice_Unpack (26,208,341 samples, 0.10%)</title><rect x="100.1" y="325" width="1.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="103.14" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (60,145,886 samples, 0.24%)</title><rect x="130.1" y="613" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32,972,956 samples, 0.13%)</title><rect x="222.6" y="293" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="225.55" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,063,632 samples, 0.13%)</title><rect x="214.7" y="405" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="217.73" y="415.5" ></text>
</g>
<g >
<title>__GI___clone (8,248,320,721 samples, 32.30%)</title><rect x="254.2" y="1045" width="381.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="257.22" y="1055.5" >__GI___clone</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (104,774,088 samples, 0.41%)</title><rect x="158.7" y="453" width="4.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="161.69" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (33,529,649 samples, 0.13%)</title><rect x="251.1" y="837" width="1.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="254.10" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (218,757,699 samples, 0.86%)</title><rect x="118.4" y="773" width="10.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.43" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (133,536,178 samples, 0.52%)</title><rect x="1171.3" y="1013" width="6.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1174.26" y="1023.5" ></text>
</g>
<g >
<title>__vfs_read (26,164,943 samples, 0.10%)</title><rect x="169.2" y="181" width="1.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="172.20" y="191.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (60,242,896 samples, 0.24%)</title><rect x="231.3" y="597" width="2.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="234.27" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (67,679,069 samples, 0.27%)</title><rect x="166.1" y="421" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.08" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="533" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="543.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (33,128,933 samples, 0.13%)</title><rect x="148.7" y="245" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="151.67" y="255.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (89,071,796 samples, 0.35%)</title><rect x="204.6" y="645" width="4.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="207.55" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (67,961,851 samples, 0.27%)</title><rect x="80.8" y="373" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.84" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (342,334,393 samples, 1.34%)</title><rect x="174.1" y="629" width="15.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.06" y="639.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (57,618,186 samples, 0.23%)</title><rect x="142.1" y="933" width="2.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="145.06" y="943.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,735,126 samples, 0.10%)</title><rect x="117.2" y="677" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="120.20" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,002,898 samples, 0.10%)</title><rect x="153.9" y="517" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="156.86" y="527.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (28,758,057 samples, 0.11%)</title><rect x="164.7" y="693" width="1.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="167.75" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,124 samples, 0.10%)</title><rect x="137.0" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.00" y="335.5" ></text>
</g>
<g >
<title>do_page_fault (33,931,531 samples, 0.13%)</title><rect x="244.3" y="949" width="1.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="247.32" y="959.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,192,495 samples, 0.10%)</title><rect x="107.3" y="405" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="110.28" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (131,233,022 samples, 0.51%)</title><rect x="150.2" y="661" width="6.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.21" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,478,143 samples, 0.10%)</title><rect x="150.2" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.21" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (72,532,213 samples, 0.28%)</title><rect x="48.6" y="789" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (56,584,638 samples, 0.22%)</title><rect x="138.2" y="501" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.21" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::front (34,011,640 samples, 0.13%)</title><rect x="1129.5" y="661" width="1.6" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1132.51" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,125,270 samples, 0.13%)</title><rect x="203.0" y="389" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="205.97" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (232,355,092 samples, 0.91%)</title><rect x="79.3" y="821" width="10.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.28" y="831.5" ></text>
</g>
<g >
<title>do_fault (26,181,436 samples, 0.10%)</title><rect x="188.7" y="309" width="1.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="191.67" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (78,602,695 samples, 0.31%)</title><rect x="104.9" y="437" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.86" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (96,572,314 samples, 0.38%)</title><rect x="183.0" y="293" width="4.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="186.00" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (101,606,306 samples, 0.40%)</title><rect x="64.5" y="469" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.52" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (154,444,807 samples, 0.60%)</title><rect x="229.7" y="1013" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (34,103,598 samples, 0.13%)</title><rect x="236.8" y="997" width="1.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="239.83" y="1007.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (237,809,686 samples, 0.93%)</title><rect x="98.9" y="837" width="11.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="101.93" y="847.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (26,212,013 samples, 0.10%)</title><rect x="675.1" y="325" width="1.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="678.11" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (35,710,632 samples, 0.14%)</title><rect x="74.9" y="565" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="77.94" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,933,369 samples, 0.13%)</title><rect x="131.3" y="517" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.32" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,021,995 samples, 0.13%)</title><rect x="191.1" y="581" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.09" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (33,496,489 samples, 0.13%)</title><rect x="680.7" y="629" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="683.67" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (78,625,471 samples, 0.31%)</title><rect x="211.1" y="357" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.09" y="367.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,192,495 samples, 0.10%)</title><rect x="107.3" y="389" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="110.28" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (72,532,213 samples, 0.28%)</title><rect x="48.6" y="917" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="927.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (101,606,306 samples, 0.40%)</title><rect x="64.5" y="421" width="4.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="67.52" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="517" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="527.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,103,680 samples, 0.10%)</title><rect x="189.9" y="965" width="1.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="192.88" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,517 samples, 0.10%)</title><rect x="130.1" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="559.5" ></text>
</g>
<g >
<title>[_ctypes.cpython-312-x86_64-linux-gnu.so] (35,710,632 samples, 0.14%)</title><rect x="74.9" y="437" width="1.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="77.94" y="447.5" ></text>
</g>
<g >
<title>_aligned_strided_to_strided_size1_srcstride0 (33,759,822 samples, 0.13%)</title><rect x="53.2" y="789" width="1.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="56.20" y="799.5" ></text>
</g>
<g >
<title>exit_mmap (133,536,178 samples, 0.52%)</title><rect x="1171.3" y="949" width="6.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1174.26" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="261" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,807,835 samples, 0.31%)</title><rect x="111.1" y="805" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.13" y="815.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (33,916,728 samples, 0.13%)</title><rect x="1099.6" y="549" width="1.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1102.64" y="559.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,104,445 samples, 0.13%)</title><rect x="695.3" y="437" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="698.30" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (32,972,956 samples, 0.13%)</title><rect x="222.6" y="405" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="517" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (30,842,997 samples, 0.12%)</title><rect x="108.5" y="469" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="111.49" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (7,460,114,942 samples, 29.22%)</title><rect x="695.3" y="597" width="344.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="698.30" y="607.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>[python3.12] (165,146,677 samples, 0.65%)</title><rect x="208.7" y="517" width="7.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="211.67" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (34,200,686 samples, 0.13%)</title><rect x="679.1" y="837" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="682.09" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (31,971,420 samples, 0.13%)</title><rect x="77.8" y="677" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.80" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,517 samples, 0.10%)</title><rect x="130.1" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="431.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (136,677,761 samples, 0.54%)</title><rect x="1072.9" y="597" width="6.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1075.94" y="607.5" ></text>
</g>
<g >
<title>__do_page_fault (26,181,436 samples, 0.10%)</title><rect x="188.7" y="373" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="191.67" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,214,078 samples, 0.10%)</title><rect x="207.5" y="309" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="210.46" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (133,758,388 samples, 0.52%)</title><rect x="663.4" y="869" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="666.40" y="879.5" ></text>
</g>
<g >
<title>_PyObject_Call (101,775,938 samples, 0.40%)</title><rect x="79.3" y="549" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.28" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (29,795,781 samples, 0.12%)</title><rect x="124.7" y="565" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.74" y="575.5" ></text>
</g>
<g >
<title>_dl_start_final (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="1013" width="5.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1167.01" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (26,252,610 samples, 0.10%)</title><rect x="127.3" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.33" y="383.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,214,078 samples, 0.10%)</title><rect x="207.5" y="389" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="210.46" y="399.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (28,613,862 samples, 0.11%)</title><rect x="175.3" y="357" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="178.27" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (66,343,501 samples, 0.26%)</title><rect x="147.1" y="565" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (27,821,923 samples, 0.11%)</title><rect x="225.6" y="453" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="228.64" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (104,774,088 samples, 0.41%)</title><rect x="158.7" y="469" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.69" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,109,534 samples, 0.13%)</title><rect x="229.7" y="805" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="232.69" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,740,293 samples, 0.21%)</title><rect x="170.4" y="389" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="173.41" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_vma (26,201,768 samples, 0.10%)</title><rect x="73.7" y="165" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="76.73" y="175.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (175,295,990 samples, 0.69%)</title><rect x="130.1" y="853" width="8.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="133.11" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (56,584,638 samples, 0.22%)</title><rect x="138.2" y="709" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="141.21" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (177,178,313 samples, 0.69%)</title><rect x="56.3" y="805" width="8.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.33" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,641 samples, 0.10%)</title><rect x="157.5" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.48" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (52,482,216 samples, 0.21%)</title><rect x="114.8" y="581" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.77" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (569,439,175 samples, 2.23%)</title><rect x="644.8" y="933" width="26.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="647.84" y="943.5" >[..</text>
</g>
<g >
<title>[python3.12] (26,103,680 samples, 0.10%)</title><rect x="189.9" y="821" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.88" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,117 samples, 0.10%)</title><rect x="132.9" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.89" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,294,663 samples, 0.10%)</title><rect x="98.9" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.93" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (34,124,329 samples, 0.13%)</title><rect x="1160.9" y="581" width="1.6" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1163.88" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (175,295,990 samples, 0.69%)</title><rect x="130.1" y="885" width="8.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="133.11" y="895.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (28,758,057 samples, 0.11%)</title><rect x="164.7" y="437" width="1.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="167.75" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (79,622,491 samples, 0.31%)</title><rect x="254.9" y="949" width="3.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="257.94" y="959.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (66,709,822 samples, 0.26%)</title><rect x="1151.5" y="645" width="3.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1154.50" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (72,532,213 samples, 0.28%)</title><rect x="48.6" y="661" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="51.64" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (35,710,632 samples, 0.14%)</title><rect x="74.9" y="501" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.94" y="511.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,124,850 samples, 0.10%)</title><rect x="144.7" y="933" width="1.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="147.72" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (78,625,471 samples, 0.31%)</title><rect x="211.1" y="373" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.09" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (34,085,880 samples, 0.13%)</title><rect x="14.0" y="1029" width="1.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="17.04" y="1039.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,206 samples, 0.10%)</title><rect x="163.5" y="661" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="166.53" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (264,030,292 samples, 1.03%)</title><rect x="98.9" y="853" width="12.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.93" y="863.5" ></text>
</g>
<g >
<title>__do_page_fault (68,237,184 samples, 0.27%)</title><rect x="121.6" y="261" width="3.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="124.59" y="271.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,220,606 samples, 0.10%)</title><rect x="109.9" y="677" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="112.92" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (66,343,501 samples, 0.26%)</title><rect x="147.1" y="645" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="150.14" y="655.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,830,718 samples, 0.13%)</title><rect x="691.0" y="613" width="1.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="693.96" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,294,663 samples, 0.10%)</title><rect x="98.9" y="485" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="101.93" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,568 samples, 0.10%)</title><rect x="235.6" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="238.62" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (33,887,809 samples, 0.13%)</title><rect x="234.1" y="709" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (33,887,809 samples, 0.13%)</title><rect x="234.1" y="325" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (84,707,870 samples, 0.33%)</title><rect x="192.7" y="469" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.66" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (135,304,273 samples, 0.53%)</title><rect x="216.3" y="437" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.30" y="447.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,209,664 samples, 0.10%)</title><rect x="201.8" y="437" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="204.76" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (291,350,293 samples, 1.14%)</title><rect x="191.1" y="853" width="13.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (52,461,699 samples, 0.21%)</title><rect x="126.1" y="549" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.12" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,109,534 samples, 0.13%)</title><rect x="229.7" y="485" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="232.69" y="495.5" ></text>
</g>
<g >
<title>__GI___read_nocancel (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="885" width="5.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1167.01" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,164,943 samples, 0.10%)</title><rect x="169.2" y="389" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="172.20" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,491 samples, 0.10%)</title><rect x="156.3" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="607.5" ></text>
</g>
<g >
<title>strcmp (26,103,680 samples, 0.10%)</title><rect x="189.9" y="357" width="1.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="192.88" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,520 samples, 0.10%)</title><rect x="179.0" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.02" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="565" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="575.5" ></text>
</g>
<g >
<title>ns_capable_common (26,155,874 samples, 0.10%)</title><rect x="162.3" y="149" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="165.33" y="159.5" ></text>
</g>
<g >
<title>_PyObject_Call (762,856,520 samples, 2.99%)</title><rect x="54.8" y="965" width="35.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.76" y="975.5" >_P..</text>
</g>
<g >
<title>[python3.12] (35,710,632 samples, 0.14%)</title><rect x="74.9" y="597" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.94" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,117 samples, 0.10%)</title><rect x="132.9" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.89" y="527.5" ></text>
</g>
<g >
<title>_PyObject_LookupAttr (52,540,248 samples, 0.21%)</title><rect x="151.4" y="357" width="2.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="154.43" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (218,757,699 samples, 0.86%)</title><rect x="118.4" y="885" width="10.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="121.43" y="895.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,807,835 samples, 0.31%)</title><rect x="111.1" y="485" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="114.13" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (10,425,188,339 samples, 40.83%)</title><rect x="680.7" y="853" width="481.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="683.67" y="863.5" >[python3.12]</text>
</g>
<g >
<title>do_page_fault (339,743,190 samples, 1.33%)</title><rect x="789.1" y="453" width="15.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="792.08" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (56,584,638 samples, 0.22%)</title><rect x="138.2" y="389" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="141.21" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,103,598 samples, 0.13%)</title><rect x="236.8" y="949" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="239.83" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,664 samples, 0.10%)</title><rect x="201.8" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="204.76" y="495.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (35,710,632 samples, 0.14%)</title><rect x="74.9" y="373" width="1.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="77.94" y="383.5" ></text>
</g>
<g >
<title>__GI___sbrk (67,577,419 samples, 0.26%)</title><rect x="705.6" y="373" width="3.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="708.56" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (89,071,796 samples, 0.35%)</title><rect x="204.6" y="677" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.55" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (68,348,513 samples, 0.27%)</title><rect x="1148.3" y="581" width="3.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1151.34" y="591.5" ></text>
</g>
<g >
<title>Nexullance_IT::step_1 (67,733,661 samples, 0.27%)</title><rect x="1047.9" y="709" width="3.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1050.89" y="719.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (97,664,415 samples, 0.38%)</title><rect x="69.2" y="533" width="4.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="72.21" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (34,124,329 samples, 0.13%)</title><rect x="1160.9" y="693" width="1.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1163.88" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,954,470 samples, 0.31%)</title><rect x="170.4" y="501" width="3.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="173.41" y="511.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (34,093,160 samples, 0.13%)</title><rect x="1069.8" y="565" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1072.82" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (89,071,796 samples, 0.35%)</title><rect x="204.6" y="853" width="4.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="207.55" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (32,142,344 samples, 0.13%)</title><rect x="69.2" y="341" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.21" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,954,470 samples, 0.31%)</title><rect x="170.4" y="549" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="173.41" y="559.5" ></text>
</g>
<g >
<title>tcache_put (34,132,676 samples, 0.13%)</title><rect x="1159.3" y="581" width="1.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1162.30" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (57,618,186 samples, 0.23%)</title><rect x="142.1" y="917" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.06" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="917" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,639 samples, 0.10%)</title><rect x="196.6" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.57" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (33,887,809 samples, 0.13%)</title><rect x="234.1" y="517" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="527.5" ></text>
</g>
<g >
<title>try_trivial_single_output_loop (67,797,907 samples, 0.27%)</title><rect x="242.8" y="1013" width="3.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="245.76" y="1023.5" ></text>
</g>
<g >
<title>llvm::LLVMTargetMachine::addPassesToEmitMC (34,103,598 samples, 0.13%)</title><rect x="236.8" y="789" width="1.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="239.83" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,217,406 samples, 0.10%)</title><rect x="76.6" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.59" y="639.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (56,584,638 samples, 0.22%)</title><rect x="138.2" y="437" width="2.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="141.21" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (57,618,186 samples, 0.23%)</title><rect x="142.1" y="821" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.06" y="831.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,048,891 samples, 0.10%)</title><rect x="88.8" y="597" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="91.81" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,314 samples, 0.10%)</title><rect x="84.0" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.98" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,125,270 samples, 0.13%)</title><rect x="203.0" y="581" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="205.97" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (33,916,728 samples, 0.13%)</title><rect x="1099.6" y="501" width="1.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1102.64" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (59,971,167 samples, 0.23%)</title><rect x="52.0" y="1013" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="1023.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (154,447,785 samples, 0.60%)</title><rect x="222.6" y="821" width="7.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="225.55" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (57,618,186 samples, 0.23%)</title><rect x="142.1" y="869" width="2.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.06" y="879.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (34,124,329 samples, 0.13%)</title><rect x="1160.9" y="597" width="1.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1163.88" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (80,246,495 samples, 0.31%)</title><rect x="95.2" y="869" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.22" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,568 samples, 0.10%)</title><rect x="235.6" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="238.62" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,432,581 samples, 0.21%)</title><rect x="45.0" y="901" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.00" y="911.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (104,839,818 samples, 0.41%)</title><rect x="672.7" y="693" width="4.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="675.69" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,496,489 samples, 0.13%)</title><rect x="680.7" y="645" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="683.67" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (131,233,022 samples, 0.51%)</title><rect x="150.2" y="709" width="6.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.21" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (79,217,342 samples, 0.31%)</title><rect x="114.8" y="789" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="117.77" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,924 samples, 0.10%)</title><rect x="143.5" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="146.51" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,608,589 samples, 0.10%)</title><rect x="140.8" y="869" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="143.83" y="879.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (33,953,084 samples, 0.13%)</title><rect x="12.5" y="1029" width="1.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="15.47" y="1039.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (54,043,429 samples, 0.21%)</title><rect x="225.6" y="549" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="228.64" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (104,774,088 samples, 0.41%)</title><rect x="158.7" y="517" width="4.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="161.69" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,103,680 samples, 0.10%)</title><rect x="189.9" y="773" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="192.88" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (31,408,262 samples, 0.12%)</title><rect x="142.1" y="613" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.06" y="623.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,207,249 samples, 0.10%)</title><rect x="50.8" y="357" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="53.78" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (264,030,292 samples, 1.03%)</title><rect x="98.9" y="869" width="12.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.93" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,486 samples, 0.10%)</title><rect x="95.2" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.22" y="367.5" ></text>
</g>
<g >
<title>call_init (35,710,632 samples, 0.14%)</title><rect x="74.9" y="261" width="1.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="77.94" y="271.5" ></text>
</g>
<g >
<title>do_numa_page (33,715,088 samples, 0.13%)</title><rect x="1162.5" y="869" width="1.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1165.45" y="879.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (33,814,087 samples, 0.13%)</title><rect x="79.3" y="373" width="1.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="82.28" y="383.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (33,482,394 samples, 0.13%)</title><rect x="1071.4" y="565" width="1.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1074.39" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (80,246,495 samples, 0.31%)</title><rect x="95.2" y="645" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.22" y="655.5" ></text>
</g>
<g >
<title>boost::source&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (34,094,697 samples, 0.13%)</title><rect x="1115.4" y="581" width="1.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1118.36" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (136,500,219 samples, 0.53%)</title><rect x="118.4" y="581" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,641 samples, 0.10%)</title><rect x="157.5" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.48" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (93,844,012 samples, 0.37%)</title><rect x="166.1" y="661" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.08" y="671.5" ></text>
</g>
<g >
<title>_int_free (34,132,676 samples, 0.13%)</title><rect x="1159.3" y="597" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1162.30" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (421,288,863 samples, 1.65%)</title><rect x="170.4" y="821" width="19.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.41" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (180,672,026 samples, 0.71%)</title><rect x="100.1" y="469" width="8.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.14" y="479.5" ></text>
</g>
<g >
<title>PyUnicode_Contains (26,375,403 samples, 0.10%)</title><rect x="112.3" y="277" width="1.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="115.34" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (78,954,470 samples, 0.31%)</title><rect x="170.4" y="629" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.41" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_read (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="837" width="5.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1167.01" y="847.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (26,103,680 samples, 0.10%)</title><rect x="189.9" y="901" width="1.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="192.88" y="911.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,624,566 samples, 0.13%)</title><rect x="228.1" y="597" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="231.14" y="607.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,221,506 samples, 0.10%)</title><rect x="226.9" y="325" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="229.92" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,217,406 samples, 0.10%)</title><rect x="76.6" y="741" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.59" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (67,679,069 samples, 0.27%)</title><rect x="166.1" y="613" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.08" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,002,898 samples, 0.10%)</title><rect x="153.9" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.86" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,919,975 samples, 0.13%)</title><rect x="128.5" y="933" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="131.54" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (28,758,057 samples, 0.11%)</title><rect x="164.7" y="373" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.75" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,641 samples, 0.10%)</title><rect x="157.5" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.48" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,842,997 samples, 0.12%)</title><rect x="108.5" y="453" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="111.49" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,217,406 samples, 0.10%)</title><rect x="76.6" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.59" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (177,178,313 samples, 0.69%)</title><rect x="56.3" y="725" width="8.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.33" y="735.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,735,126 samples, 0.10%)</title><rect x="117.2" y="645" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="120.20" y="655.5" ></text>
</g>
<g >
<title>advise_stack_range (79,622,491 samples, 0.31%)</title><rect x="254.9" y="1013" width="3.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="257.94" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (101,775,938 samples, 0.40%)</title><rect x="79.3" y="645" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.28" y="655.5" ></text>
</g>
<g >
<title>handle_mm_fault (33,866,376 samples, 0.13%)</title><rect x="242.8" y="901" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="245.76" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (135,304,273 samples, 0.53%)</title><rect x="216.3" y="453" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.30" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,021,995 samples, 0.13%)</title><rect x="191.1" y="677" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="194.09" y="687.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (68,326,436 samples, 0.27%)</title><rect x="1104.3" y="597" width="3.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1107.34" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (60,092,377 samples, 0.24%)</title><rect x="234.1" y="869" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (82,257,480 samples, 0.32%)</title><rect x="124.7" y="661" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.74" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (97,664,415 samples, 0.38%)</title><rect x="69.2" y="453" width="4.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.21" y="463.5" ></text>
</g>
<g >
<title>longdoubletype_str (56,584,638 samples, 0.22%)</title><rect x="138.2" y="341" width="2.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="141.21" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (34,200,686 samples, 0.13%)</title><rect x="679.1" y="869" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="682.09" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,222,822 samples, 0.10%)</title><rect x="113.6" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.56" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (115,150,104 samples, 0.45%)</title><rect x="132.9" y="677" width="5.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="135.89" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (31,971,420 samples, 0.13%)</title><rect x="77.8" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.80" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (101,775,938 samples, 0.40%)</title><rect x="79.3" y="629" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.28" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (7,520,244,065 samples, 29.45%)</title><rect x="692.5" y="677" width="347.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="695.52" y="687.5" >[python3.12]</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,951,168 samples, 0.13%)</title><rect x="54.8" y="421" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="57.76" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (34,074,924 samples, 0.13%)</title><rect x="62.9" y="437" width="1.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="65.94" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,887,809 samples, 0.13%)</title><rect x="234.1" y="629" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="237.05" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (196,993,364 samples, 0.77%)</title><rect x="192.7" y="629" width="9.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="195.66" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,608,589 samples, 0.10%)</title><rect x="140.8" y="837" width="1.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="143.83" y="847.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (33,811,030 samples, 0.13%)</title><rect x="1049.5" y="581" width="1.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1052.46" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (67,679,069 samples, 0.27%)</title><rect x="166.1" y="437" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="169.08" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (10,597,843,828 samples, 41.51%)</title><rect x="672.7" y="885" width="489.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="675.69" y="895.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>inflate (4,255,945,065 samples, 16.67%)</title><rect x="804.8" y="485" width="196.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="807.78" y="495.5" >inflate</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,048,891 samples, 0.10%)</title><rect x="88.8" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="91.81" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,972,956 samples, 0.13%)</title><rect x="222.6" y="613" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="225.55" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (33,916,728 samples, 0.13%)</title><rect x="1099.6" y="517" width="1.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1102.64" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="325" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (30,643,022 samples, 0.12%)</title><rect x="61.5" y="357" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.53" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,117 samples, 0.10%)</title><rect x="132.9" y="613" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="135.89" y="623.5" ></text>
</g>
<g >
<title>handle_mm_fault (33,128,933 samples, 0.13%)</title><rect x="148.7" y="309" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="151.67" y="319.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (31,408,262 samples, 0.12%)</title><rect x="142.1" y="389" width="1.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="145.06" y="399.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,491 samples, 0.10%)</title><rect x="156.3" y="389" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="159.27" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (88,938,987 samples, 0.35%)</title><rect x="134.1" y="581" width="4.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="137.10" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,933,369 samples, 0.13%)</title><rect x="131.3" y="501" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="134.32" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (35,710,632 samples, 0.14%)</title><rect x="74.9" y="549" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="77.94" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (35,710,632 samples, 0.14%)</title><rect x="74.9" y="165" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="77.94" y="175.5" ></text>
</g>
<g >
<title>schedule (4,955,476 samples, 0.02%)</title><rect x="635.1" y="949" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="638.07" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (31,971,420 samples, 0.13%)</title><rect x="77.8" y="741" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.80" y="751.5" ></text>
</g>
<g >
<title>[_ctypes.cpython-312-x86_64-linux-gnu.so] (34,103,598 samples, 0.13%)</title><rect x="236.8" y="917" width="1.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="239.83" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,768 samples, 0.10%)</title><rect x="73.7" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.73" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,951,168 samples, 0.13%)</title><rect x="54.8" y="485" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.76" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (154,447,785 samples, 0.60%)</title><rect x="222.6" y="917" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="927.5" ></text>
</g>
<g >
<title>clear_huge_page (33,866,376 samples, 0.13%)</title><rect x="242.8" y="853" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="245.76" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,933,369 samples, 0.13%)</title><rect x="131.3" y="373" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.32" y="383.5" ></text>
</g>
<g >
<title>inflate (230,822,662 samples, 0.90%)</title><rect x="1029.4" y="469" width="10.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1032.39" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,402 samples, 0.10%)</title><rect x="45.0" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,806,834 samples, 0.13%)</title><rect x="224.1" y="581" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.08" y="591.5" ></text>
</g>
<g >
<title>PyObject_Free (33,562,729 samples, 0.13%)</title><rect x="711.5" y="485" width="1.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="714.49" y="495.5" ></text>
</g>
<g >
<title>__memchr_sse2 (26,212,829 samples, 0.10%)</title><rect x="114.8" y="293" width="1.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="117.77" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (136,500,219 samples, 0.53%)</title><rect x="118.4" y="517" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="527.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (67,800,509 samples, 0.27%)</title><rect x="801.6" y="357" width="3.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="804.65" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (46,324,964 samples, 0.18%)</title><rect x="48.6" y="437" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,294,663 samples, 0.10%)</title><rect x="98.9" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.93" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (7,399,791,887 samples, 28.98%)</title><rect x="698.1" y="565" width="342.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="701.09" y="575.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,294,663 samples, 0.10%)</title><rect x="98.9" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.93" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,269,387 samples, 0.10%)</title><rect x="116.0" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.98" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,213,644 samples, 0.13%)</title><rect x="671.2" y="885" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="674.16" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (136,115,151 samples, 0.53%)</title><rect x="637.0" y="949" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="639.98" y="959.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,735,126 samples, 0.10%)</title><rect x="117.2" y="421" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="120.20" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (7,742,775,792 samples, 30.32%)</title><rect x="683.8" y="725" width="357.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="686.80" y="735.5" >[python3.12]</text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,145,886 samples, 0.24%)</title><rect x="130.1" y="805" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="133.11" y="815.5" ></text>
</g>
<g >
<title>handle_mm_fault (339,743,190 samples, 1.33%)</title><rect x="789.1" y="405" width="15.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="792.08" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,034 samples, 0.21%)</title><rect x="86.4" y="325" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.39" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (72,532,213 samples, 0.28%)</title><rect x="48.6" y="981" width="3.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="51.64" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="405" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (7,911,938,383 samples, 30.99%)</title><rect x="680.7" y="773" width="365.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="683.67" y="783.5" >[python3.12]</text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,422,650 samples, 0.21%)</title><rect x="59.1" y="373" width="2.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="62.11" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (123,866,183 samples, 0.49%)</title><rect x="69.2" y="565" width="5.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="72.21" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (10,597,843,828 samples, 41.51%)</title><rect x="672.7" y="933" width="489.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="943.5" >[python3.12]</text>
</g>
<g >
<title>_int_malloc (34,102,323 samples, 0.13%)</title><rect x="82.4" y="309" width="1.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="85.41" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,568 samples, 0.10%)</title><rect x="235.6" y="789" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="238.62" y="799.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,208,341 samples, 0.10%)</title><rect x="100.1" y="357" width="1.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="103.14" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (78,807,835 samples, 0.31%)</title><rect x="111.1" y="533" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.13" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,211,314 samples, 0.10%)</title><rect x="84.0" y="549" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="86.98" y="559.5" ></text>
</g>
<g >
<title>__do_page_fault (34,024,903 samples, 0.13%)</title><rect x="669.6" y="837" width="1.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="672.58" y="847.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,021,995 samples, 0.13%)</title><rect x="191.1" y="373" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="194.09" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,145,886 samples, 0.24%)</title><rect x="130.1" y="789" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="133.11" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (52,457,574 samples, 0.21%)</title><rect x="208.7" y="437" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="211.67" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (89,071,796 samples, 0.35%)</title><rect x="204.6" y="821" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.55" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,807,835 samples, 0.31%)</title><rect x="111.1" y="677" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.13" y="687.5" ></text>
</g>
<g >
<title>all (25,533,720,695 samples, 100%)</title><rect x="10.0" y="1077" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,221,506 samples, 0.10%)</title><rect x="226.9" y="453" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="229.92" y="463.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (79,622,491 samples, 0.31%)</title><rect x="254.9" y="901" width="3.7" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="257.94" y="911.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (34,109,534 samples, 0.13%)</title><rect x="229.7" y="661" width="1.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="232.69" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,432,581 samples, 0.21%)</title><rect x="45.0" y="725" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.00" y="735.5" ></text>
</g>
<g >
<title>do_anonymous_page (68,237,848 samples, 0.27%)</title><rect x="702.4" y="325" width="3.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="705.40" y="335.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (6,596,197 samples, 0.03%)</title><rect x="634.7" y="997" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="637.66" y="1007.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,092,377 samples, 0.24%)</title><rect x="234.1" y="853" width="2.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="237.05" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (80,246,495 samples, 0.31%)</title><rect x="95.2" y="949" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.22" y="959.5" ></text>
</g>
<g >
<title>get_page_from_freelist (34,134,051 samples, 0.13%)</title><rect x="702.4" y="245" width="1.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="705.40" y="255.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,117 samples, 0.10%)</title><rect x="132.9" y="597" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="135.89" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,109,534 samples, 0.13%)</title><rect x="229.7" y="613" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="232.69" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (35,710,632 samples, 0.14%)</title><rect x="74.9" y="453" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.94" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (29,795,781 samples, 0.12%)</title><rect x="124.7" y="549" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.74" y="559.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,212,829 samples, 0.10%)</title><rect x="114.8" y="469" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="117.77" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (218,757,699 samples, 0.86%)</title><rect x="118.4" y="693" width="10.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.43" y="703.5" ></text>
</g>
<g >
<title>PyImport_Import (26,048,891 samples, 0.10%)</title><rect x="88.8" y="741" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="91.81" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="725" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,217,406 samples, 0.10%)</title><rect x="76.6" y="517" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="79.59" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (84,707,870 samples, 0.33%)</title><rect x="192.7" y="437" width="3.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="195.66" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,205,287 samples, 0.10%)</title><rect x="181.8" y="341" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="184.79" y="351.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (26,103,680 samples, 0.10%)</title><rect x="189.9" y="469" width="1.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="192.88" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_read (26,164,943 samples, 0.10%)</title><rect x="169.2" y="293" width="1.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="172.20" y="303.5" ></text>
</g>
<g >
<title>PyArray_NewFromDescr_int (67,764,359 samples, 0.27%)</title><rect x="1043.2" y="677" width="3.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1046.18" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (211,515,023 samples, 0.83%)</title><rect x="100.1" y="789" width="9.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.14" y="799.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,125,270 samples, 0.13%)</title><rect x="203.0" y="629" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="205.97" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="357" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (197,576,523 samples, 0.77%)</title><rect x="147.1" y="853" width="9.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,242,896 samples, 0.24%)</title><rect x="231.3" y="517" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="234.27" y="527.5" ></text>
</g>
<g >
<title>new_sync_read (32,972,956 samples, 0.13%)</title><rect x="222.6" y="197" width="1.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="225.55" y="207.5" ></text>
</g>
<g >
<title>_dl_open (26,103,680 samples, 0.10%)</title><rect x="189.9" y="437" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="192.88" y="447.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (35,710,632 samples, 0.14%)</title><rect x="74.9" y="613" width="1.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="77.94" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (27,821,923 samples, 0.11%)</title><rect x="225.6" y="437" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="228.64" y="447.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (26,181,436 samples, 0.10%)</title><rect x="188.7" y="565" width="1.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="191.67" y="575.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,207,557 samples, 0.10%)</title><rect x="676.3" y="517" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="679.33" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (81,010,831 samples, 0.32%)</title><rect x="175.3" y="469" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.27" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,089 samples, 0.10%)</title><rect x="126.1" y="437" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="129.12" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (34,125,270 samples, 0.13%)</title><rect x="203.0" y="469" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.97" y="479.5" ></text>
</g>
<g >
<title>dlopen_doit (35,710,632 samples, 0.14%)</title><rect x="74.9" y="357" width="1.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="77.94" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,807,835 samples, 0.31%)</title><rect x="111.1" y="853" width="3.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="114.13" y="863.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (180,672,026 samples, 0.71%)</title><rect x="100.1" y="485" width="8.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="103.14" y="495.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (34,133,503 samples, 0.13%)</title><rect x="1009.3" y="485" width="1.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1012.32" y="495.5" ></text>
</g>
<g >
<title>__GI___default_morecore (67,577,419 samples, 0.26%)</title><rect x="705.6" y="405" width="3.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="708.56" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (165,146,677 samples, 0.65%)</title><rect x="208.7" y="613" width="7.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="211.67" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,664 samples, 0.10%)</title><rect x="201.8" y="341" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="204.76" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="319.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (340,516,437 samples, 1.33%)</title><rect x="961.1" y="325" width="15.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="964.13" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (65,522,071 samples, 0.26%)</title><rect x="70.7" y="373" width="3.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="73.70" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,124 samples, 0.10%)</title><rect x="137.0" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.00" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,103,598 samples, 0.13%)</title><rect x="236.8" y="933" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="239.83" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,924 samples, 0.10%)</title><rect x="143.5" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="146.51" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (104,774,088 samples, 0.41%)</title><rect x="158.7" y="533" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.69" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,048,891 samples, 0.10%)</title><rect x="88.8" y="629" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="91.81" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="501" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="511.5" ></text>
</g>
<g >
<title>page_fault (27,821,923 samples, 0.11%)</title><rect x="225.6" y="357" width="1.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="228.64" y="367.5" ></text>
</g>
<g >
<title>get_page_from_freelist (26,201,768 samples, 0.10%)</title><rect x="73.7" y="133" width="1.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="76.73" y="143.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (287,400,527 samples, 1.13%)</title><rect x="64.5" y="821" width="13.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="67.52" y="831.5" ></text>
</g>
<g >
<title>_PyObject_Call (175,295,990 samples, 0.69%)</title><rect x="130.1" y="933" width="8.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="133.11" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (89,071,796 samples, 0.35%)</title><rect x="204.6" y="501" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.55" y="511.5" ></text>
</g>
<g >
<title>page_fault (33,128,933 samples, 0.13%)</title><rect x="148.7" y="373" width="1.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="151.67" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (34,021,995 samples, 0.13%)</title><rect x="191.1" y="469" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="479.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (26,048,891 samples, 0.10%)</title><rect x="88.8" y="405" width="1.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="91.81" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,210,491 samples, 0.10%)</title><rect x="156.3" y="581" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="159.27" y="591.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,740,293 samples, 0.21%)</title><rect x="170.4" y="469" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="173.41" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,568 samples, 0.10%)</title><rect x="235.6" y="805" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="238.62" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (79,217,342 samples, 0.31%)</title><rect x="114.8" y="837" width="3.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="117.77" y="847.5" ></text>
</g>
<g >
<title>sysmalloc (67,577,419 samples, 0.26%)</title><rect x="705.6" y="421" width="3.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="708.56" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (342,334,393 samples, 1.34%)</title><rect x="174.1" y="645" width="15.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.06" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,951,168 samples, 0.13%)</title><rect x="54.8" y="741" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="57.76" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (177,178,313 samples, 0.69%)</title><rect x="56.3" y="757" width="8.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.33" y="767.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,217,406 samples, 0.10%)</title><rect x="76.6" y="405" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="79.59" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,345 samples, 0.10%)</title><rect x="52.0" y="437" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="54.99" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,155,874 samples, 0.10%)</title><rect x="162.3" y="325" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="165.33" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (30,842,997 samples, 0.12%)</title><rect x="108.5" y="405" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.49" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,048,891 samples, 0.10%)</title><rect x="88.8" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.81" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (83,065,672 samples, 0.33%)</title><rect x="59.1" y="485" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.11" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,226,179 samples, 0.10%)</title><rect x="46.2" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="49.22" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,164,943 samples, 0.10%)</title><rect x="169.2" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.20" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (56,584,638 samples, 0.22%)</title><rect x="138.2" y="725" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.21" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (34,063,632 samples, 0.13%)</title><rect x="214.7" y="341" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.73" y="351.5" ></text>
</g>
<g >
<title>generic_file_read_iter (26,164,943 samples, 0.10%)</title><rect x="169.2" y="133" width="1.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="172.20" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (26,103,680 samples, 0.10%)</title><rect x="189.9" y="661" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.88" y="671.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (34,027,578 samples, 0.13%)</title><rect x="1054.1" y="693" width="1.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1057.12" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (72,532,213 samples, 0.28%)</title><rect x="48.6" y="741" width="3.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="51.64" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,735,126 samples, 0.10%)</title><rect x="117.2" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.20" y="703.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33,931,531 samples, 0.13%)</title><rect x="244.3" y="885" width="1.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="247.32" y="895.5" ></text>
</g>
<g >
<title>_PyObject_Call (264,030,292 samples, 1.03%)</title><rect x="98.9" y="885" width="12.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="101.93" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (67,679,069 samples, 0.27%)</title><rect x="166.1" y="405" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.08" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (30,842,997 samples, 0.12%)</title><rect x="108.5" y="421" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.49" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,807,835 samples, 0.31%)</title><rect x="111.1" y="725" width="3.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="114.13" y="735.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; (33,811,030 samples, 0.13%)</title><rect x="1049.5" y="661" width="1.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1052.46" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,226,179 samples, 0.10%)</title><rect x="46.2" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.22" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (33,951,168 samples, 0.13%)</title><rect x="54.8" y="613" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,226,179 samples, 0.10%)</title><rect x="46.2" y="613" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="49.22" y="623.5" ></text>
</g>
<g >
<title>unmap_single_vma (133,536,178 samples, 0.52%)</title><rect x="1171.3" y="917" width="6.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1174.26" y="927.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (197,576,523 samples, 0.77%)</title><rect x="147.1" y="757" width="9.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="150.14" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (291,350,293 samples, 1.14%)</title><rect x="191.1" y="917" width="13.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="194.09" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (212,165,483 samples, 0.83%)</title><rect x="156.3" y="901" width="9.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,334,934 samples, 0.24%)</title><rect x="201.8" y="645" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="204.76" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (34,063,632 samples, 0.13%)</title><rect x="214.7" y="373" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.73" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (32,142,344 samples, 0.13%)</title><rect x="69.2" y="357" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.21" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="421" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="431.5" ></text>
</g>
<g >
<title>_int_malloc (68,348,513 samples, 0.27%)</title><rect x="1148.3" y="565" width="3.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1151.34" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,421,034 samples, 0.21%)</title><rect x="86.4" y="389" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="89.39" y="399.5" ></text>
</g>
<g >
<title>[[stack]] (339,764,528 samples, 1.33%)</title><rect x="14.0" y="1045" width="15.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="17.04" y="1055.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,919,975 samples, 0.13%)</title><rect x="128.5" y="597" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.54" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="213" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="223.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,744,075 samples, 0.13%)</title><rect x="180.2" y="453" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="183.23" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,529,649 samples, 0.13%)</title><rect x="251.1" y="933" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="254.10" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (102,069,331 samples, 0.40%)</title><rect x="100.1" y="373" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.14" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (34,104,445 samples, 0.13%)</title><rect x="695.3" y="469" width="1.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="698.30" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (84,707,870 samples, 0.33%)</title><rect x="192.7" y="325" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.66" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,092,377 samples, 0.24%)</title><rect x="234.1" y="933" width="2.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="237.05" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (46,324,964 samples, 0.18%)</title><rect x="48.6" y="549" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="559.5" ></text>
</g>
<g >
<title>__opendir (33,624,566 samples, 0.13%)</title><rect x="228.1" y="373" width="1.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="231.14" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (101,606,306 samples, 0.40%)</title><rect x="64.5" y="613" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.52" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,345 samples, 0.10%)</title><rect x="52.0" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="559.5" ></text>
</g>
<g >
<title>Dragon4.constprop.0 (56,584,638 samples, 0.22%)</title><rect x="138.2" y="293" width="2.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="141.21" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (32,142,344 samples, 0.13%)</title><rect x="69.2" y="421" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.21" y="431.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,214,177 samples, 0.10%)</title><rect x="172.8" y="469" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="175.85" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,842,997 samples, 0.12%)</title><rect x="108.5" y="581" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="111.49" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (33,951,168 samples, 0.13%)</title><rect x="54.8" y="693" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (33,979,109 samples, 0.13%)</title><rect x="1102.8" y="549" width="1.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1105.77" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (231,015,359 samples, 0.90%)</title><rect x="191.1" y="789" width="10.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="194.09" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,345 samples, 0.10%)</title><rect x="52.0" y="517" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="54.99" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (83,743,036 samples, 0.33%)</title><rect x="142.1" y="965" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.06" y="975.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (104,839,818 samples, 0.41%)</title><rect x="672.7" y="661" width="4.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="675.69" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (33,214,568 samples, 0.13%)</title><rect x="147.1" y="501" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="511.5" ></text>
</g>
<g >
<title>__pte_alloc (34,134,051 samples, 0.13%)</title><rect x="702.4" y="309" width="1.6" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="705.40" y="319.5" ></text>
</g>
<g >
<title>[np_datetime.cpython-312-x86_64-linux-gnu.so] (26,048,891 samples, 0.10%)</title><rect x="88.8" y="533" width="1.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="91.81" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,828,949 samples, 0.13%)</title><rect x="56.3" y="469" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.33" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,092,377 samples, 0.24%)</title><rect x="234.1" y="837" width="2.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="237.05" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (36,534,891 samples, 0.14%)</title><rect x="205.8" y="357" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="208.77" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (78,634,538 samples, 0.31%)</title><rect x="196.6" y="389" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.57" y="399.5" ></text>
</g>
<g >
<title>PyObject_Malloc (135,815,267 samples, 0.53%)</title><rect x="702.4" y="469" width="6.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="705.40" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,226,179 samples, 0.10%)</title><rect x="46.2" y="549" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="49.22" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,919,975 samples, 0.13%)</title><rect x="128.5" y="645" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="131.54" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,220,606 samples, 0.10%)</title><rect x="109.9" y="821" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="112.92" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (33,214,568 samples, 0.13%)</title><rect x="147.1" y="485" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,048,891 samples, 0.10%)</title><rect x="88.8" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.81" y="655.5" ></text>
</g>
<g >
<title>__GI_madvise (79,622,491 samples, 0.31%)</title><rect x="254.9" y="997" width="3.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="257.94" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,206 samples, 0.10%)</title><rect x="163.5" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.53" y="463.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,212,829 samples, 0.10%)</title><rect x="114.8" y="453" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="117.77" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="789" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (6,632,667,284 samples, 25.98%)</title><rect x="698.1" y="517" width="306.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="701.09" y="527.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,021,995 samples, 0.13%)</title><rect x="191.1" y="517" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="194.09" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,842,997 samples, 0.12%)</title><rect x="108.5" y="533" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="111.49" y="543.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::get_ptr_impl (33,700,461 samples, 0.13%)</title><rect x="1052.6" y="645" width="1.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1055.57" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,201,768 samples, 0.10%)</title><rect x="73.7" y="437" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="76.73" y="447.5" ></text>
</g>
<g >
<title>call_init (35,710,632 samples, 0.14%)</title><rect x="74.9" y="245" width="1.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="77.94" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,768 samples, 0.10%)</title><rect x="57.9" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="60.89" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (136,500,219 samples, 0.53%)</title><rect x="118.4" y="613" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.43" y="623.5" ></text>
</g>
<g >
<title>do_anonymous_page (408,406,458 samples, 1.60%)</title><rect x="959.6" y="357" width="18.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="962.56" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (60,334,934 samples, 0.24%)</title><rect x="201.8" y="693" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.76" y="703.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (373,812,790 samples, 1.46%)</title><rect x="787.5" y="485" width="17.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="790.51" y="495.5" ></text>
</g>
<g >
<title>do_user_addr_fault (68,237,184 samples, 0.27%)</title><rect x="121.6" y="245" width="3.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="124.59" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (59,947,595 samples, 0.23%)</title><rect x="179.0" y="485" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.02" y="495.5" ></text>
</g>
<g >
<title>PyTuple_Pack (33,128,933 samples, 0.13%)</title><rect x="148.7" y="405" width="1.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="151.67" y="415.5" ></text>
</g>
<g >
<title>llvm::MCJIT::finalizeObject (34,103,598 samples, 0.13%)</title><rect x="236.8" y="837" width="1.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="239.83" y="847.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (78,634,538 samples, 0.31%)</title><rect x="196.6" y="453" width="3.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="199.57" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,242,896 samples, 0.24%)</title><rect x="231.3" y="613" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="234.27" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (157,196,935 samples, 0.62%)</title><rect x="157.5" y="693" width="7.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="160.48" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (52,396,969 samples, 0.21%)</title><rect x="176.6" y="309" width="2.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="179.59" y="319.5" ></text>
</g>
<g >
<title>do_anonymous_page (33,128,933 samples, 0.13%)</title><rect x="148.7" y="277" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="151.67" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,971,420 samples, 0.13%)</title><rect x="77.8" y="805" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="80.80" y="815.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (46,324,964 samples, 0.18%)</title><rect x="48.6" y="277" width="2.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="51.64" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (26,048,891 samples, 0.10%)</title><rect x="88.8" y="725" width="1.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="91.81" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (102,069,331 samples, 0.40%)</title><rect x="100.1" y="405" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.14" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,125,270 samples, 0.13%)</title><rect x="203.0" y="405" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="205.97" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (93,844,012 samples, 0.37%)</title><rect x="166.1" y="693" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.08" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,390 samples, 0.10%)</title><rect x="174.1" y="453" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="177.06" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (62,731,863 samples, 0.25%)</title><rect x="134.1" y="453" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.10" y="463.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (133,536,178 samples, 0.52%)</title><rect x="1171.3" y="869" width="6.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1174.26" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (33,933,369 samples, 0.13%)</title><rect x="131.3" y="469" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.32" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,664 samples, 0.10%)</title><rect x="201.8" y="581" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="204.76" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (79,622,491 samples, 0.31%)</title><rect x="254.9" y="965" width="3.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="257.94" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (131,233,022 samples, 0.51%)</title><rect x="150.2" y="565" width="6.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="153.21" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,145,886 samples, 0.24%)</title><rect x="130.1" y="709" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="133.11" y="719.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~allocator (34,161,978 samples, 0.13%)</title><rect x="26.6" y="1029" width="1.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="29.61" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="325" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,491 samples, 0.10%)</title><rect x="156.3" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,006,267 samples, 0.13%)</title><rect x="1027.8" y="437" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1030.82" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,408,262 samples, 0.12%)</title><rect x="142.1" y="533" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.06" y="543.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (135,815,267 samples, 0.53%)</title><rect x="702.4" y="485" width="6.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="705.40" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (33,496,489 samples, 0.13%)</title><rect x="680.7" y="709" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="683.67" y="719.5" ></text>
</g>
<g >
<title>_dl_map_segments (26,181,436 samples, 0.10%)</title><rect x="188.7" y="437" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="191.67" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,887,809 samples, 0.13%)</title><rect x="234.1" y="501" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="237.05" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,807,835 samples, 0.31%)</title><rect x="111.1" y="661" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="114.13" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,021,995 samples, 0.13%)</title><rect x="191.1" y="325" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="335.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (33,436,054 samples, 0.13%)</title><rect x="1126.4" y="661" width="1.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1129.39" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (33,529,649 samples, 0.13%)</title><rect x="251.1" y="949" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="254.10" y="959.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,164,943 samples, 0.10%)</title><rect x="169.2" y="469" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="172.20" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,735,126 samples, 0.10%)</title><rect x="117.2" y="533" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="120.20" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (154,490,131 samples, 0.61%)</title><rect x="685.4" y="693" width="7.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="688.38" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (136,500,219 samples, 0.53%)</title><rect x="118.4" y="549" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (157,196,935 samples, 0.62%)</title><rect x="157.5" y="677" width="7.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="160.48" y="687.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,150,626 samples, 0.13%)</title><rect x="1077.7" y="517" width="1.6" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1080.68" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,641 samples, 0.10%)</title><rect x="157.5" y="597" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="160.48" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="597" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (52,598,225 samples, 0.21%)</title><rect x="112.3" y="389" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.34" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (52,740,293 samples, 0.21%)</title><rect x="170.4" y="357" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.41" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (131,233,022 samples, 0.51%)</title><rect x="150.2" y="597" width="6.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.21" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,624,566 samples, 0.13%)</title><rect x="228.1" y="405" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="231.14" y="415.5" ></text>
</g>
<g >
<title>PyNumber_Remainder (56,584,638 samples, 0.22%)</title><rect x="138.2" y="517" width="2.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="141.21" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,768 samples, 0.10%)</title><rect x="57.9" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="60.89" y="463.5" ></text>
</g>
<g >
<title>PyObject_GetItem (33,614,985 samples, 0.13%)</title><rect x="677.5" y="869" width="1.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="680.54" y="879.5" ></text>
</g>
<g >
<title>PyArray_CopyObject (33,759,822 samples, 0.13%)</title><rect x="53.2" y="837" width="1.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="56.20" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (101,775,938 samples, 0.40%)</title><rect x="79.3" y="501" width="4.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="82.28" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (54,033,009 samples, 0.21%)</title><rect x="96.4" y="421" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.43" y="431.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,157,326 samples, 0.13%)</title><rect x="1110.6" y="581" width="1.6" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1113.64" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,074,924 samples, 0.13%)</title><rect x="62.9" y="341" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="65.94" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="341" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (60,242,896 samples, 0.24%)</title><rect x="231.3" y="485" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.27" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (29,795,781 samples, 0.12%)</title><rect x="124.7" y="501" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.74" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,829 samples, 0.10%)</title><rect x="114.8" y="533" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="117.77" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,768 samples, 0.10%)</title><rect x="73.7" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.73" y="303.5" ></text>
</g>
<g >
<title>_PyModule_ClearDict (33,213,644 samples, 0.13%)</title><rect x="671.2" y="949" width="1.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="674.16" y="959.5" ></text>
</g>
<g >
<title>PyImport_Import (28,758,057 samples, 0.11%)</title><rect x="164.7" y="453" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="167.75" y="463.5" ></text>
</g>
<g >
<title>find_get_entry (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="693" width="5.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1167.01" y="703.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,972,956 samples, 0.13%)</title><rect x="222.6" y="469" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="225.55" y="479.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (32,972,956 samples, 0.13%)</title><rect x="222.6" y="149" width="1.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="225.55" y="159.5" ></text>
</g>
<g >
<title>_dl_map_object (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="917" width="5.8" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1167.01" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (93,844,012 samples, 0.37%)</title><rect x="166.1" y="837" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.08" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (34,006,267 samples, 0.13%)</title><rect x="1027.8" y="453" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1030.82" y="463.5" ></text>
</g>
<g >
<title>__sched_text_start (3,038,619 samples, 0.01%)</title><rect x="634.7" y="837" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="637.66" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="293" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,768 samples, 0.10%)</title><rect x="73.7" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.73" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,951,168 samples, 0.13%)</title><rect x="54.8" y="629" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="57.76" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (60,253,219 samples, 0.24%)</title><rect x="42.2" y="1045" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="45.22" y="1055.5" ></text>
</g>
<g >
<title>do_page_fault (68,237,848 samples, 0.27%)</title><rect x="702.4" y="405" width="3.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="705.40" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (32,972,956 samples, 0.13%)</title><rect x="222.6" y="277" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="225.55" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (197,576,523 samples, 0.77%)</title><rect x="147.1" y="837" width="9.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="150.14" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (104,530,263 samples, 0.41%)</title><rect x="84.0" y="613" width="4.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="86.98" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="373" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="373" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="383.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (409,742,006 samples, 1.60%)</title><rect x="147.1" y="1013" width="19.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="150.14" y="1023.5" ></text>
</g>
<g >
<title>llvm::cl::opt&lt;unsigned int, false, llvm::cl::parser&lt;unsigned int&gt; &gt;::~opt (33,715,088 samples, 0.13%)</title><rect x="1162.5" y="981" width="1.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1165.45" y="991.5" ></text>
</g>
<g >
<title>_dl_name_match_p (26,103,680 samples, 0.10%)</title><rect x="189.9" y="373" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="192.88" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,345 samples, 0.10%)</title><rect x="52.0" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (252,677,674 samples, 0.99%)</title><rect x="118.4" y="981" width="11.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.43" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (165,146,677 samples, 0.65%)</title><rect x="208.7" y="645" width="7.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="211.67" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (421,288,863 samples, 1.65%)</title><rect x="170.4" y="837" width="19.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="173.41" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (30,842,997 samples, 0.12%)</title><rect x="108.5" y="373" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.49" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,924 samples, 0.10%)</title><rect x="143.5" y="645" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="146.51" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (196,993,364 samples, 0.77%)</title><rect x="192.7" y="645" width="9.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.66" y="655.5" ></text>
</g>
<g >
<title>_Py_read (26,164,943 samples, 0.10%)</title><rect x="169.2" y="309" width="1.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="172.20" y="319.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (135,304,273 samples, 0.53%)</title><rect x="216.3" y="709" width="6.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="219.30" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,733 samples, 0.10%)</title><rect x="155.1" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.06" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,034 samples, 0.21%)</title><rect x="86.4" y="453" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.39" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,540 samples, 0.10%)</title><rect x="187.5" y="277" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="190.46" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="383.5" ></text>
</g>
<g >
<title>PyLong_FromLong (33,962,576 samples, 0.13%)</title><rect x="70.7" y="309" width="1.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="73.70" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (442,176,038 samples, 1.73%)</title><rect x="959.6" y="373" width="20.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="962.56" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,109,534 samples, 0.13%)</title><rect x="229.7" y="677" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="232.69" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,210,491 samples, 0.10%)</title><rect x="156.3" y="693" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="159.27" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (78,632,261 samples, 0.31%)</title><rect x="672.7" y="389" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,951,168 samples, 0.13%)</title><rect x="54.8" y="405" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.76" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (211,515,023 samples, 0.83%)</title><rect x="100.1" y="661" width="9.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="103.14" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,006,267 samples, 0.13%)</title><rect x="1027.8" y="405" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1030.82" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (197,576,523 samples, 0.77%)</title><rect x="147.1" y="885" width="9.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (52,540,248 samples, 0.21%)</title><rect x="151.4" y="421" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.43" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,103,680 samples, 0.10%)</title><rect x="189.9" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.88" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,242,896 samples, 0.24%)</title><rect x="231.3" y="533" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="234.27" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,038,619 samples, 0.01%)</title><rect x="634.7" y="933" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="637.66" y="943.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::add (34,103,598 samples, 0.13%)</title><rect x="236.8" y="709" width="1.6" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="239.83" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (33,806,834 samples, 0.13%)</title><rect x="224.1" y="325" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.08" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,212,641 samples, 0.10%)</title><rect x="157.5" y="581" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="160.48" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (79,622,491 samples, 0.31%)</title><rect x="254.9" y="981" width="3.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="257.94" y="991.5" ></text>
</g>
<g >
<title>do_sys_open (33,624,566 samples, 0.13%)</title><rect x="228.1" y="309" width="1.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="231.14" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,109,534 samples, 0.13%)</title><rect x="229.7" y="453" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="232.69" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,103,598 samples, 0.13%)</title><rect x="236.8" y="965" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="239.83" y="975.5" ></text>
</g>
<g >
<title>PyObject_CallFunctionObjArgs (56,584,638 samples, 0.22%)</title><rect x="138.2" y="469" width="2.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="141.21" y="479.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (6,596,197 samples, 0.03%)</title><rect x="634.7" y="981" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="637.66" y="991.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,206,402 samples, 0.10%)</title><rect x="45.0" y="501" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="48.00" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,814,087 samples, 0.13%)</title><rect x="79.3" y="437" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="82.28" y="447.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (26,048,891 samples, 0.10%)</title><rect x="88.8" y="757" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="91.81" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (28,758,057 samples, 0.11%)</title><rect x="164.7" y="293" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.75" y="303.5" ></text>
</g>
<g >
<title>alloc_pages_current (34,134,051 samples, 0.13%)</title><rect x="702.4" y="277" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="705.40" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (122,777,601 samples, 0.48%)</title><rect x="181.8" y="421" width="5.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.79" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (54,033,009 samples, 0.21%)</title><rect x="96.4" y="293" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.43" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,733 samples, 0.10%)</title><rect x="155.1" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.06" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,212,517 samples, 0.10%)</title><rect x="130.1" y="533" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="133.11" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (52,396,969 samples, 0.21%)</title><rect x="176.6" y="293" width="2.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="179.59" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (196,993,364 samples, 0.77%)</title><rect x="192.7" y="677" width="9.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.66" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,109,534 samples, 0.13%)</title><rect x="229.7" y="581" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="232.69" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="373" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,581 samples, 0.21%)</title><rect x="45.0" y="885" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="895.5" ></text>
</g>
<g >
<title>_PyObject_Call (67,961,851 samples, 0.27%)</title><rect x="80.8" y="405" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="83.84" y="415.5" ></text>
</g>
<g >
<title>PyObject_GetIter (34,074,924 samples, 0.13%)</title><rect x="62.9" y="325" width="1.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="65.94" y="335.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;IT_outputs, Nexullance_IT_interface, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (2,513,249,956 samples, 9.84%)</title><rect x="1046.3" y="805" width="116.2" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="1049.31" y="815.5" >pybind11::cpp_..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,294,663 samples, 0.10%)</title><rect x="98.9" y="757" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.93" y="767.5" ></text>
</g>
<g >
<title>ksys_read (26,164,943 samples, 0.10%)</title><rect x="169.2" y="213" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="172.20" y="223.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (10,597,843,828 samples, 41.51%)</title><rect x="672.7" y="901" width="489.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="675.69" y="911.5" >PyEval_EvalCode</text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="853" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,924 samples, 0.10%)</title><rect x="143.5" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="146.51" y="335.5" ></text>
</g>
<g >
<title>new_sync_read (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="773" width="5.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1167.01" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,145,886 samples, 0.24%)</title><rect x="130.1" y="677" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="133.11" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (104,774,088 samples, 0.41%)</title><rect x="158.7" y="645" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.69" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (31,408,262 samples, 0.12%)</title><rect x="142.1" y="325" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.06" y="335.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (57,618,186 samples, 0.23%)</title><rect x="142.1" y="901" width="2.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="145.06" y="911.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (101,280,148 samples, 0.40%)</title><rect x="1087.1" y="597" width="4.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1090.13" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (32,972,956 samples, 0.13%)</title><rect x="222.6" y="549" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (123,866,183 samples, 0.49%)</title><rect x="69.2" y="597" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.21" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,109,534 samples, 0.13%)</title><rect x="229.7" y="645" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="232.69" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,814,087 samples, 0.13%)</title><rect x="79.3" y="389" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.28" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,402 samples, 0.10%)</title><rect x="45.0" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,074,924 samples, 0.13%)</title><rect x="62.9" y="597" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="65.94" y="607.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (34,124,329 samples, 0.13%)</title><rect x="1160.9" y="661" width="1.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1163.88" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (33,806,834 samples, 0.13%)</title><rect x="224.1" y="453" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.08" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,078 samples, 0.10%)</title><rect x="207.5" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.46" y="447.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (56,584,638 samples, 0.22%)</title><rect x="138.2" y="949" width="2.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="141.21" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (104,839,818 samples, 0.41%)</title><rect x="672.7" y="821" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="831.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,919,975 samples, 0.13%)</title><rect x="128.5" y="821" width="1.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="131.54" y="831.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,212,829 samples, 0.10%)</title><rect x="114.8" y="549" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="117.77" y="559.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (230,822,662 samples, 0.90%)</title><rect x="1029.4" y="453" width="10.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1032.39" y="463.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,002,898 samples, 0.10%)</title><rect x="153.9" y="549" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="156.86" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (136,500,219 samples, 0.53%)</title><rect x="118.4" y="357" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="389" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (104,839,818 samples, 0.41%)</title><rect x="672.7" y="581" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,768 samples, 0.10%)</title><rect x="57.9" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="60.89" y="479.5" ></text>
</g>
<g >
<title>__GI___sbrk (67,577,419 samples, 0.26%)</title><rect x="705.6" y="389" width="3.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="708.56" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,164,943 samples, 0.10%)</title><rect x="169.2" y="437" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="172.20" y="447.5" ></text>
</g>
<g >
<title>__count_memcg_events (34,104,445 samples, 0.13%)</title><rect x="695.3" y="421" width="1.6" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="698.30" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (78,625,471 samples, 0.31%)</title><rect x="211.1" y="325" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.09" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (60,145,886 samples, 0.24%)</title><rect x="130.1" y="741" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,608,589 samples, 0.10%)</title><rect x="140.8" y="917" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="143.83" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,491 samples, 0.10%)</title><rect x="156.3" y="773" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="159.27" y="783.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (158,025,177 samples, 0.62%)</title><rect x="111.1" y="901" width="7.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="114.13" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (101,606,306 samples, 0.40%)</title><rect x="64.5" y="389" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.52" y="399.5" ></text>
</g>
<g >
<title>page_fault (34,104,445 samples, 0.13%)</title><rect x="695.3" y="501" width="1.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="698.30" y="511.5" ></text>
</g>
<g >
<title>vfs_statx (26,155,874 samples, 0.10%)</title><rect x="162.3" y="277" width="1.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="165.33" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,217,406 samples, 0.10%)</title><rect x="76.6" y="693" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="79.59" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,392,391 samples, 0.10%)</title><rect x="171.6" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="174.63" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (62,857,718 samples, 0.25%)</title><rect x="204.6" y="437" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.55" y="447.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,733 samples, 0.10%)</title><rect x="155.1" y="501" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="158.06" y="511.5" ></text>
</g>
<g >
<title>PyDict_SetItem (33,213,644 samples, 0.13%)</title><rect x="671.2" y="933" width="1.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="674.16" y="943.5" ></text>
</g>
<g >
<title>PyGC_Collect (136,115,151 samples, 0.53%)</title><rect x="637.0" y="965" width="6.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="639.98" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (46,324,964 samples, 0.18%)</title><rect x="48.6" y="309" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="319.5" ></text>
</g>
<g >
<title>_dlerror_run (26,181,436 samples, 0.10%)</title><rect x="188.7" y="581" width="1.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="191.67" y="591.5" ></text>
</g>
<g >
<title>get_page_from_freelist (306,392,118 samples, 1.20%)</title><rect x="962.7" y="309" width="14.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="965.71" y="319.5" ></text>
</g>
<g >
<title>generic_permission (26,155,874 samples, 0.10%)</title><rect x="162.3" y="181" width="1.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="165.33" y="191.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,048,891 samples, 0.10%)</title><rect x="88.8" y="325" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="91.81" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,103,680 samples, 0.10%)</title><rect x="189.9" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.88" y="639.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (56,584,638 samples, 0.22%)</title><rect x="138.2" y="805" width="2.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="141.21" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (80,246,495 samples, 0.31%)</title><rect x="95.2" y="885" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.22" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (80,246,495 samples, 0.31%)</title><rect x="95.2" y="789" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.22" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (175,295,990 samples, 0.69%)</title><rect x="130.1" y="901" width="8.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_emplace_unique&lt;std::pair&lt;std::pair&lt;int, int&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; (34,208,575 samples, 0.13%)</title><rect x="1046.3" y="693" width="1.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1049.31" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,540 samples, 0.10%)</title><rect x="187.5" y="485" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="190.46" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (34,021,995 samples, 0.13%)</title><rect x="191.1" y="613" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (84,707,870 samples, 0.33%)</title><rect x="192.7" y="485" width="3.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="195.66" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (369,729,287 samples, 1.45%)</title><rect x="654.1" y="901" width="17.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="657.07" y="911.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::dispatcher (2,513,249,956 samples, 9.84%)</title><rect x="1046.3" y="837" width="116.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1049.31" y="847.5" >pybind11::cpp_..</text>
</g>
<g >
<title>PyEval_EvalCode (104,839,818 samples, 0.41%)</title><rect x="672.7" y="725" width="4.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="675.69" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (131,233,022 samples, 0.51%)</title><rect x="150.2" y="677" width="6.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.21" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (101,606,306 samples, 0.40%)</title><rect x="64.5" y="517" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="67.52" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (67,679,069 samples, 0.27%)</title><rect x="166.1" y="517" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.08" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (66,343,501 samples, 0.26%)</title><rect x="147.1" y="629" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (30,842,997 samples, 0.12%)</title><rect x="108.5" y="357" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.49" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (35,710,632 samples, 0.14%)</title><rect x="74.9" y="533" width="1.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="77.94" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,814,087 samples, 0.13%)</title><rect x="79.3" y="453" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.28" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (65,522,071 samples, 0.26%)</title><rect x="70.7" y="437" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.70" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="325" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (421,288,863 samples, 1.65%)</title><rect x="170.4" y="805" width="19.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.41" y="815.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (33,811,030 samples, 0.13%)</title><rect x="1049.5" y="613" width="1.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1052.46" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="357" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (60,242,896 samples, 0.24%)</title><rect x="231.3" y="837" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.27" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~vector (68,010,134 samples, 0.27%)</title><rect x="1145.2" y="677" width="3.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1148.20" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (203,518,602 samples, 0.80%)</title><rect x="1132.7" y="661" width="9.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1135.65" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,482,216 samples, 0.21%)</title><rect x="114.8" y="597" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="117.77" y="607.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (34,125,270 samples, 0.13%)</title><rect x="203.0" y="309" width="1.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="205.97" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (33,624,566 samples, 0.13%)</title><rect x="228.1" y="645" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.14" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,829 samples, 0.10%)</title><rect x="114.8" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.77" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (104,774,088 samples, 0.41%)</title><rect x="158.7" y="565" width="4.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="161.69" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (165,146,677 samples, 0.65%)</title><rect x="208.7" y="549" width="7.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="211.67" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (7,460,114,942 samples, 29.22%)</title><rect x="695.3" y="629" width="344.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="698.30" y="639.5" >[python3.12]</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,457,574 samples, 0.21%)</title><rect x="208.7" y="453" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="211.67" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,478,143 samples, 0.10%)</title><rect x="150.2" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.21" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,021,995 samples, 0.13%)</title><rect x="191.1" y="597" width="1.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="194.09" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (115,150,104 samples, 0.45%)</title><rect x="132.9" y="805" width="5.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.89" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (197,576,523 samples, 0.77%)</title><rect x="147.1" y="981" width="9.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (34,021,995 samples, 0.13%)</title><rect x="191.1" y="293" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,478,143 samples, 0.10%)</title><rect x="150.2" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.21" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,624,566 samples, 0.13%)</title><rect x="228.1" y="501" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="231.14" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,117 samples, 0.10%)</title><rect x="132.9" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.89" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,390 samples, 0.10%)</title><rect x="174.1" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.06" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (128,226,604 samples, 0.50%)</title><rect x="686.6" y="677" width="5.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="689.59" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (31,971,420 samples, 0.13%)</title><rect x="77.8" y="565" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.80" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (109,274,440 samples, 0.43%)</title><rect x="57.9" y="581" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="60.89" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (212,165,483 samples, 0.83%)</title><rect x="156.3" y="869" width="9.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="159.27" y="879.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,345 samples, 0.10%)</title><rect x="52.0" y="613" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="54.99" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (78,632,261 samples, 0.31%)</title><rect x="672.7" y="405" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="415.5" ></text>
</g>
<g >
<title>security_capable (26,155,874 samples, 0.10%)</title><rect x="162.3" y="133" width="1.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="165.33" y="143.5" ></text>
</g>
<g >
<title>PyObject_Malloc (26,208,390 samples, 0.10%)</title><rect x="174.1" y="373" width="1.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="177.06" y="383.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,664 samples, 0.10%)</title><rect x="201.8" y="325" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="204.76" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (101,606,306 samples, 0.40%)</title><rect x="64.5" y="533" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="67.52" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,520 samples, 0.10%)</title><rect x="179.0" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.02" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (421,288,863 samples, 1.65%)</title><rect x="170.4" y="901" width="19.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="173.41" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (28,758,057 samples, 0.11%)</title><rect x="164.7" y="325" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.75" y="335.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (26,181,436 samples, 0.10%)</title><rect x="188.7" y="549" width="1.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="191.67" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (34,138,994 samples, 0.13%)</title><rect x="635.4" y="1045" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="638.40" y="1055.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,839,818 samples, 0.41%)</title><rect x="672.7" y="613" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="675.69" y="623.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,206 samples, 0.10%)</title><rect x="163.5" y="517" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="166.53" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (291,350,293 samples, 1.14%)</title><rect x="191.1" y="965" width="13.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="975.5" ></text>
</g>
<g >
<title>boost::range_detail::integer_iterator&lt;unsigned long&gt;::increment (33,965,025 samples, 0.13%)</title><rect x="1121.7" y="581" width="1.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1124.67" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,089 samples, 0.10%)</title><rect x="126.1" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.12" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,220,606 samples, 0.10%)</title><rect x="109.9" y="757" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="112.92" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (421,288,863 samples, 1.65%)</title><rect x="170.4" y="885" width="19.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.41" y="895.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (34,145,412 samples, 0.13%)</title><rect x="1120.1" y="597" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1123.09" y="607.5" ></text>
</g>
<g >
<title>__Pyx_Import.constprop.49 (28,758,057 samples, 0.11%)</title><rect x="164.7" y="661" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="167.75" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,092,377 samples, 0.24%)</title><rect x="234.1" y="901" width="2.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="237.05" y="911.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (175,295,990 samples, 0.69%)</title><rect x="130.1" y="997" width="8.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="133.11" y="1007.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="965" width="5.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1167.01" y="975.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,608,589 samples, 0.10%)</title><rect x="140.8" y="789" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.83" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,735,126 samples, 0.10%)</title><rect x="117.2" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.20" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (32,142,344 samples, 0.13%)</title><rect x="69.2" y="389" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.21" y="399.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (87,850,263 samples, 0.34%)</title><rect x="224.1" y="613" width="4.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="227.08" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (89,071,796 samples, 0.35%)</title><rect x="204.6" y="773" width="4.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="207.55" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,491 samples, 0.10%)</title><rect x="156.3" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,581 samples, 0.21%)</title><rect x="45.0" y="949" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="959.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (33,820,940 samples, 0.13%)</title><rect x="976.9" y="325" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="979.87" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (175,295,990 samples, 0.69%)</title><rect x="130.1" y="917" width="8.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="927.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,207,557 samples, 0.10%)</title><rect x="676.3" y="469" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="679.33" y="479.5" ></text>
</g>
<g >
<title>[anon] (270,086,344 samples, 1.06%)</title><rect x="29.7" y="1045" width="12.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="32.74" y="1055.5" ></text>
</g>
<g >
<title>__do_page_fault (26,201,768 samples, 0.10%)</title><rect x="73.7" y="245" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="76.73" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,103,680 samples, 0.10%)</title><rect x="189.9" y="853" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.88" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="351.5" ></text>
</g>
<g >
<title>PyRun_StringFlags (33,919,975 samples, 0.13%)</title><rect x="128.5" y="485" width="1.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="131.54" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (197,576,523 samples, 0.77%)</title><rect x="147.1" y="901" width="9.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,013 samples, 0.10%)</title><rect x="675.1" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="678.11" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (287,400,527 samples, 1.13%)</title><rect x="64.5" y="773" width="13.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.52" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,117 samples, 0.10%)</title><rect x="132.9" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="135.89" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (218,757,699 samples, 0.86%)</title><rect x="118.4" y="837" width="10.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,933,369 samples, 0.13%)</title><rect x="131.3" y="437" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.32" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,774,088 samples, 0.41%)</title><rect x="158.7" y="405" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="161.69" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (89,071,796 samples, 0.35%)</title><rect x="204.6" y="757" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.55" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,208,540 samples, 0.10%)</title><rect x="187.5" y="421" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="190.46" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3,184,120 samples, 0.01%)</title><rect x="1177.4" y="1013" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1180.43" y="1023.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (8,278,228 samples, 0.03%)</title><rect x="635.0" y="981" width="0.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="638.02" y="991.5" ></text>
</g>
<g >
<title>__sched_text_start (3,184,120 samples, 0.01%)</title><rect x="1177.4" y="933" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1180.43" y="943.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (54,033,009 samples, 0.21%)</title><rect x="96.4" y="389" width="2.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="99.43" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,529,649 samples, 0.13%)</title><rect x="251.1" y="885" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="254.10" y="895.5" ></text>
</g>
<g >
<title>_PyObject_Call (31,408,262 samples, 0.12%)</title><rect x="142.1" y="645" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="145.06" y="655.5" ></text>
</g>
<g >
<title>capable_wrt_inode_uidgid (26,155,874 samples, 0.10%)</title><rect x="162.3" y="165" width="1.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="165.33" y="175.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (93,844,012 samples, 0.37%)</title><rect x="166.1" y="917" width="4.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="169.08" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (121,474,829 samples, 0.48%)</title><rect x="224.1" y="677" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.08" y="687.5" ></text>
</g>
<g >
<title>PySlice_Unpack (26,214,177 samples, 0.10%)</title><rect x="172.8" y="277" width="1.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="175.85" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (203,253,848 samples, 0.80%)</title><rect x="1148.3" y="661" width="9.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1151.34" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,345 samples, 0.10%)</title><rect x="52.0" y="661" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (80,246,495 samples, 0.31%)</title><rect x="95.2" y="917" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.22" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,269,387 samples, 0.10%)</title><rect x="116.0" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.98" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (89,071,796 samples, 0.35%)</title><rect x="204.6" y="885" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.55" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,226,179 samples, 0.10%)</title><rect x="46.2" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.22" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (68,348,513 samples, 0.27%)</title><rect x="1148.3" y="613" width="3.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1151.34" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,951,168 samples, 0.13%)</title><rect x="54.8" y="437" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="57.76" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (212,165,483 samples, 0.83%)</title><rect x="156.3" y="981" width="9.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="159.27" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,402 samples, 0.10%)</title><rect x="45.0" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,345 samples, 0.10%)</title><rect x="52.0" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="463.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (143,103,389 samples, 0.56%)</title><rect x="56.3" y="597" width="6.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="59.33" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,828,949 samples, 0.13%)</title><rect x="56.3" y="549" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="59.33" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,034 samples, 0.21%)</title><rect x="86.4" y="357" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.39" y="367.5" ></text>
</g>
<g >
<title>schedule (3,184,120 samples, 0.01%)</title><rect x="1177.4" y="949" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1180.43" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (57,618,186 samples, 0.23%)</title><rect x="142.1" y="885" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.06" y="895.5" ></text>
</g>
<g >
<title>switch_fpu_return (2,167,065 samples, 0.01%)</title><rect x="635.3" y="965" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="638.30" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (636,708,189 samples, 2.49%)</title><rect x="643.3" y="965" width="29.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="646.27" y="975.5" >[p..</text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="229" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (29,795,781 samples, 0.12%)</title><rect x="124.7" y="405" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.74" y="415.5" ></text>
</g>
<g >
<title>unmap_page_range (133,536,178 samples, 0.52%)</title><rect x="1171.3" y="901" width="6.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1174.26" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,829 samples, 0.10%)</title><rect x="114.8" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.77" y="511.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pop (101,649,073 samples, 0.40%)</title><rect x="1068.2" y="597" width="4.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1071.24" y="607.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (31,971,420 samples, 0.13%)</title><rect x="77.8" y="437" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="80.80" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (109,274,440 samples, 0.43%)</title><rect x="57.9" y="565" width="5.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="60.89" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,735,126 samples, 0.10%)</title><rect x="117.2" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.20" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (182,725,196 samples, 0.72%)</title><rect x="179.0" y="533" width="8.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.02" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,733 samples, 0.10%)</title><rect x="155.1" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.06" y="319.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,185,343 samples, 0.13%)</title><rect x="1145.2" y="613" width="1.6" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1148.20" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,733 samples, 0.10%)</title><rect x="155.1" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.06" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (33,887,809 samples, 0.13%)</title><rect x="234.1" y="773" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="783.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~_Vector_base (33,824,791 samples, 0.13%)</title><rect x="1146.8" y="661" width="1.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1149.78" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,807,835 samples, 0.31%)</title><rect x="111.1" y="437" width="3.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="114.13" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (107,219,221 samples, 0.42%)</title><rect x="174.1" y="549" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.06" y="559.5" ></text>
</g>
<g >
<title>PyDict_DelItem (33,694,887 samples, 0.13%)</title><rect x="666.5" y="853" width="1.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="669.49" y="863.5" ></text>
</g>
<g >
<title>PyInit__umath_linalg (33,128,933 samples, 0.13%)</title><rect x="148.7" y="469" width="1.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="151.67" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (33,962,576 samples, 0.13%)</title><rect x="70.7" y="341" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.70" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,733 samples, 0.10%)</title><rect x="155.1" y="517" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="158.06" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (180,672,026 samples, 0.71%)</title><rect x="100.1" y="613" width="8.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.14" y="623.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (34,103,598 samples, 0.13%)</title><rect x="236.8" y="981" width="1.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="239.83" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (46,324,964 samples, 0.18%)</title><rect x="48.6" y="357" width="2.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="51.64" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,650 samples, 0.21%)</title><rect x="59.1" y="325" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.11" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (767,124,603 samples, 3.00%)</title><rect x="1004.6" y="549" width="35.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1007.60" y="559.5" >[py..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (115,150,104 samples, 0.45%)</title><rect x="132.9" y="821" width="5.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="135.89" y="831.5" ></text>
</g>
<g >
<title>_dl_open (35,710,632 samples, 0.14%)</title><rect x="74.9" y="341" width="1.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="77.94" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,089 samples, 0.10%)</title><rect x="126.1" y="309" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="129.12" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,269,387 samples, 0.10%)</title><rect x="116.0" y="469" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="118.98" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (165,146,677 samples, 0.65%)</title><rect x="208.7" y="533" width="7.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="211.67" y="543.5" ></text>
</g>
<g >
<title>_Py_read (32,972,956 samples, 0.13%)</title><rect x="222.6" y="341" width="1.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="225.55" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,530,263 samples, 0.41%)</title><rect x="84.0" y="597" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="86.98" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,252,610 samples, 0.10%)</title><rect x="127.3" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.33" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (115,150,104 samples, 0.45%)</title><rect x="132.9" y="725" width="5.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.89" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (733,237,885 samples, 2.87%)</title><rect x="1006.2" y="501" width="33.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1009.17" y="511.5" >_P..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (762,856,520 samples, 2.99%)</title><rect x="54.8" y="981" width="35.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="57.76" y="991.5" >_P..</text>
</g>
<g >
<title>do_user_addr_fault (3,557,578 samples, 0.01%)</title><rect x="634.8" y="901" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="637.80" y="911.5" ></text>
</g>
<g >
<title>rmqueue (33,128,933 samples, 0.13%)</title><rect x="148.7" y="213" width="1.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="151.67" y="223.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,201,768 samples, 0.10%)</title><rect x="73.7" y="533" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="76.73" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,735,126 samples, 0.10%)</title><rect x="117.2" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.20" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (197,576,523 samples, 0.77%)</title><rect x="147.1" y="821" width="9.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="150.14" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,951,168 samples, 0.13%)</title><rect x="54.8" y="597" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="57.76" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,205,287 samples, 0.10%)</title><rect x="181.8" y="325" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="184.79" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (158,025,177 samples, 0.62%)</title><rect x="111.1" y="981" width="7.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="114.13" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,268,571,513 samples, 4.97%)</title><rect x="145.9" y="1029" width="58.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="148.93" y="1039.5" >_PyEva..</text>
</g>
<g >
<title>[python3.12] (62,731,863 samples, 0.25%)</title><rect x="134.1" y="389" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.10" y="399.5" ></text>
</g>
<g >
<title>rmap_walk (3,557,578 samples, 0.01%)</title><rect x="634.8" y="789" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="637.80" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (66,709,822 samples, 0.26%)</title><rect x="1151.5" y="613" width="3.1" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1154.50" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (28,758,057 samples, 0.11%)</title><rect x="164.7" y="341" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="167.75" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,034 samples, 0.21%)</title><rect x="86.4" y="501" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.39" y="511.5" ></text>
</g>
<g >
<title>__GI___xstat (52,396,969 samples, 0.21%)</title><rect x="176.6" y="341" width="2.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="179.59" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,624,566 samples, 0.13%)</title><rect x="228.1" y="517" width="1.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="231.14" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (79,217,342 samples, 0.31%)</title><rect x="114.8" y="741" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.77" y="751.5" ></text>
</g>
<g >
<title>finish_task_switch (3,038,619 samples, 0.01%)</title><rect x="634.7" y="821" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="637.66" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (33,969,191 samples, 0.13%)</title><rect x="1079.3" y="533" width="1.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1082.26" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,887,809 samples, 0.13%)</title><rect x="234.1" y="741" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="237.05" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (89,071,796 samples, 0.35%)</title><rect x="204.6" y="805" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.55" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,048,891 samples, 0.10%)</title><rect x="88.8" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.81" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,529,649 samples, 0.13%)</title><rect x="251.1" y="869" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="254.10" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (104,839,818 samples, 0.41%)</title><rect x="672.7" y="645" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (89,071,796 samples, 0.35%)</title><rect x="204.6" y="581" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.55" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (89,071,796 samples, 0.35%)</title><rect x="204.6" y="901" width="4.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="207.55" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,971,420 samples, 0.13%)</title><rect x="77.8" y="629" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="80.80" y="639.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,206,402 samples, 0.10%)</title><rect x="45.0" y="469" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="48.00" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (185,954,992 samples, 0.73%)</title><rect x="157.5" y="725" width="8.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.48" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (72,532,213 samples, 0.28%)</title><rect x="48.6" y="709" width="3.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="51.64" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (78,634,538 samples, 0.31%)</title><rect x="196.6" y="437" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.57" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,109,534 samples, 0.13%)</title><rect x="229.7" y="741" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="232.69" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,294,663 samples, 0.10%)</title><rect x="98.9" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.93" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (72,532,213 samples, 0.28%)</title><rect x="48.6" y="757" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="51.64" y="767.5" ></text>
</g>
<g >
<title>do_user_addr_fault (26,181,436 samples, 0.10%)</title><rect x="188.7" y="357" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="191.67" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,807,835 samples, 0.31%)</title><rect x="111.1" y="501" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.13" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (27,821,923 samples, 0.11%)</title><rect x="225.6" y="485" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="228.64" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,540,248 samples, 0.21%)</title><rect x="151.4" y="453" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="154.43" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (60,242,896 samples, 0.24%)</title><rect x="231.3" y="661" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.27" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,829 samples, 0.10%)</title><rect x="114.8" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.77" y="399.5" ></text>
</g>
<g >
<title>finish_task_switch (8,477,613 samples, 0.03%)</title><rect x="254.5" y="997" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="257.52" y="1007.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,540,248 samples, 0.21%)</title><rect x="151.4" y="373" width="2.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="154.43" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,482,216 samples, 0.21%)</title><rect x="114.8" y="661" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="117.77" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (121,474,829 samples, 0.48%)</title><rect x="224.1" y="661" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.08" y="671.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_examine_edge&gt; (33,840,380 samples, 0.13%)</title><rect x="1096.5" y="597" width="1.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1099.50" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (101,775,938 samples, 0.40%)</title><rect x="79.3" y="709" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="82.28" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,733 samples, 0.10%)</title><rect x="155.1" y="453" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="158.06" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (93,844,012 samples, 0.37%)</title><rect x="166.1" y="885" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="169.08" y="895.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,214,078 samples, 0.10%)</title><rect x="207.5" y="453" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="210.46" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (66,343,501 samples, 0.26%)</title><rect x="147.1" y="709" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="150.14" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (33,828,949 samples, 0.13%)</title><rect x="56.3" y="437" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.33" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,919,975 samples, 0.13%)</title><rect x="128.5" y="581" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="131.54" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,226,179 samples, 0.10%)</title><rect x="46.2" y="437" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="49.22" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (62,731,863 samples, 0.25%)</title><rect x="134.1" y="469" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="137.10" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (33,806,834 samples, 0.13%)</title><rect x="224.1" y="341" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.08" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,021,995 samples, 0.13%)</title><rect x="191.1" y="565" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="194.09" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt; (34,072,251 samples, 0.13%)</title><rect x="1131.1" y="645" width="1.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1134.08" y="655.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (29,795,781 samples, 0.12%)</title><rect x="124.7" y="373" width="1.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="127.74" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,034 samples, 0.21%)</title><rect x="86.4" y="549" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.39" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,540 samples, 0.10%)</title><rect x="187.5" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.46" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,314 samples, 0.10%)</title><rect x="84.0" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.98" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,951,168 samples, 0.13%)</title><rect x="54.8" y="501" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="57.76" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,432,581 samples, 0.21%)</title><rect x="45.0" y="741" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.00" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (25,897,915 samples, 0.10%)</title><rect x="85.2" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.19" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (66,343,501 samples, 0.26%)</title><rect x="147.1" y="581" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="150.14" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="837" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="847.5" ></text>
</g>
<g >
<title>_PyAST_Compile (33,887,809 samples, 0.13%)</title><rect x="234.1" y="309" width="1.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="237.05" y="319.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (89,071,796 samples, 0.35%)</title><rect x="204.6" y="629" width="4.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="207.55" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (84,707,870 samples, 0.33%)</title><rect x="192.7" y="501" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.66" y="511.5" ></text>
</g>
<g >
<title>_PyObject_GC_NewVar (33,128,933 samples, 0.13%)</title><rect x="148.7" y="389" width="1.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="151.67" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,294,663 samples, 0.10%)</title><rect x="98.9" y="389" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.93" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,213,486 samples, 0.10%)</title><rect x="95.2" y="437" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.22" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,034 samples, 0.21%)</title><rect x="86.4" y="341" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.39" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,842,997 samples, 0.12%)</title><rect x="108.5" y="389" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="111.49" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (88,938,987 samples, 0.35%)</title><rect x="134.1" y="661" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.10" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,226,179 samples, 0.10%)</title><rect x="46.2" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.22" y="575.5" ></text>
</g>
<g >
<title>page_fault (3,557,578 samples, 0.01%)</title><rect x="634.8" y="949" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="637.80" y="959.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,919,975 samples, 0.13%)</title><rect x="128.5" y="741" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="131.54" y="751.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,624,566 samples, 0.13%)</title><rect x="228.1" y="453" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="231.14" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (7,911,938,383 samples, 30.99%)</title><rect x="680.7" y="821" width="365.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="683.67" y="831.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>_PyUnicodeWriter_PrepareInternal (33,964,610 samples, 0.13%)</title><rect x="252.6" y="1045" width="1.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="255.65" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;::_M_valptr (34,208,575 samples, 0.13%)</title><rect x="1046.3" y="645" width="1.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1049.31" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,540 samples, 0.10%)</title><rect x="187.5" y="389" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="190.46" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (34,063,632 samples, 0.13%)</title><rect x="214.7" y="293" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.73" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,210,491 samples, 0.10%)</title><rect x="156.3" y="821" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="159.27" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,625,471 samples, 0.31%)</title><rect x="211.1" y="309" width="3.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="214.09" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (62,857,718 samples, 0.25%)</title><rect x="204.6" y="373" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="207.55" y="383.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (6,596,197 samples, 0.03%)</title><rect x="634.7" y="965" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="637.66" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (34,102,323 samples, 0.13%)</title><rect x="82.4" y="357" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="85.41" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (1,183,607,155 samples, 4.64%)</title><rect x="91.2" y="1029" width="54.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="94.23" y="1039.5" >[pyth..</text>
</g>
<g >
<title>vfs_read (26,164,943 samples, 0.10%)</title><rect x="169.2" y="197" width="1.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="172.20" y="207.5" ></text>
</g>
<g >
<title>[python3.12] (33,806,834 samples, 0.13%)</title><rect x="224.1" y="405" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.08" y="415.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (62,731,863 samples, 0.25%)</title><rect x="134.1" y="501" width="2.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="137.10" y="511.5" ></text>
</g>
<g >
<title>rmqueue (34,102,323 samples, 0.13%)</title><rect x="82.4" y="149" width="1.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="85.41" y="159.5" ></text>
</g>
<g >
<title>PyType_GenericAlloc (46,324,964 samples, 0.18%)</title><rect x="48.6" y="293" width="2.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="51.64" y="303.5" ></text>
</g>
<g >
<title>handle_mm_fault (33,715,088 samples, 0.13%)</title><rect x="1162.5" y="901" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1165.45" y="911.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (59,971,167 samples, 0.23%)</title><rect x="52.0" y="885" width="2.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="54.99" y="895.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,211,314 samples, 0.10%)</title><rect x="84.0" y="581" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="86.98" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (54,033,009 samples, 0.21%)</title><rect x="96.4" y="261" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.43" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (59,971,167 samples, 0.23%)</title><rect x="52.0" y="917" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="927.5" ></text>
</g>
<g >
<title>_PyObject_Call (31,408,262 samples, 0.12%)</title><rect x="142.1" y="517" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="145.06" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (165,146,677 samples, 0.65%)</title><rect x="208.7" y="661" width="7.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="211.67" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::vector (33,830,735 samples, 0.13%)</title><rect x="1143.6" y="677" width="1.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1146.64" y="687.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (29,795,781 samples, 0.12%)</title><rect x="124.7" y="421" width="1.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="127.74" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (104,774,088 samples, 0.41%)</title><rect x="158.7" y="373" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.69" y="383.5" ></text>
</g>
<g >
<title>remove_migration_pte (3,557,578 samples, 0.01%)</title><rect x="634.8" y="757" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="637.80" y="767.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (133,536,178 samples, 0.52%)</title><rect x="1171.3" y="853" width="6.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1174.26" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (33,806,834 samples, 0.13%)</title><rect x="224.1" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.08" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,768 samples, 0.10%)</title><rect x="57.9" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="60.89" y="431.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (34,134,051 samples, 0.13%)</title><rect x="702.4" y="261" width="1.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="705.40" y="271.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,221,506 samples, 0.10%)</title><rect x="226.9" y="373" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="229.92" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (52,482,216 samples, 0.21%)</title><rect x="114.8" y="645" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.77" y="655.5" ></text>
</g>
<g >
<title>PyObject_GetItem (30,842,997 samples, 0.12%)</title><rect x="108.5" y="565" width="1.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="111.49" y="575.5" ></text>
</g>
<g >
<title>PyObject_GC_UnTrack (33,213,644 samples, 0.13%)</title><rect x="671.2" y="869" width="1.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="674.16" y="879.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (72,532,213 samples, 0.28%)</title><rect x="48.6" y="773" width="3.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="51.64" y="783.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (60,242,896 samples, 0.24%)</title><rect x="231.3" y="421" width="2.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="234.27" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,206 samples, 0.10%)</title><rect x="163.5" y="581" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="166.53" y="591.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (33,529,649 samples, 0.13%)</title><rect x="251.1" y="901" width="1.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="254.10" y="911.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (82,257,480 samples, 0.32%)</title><rect x="124.7" y="613" width="3.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="127.74" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="805" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (101,775,938 samples, 0.40%)</title><rect x="79.3" y="581" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="82.28" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (56,584,638 samples, 0.22%)</title><rect x="138.2" y="565" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.21" y="575.5" ></text>
</g>
<g >
<title>BOOL_equal (33,866,376 samples, 0.13%)</title><rect x="242.8" y="981" width="1.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="245.76" y="991.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (32,972,956 samples, 0.13%)</title><rect x="222.6" y="117" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="225.55" y="127.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (158,025,177 samples, 0.62%)</title><rect x="111.1" y="965" width="7.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.13" y="975.5" ></text>
</g>
<g >
<title>[timedeltas.cpython-312-x86_64-linux-gnu.so] (26,103,680 samples, 0.10%)</title><rect x="189.9" y="709" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="192.88" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,209,610 samples, 0.10%)</title><rect x="111.1" y="373" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="114.13" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (34,147,781 samples, 0.13%)</title><rect x="1076.1" y="565" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1079.10" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (101,606,306 samples, 0.40%)</title><rect x="64.5" y="501" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="67.52" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (291,350,293 samples, 1.14%)</title><rect x="191.1" y="869" width="13.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (34,006,267 samples, 0.13%)</title><rect x="1027.8" y="469" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1030.82" y="479.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (32,972,956 samples, 0.13%)</title><rect x="222.6" y="181" width="1.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="225.55" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt; (33,965,025 samples, 0.13%)</title><rect x="1121.7" y="597" width="1.5" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="1124.67" y="607.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (115,150,104 samples, 0.45%)</title><rect x="132.9" y="709" width="5.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="135.89" y="719.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,482,216 samples, 0.21%)</title><rect x="114.8" y="693" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="117.77" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (135,304,273 samples, 0.53%)</title><rect x="216.3" y="613" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.30" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,109,534 samples, 0.13%)</title><rect x="229.7" y="901" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="232.69" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,664 samples, 0.10%)</title><rect x="201.8" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.76" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (56,584,638 samples, 0.22%)</title><rect x="138.2" y="421" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.21" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,109,534 samples, 0.13%)</title><rect x="229.7" y="597" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="232.69" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,624,566 samples, 0.13%)</title><rect x="228.1" y="629" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="231.14" y="639.5" ></text>
</g>
<g >
<title>PyObject_GC_Del (33,496,489 samples, 0.13%)</title><rect x="680.7" y="581" width="1.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="683.67" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,269,387 samples, 0.10%)</title><rect x="116.0" y="405" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.98" y="415.5" ></text>
</g>
<g >
<title>PyRun_StringFlags (26,220,606 samples, 0.10%)</title><rect x="109.9" y="421" width="1.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="112.92" y="431.5" ></text>
</g>
<g >
<title>PyStructSequence_New (52,420,248 samples, 0.21%)</title><rect x="672.7" y="373" width="2.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="675.69" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (67,961,851 samples, 0.27%)</title><rect x="80.8" y="453" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.84" y="463.5" ></text>
</g>
<g >
<title>Py_BytesMain (11,370,667,168 samples, 44.53%)</title><rect x="637.0" y="1013" width="525.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="639.98" y="1023.5" >Py_BytesMain</text>
</g>
<g >
<title>do_filp_open (26,211,314 samples, 0.10%)</title><rect x="84.0" y="229" width="1.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="86.98" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (136,500,219 samples, 0.53%)</title><rect x="118.4" y="565" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="575.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,209,924 samples, 0.10%)</title><rect x="143.5" y="549" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="146.51" y="559.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::finish_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (34,182,075 samples, 0.13%)</title><rect x="1066.7" y="597" width="1.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1069.66" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (180,672,026 samples, 0.71%)</title><rect x="100.1" y="517" width="8.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.14" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (65,522,071 samples, 0.26%)</title><rect x="70.7" y="421" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.70" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (84,707,870 samples, 0.33%)</title><rect x="192.7" y="389" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.66" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,408,262 samples, 0.12%)</title><rect x="142.1" y="405" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.06" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,768 samples, 0.10%)</title><rect x="73.7" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.73" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,924 samples, 0.10%)</title><rect x="143.5" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="146.51" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,213,486 samples, 0.10%)</title><rect x="95.2" y="421" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.22" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (34,038,864 samples, 0.13%)</title><rect x="232.5" y="309" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="235.48" y="319.5" ></text>
</g>
<g >
<title>PyDescr_NewWrapper (84,707,870 samples, 0.33%)</title><rect x="192.7" y="341" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.66" y="351.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,211,117 samples, 0.10%)</title><rect x="132.9" y="389" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="135.89" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (287,400,527 samples, 1.13%)</title><rect x="64.5" y="869" width="13.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.52" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,540 samples, 0.10%)</title><rect x="187.5" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.46" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,006,267 samples, 0.13%)</title><rect x="1027.8" y="421" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1030.82" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,744,075 samples, 0.13%)</title><rect x="180.2" y="373" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.23" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,402 samples, 0.10%)</title><rect x="45.0" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="351.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (212,165,483 samples, 0.83%)</title><rect x="156.3" y="837" width="9.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="159.27" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,226,179 samples, 0.10%)</title><rect x="46.2" y="405" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="49.22" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,242,896 samples, 0.24%)</title><rect x="231.3" y="741" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="234.27" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (196,993,364 samples, 0.77%)</title><rect x="192.7" y="549" width="9.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="195.66" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (84,707,870 samples, 0.33%)</title><rect x="192.7" y="421" width="3.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="195.66" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,214,568 samples, 0.13%)</title><rect x="147.1" y="421" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (66,343,501 samples, 0.26%)</title><rect x="147.1" y="613" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (30,643,022 samples, 0.12%)</title><rect x="61.5" y="325" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.53" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (72,532,213 samples, 0.28%)</title><rect x="48.6" y="693" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,568 samples, 0.10%)</title><rect x="235.6" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="238.62" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,242,896 samples, 0.24%)</title><rect x="231.3" y="565" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="234.27" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,201,768 samples, 0.10%)</title><rect x="73.7" y="389" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="76.73" y="399.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (34,045,210 samples, 0.13%)</title><rect x="241.2" y="1029" width="1.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="244.18" y="1039.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,919,975 samples, 0.13%)</title><rect x="128.5" y="789" width="1.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="131.54" y="799.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (57,618,186 samples, 0.23%)</title><rect x="142.1" y="757" width="2.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="145.06" y="767.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_front (34,072,251 samples, 0.13%)</title><rect x="1131.1" y="661" width="1.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1134.08" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,314 samples, 0.10%)</title><rect x="84.0" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.98" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (80,246,495 samples, 0.31%)</title><rect x="95.2" y="821" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.22" y="831.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (26,103,680 samples, 0.10%)</title><rect x="189.9" y="933" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="192.88" y="943.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (67,961,851 samples, 0.27%)</title><rect x="80.8" y="469" width="3.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="83.84" y="479.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,252,610 samples, 0.10%)</title><rect x="127.3" y="341" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="130.33" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (165,146,677 samples, 0.65%)</title><rect x="208.7" y="725" width="7.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="211.67" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (31,971,420 samples, 0.13%)</title><rect x="77.8" y="405" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="80.80" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,271 samples, 0.10%)</title><rect x="221.3" y="277" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="224.34" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,624,566 samples, 0.13%)</title><rect x="228.1" y="421" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="231.14" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,226,179 samples, 0.10%)</title><rect x="46.2" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.22" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (78,807,835 samples, 0.31%)</title><rect x="111.1" y="773" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.13" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (93,844,012 samples, 0.37%)</title><rect x="166.1" y="757" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="169.08" y="767.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (33,901,063 samples, 0.13%)</title><rect x="25.0" y="1029" width="1.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="28.04" y="1039.5" ></text>
</g>
<g >
<title>PyUFunc_FromFuncAndDataAndSignature (33,128,933 samples, 0.13%)</title><rect x="148.7" y="453" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="151.67" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="453" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,181,436 samples, 0.10%)</title><rect x="188.7" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="191.67" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (762,856,520 samples, 2.99%)</title><rect x="54.8" y="933" width="35.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="943.5" >[p..</text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (33,811,030 samples, 0.13%)</title><rect x="1049.5" y="597" width="1.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1052.46" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,089 samples, 0.10%)</title><rect x="126.1" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="129.12" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (291,350,293 samples, 1.14%)</title><rect x="191.1" y="885" width="13.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="194.09" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,919,975 samples, 0.13%)</title><rect x="128.5" y="517" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.54" y="527.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (46,324,964 samples, 0.18%)</title><rect x="48.6" y="501" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="51.64" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,145,886 samples, 0.24%)</title><rect x="130.1" y="645" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="133.11" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,482,216 samples, 0.21%)</title><rect x="114.8" y="613" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="117.77" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,402 samples, 0.10%)</title><rect x="45.0" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (60,334,934 samples, 0.24%)</title><rect x="201.8" y="789" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.76" y="799.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (291,350,293 samples, 1.14%)</title><rect x="191.1" y="949" width="13.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="194.09" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (34,063,632 samples, 0.13%)</title><rect x="214.7" y="421" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.73" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,209,924 samples, 0.10%)</title><rect x="143.5" y="693" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="146.51" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (80,246,495 samples, 0.31%)</title><rect x="95.2" y="613" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.22" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (287,400,527 samples, 1.13%)</title><rect x="64.5" y="805" width="13.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="67.52" y="815.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,624,566 samples, 0.13%)</title><rect x="228.1" y="485" width="1.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="231.14" y="495.5" ></text>
</g>
<g >
<title>PyDict_GetItemWithError (33,999,516 samples, 0.13%)</title><rect x="167.6" y="357" width="1.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="170.63" y="367.5" ></text>
</g>
<g >
<title>perf_output_begin (33,803,067 samples, 0.13%)</title><rect x="707.1" y="213" width="1.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="710.12" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,177 samples, 0.10%)</title><rect x="172.8" y="341" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.85" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (72,532,213 samples, 0.28%)</title><rect x="48.6" y="581" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="51.64" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,740,293 samples, 0.21%)</title><rect x="170.4" y="405" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="173.41" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (109,094,002 samples, 0.43%)</title><rect x="216.3" y="357" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.30" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (80,246,495 samples, 0.31%)</title><rect x="95.2" y="597" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.22" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,164,943 samples, 0.10%)</title><rect x="169.2" y="565" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="172.20" y="575.5" ></text>
</g>
<g >
<title>Py_RunMain (11,370,667,168 samples, 44.53%)</title><rect x="637.0" y="997" width="525.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="639.98" y="1007.5" >Py_RunMain</text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="485" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (342,334,393 samples, 1.34%)</title><rect x="174.1" y="661" width="15.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="177.06" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (67,973,315 samples, 0.27%)</title><rect x="1157.7" y="629" width="3.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1160.74" y="639.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (133,536,178 samples, 0.52%)</title><rect x="1171.3" y="885" width="6.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1174.26" y="895.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (264,030,292 samples, 1.03%)</title><rect x="98.9" y="917" width="12.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.93" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (28,758,057 samples, 0.11%)</title><rect x="164.7" y="597" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.75" y="607.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3,557,578 samples, 0.01%)</title><rect x="634.8" y="869" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="637.80" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (146,205,735 samples, 0.57%)</title><rect x="245.9" y="1029" width="6.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="248.89" y="1039.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (206,306,201 samples, 0.81%)</title><rect x="79.3" y="773" width="9.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.28" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (34,063,632 samples, 0.13%)</title><rect x="214.7" y="357" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.73" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,735,126 samples, 0.10%)</title><rect x="117.2" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.20" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (10,597,843,828 samples, 41.51%)</title><rect x="672.7" y="917" width="489.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="927.5" >[python3.12]</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,294,663 samples, 0.10%)</title><rect x="98.9" y="741" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.93" y="751.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,103,680 samples, 0.10%)</title><rect x="189.9" y="645" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="192.88" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (104,774,088 samples, 0.41%)</title><rect x="158.7" y="549" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.69" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="757" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="767.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,002,898 samples, 0.10%)</title><rect x="153.9" y="421" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="156.86" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (225,472,489 samples, 0.88%)</title><rect x="64.5" y="709" width="10.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="67.52" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (232,355,092 samples, 0.91%)</title><rect x="79.3" y="869" width="10.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="82.28" y="879.5" ></text>
</g>
<g >
<title>__GI_exit (33,715,088 samples, 0.13%)</title><rect x="1162.5" y="1013" width="1.5" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1165.45" y="1023.5" ></text>
</g>
<g >
<title>[python3.12] (7,911,938,383 samples, 30.99%)</title><rect x="680.7" y="837" width="365.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="683.67" y="847.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,217,406 samples, 0.10%)</title><rect x="76.6" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.59" y="575.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (33,882,511 samples, 0.13%)</title><rect x="803.2" y="325" width="1.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="806.21" y="335.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (89,071,796 samples, 0.35%)</title><rect x="204.6" y="661" width="4.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="207.55" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;::_M_addr (34,208,575 samples, 0.13%)</title><rect x="1046.3" y="613" width="1.6" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1049.31" y="623.5" ></text>
</g>
<g >
<title>do_user_addr_fault (27,821,923 samples, 0.11%)</title><rect x="225.6" y="309" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="228.64" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,491 samples, 0.10%)</title><rect x="156.3" y="741" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (101,606,306 samples, 0.40%)</title><rect x="64.5" y="437" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="67.52" y="447.5" ></text>
</g>
<g >
<title>find_vma (27,821,923 samples, 0.11%)</title><rect x="225.6" y="293" width="1.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="228.64" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,828,949 samples, 0.13%)</title><rect x="56.3" y="405" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="59.33" y="415.5" ></text>
</g>
<g >
<title>__do_sys_madvise (79,622,491 samples, 0.31%)</title><rect x="254.9" y="933" width="3.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="257.94" y="943.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,226,179 samples, 0.10%)</title><rect x="46.2" y="661" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="49.22" y="671.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (26,181,436 samples, 0.10%)</title><rect x="188.7" y="501" width="1.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="191.67" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,078 samples, 0.10%)</title><rect x="207.5" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.46" y="383.5" ></text>
</g>
<g >
<title>__GI___xstat (26,155,874 samples, 0.10%)</title><rect x="162.3" y="357" width="1.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="165.33" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,205,287 samples, 0.10%)</title><rect x="181.8" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.79" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (52,412,226 samples, 0.21%)</title><rect x="159.9" y="325" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="162.90" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,650 samples, 0.21%)</title><rect x="59.1" y="405" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.11" y="415.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,204,568 samples, 0.10%)</title><rect x="235.6" y="757" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="238.62" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (93,844,012 samples, 0.37%)</title><rect x="166.1" y="853" width="4.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="169.08" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (78,625,471 samples, 0.31%)</title><rect x="211.1" y="437" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.09" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (7,911,938,383 samples, 30.99%)</title><rect x="680.7" y="789" width="365.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="683.67" y="799.5" >[python3.12]</text>
</g>
<g >
<title>PyObject_Malloc (27,821,923 samples, 0.11%)</title><rect x="225.6" y="373" width="1.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="228.64" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (197,576,523 samples, 0.77%)</title><rect x="147.1" y="965" width="9.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="150.14" y="975.5" ></text>
</g>
<g >
<title>PyObject_CallFunctionObjArgs (26,608,589 samples, 0.10%)</title><rect x="140.8" y="357" width="1.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="143.83" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,294,663 samples, 0.10%)</title><rect x="98.9" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.93" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (177,178,313 samples, 0.69%)</title><rect x="56.3" y="789" width="8.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.33" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (232,355,092 samples, 0.91%)</title><rect x="79.3" y="885" width="10.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.28" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (158,025,177 samples, 0.62%)</title><rect x="111.1" y="917" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.13" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (300,450,950 samples, 1.18%)</title><rect x="208.7" y="901" width="13.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="211.67" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,089 samples, 0.10%)</title><rect x="126.1" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.12" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (33,214,568 samples, 0.13%)</title><rect x="147.1" y="517" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (158,025,177 samples, 0.62%)</title><rect x="111.1" y="949" width="7.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="114.13" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,491 samples, 0.10%)</title><rect x="156.3" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,345 samples, 0.10%)</title><rect x="52.0" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (180,672,026 samples, 0.71%)</title><rect x="100.1" y="533" width="8.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.14" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,735,126 samples, 0.10%)</title><rect x="117.2" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="120.20" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,226,179 samples, 0.10%)</title><rect x="46.2" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.22" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (68,237,848 samples, 0.27%)</title><rect x="702.4" y="373" width="3.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="705.40" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,540 samples, 0.10%)</title><rect x="187.5" y="469" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="190.46" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="549" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="559.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (34,139,981 samples, 0.13%)</title><rect x="688.2" y="645" width="1.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="691.17" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (32,972,956 samples, 0.13%)</title><rect x="222.6" y="357" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="367.5" ></text>
</g>
<g >
<title>page_fault (68,237,184 samples, 0.27%)</title><rect x="121.6" y="293" width="3.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="124.59" y="303.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (78,807,835 samples, 0.31%)</title><rect x="111.1" y="581" width="3.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="114.13" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (56,584,638 samples, 0.22%)</title><rect x="138.2" y="789" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.21" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (135,304,273 samples, 0.53%)</title><rect x="216.3" y="517" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.30" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="629" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,491 samples, 0.10%)</title><rect x="156.3" y="565" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="159.27" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (78,954,470 samples, 0.31%)</title><rect x="170.4" y="517" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.41" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,221,506 samples, 0.10%)</title><rect x="226.9" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="229.92" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (54,043,429 samples, 0.21%)</title><rect x="225.6" y="565" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="228.64" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,206 samples, 0.10%)</title><rect x="163.5" y="597" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="166.53" y="607.5" ></text>
</g>
<g >
<title>__do_page_fault (542,678,834 samples, 2.13%)</title><rect x="954.9" y="421" width="25.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="957.91" y="431.5" >_..</text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,924 samples, 0.10%)</title><rect x="143.5" y="485" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="146.51" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,206 samples, 0.10%)</title><rect x="163.5" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.53" y="399.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (67,935,278 samples, 0.27%)</title><rect x="1112.2" y="565" width="3.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1115.22" y="575.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,021,995 samples, 0.13%)</title><rect x="191.1" y="421" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="194.09" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (72,532,213 samples, 0.28%)</title><rect x="48.6" y="677" width="3.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="51.64" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (33,951,168 samples, 0.13%)</title><rect x="54.8" y="341" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (104,774,088 samples, 0.41%)</title><rect x="158.7" y="421" width="4.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="161.69" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (29,795,781 samples, 0.12%)</title><rect x="124.7" y="453" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.74" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,242,896 samples, 0.24%)</title><rect x="231.3" y="805" width="2.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="234.27" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (78,807,835 samples, 0.31%)</title><rect x="111.1" y="741" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.13" y="751.5" ></text>
</g>
<g >
<title>ufunc_generic_fastcall (67,797,907 samples, 0.27%)</title><rect x="242.8" y="1029" width="3.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="245.76" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,034 samples, 0.21%)</title><rect x="86.4" y="405" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.39" y="415.5" ></text>
</g>
<g >
<title>__dlopen (26,181,436 samples, 0.10%)</title><rect x="188.7" y="597" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="191.67" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (46,324,964 samples, 0.18%)</title><rect x="48.6" y="533" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="51.64" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (33,624,566 samples, 0.13%)</title><rect x="228.1" y="533" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.14" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33,962,576 samples, 0.13%)</title><rect x="70.7" y="229" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="73.70" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (33,887,809 samples, 0.13%)</title><rect x="234.1" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="495.5" ></text>
</g>
<g >
<title>memcpy_erms (33,962,576 samples, 0.13%)</title><rect x="70.7" y="37" width="1.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="73.70" y="47.5" ></text>
</g>
<g >
<title>page_fault (26,181,436 samples, 0.10%)</title><rect x="188.7" y="405" width="1.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="191.67" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (33,830,735 samples, 0.13%)</title><rect x="1143.6" y="629" width="1.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1146.64" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,211,345 samples, 0.10%)</title><rect x="52.0" y="501" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="54.99" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,117 samples, 0.10%)</title><rect x="132.9" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.89" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (78,602,695 samples, 0.31%)</title><rect x="104.9" y="421" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="107.86" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (218,757,699 samples, 0.86%)</title><rect x="118.4" y="677" width="10.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="121.43" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (32,972,956 samples, 0.13%)</title><rect x="222.6" y="661" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,217,406 samples, 0.10%)</title><rect x="76.6" y="613" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="79.59" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (342,334,393 samples, 1.34%)</title><rect x="174.1" y="725" width="15.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="177.06" y="735.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,210,206 samples, 0.10%)</title><rect x="163.5" y="325" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="166.53" y="335.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (104,774,088 samples, 0.41%)</title><rect x="158.7" y="629" width="4.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="161.69" y="639.5" ></text>
</g>
<g >
<title>perf_iterate_sb (67,577,419 samples, 0.26%)</title><rect x="705.6" y="261" width="3.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="708.56" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,496,489 samples, 0.13%)</title><rect x="680.7" y="597" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="683.67" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (101,606,306 samples, 0.40%)</title><rect x="64.5" y="405" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.52" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (89,071,796 samples, 0.35%)</title><rect x="204.6" y="597" width="4.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="207.55" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (543,970,531 samples, 2.13%)</title><rect x="204.6" y="997" width="25.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="207.55" y="1007.5" >_..</text>
</g>
<g >
<title>[python3.12] (26,375,403 samples, 0.10%)</title><rect x="112.3" y="309" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.34" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,103,680 samples, 0.10%)</title><rect x="189.9" y="885" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.88" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (35,710,632 samples, 0.14%)</title><rect x="74.9" y="485" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="77.94" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="213" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="223.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,425,899 samples, 0.21%)</title><rect x="197.8" y="357" width="2.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="200.79" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (34,134,814 samples, 0.13%)</title><rect x="1142.1" y="661" width="1.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1145.06" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (101,775,938 samples, 0.40%)</title><rect x="79.3" y="597" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.28" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,192,495 samples, 0.10%)</title><rect x="107.3" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.28" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (46,324,964 samples, 0.18%)</title><rect x="48.6" y="389" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (34,102,323 samples, 0.13%)</title><rect x="82.4" y="325" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="85.41" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,206,402 samples, 0.10%)</title><rect x="45.0" y="581" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="48.00" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (109,274,440 samples, 0.43%)</title><rect x="57.9" y="517" width="5.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="60.89" y="527.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (67,800,509 samples, 0.27%)</title><rect x="801.6" y="341" width="3.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="804.65" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (54,033,009 samples, 0.21%)</title><rect x="96.4" y="357" width="2.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="99.43" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,269,387 samples, 0.10%)</title><rect x="116.0" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.98" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,887,809 samples, 0.13%)</title><rect x="234.1" y="581" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="237.05" y="591.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,213,486 samples, 0.10%)</title><rect x="95.2" y="453" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="98.22" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="501" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (96,572,314 samples, 0.38%)</title><rect x="183.0" y="325" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.00" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (832,586,848 samples, 3.26%)</title><rect x="166.1" y="1013" width="38.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="169.08" y="1023.5" >_Py..</text>
</g>
<g >
<title>smp_call_function_interrupt (3,557,578 samples, 0.01%)</title><rect x="634.8" y="693" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="637.80" y="703.5" ></text>
</g>
<g >
<title>release_pages (133,536,178 samples, 0.52%)</title><rect x="1171.3" y="837" width="6.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1174.26" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (26,103,680 samples, 0.10%)</title><rect x="189.9" y="869" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.88" y="879.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,074,924 samples, 0.13%)</title><rect x="62.9" y="405" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="65.94" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (762,856,520 samples, 2.99%)</title><rect x="54.8" y="1029" width="35.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="57.76" y="1039.5" >Py..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,252,610 samples, 0.10%)</title><rect x="127.3" y="421" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="130.33" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (33,617,398 samples, 0.13%)</title><rect x="1134.2" y="613" width="1.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1137.21" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,664 samples, 0.10%)</title><rect x="201.8" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.76" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,125,270 samples, 0.13%)</title><rect x="203.0" y="325" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="205.97" y="335.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,242,896 samples, 0.24%)</title><rect x="231.3" y="453" width="2.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="234.27" y="463.5" ></text>
</g>
<g >
<title>pagecache_get_page (26,164,943 samples, 0.10%)</title><rect x="169.2" y="101" width="1.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="172.20" y="111.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,206,402 samples, 0.10%)</title><rect x="45.0" y="405" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="48.00" y="415.5" ></text>
</g>
<g >
<title>handle_mm_fault (3,557,578 samples, 0.01%)</title><rect x="634.8" y="885" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="637.80" y="895.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,410,200 samples, 0.21%)</title><rect x="104.9" y="341" width="2.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="107.86" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,924 samples, 0.10%)</title><rect x="143.5" y="405" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="146.51" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,735,126 samples, 0.10%)</title><rect x="117.2" y="661" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="120.20" y="671.5" ></text>
</g>
<g >
<title>__run_exit_handlers (33,715,088 samples, 0.13%)</title><rect x="1162.5" y="997" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1165.45" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (35,710,632 samples, 0.14%)</title><rect x="74.9" y="629" width="1.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="77.94" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,887,809 samples, 0.13%)</title><rect x="234.1" y="373" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="237.05" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (34,124,329 samples, 0.13%)</title><rect x="1160.9" y="645" width="1.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1163.88" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,608,589 samples, 0.10%)</title><rect x="140.8" y="853" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.83" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (104,530,263 samples, 0.41%)</title><rect x="84.0" y="629" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.98" y="639.5" ></text>
</g>
<g >
<title>dl_open_worker (35,710,632 samples, 0.14%)</title><rect x="74.9" y="309" width="1.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="77.94" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,103,680 samples, 0.10%)</title><rect x="189.9" y="789" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="192.88" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,345 samples, 0.10%)</title><rect x="52.0" y="773" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="54.99" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,207,124 samples, 0.10%)</title><rect x="137.0" y="437" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="140.00" y="447.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (26,209,610 samples, 0.10%)</title><rect x="111.1" y="405" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="114.13" y="415.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (421,288,863 samples, 1.65%)</title><rect x="170.4" y="869" width="19.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="173.41" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,109,534 samples, 0.13%)</title><rect x="229.7" y="885" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="232.69" y="895.5" ></text>
</g>
<g >
<title>llvm::cl::Option::addArgument (35,710,632 samples, 0.14%)</title><rect x="74.9" y="213" width="1.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="77.94" y="223.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,919,975 samples, 0.13%)</title><rect x="128.5" y="901" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="131.54" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,048,891 samples, 0.10%)</title><rect x="88.8" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.81" y="575.5" ></text>
</g>
<g >
<title>_PyRun_AnyFileObject (10,597,843,828 samples, 41.51%)</title><rect x="672.7" y="981" width="489.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="675.69" y="991.5" >_PyRun_AnyFileObject</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,212,641 samples, 0.10%)</title><rect x="157.5" y="517" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="160.48" y="527.5" ></text>
</g>
<g >
<title>__do_page_fault (33,715,088 samples, 0.13%)</title><rect x="1162.5" y="933" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1165.45" y="943.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,919,975 samples, 0.13%)</title><rect x="128.5" y="773" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="131.54" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,402 samples, 0.10%)</title><rect x="45.0" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.00" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (135,304,273 samples, 0.53%)</title><rect x="216.3" y="725" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.30" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,735,126 samples, 0.10%)</title><rect x="117.2" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.20" y="335.5" ></text>
</g>
<g >
<title>_PyObject_GC_NewVar (34,079,317 samples, 0.13%)</title><rect x="1003.0" y="485" width="1.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1006.03" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (60,242,896 samples, 0.24%)</title><rect x="231.3" y="773" width="2.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="234.27" y="783.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,314 samples, 0.10%)</title><rect x="84.0" y="357" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="86.98" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,664 samples, 0.10%)</title><rect x="201.8" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.76" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (32,634,530 samples, 0.13%)</title><rect x="1169.8" y="1045" width="1.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1172.75" y="1055.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,933,369 samples, 0.13%)</title><rect x="131.3" y="421" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="134.32" y="431.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (101,280,148 samples, 0.40%)</title><rect x="1087.1" y="581" width="4.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1090.13" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="709" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (136,720,298 samples, 0.54%)</title><rect x="1171.3" y="1029" width="6.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1174.26" y="1039.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (1,394,141,567 samples, 5.46%)</title><rect x="1060.4" y="629" width="64.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1063.39" y="639.5" >boost::..</text>
</g>
<g >
<title>page_fault (34,024,903 samples, 0.13%)</title><rect x="669.6" y="869" width="1.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="672.58" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,568 samples, 0.10%)</title><rect x="235.6" y="725" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="238.62" y="735.5" ></text>
</g>
<g >
<title>__dlopen (26,103,680 samples, 0.10%)</title><rect x="189.9" y="517" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="192.88" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,252,610 samples, 0.10%)</title><rect x="127.3" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="130.33" y="495.5" ></text>
</g>
<g >
<title>__brk (67,577,419 samples, 0.26%)</title><rect x="705.6" y="357" width="3.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="708.56" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (79,018,391 samples, 0.31%)</title><rect x="150.2" y="501" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.21" y="511.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (33,931,531 samples, 0.13%)</title><rect x="244.3" y="869" width="1.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="247.32" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (30,643,022 samples, 0.12%)</title><rect x="61.5" y="389" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.53" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (300,450,950 samples, 1.18%)</title><rect x="208.7" y="821" width="13.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="211.67" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,345 samples, 0.10%)</title><rect x="52.0" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (80,246,495 samples, 0.31%)</title><rect x="95.2" y="901" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="98.22" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (56,584,638 samples, 0.22%)</title><rect x="138.2" y="933" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.21" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (212,165,483 samples, 0.83%)</title><rect x="156.3" y="965" width="9.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="975.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (93,844,012 samples, 0.37%)</title><rect x="166.1" y="677" width="4.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="169.08" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,540 samples, 0.10%)</title><rect x="187.5" y="325" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="190.46" y="335.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (31,971,420 samples, 0.13%)</title><rect x="77.8" y="469" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="80.80" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,410,200 samples, 0.21%)</title><rect x="104.9" y="389" width="2.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="107.86" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,887,809 samples, 0.13%)</title><rect x="234.1" y="549" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (34,021,995 samples, 0.13%)</title><rect x="191.1" y="277" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (94,189,836 samples, 0.37%)</title><rect x="688.2" y="661" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="691.17" y="671.5" ></text>
</g>
<g >
<title>get_page_from_freelist (102,336,075 samples, 0.40%)</title><rect x="793.8" y="325" width="4.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="796.77" y="335.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4,955,476 samples, 0.02%)</title><rect x="635.1" y="965" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="638.07" y="975.5" ></text>
</g>
<g >
<title>array_subscript (33,614,985 samples, 0.13%)</title><rect x="677.5" y="853" width="1.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="680.54" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,641 samples, 0.10%)</title><rect x="157.5" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.48" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (52,457,574 samples, 0.21%)</title><rect x="208.7" y="405" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="211.67" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (82,257,480 samples, 0.32%)</title><rect x="124.7" y="645" width="3.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="127.74" y="655.5" ></text>
</g>
<g >
<title>finish_task_switch (4,955,476 samples, 0.02%)</title><rect x="635.1" y="917" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="638.07" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (25,897,915 samples, 0.10%)</title><rect x="85.2" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.19" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (136,500,219 samples, 0.53%)</title><rect x="118.4" y="485" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.43" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,345 samples, 0.10%)</title><rect x="52.0" y="597" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="54.99" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (54,033,009 samples, 0.21%)</title><rect x="96.4" y="341" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="99.43" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,859,528 samples, 0.13%)</title><rect x="80.8" y="357" width="1.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="83.84" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (30,842,997 samples, 0.12%)</title><rect x="108.5" y="501" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.49" y="511.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,242,896 samples, 0.24%)</title><rect x="231.3" y="853" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="234.27" y="863.5" ></text>
</g>
<g >
<title>__sched_text_start (4,955,476 samples, 0.02%)</title><rect x="635.1" y="933" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="638.07" y="943.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (67,679,069 samples, 0.27%)</title><rect x="166.1" y="629" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="169.08" y="639.5" ></text>
</g>
<g >
<title>clear_page_erms (34,038,401 samples, 0.13%)</title><rect x="796.9" y="309" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="799.93" y="319.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,207,249 samples, 0.10%)</title><rect x="50.8" y="501" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="53.78" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (7,520,244,065 samples, 29.45%)</title><rect x="692.5" y="693" width="347.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="695.52" y="703.5" >[python3.12]</text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,103,598 samples, 0.13%)</title><rect x="236.8" y="1029" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="239.83" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (197,576,523 samples, 0.77%)</title><rect x="147.1" y="789" width="9.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,491 samples, 0.10%)</title><rect x="156.3" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (34,037,020 samples, 0.13%)</title><rect x="1124.8" y="645" width="1.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1127.81" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,220,606 samples, 0.10%)</title><rect x="109.9" y="517" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.92" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (131,233,022 samples, 0.51%)</title><rect x="150.2" y="613" width="6.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.21" y="623.5" ></text>
</g>
<g >
<title>dl_main (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="981" width="5.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1167.01" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (154,447,785 samples, 0.60%)</title><rect x="222.6" y="949" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,078 samples, 0.10%)</title><rect x="207.5" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.46" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (26,048,891 samples, 0.10%)</title><rect x="88.8" y="517" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="91.81" y="527.5" ></text>
</g>
<g >
<title>do_anonymous_page (305,694,740 samples, 1.20%)</title><rect x="790.7" y="373" width="14.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="793.65" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,207,124 samples, 0.10%)</title><rect x="137.0" y="421" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="140.00" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (34,021,995 samples, 0.13%)</title><rect x="191.1" y="629" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (28,758,057 samples, 0.11%)</title><rect x="164.7" y="645" width="1.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="167.75" y="655.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34,102,323 samples, 0.13%)</title><rect x="82.4" y="213" width="1.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="85.41" y="223.5" ></text>
</g>
<g >
<title>_dl_start (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="1029" width="5.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1167.01" y="1039.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,221,506 samples, 0.10%)</title><rect x="226.9" y="469" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="229.92" y="479.5" ></text>
</g>
<g >
<title>remove_migration_ptes (3,557,578 samples, 0.01%)</title><rect x="634.8" y="805" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="637.80" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (52,396,969 samples, 0.21%)</title><rect x="176.6" y="325" width="2.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="179.59" y="335.5" ></text>
</g>
<g >
<title>do_page_fault (34,102,323 samples, 0.13%)</title><rect x="82.4" y="277" width="1.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="85.41" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (104,839,818 samples, 0.41%)</title><rect x="672.7" y="805" width="4.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="675.69" y="815.5" ></text>
</g>
<g >
<title>_PyObject_Call (31,971,420 samples, 0.13%)</title><rect x="77.8" y="517" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="80.80" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,491 samples, 0.10%)</title><rect x="156.3" y="725" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,013 samples, 0.10%)</title><rect x="675.1" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="678.11" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (115,150,104 samples, 0.45%)</title><rect x="132.9" y="773" width="5.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="135.89" y="783.5" ></text>
</g>
<g >
<title>page_fault (34,102,323 samples, 0.13%)</title><rect x="82.4" y="293" width="1.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="85.41" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,924 samples, 0.10%)</title><rect x="143.5" y="565" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="146.51" y="575.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (6,905,843 samples, 0.03%)</title><rect x="254.6" y="965" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="257.58" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (104,774,088 samples, 0.41%)</title><rect x="158.7" y="437" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.69" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,164,943 samples, 0.10%)</title><rect x="169.2" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.20" y="463.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (4,120,519,565 samples, 16.14%)</title><rect x="806.4" y="469" width="190.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="809.35" y="479.5" >[libz.so.1.2.11]</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (54,043,429 samples, 0.21%)</title><rect x="225.6" y="533" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="228.64" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (33,830,735 samples, 0.13%)</title><rect x="1143.6" y="645" width="1.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1146.64" y="655.5" ></text>
</g>
<g >
<title>Nexullance_IT::optimize (2,479,041,381 samples, 9.71%)</title><rect x="1047.9" y="725" width="114.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1050.89" y="735.5" >Nexullance_IT:..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (56,584,638 samples, 0.22%)</title><rect x="138.2" y="549" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="141.21" y="559.5" ></text>
</g>
<g >
<title>page_fault (542,678,834 samples, 2.13%)</title><rect x="954.9" y="453" width="25.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="957.91" y="463.5" >p..</text>
</g>
<g >
<title>x86_pmu_enable (6,905,843 samples, 0.03%)</title><rect x="254.6" y="949" width="0.3" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="257.58" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,208,390 samples, 0.10%)</title><rect x="174.1" y="437" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.06" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (211,515,023 samples, 0.83%)</title><rect x="100.1" y="725" width="9.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.14" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,211,117 samples, 0.10%)</title><rect x="132.9" y="533" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="135.89" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (93,844,012 samples, 0.37%)</title><rect x="166.1" y="773" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.08" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (34,074,924 samples, 0.13%)</title><rect x="62.9" y="453" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.94" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (135,815,267 samples, 0.53%)</title><rect x="702.4" y="453" width="6.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="705.40" y="463.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (33,617,398 samples, 0.13%)</title><rect x="1134.2" y="549" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1137.21" y="559.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,186,191 samples, 0.13%)</title><rect x="1138.9" y="629" width="1.6" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1141.91" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (46,324,964 samples, 0.18%)</title><rect x="48.6" y="485" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="51.64" y="495.5" ></text>
</g>
<g >
<title>_PyUnicode_FromASCII (26,211,390 samples, 0.10%)</title><rect x="238.4" y="1029" width="1.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="241.40" y="1039.5" ></text>
</g>
<g >
<title>rmap_walk_anon (3,557,578 samples, 0.01%)</title><rect x="634.8" y="773" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="637.80" y="783.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (79,018,391 samples, 0.31%)</title><rect x="150.2" y="485" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.21" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,432,581 samples, 0.21%)</title><rect x="45.0" y="917" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.00" y="927.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (28,758,057 samples, 0.11%)</title><rect x="164.7" y="469" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="167.75" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (389,522,746 samples, 1.53%)</title><rect x="204.6" y="933" width="18.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="207.55" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,220,606 samples, 0.10%)</title><rect x="109.9" y="773" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="112.92" y="783.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,207,249 samples, 0.10%)</title><rect x="50.8" y="453" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="53.78" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,345 samples, 0.10%)</title><rect x="52.0" y="757" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.99" y="767.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (78,634,538 samples, 0.31%)</title><rect x="196.6" y="405" width="3.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="199.57" y="415.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (767,124,603 samples, 3.00%)</title><rect x="1004.6" y="533" width="35.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1007.60" y="543.5" >PyO..</text>
</g>
<g >
<title>array_assign_subscript (33,759,822 samples, 0.13%)</title><rect x="53.2" y="853" width="1.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="56.20" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (34,063,632 samples, 0.13%)</title><rect x="214.7" y="325" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.73" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (34,208,575 samples, 0.13%)</title><rect x="1046.3" y="677" width="1.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1049.31" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (218,757,699 samples, 0.86%)</title><rect x="118.4" y="853" width="10.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="863.5" ></text>
</g>
<g >
<title>BigInt_Multiply (56,584,638 samples, 0.22%)</title><rect x="138.2" y="277" width="2.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="141.21" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (180,672,026 samples, 0.71%)</title><rect x="100.1" y="565" width="8.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="103.14" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="245" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (158,025,177 samples, 0.62%)</title><rect x="111.1" y="997" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.13" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (33,951,168 samples, 0.13%)</title><rect x="54.8" y="389" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="399.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, false, false&gt;::operator++ (33,965,025 samples, 0.13%)</title><rect x="1121.7" y="613" width="1.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1124.67" y="623.5" ></text>
</g>
<g >
<title>Nexullance_IT::step_2 (2,411,307,720 samples, 9.44%)</title><rect x="1051.0" y="709" width="111.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1054.02" y="719.5" >Nexullance_IT..</text>
</g>
<g >
<title>[python3.12] (80,246,495 samples, 0.31%)</title><rect x="95.2" y="741" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.22" y="751.5" ></text>
</g>
<g >
<title>recalc_sigpending (4,503,106 samples, 0.02%)</title><rect x="254.3" y="981" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="257.32" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (97,664,415 samples, 0.38%)</title><rect x="69.2" y="485" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.21" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (89,071,796 samples, 0.35%)</title><rect x="204.6" y="533" width="4.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="207.55" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (60,334,934 samples, 0.24%)</title><rect x="201.8" y="677" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.76" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (33,214,568 samples, 0.13%)</title><rect x="147.1" y="437" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,919,975 samples, 0.13%)</title><rect x="128.5" y="885" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.54" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (31,408,262 samples, 0.12%)</title><rect x="142.1" y="485" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.06" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (135,304,273 samples, 0.53%)</title><rect x="216.3" y="693" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.30" y="703.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (34,060,849 samples, 0.13%)</title><rect x="641.7" y="917" width="1.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="644.69" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (93,844,012 samples, 0.37%)</title><rect x="166.1" y="821" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.08" y="831.5" ></text>
</g>
<g >
<title>_PyObject_Call (72,532,213 samples, 0.28%)</title><rect x="48.6" y="821" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="51.64" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (27,821,923 samples, 0.11%)</title><rect x="225.6" y="405" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="228.64" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,897,915 samples, 0.10%)</title><rect x="85.2" y="469" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.19" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (67,961,851 samples, 0.27%)</title><rect x="80.8" y="437" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.84" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,242,896 samples, 0.24%)</title><rect x="231.3" y="693" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="234.27" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (35,710,632 samples, 0.14%)</title><rect x="74.9" y="645" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="77.94" y="655.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_single_s_d (2,275,969,614 samples, 8.91%)</title><rect x="1055.7" y="693" width="105.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1058.70" y="703.5" >compute_all_..</text>
</g>
<g >
<title>_PyObject_Call (32,972,956 samples, 0.13%)</title><rect x="222.6" y="709" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="225.55" y="719.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,422,650 samples, 0.21%)</title><rect x="59.1" y="421" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="62.11" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (131,233,022 samples, 0.51%)</title><rect x="150.2" y="581" width="6.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="153.21" y="591.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,201,768 samples, 0.10%)</title><rect x="73.7" y="373" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="76.73" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,109,534 samples, 0.13%)</title><rect x="229.7" y="405" width="1.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="232.69" y="415.5" ></text>
</g>
<g >
<title>add_and_return_legacy_wrapping_ufunc_loop (33,128,933 samples, 0.13%)</title><rect x="148.7" y="421" width="1.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="151.67" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,951,168 samples, 0.13%)</title><rect x="54.8" y="517" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="57.76" y="527.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,204,568 samples, 0.10%)</title><rect x="235.6" y="821" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="238.62" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (203,253,848 samples, 0.80%)</title><rect x="1148.3" y="677" width="9.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1151.34" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="949" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (60,242,896 samples, 0.24%)</title><rect x="231.3" y="469" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.27" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (34,200,686 samples, 0.13%)</title><rect x="679.1" y="853" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="682.09" y="863.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (34,162,017 samples, 0.13%)</title><rect x="1074.5" y="565" width="1.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1077.52" y="575.5" ></text>
</g>
<g >
<title>native_set_pte_at (33,769,580 samples, 0.13%)</title><rect x="978.4" y="357" width="1.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="981.43" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,294,663 samples, 0.10%)</title><rect x="98.9" y="661" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="101.93" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,735,126 samples, 0.10%)</title><rect x="117.2" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.20" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,103,680 samples, 0.10%)</title><rect x="189.9" y="757" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.88" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,164,943 samples, 0.10%)</title><rect x="169.2" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.20" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (33,814,087 samples, 0.13%)</title><rect x="79.3" y="421" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.28" y="431.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (26,155,874 samples, 0.10%)</title><rect x="162.3" y="213" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="165.33" y="223.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,954,470 samples, 0.31%)</title><rect x="170.4" y="677" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="173.41" y="687.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (96,572,314 samples, 0.38%)</title><rect x="183.0" y="405" width="4.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="186.00" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (32,972,956 samples, 0.13%)</title><rect x="222.6" y="645" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="225.55" y="655.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (104,774,088 samples, 0.41%)</title><rect x="158.7" y="485" width="4.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="161.69" y="495.5" ></text>
</g>
<g >
<title>raw_array_assign_scalar (33,759,822 samples, 0.13%)</title><rect x="53.2" y="805" width="1.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="56.20" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (218,757,699 samples, 0.86%)</title><rect x="118.4" y="933" width="10.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="943.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (26,212,641 samples, 0.10%)</title><rect x="157.5" y="405" width="1.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="160.48" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (291,350,293 samples, 1.14%)</title><rect x="191.1" y="933" width="13.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="943.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (26,201,768 samples, 0.10%)</title><rect x="73.7" y="149" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="76.73" y="159.5" ></text>
</g>
<g >
<title>[python3.12] (123,866,183 samples, 0.49%)</title><rect x="69.2" y="661" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.21" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,048,891 samples, 0.10%)</title><rect x="88.8" y="661" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="91.81" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (33,887,809 samples, 0.13%)</title><rect x="234.1" y="613" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="623.5" ></text>
</g>
<g >
<title>clear_subpage (33,931,531 samples, 0.13%)</title><rect x="244.3" y="853" width="1.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="247.32" y="863.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (136,500,219 samples, 0.53%)</title><rect x="118.4" y="661" width="6.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="121.43" y="671.5" ></text>
</g>
<g >
<title>LLVMPY_FinalizeObject (34,103,598 samples, 0.13%)</title><rect x="236.8" y="853" width="1.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="239.83" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (300,450,950 samples, 1.18%)</title><rect x="208.7" y="805" width="13.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="211.67" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,192,495 samples, 0.10%)</title><rect x="107.3" y="341" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="110.28" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (182,725,196 samples, 0.72%)</title><rect x="179.0" y="565" width="8.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.02" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (165,146,677 samples, 0.65%)</title><rect x="208.7" y="597" width="7.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="211.67" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,021,995 samples, 0.13%)</title><rect x="191.1" y="501" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.09" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (136,500,219 samples, 0.53%)</title><rect x="118.4" y="341" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (136,500,219 samples, 0.53%)</title><rect x="118.4" y="405" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.43" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (211,515,023 samples, 0.83%)</title><rect x="100.1" y="693" width="9.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.14" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,402 samples, 0.10%)</title><rect x="45.0" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (543,970,531 samples, 2.13%)</title><rect x="204.6" y="1013" width="25.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="207.55" y="1023.5" >_..</text>
</g>
<g >
<title>[python3.12] (52,598,225 samples, 0.21%)</title><rect x="112.3" y="373" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.34" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,972,956 samples, 0.13%)</title><rect x="222.6" y="725" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="225.55" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,432,581 samples, 0.21%)</title><rect x="45.0" y="1013" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.00" y="1023.5" ></text>
</g>
<g >
<title>handle_mm_fault (68,237,184 samples, 0.27%)</title><rect x="121.6" y="229" width="3.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="124.59" y="239.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (316,152,957 samples, 1.24%)</title><rect x="174.1" y="613" width="14.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="177.06" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (26,192,495 samples, 0.10%)</title><rect x="107.3" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.28" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,432,581 samples, 0.21%)</title><rect x="45.0" y="837" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.00" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,242,896 samples, 0.24%)</title><rect x="231.3" y="789" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="234.27" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,142,344 samples, 0.13%)</title><rect x="69.2" y="405" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.21" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,740,293 samples, 0.21%)</title><rect x="170.4" y="437" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="173.41" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (101,606,306 samples, 0.40%)</title><rect x="64.5" y="597" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.52" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,814,087 samples, 0.13%)</title><rect x="79.3" y="405" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="82.28" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,002,898 samples, 0.10%)</title><rect x="153.9" y="469" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="156.86" y="479.5" ></text>
</g>
<g >
<title>do_user_addr_fault (33,931,531 samples, 0.13%)</title><rect x="244.3" y="917" width="1.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="247.32" y="927.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (25,897,915 samples, 0.10%)</title><rect x="85.2" y="389" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="88.19" y="399.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (100,160,068 samples, 0.39%)</title><rect x="1172.8" y="821" width="4.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1175.81" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (78,634,538 samples, 0.31%)</title><rect x="196.6" y="421" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.57" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (56,584,638 samples, 0.22%)</title><rect x="138.2" y="885" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="141.21" y="895.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (83,743,036 samples, 0.33%)</title><rect x="142.1" y="1013" width="3.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.06" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,211,345 samples, 0.10%)</title><rect x="52.0" y="405" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.99" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,664 samples, 0.10%)</title><rect x="201.8" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.76" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (33,624,566 samples, 0.13%)</title><rect x="228.1" y="549" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.14" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_base (33,830,735 samples, 0.13%)</title><rect x="1143.6" y="661" width="1.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1146.64" y="671.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,103,680 samples, 0.10%)</title><rect x="189.9" y="677" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="192.88" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (33,828,949 samples, 0.13%)</title><rect x="56.3" y="501" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.33" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,117 samples, 0.10%)</title><rect x="132.9" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.89" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (344,276,787 samples, 1.35%)</title><rect x="95.2" y="1013" width="15.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="98.22" y="1023.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (33,951,168 samples, 0.13%)</title><rect x="54.8" y="773" width="1.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="57.76" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (56,584,638 samples, 0.22%)</title><rect x="138.2" y="533" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.21" y="543.5" ></text>
</g>
<g >
<title>__GI___libc_read (32,972,956 samples, 0.13%)</title><rect x="222.6" y="325" width="1.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="225.55" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Call (101,775,938 samples, 0.40%)</title><rect x="79.3" y="677" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.28" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,021,995 samples, 0.13%)</title><rect x="191.1" y="357" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.09" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (206,306,201 samples, 0.81%)</title><rect x="79.3" y="789" width="9.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="82.28" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (28,758,057 samples, 0.11%)</title><rect x="164.7" y="405" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.75" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (31,971,420 samples, 0.13%)</title><rect x="77.8" y="645" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="80.80" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (60,242,896 samples, 0.24%)</title><rect x="231.3" y="645" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.27" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="389" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="399.5" ></text>
</g>
<g >
<title>LONG_multiply (33,931,531 samples, 0.13%)</title><rect x="244.3" y="981" width="1.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="247.32" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,294,663 samples, 0.10%)</title><rect x="98.9" y="613" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.93" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,807,835 samples, 0.31%)</title><rect x="111.1" y="597" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.13" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (81,010,831 samples, 0.32%)</title><rect x="175.3" y="405" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="178.27" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (175,295,990 samples, 0.69%)</title><rect x="130.1" y="949" width="8.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="133.11" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,206 samples, 0.10%)</title><rect x="163.5" y="341" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="166.53" y="351.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (1,611,355,932 samples, 6.31%)</title><rect x="713.0" y="485" width="74.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="716.04" y="495.5" >[libz.so..</text>
</g>
<g >
<title>[python3.12] (218,757,699 samples, 0.86%)</title><rect x="118.4" y="725" width="10.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (7,878,441,894 samples, 30.86%)</title><rect x="682.2" y="757" width="364.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="685.22" y="767.5" >[python3.12]</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,954,470 samples, 0.31%)</title><rect x="170.4" y="741" width="3.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="173.41" y="751.5" ></text>
</g>
<g >
<title>futex_wait (3,038,619 samples, 0.01%)</title><rect x="634.7" y="885" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="637.66" y="895.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,242,896 samples, 0.24%)</title><rect x="231.3" y="501" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="234.27" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,581 samples, 0.21%)</title><rect x="45.0" y="773" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,744,075 samples, 0.13%)</title><rect x="180.2" y="341" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="183.23" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,192,495 samples, 0.10%)</title><rect x="107.3" y="325" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="110.28" y="335.5" ></text>
</g>
<g >
<title>PyThread_acquire_lock_timed (26,218,610 samples, 0.10%)</title><rect x="696.9" y="565" width="1.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="699.87" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,733 samples, 0.10%)</title><rect x="155.1" y="437" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="158.06" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (104,839,818 samples, 0.41%)</title><rect x="672.7" y="629" width="4.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="675.69" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,164,943 samples, 0.10%)</title><rect x="169.2" y="405" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="172.20" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (101,606,306 samples, 0.40%)</title><rect x="64.5" y="629" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="67.52" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (31,971,420 samples, 0.13%)</title><rect x="77.8" y="597" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.80" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,972,956 samples, 0.13%)</title><rect x="222.6" y="597" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="225.55" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (31,408,262 samples, 0.12%)</title><rect x="142.1" y="629" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.06" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,504 samples, 0.10%)</title><rect x="216.3" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.30" y="351.5" ></text>
</g>
<g >
<title>__do_page_fault (33,866,376 samples, 0.13%)</title><rect x="242.8" y="933" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="245.76" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (121,474,829 samples, 0.48%)</title><rect x="224.1" y="709" width="5.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="227.08" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,432,581 samples, 0.21%)</title><rect x="45.0" y="965" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="48.00" y="975.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (33,813,084 samples, 0.13%)</title><rect x="1113.8" y="533" width="1.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1116.80" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,206,402 samples, 0.10%)</title><rect x="45.0" y="613" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="48.00" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="549" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,217,406 samples, 0.10%)</title><rect x="76.6" y="709" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.59" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,491 samples, 0.10%)</title><rect x="156.3" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="527.5" ></text>
</g>
<g >
<title>_dlerror_run (35,710,632 samples, 0.14%)</title><rect x="74.9" y="405" width="1.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="77.94" y="415.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (9,436,114 samples, 0.04%)</title><rect x="635.0" y="997" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="637.96" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (31,971,420 samples, 0.13%)</title><rect x="77.8" y="389" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.80" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (60,145,886 samples, 0.24%)</title><rect x="130.1" y="693" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,207,249 samples, 0.10%)</title><rect x="50.8" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="53.78" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (89,071,796 samples, 0.35%)</title><rect x="204.6" y="725" width="4.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="207.55" y="735.5" ></text>
</g>
<g >
<title>find_vma (32,183,736 samples, 0.13%)</title><rect x="956.5" y="389" width="1.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="959.49" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="421" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,220,606 samples, 0.10%)</title><rect x="109.9" y="613" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="112.92" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="357" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (75,860,990 samples, 0.30%)</title><rect x="101.4" y="341" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (56,584,638 samples, 0.22%)</title><rect x="138.2" y="693" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.21" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (78,807,835 samples, 0.31%)</title><rect x="111.1" y="645" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.13" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,664 samples, 0.10%)</title><rect x="201.8" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.76" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,733 samples, 0.10%)</title><rect x="155.1" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.06" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,164,943 samples, 0.10%)</title><rect x="169.2" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.20" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,624,566 samples, 0.13%)</title><rect x="228.1" y="437" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.14" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (78,954,470 samples, 0.31%)</title><rect x="170.4" y="725" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.41" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (25,897,915 samples, 0.10%)</title><rect x="85.2" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.19" y="383.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,089 samples, 0.10%)</title><rect x="126.1" y="453" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="129.12" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (104,774,088 samples, 0.41%)</title><rect x="158.7" y="389" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.69" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (291,350,293 samples, 1.14%)</title><rect x="191.1" y="837" width="13.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="194.09" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (33,213,644 samples, 0.13%)</title><rect x="671.2" y="901" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="674.16" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (60,242,896 samples, 0.24%)</title><rect x="231.3" y="933" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.27" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (82,886,498 samples, 0.32%)</title><rect x="217.5" y="293" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="220.51" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,807,835 samples, 0.31%)</title><rect x="111.1" y="517" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="114.13" y="527.5" ></text>
</g>
<g >
<title>__libc_open64 (26,211,314 samples, 0.10%)</title><rect x="84.0" y="309" width="1.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="86.98" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (79,217,342 samples, 0.31%)</title><rect x="114.8" y="773" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="117.77" y="783.5" ></text>
</g>
<g >
<title>pagecache_get_page (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="709" width="5.8" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1167.01" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,461,699 samples, 0.21%)</title><rect x="126.1" y="517" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="129.12" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,294,663 samples, 0.10%)</title><rect x="98.9" y="517" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="101.93" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (218,757,699 samples, 0.86%)</title><rect x="118.4" y="709" width="10.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="121.43" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (28,758,057 samples, 0.11%)</title><rect x="164.7" y="565" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.75" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,530,263 samples, 0.41%)</title><rect x="84.0" y="677" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="86.98" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,217,406 samples, 0.10%)</title><rect x="76.6" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.59" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (78,625,471 samples, 0.31%)</title><rect x="211.1" y="421" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.09" y="431.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (35,710,632 samples, 0.14%)</title><rect x="74.9" y="709" width="1.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="77.94" y="719.5" ></text>
</g>
<g >
<title>pybind11::detail::argument_loader&lt;Nexullance_IT_interface*, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int&gt;::call_impl&lt;IT_outputs, pybind11::cpp_function::cpp_function&lt;IT_outputs, Nexullance_IT_interface, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (2,513,249,956 samples, 9.84%)</title><rect x="1046.3" y="773" width="116.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1049.31" y="783.5" >pybind11::deta..</text>
</g>
<g >
<title>[python3.12] (33,806,834 samples, 0.13%)</title><rect x="224.1" y="517" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.08" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,482,216 samples, 0.21%)</title><rect x="114.8" y="709" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="117.77" y="719.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (135,304,273 samples, 0.53%)</title><rect x="216.3" y="565" width="6.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="219.30" y="575.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (96,572,314 samples, 0.38%)</title><rect x="183.0" y="357" width="4.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="186.00" y="367.5" ></text>
</g>
<g >
<title>sync_regs (68,270,815 samples, 0.27%)</title><rect x="993.6" y="453" width="3.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="996.62" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,345 samples, 0.10%)</title><rect x="52.0" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (34,021,995 samples, 0.13%)</title><rect x="191.1" y="453" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (52,540,248 samples, 0.21%)</title><rect x="151.4" y="437" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.43" y="447.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (46,324,964 samples, 0.18%)</title><rect x="48.6" y="421" width="2.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="51.64" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (211,515,023 samples, 0.83%)</title><rect x="100.1" y="773" width="9.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="103.14" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,103,680 samples, 0.10%)</title><rect x="189.9" y="741" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.88" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,226,179 samples, 0.10%)</title><rect x="46.2" y="597" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="49.22" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (79,217,342 samples, 0.31%)</title><rect x="114.8" y="821" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.77" y="831.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (33,811,030 samples, 0.13%)</title><rect x="1049.5" y="565" width="1.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1052.46" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (27,821,923 samples, 0.11%)</title><rect x="225.6" y="421" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="228.64" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,806,834 samples, 0.13%)</title><rect x="224.1" y="421" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="227.08" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (72,532,213 samples, 0.28%)</title><rect x="48.6" y="613" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (264,030,292 samples, 1.03%)</title><rect x="98.9" y="949" width="12.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="101.93" y="959.5" ></text>
</g>
<g >
<title>__do_page_fault (27,821,923 samples, 0.11%)</title><rect x="225.6" y="325" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="228.64" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (34,150,626 samples, 0.13%)</title><rect x="1077.7" y="565" width="1.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1080.68" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,432,581 samples, 0.21%)</title><rect x="45.0" y="1029" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="48.00" y="1039.5" ></text>
</g>
<g >
<title>PyDict_GetItemWithError (26,205,287 samples, 0.10%)</title><rect x="181.8" y="309" width="1.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="184.79" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_do_relocate (33,918,686 samples, 0.13%)</title><rect x="1140.5" y="629" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1143.49" y="639.5" ></text>
</g>
<g >
<title>do_page_fault (33,866,376 samples, 0.13%)</title><rect x="242.8" y="949" width="1.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="245.76" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,271 samples, 0.10%)</title><rect x="221.3" y="261" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="224.34" y="271.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (26,103,680 samples, 0.10%)</title><rect x="189.9" y="485" width="1.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="192.88" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (30,842,997 samples, 0.12%)</title><rect x="108.5" y="485" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="111.49" y="495.5" ></text>
</g>
<g >
<title>__do_page_fault (3,557,578 samples, 0.01%)</title><rect x="634.8" y="917" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="637.80" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,375,403 samples, 0.10%)</title><rect x="112.3" y="341" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="115.34" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (34,124,329 samples, 0.13%)</title><rect x="1160.9" y="613" width="1.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1163.88" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (33,496,489 samples, 0.13%)</title><rect x="680.7" y="693" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="683.67" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_brk (67,577,419 samples, 0.26%)</title><rect x="705.6" y="309" width="3.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="708.56" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (33,529,649 samples, 0.13%)</title><rect x="251.1" y="997" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="254.10" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (33,951,168 samples, 0.13%)</title><rect x="54.8" y="709" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,402 samples, 0.10%)</title><rect x="45.0" y="661" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.00" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,074,924 samples, 0.13%)</title><rect x="62.9" y="373" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.94" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (30,842,997 samples, 0.12%)</title><rect x="108.5" y="309" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="111.49" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,206 samples, 0.10%)</title><rect x="163.5" y="501" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="166.53" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,209,924 samples, 0.10%)</title><rect x="143.5" y="661" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="146.51" y="671.5" ></text>
</g>
<g >
<title>_PyObject_Call (131,233,022 samples, 0.51%)</title><rect x="150.2" y="629" width="6.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="153.21" y="639.5" ></text>
</g>
<g >
<title>PyList_Sort (26,204,568 samples, 0.10%)</title><rect x="235.6" y="597" width="1.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="238.62" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (46,324,964 samples, 0.18%)</title><rect x="48.6" y="325" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (31,971,420 samples, 0.13%)</title><rect x="77.8" y="853" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.80" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,294,663 samples, 0.10%)</title><rect x="98.9" y="709" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.93" y="719.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,063,632 samples, 0.13%)</title><rect x="214.7" y="453" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="217.73" y="463.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (54,033,009 samples, 0.21%)</title><rect x="96.4" y="517" width="2.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="99.43" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (104,839,818 samples, 0.41%)</title><rect x="672.7" y="549" width="4.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="675.69" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,951,168 samples, 0.13%)</title><rect x="54.8" y="645" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="57.76" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (32,972,956 samples, 0.13%)</title><rect x="222.6" y="581" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="225.55" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (30,842,997 samples, 0.12%)</title><rect x="108.5" y="293" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="111.49" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (136,500,219 samples, 0.53%)</title><rect x="118.4" y="645" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,211,345 samples, 0.10%)</title><rect x="52.0" y="469" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="54.99" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (80,246,495 samples, 0.31%)</title><rect x="95.2" y="725" width="3.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="98.22" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (101,606,306 samples, 0.40%)</title><rect x="64.5" y="485" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.52" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (56,584,638 samples, 0.22%)</title><rect x="138.2" y="677" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="141.21" y="687.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,217,406 samples, 0.10%)</title><rect x="76.6" y="581" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="79.59" y="591.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,212,829 samples, 0.10%)</title><rect x="114.8" y="357" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="117.77" y="367.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (33,896,256 samples, 0.13%)</title><rect x="1101.2" y="581" width="1.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1104.20" y="591.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,608,589 samples, 0.10%)</title><rect x="140.8" y="485" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="143.83" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,432,581 samples, 0.21%)</title><rect x="45.0" y="821" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="48.00" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,924 samples, 0.10%)</title><rect x="143.5" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="146.51" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (34,109,534 samples, 0.13%)</title><rect x="229.7" y="773" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="232.69" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,271 samples, 0.10%)</title><rect x="221.3" y="293" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="224.34" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (7,460,114,942 samples, 29.22%)</title><rect x="695.3" y="613" width="344.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="698.30" y="623.5" >[python3.12]</text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,226,179 samples, 0.10%)</title><rect x="46.2" y="469" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="49.22" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (135,304,273 samples, 0.53%)</title><rect x="216.3" y="421" width="6.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="219.30" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="725" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,226,179 samples, 0.10%)</title><rect x="46.2" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.22" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,024,903 samples, 0.13%)</title><rect x="669.6" y="821" width="1.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="672.58" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (67,973,315 samples, 0.27%)</title><rect x="1157.7" y="613" width="3.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1160.74" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (28,758,057 samples, 0.11%)</title><rect x="164.7" y="261" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.75" y="271.5" ></text>
</g>
<g >
<title>do_page_fault (68,237,184 samples, 0.27%)</title><rect x="121.6" y="277" width="3.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="124.59" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,185,343 samples, 0.13%)</title><rect x="1145.2" y="661" width="1.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1148.20" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33,624,566 samples, 0.13%)</title><rect x="228.1" y="341" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="231.14" y="351.5" ></text>
</g>
<g >
<title>__do_page_fault (33,931,531 samples, 0.13%)</title><rect x="244.3" y="933" width="1.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="247.32" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (154,447,785 samples, 0.60%)</title><rect x="222.6" y="885" width="7.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="225.55" y="895.5" ></text>
</g>
<g >
<title>zap_page_range (79,622,491 samples, 0.31%)</title><rect x="254.9" y="917" width="3.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="257.94" y="927.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator++ (67,186,199 samples, 0.26%)</title><rect x="1051.0" y="677" width="3.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1054.02" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,641 samples, 0.10%)</title><rect x="157.5" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.48" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::__normal_iterator (34,134,814 samples, 0.13%)</title><rect x="1142.1" y="645" width="1.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1145.06" y="655.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,859,030 samples, 0.13%)</title><rect x="1040.1" y="709" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1043.06" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (78,807,835 samples, 0.31%)</title><rect x="111.1" y="757" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.13" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,568 samples, 0.10%)</title><rect x="235.6" y="581" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="238.62" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="805" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="815.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (33,979,109 samples, 0.13%)</title><rect x="1102.8" y="581" width="1.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1105.77" y="591.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,221,506 samples, 0.10%)</title><rect x="226.9" y="437" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="229.92" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,919,975 samples, 0.13%)</title><rect x="128.5" y="613" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="131.54" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (165,146,677 samples, 0.65%)</title><rect x="208.7" y="501" width="7.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="211.67" y="511.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (3,808,570 samples, 0.01%)</title><rect x="635.1" y="885" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="638.12" y="895.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,021,995 samples, 0.13%)</title><rect x="191.1" y="645" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="194.09" y="655.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (84,707,870 samples, 0.33%)</title><rect x="192.7" y="517" width="3.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="195.66" y="527.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,491 samples, 0.10%)</title><rect x="156.3" y="309" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="159.27" y="319.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (31,408,262 samples, 0.12%)</title><rect x="142.1" y="341" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="145.06" y="351.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (344,276,787 samples, 1.35%)</title><rect x="95.2" y="981" width="15.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="98.22" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (54,043,429 samples, 0.21%)</title><rect x="225.6" y="597" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="228.64" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (60,334,934 samples, 0.24%)</title><rect x="201.8" y="757" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.76" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (94,352,430 samples, 0.37%)</title><rect x="229.7" y="965" width="4.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="232.69" y="975.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (26,181,436 samples, 0.10%)</title><rect x="188.7" y="277" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="191.67" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (26,048,891 samples, 0.10%)</title><rect x="88.8" y="693" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.81" y="703.5" ></text>
</g>
<g >
<title>Nexullance_IT_interface::run_IT (2,513,249,956 samples, 9.84%)</title><rect x="1046.3" y="741" width="116.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1049.31" y="751.5" >Nexullance_IT_..</text>
</g>
<g >
<title>[python3.12] (26,209,924 samples, 0.10%)</title><rect x="143.5" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="146.51" y="303.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="997" width="5.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1167.01" y="1007.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (3,808,570 samples, 0.01%)</title><rect x="635.1" y="901" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="638.12" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (154,447,785 samples, 0.60%)</title><rect x="222.6" y="805" width="7.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="225.55" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (832,586,848 samples, 3.26%)</title><rect x="166.1" y="997" width="38.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.08" y="1007.5" >[py..</text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (34,124,329 samples, 0.13%)</title><rect x="1160.9" y="565" width="1.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1163.88" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,145,886 samples, 0.24%)</title><rect x="130.1" y="581" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="133.11" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,971,420 samples, 0.13%)</title><rect x="77.8" y="709" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="80.80" y="719.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (421,288,863 samples, 1.65%)</title><rect x="170.4" y="789" width="19.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="173.41" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (185,954,992 samples, 0.73%)</title><rect x="157.5" y="821" width="8.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.48" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,021,995 samples, 0.13%)</title><rect x="191.1" y="437" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.09" y="447.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (68,040,040 samples, 0.27%)</title><rect x="798.5" y="309" width="3.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="801.50" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="277" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="287.5" ></text>
</g>
<g >
<title>schedule (3,038,619 samples, 0.01%)</title><rect x="634.7" y="853" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="637.66" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (88,938,987 samples, 0.35%)</title><rect x="134.1" y="517" width="4.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.10" y="527.5" ></text>
</g>
<g >
<title>page_fault (68,237,848 samples, 0.27%)</title><rect x="702.4" y="421" width="3.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="705.40" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (60,242,896 samples, 0.24%)</title><rect x="231.3" y="901" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.27" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (89,071,796 samples, 0.35%)</title><rect x="204.6" y="549" width="4.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="207.55" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (231,015,359 samples, 0.90%)</title><rect x="191.1" y="741" width="10.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.09" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,002,898 samples, 0.10%)</title><rect x="153.9" y="501" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="156.86" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,639 samples, 0.10%)</title><rect x="196.6" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.57" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (66,343,501 samples, 0.26%)</title><rect x="147.1" y="533" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="150.14" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (79,217,342 samples, 0.31%)</title><rect x="114.8" y="805" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="117.77" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (46,324,964 samples, 0.18%)</title><rect x="48.6" y="405" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,211,345 samples, 0.10%)</title><rect x="52.0" y="357" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="54.99" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (102,069,331 samples, 0.40%)</title><rect x="100.1" y="389" width="4.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="103.14" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="277" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="287.5" ></text>
</g>
<g >
<title>page_fault (268,732,638 samples, 1.05%)</title><rect x="1177.6" y="1045" width="12.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1180.58" y="1055.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,206 samples, 0.10%)</title><rect x="163.5" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="166.53" y="495.5" ></text>
</g>
<g >
<title>xas_load (26,164,943 samples, 0.10%)</title><rect x="169.2" y="85" width="1.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="172.20" y="95.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (35,710,632 samples, 0.14%)</title><rect x="74.9" y="581" width="1.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="77.94" y="591.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (34,128,038 samples, 0.13%)</title><rect x="1156.2" y="629" width="1.5" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1159.16" y="639.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long&gt; (34,086,945 samples, 0.13%)</title><rect x="21.9" y="1029" width="1.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="24.90" y="1039.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,212,641 samples, 0.10%)</title><rect x="157.5" y="613" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="160.48" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (67,973,315 samples, 0.27%)</title><rect x="1157.7" y="661" width="3.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1160.74" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (104,774,088 samples, 0.41%)</title><rect x="158.7" y="613" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.69" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (109,274,440 samples, 0.43%)</title><rect x="57.9" y="549" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="60.89" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,125,270 samples, 0.13%)</title><rect x="203.0" y="517" width="1.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="205.97" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (93,844,012 samples, 0.37%)</title><rect x="166.1" y="805" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.08" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (287,400,527 samples, 1.13%)</title><rect x="64.5" y="853" width="13.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="67.52" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,048,891 samples, 0.10%)</title><rect x="88.8" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.81" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,608,589 samples, 0.10%)</title><rect x="140.8" y="693" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="143.83" y="703.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (59,971,167 samples, 0.23%)</title><rect x="52.0" y="965" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="54.99" y="975.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,209,664 samples, 0.10%)</title><rect x="201.8" y="565" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="204.76" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (34,021,995 samples, 0.13%)</title><rect x="191.1" y="309" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,177 samples, 0.10%)</title><rect x="172.8" y="437" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.85" y="447.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (94,352,430 samples, 0.37%)</title><rect x="229.7" y="949" width="4.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="232.69" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (212,165,483 samples, 0.83%)</title><rect x="156.3" y="933" width="9.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="159.27" y="943.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (72,532,213 samples, 0.28%)</title><rect x="48.6" y="597" width="3.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="51.64" y="607.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (252,677,674 samples, 0.99%)</title><rect x="118.4" y="997" width="11.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="121.43" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,345 samples, 0.10%)</title><rect x="52.0" y="725" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="735.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (33,617,398 samples, 0.13%)</title><rect x="1134.2" y="533" width="1.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1137.21" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (762,856,520 samples, 2.99%)</title><rect x="54.8" y="949" width="35.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="959.5" >[p..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,345 samples, 0.10%)</title><rect x="52.0" y="341" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="54.99" y="351.5" ></text>
</g>
<g >
<title>__pyx_pymod_exec__matrixapi (28,758,057 samples, 0.11%)</title><rect x="164.7" y="485" width="1.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="167.75" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,390 samples, 0.10%)</title><rect x="174.1" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.06" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,063,632 samples, 0.13%)</title><rect x="214.7" y="389" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="217.73" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,624,566 samples, 0.13%)</title><rect x="228.1" y="565" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="231.14" y="575.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_all_s_d (33,811,030 samples, 0.13%)</title><rect x="1049.5" y="693" width="1.5" height="15.0" fill="rgb(230,117,27)" rx="2" ry="2" />
<text  x="1052.46" y="703.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,421,034 samples, 0.21%)</title><rect x="86.4" y="517" width="2.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="89.39" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (88,938,987 samples, 0.35%)</title><rect x="134.1" y="533" width="4.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="137.10" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (67,577,419 samples, 0.26%)</title><rect x="705.6" y="341" width="3.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="708.56" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (34,200,686 samples, 0.13%)</title><rect x="679.1" y="805" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="682.09" y="815.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (79,622,491 samples, 0.31%)</title><rect x="254.9" y="869" width="3.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="257.94" y="879.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (421,288,863 samples, 1.65%)</title><rect x="170.4" y="757" width="19.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="173.41" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (342,334,393 samples, 1.34%)</title><rect x="174.1" y="709" width="15.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.06" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,201,768 samples, 0.10%)</title><rect x="73.7" y="405" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="76.73" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (88,938,987 samples, 0.35%)</title><rect x="134.1" y="565" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.10" y="575.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,294,663 samples, 0.10%)</title><rect x="98.9" y="373" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="101.93" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,345 samples, 0.10%)</title><rect x="52.0" y="421" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="54.99" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,124 samples, 0.10%)</title><rect x="137.0" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.00" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,164,943 samples, 0.10%)</title><rect x="169.2" y="581" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="172.20" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (34,074,924 samples, 0.13%)</title><rect x="62.9" y="581" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.94" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,559,495 samples, 0.12%)</title><rect x="72.3" y="325" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="75.27" y="335.5" ></text>
</g>
<g >
<title>PyDict_MergeFromSeq2 (33,496,489 samples, 0.13%)</title><rect x="680.7" y="757" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="683.67" y="767.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,334,934 samples, 0.24%)</title><rect x="201.8" y="741" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="204.76" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (165,146,677 samples, 0.65%)</title><rect x="208.7" y="485" width="7.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="211.67" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,839,818 samples, 0.41%)</title><rect x="672.7" y="789" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="675.69" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (27,821,923 samples, 0.11%)</title><rect x="225.6" y="469" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="228.64" y="479.5" ></text>
</g>
<g >
<title>__GI___mmap64 (33,962,576 samples, 0.13%)</title><rect x="70.7" y="245" width="1.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="73.70" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (28,758,057 samples, 0.11%)</title><rect x="164.7" y="517" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.75" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (102,069,331 samples, 0.40%)</title><rect x="100.1" y="437" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.14" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,206,402 samples, 0.10%)</title><rect x="45.0" y="549" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.00" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (83,065,672 samples, 0.33%)</title><rect x="59.1" y="453" width="3.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="62.11" y="463.5" ></text>
</g>
<g >
<title>do_group_exit (133,536,178 samples, 0.52%)</title><rect x="1171.3" y="997" width="6.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1174.26" y="1007.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (34,104,445 samples, 0.13%)</title><rect x="695.3" y="565" width="1.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="698.30" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,212,641 samples, 0.10%)</title><rect x="157.5" y="645" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="160.48" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (218,757,699 samples, 0.86%)</title><rect x="118.4" y="949" width="10.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="121.43" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (300,450,950 samples, 1.18%)</title><rect x="208.7" y="869" width="13.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="211.67" y="879.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (60,334,934 samples, 0.24%)</title><rect x="201.8" y="661" width="2.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="204.76" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,220,606 samples, 0.10%)</title><rect x="109.9" y="533" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="112.92" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (123,866,183 samples, 0.49%)</title><rect x="69.2" y="645" width="5.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="72.21" y="655.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (158,025,177 samples, 0.62%)</title><rect x="111.1" y="869" width="7.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="114.13" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,608,589 samples, 0.10%)</title><rect x="140.8" y="933" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.83" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (81,010,831 samples, 0.32%)</title><rect x="175.3" y="389" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="178.27" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,249 samples, 0.10%)</title><rect x="50.8" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="53.78" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,774,088 samples, 0.41%)</title><rect x="158.7" y="501" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="161.69" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,206 samples, 0.10%)</title><rect x="163.5" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.53" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (78,632,261 samples, 0.31%)</title><rect x="672.7" y="421" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (104,530,263 samples, 0.41%)</title><rect x="84.0" y="741" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.98" y="751.5" ></text>
</g>
<g >
<title>migrate_misplaced_page (3,557,578 samples, 0.01%)</title><rect x="634.8" y="837" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="637.80" y="847.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (7,352,510 samples, 0.03%)</title><rect x="254.6" y="981" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="257.58" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (46,324,964 samples, 0.18%)</title><rect x="48.6" y="517" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (26,217,406 samples, 0.10%)</title><rect x="76.6" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.59" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (165,146,677 samples, 0.65%)</title><rect x="208.7" y="709" width="7.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="211.67" y="719.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (33,962,576 samples, 0.13%)</title><rect x="70.7" y="69" width="1.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="73.70" y="79.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,971,420 samples, 0.13%)</title><rect x="77.8" y="533" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="80.80" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (10,597,843,828 samples, 41.51%)</title><rect x="672.7" y="949" width="489.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="959.5" >[python3.12]</text>
</g>
<g >
<title>[python3.12] (26,217,406 samples, 0.10%)</title><rect x="76.6" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.59" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,402 samples, 0.10%)</title><rect x="45.0" y="565" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.00" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (180,672,026 samples, 0.71%)</title><rect x="100.1" y="581" width="8.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.14" y="591.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,048,891 samples, 0.10%)</title><rect x="88.8" y="789" width="1.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="91.81" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (102,369,172 samples, 0.40%)</title><rect x="120.0" y="309" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="123.01" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,220,606 samples, 0.10%)</title><rect x="109.9" y="709" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="112.92" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (84,707,870 samples, 0.33%)</title><rect x="192.7" y="405" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.66" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (60,242,896 samples, 0.24%)</title><rect x="231.3" y="821" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.27" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (31,971,420 samples, 0.13%)</title><rect x="77.8" y="869" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.80" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (165,146,677 samples, 0.65%)</title><rect x="208.7" y="677" width="7.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="211.67" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (28,758,057 samples, 0.11%)</title><rect x="164.7" y="533" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.75" y="543.5" ></text>
</g>
<g >
<title>generic_file_read_iter (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="741" width="5.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1167.01" y="751.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (33,617,398 samples, 0.13%)</title><rect x="1134.2" y="581" width="1.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1137.21" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,103,680 samples, 0.10%)</title><rect x="189.9" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.88" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (34,124,329 samples, 0.13%)</title><rect x="1160.9" y="677" width="1.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1163.88" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,048,891 samples, 0.10%)</title><rect x="88.8" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.81" y="351.5" ></text>
</g>
<g >
<title>__GI___open64_nocancel (33,624,566 samples, 0.13%)</title><rect x="228.1" y="357" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="231.14" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,206,402 samples, 0.10%)</title><rect x="45.0" y="421" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="48.00" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (231,015,359 samples, 0.90%)</title><rect x="191.1" y="757" width="10.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="194.09" y="767.5" ></text>
</g>
<g >
<title>__vfs_read (32,972,956 samples, 0.13%)</title><rect x="222.6" y="213" width="1.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="225.55" y="223.5" ></text>
</g>
<g >
<title>[python3.12] (33,887,809 samples, 0.13%)</title><rect x="234.1" y="277" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="287.5" ></text>
</g>
<g >
<title>[python3.12] (511,166,891 samples, 2.00%)</title><rect x="118.4" y="1013" width="23.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="1023.5" >[..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,608,589 samples, 0.10%)</title><rect x="140.8" y="565" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.83" y="575.5" ></text>
</g>
<g >
<title>PyDict_MergeFromSeq2 (33,496,489 samples, 0.13%)</title><rect x="680.7" y="677" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="683.67" y="687.5" ></text>
</g>
<g >
<title>_PyObject_CallFunction_SizeT (26,211,314 samples, 0.10%)</title><rect x="84.0" y="389" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="86.98" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (59,971,167 samples, 0.23%)</title><rect x="52.0" y="997" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="54.99" y="1007.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (211,515,023 samples, 0.83%)</title><rect x="100.1" y="741" width="9.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="103.14" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,933,369 samples, 0.13%)</title><rect x="131.3" y="357" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="134.32" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (185,954,992 samples, 0.73%)</title><rect x="157.5" y="709" width="8.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.48" y="719.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (543,970,531 samples, 2.13%)</title><rect x="204.6" y="1029" width="25.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="207.55" y="1039.5" >_..</text>
</g>
<g >
<title>[python3.12] (26,212,829 samples, 0.10%)</title><rect x="114.8" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.77" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (57,618,186 samples, 0.23%)</title><rect x="142.1" y="725" width="2.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="145.06" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (66,343,501 samples, 0.26%)</title><rect x="147.1" y="677" width="3.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="150.14" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="853" width="5.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1167.01" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,733 samples, 0.10%)</title><rect x="155.1" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.06" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (26,478,143 samples, 0.10%)</title><rect x="150.2" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.21" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,887,809 samples, 0.13%)</title><rect x="234.1" y="757" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="237.05" y="767.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,220,606 samples, 0.10%)</title><rect x="109.9" y="501" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="112.92" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,951,168 samples, 0.13%)</title><rect x="54.8" y="677" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="57.76" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (121,474,829 samples, 0.48%)</title><rect x="224.1" y="725" width="5.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="227.08" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (101,606,306 samples, 0.40%)</title><rect x="64.5" y="677" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.52" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,125,270 samples, 0.13%)</title><rect x="203.0" y="453" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="205.97" y="463.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (515,132,875 samples, 2.02%)</title><rect x="166.1" y="933" width="23.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="169.08" y="943.5" >P..</text>
</g>
<g >
<title>PyEval_EvalCode (26,294,663 samples, 0.10%)</title><rect x="98.9" y="549" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="101.93" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,491 samples, 0.10%)</title><rect x="156.3" y="789" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="159.27" y="799.5" ></text>
</g>
<g >
<title>PyList_Append (26,212,517 samples, 0.10%)</title><rect x="130.1" y="373" width="1.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="133.11" y="383.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (26,205,287 samples, 0.10%)</title><rect x="181.8" y="357" width="1.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="184.79" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (211,129,481 samples, 0.83%)</title><rect x="54.8" y="869" width="9.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="57.76" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,249 samples, 0.10%)</title><rect x="50.8" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="53.78" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,074,924 samples, 0.13%)</title><rect x="62.9" y="565" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="65.94" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (212,165,483 samples, 0.83%)</title><rect x="156.3" y="917" width="9.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="159.27" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,164,943 samples, 0.10%)</title><rect x="169.2" y="245" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="172.20" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (33,617,398 samples, 0.13%)</title><rect x="1134.2" y="565" width="1.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1137.21" y="575.5" ></text>
</g>
<g >
<title>pte_alloc_one (34,134,051 samples, 0.13%)</title><rect x="702.4" y="293" width="1.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="705.40" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (89,071,796 samples, 0.35%)</title><rect x="204.6" y="613" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.55" y="623.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (33,485,738 samples, 0.13%)</title><rect x="1051.0" y="645" width="1.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1054.02" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (56,584,638 samples, 0.22%)</title><rect x="138.2" y="373" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.21" y="383.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,814,087 samples, 0.13%)</title><rect x="79.3" y="469" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="82.28" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (185,954,992 samples, 0.73%)</title><rect x="157.5" y="805" width="8.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="160.48" y="815.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,209,924 samples, 0.10%)</title><rect x="143.5" y="389" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="146.51" y="399.5" ></text>
</g>
<g >
<title>page_fault (33,931,531 samples, 0.13%)</title><rect x="244.3" y="965" width="1.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="247.32" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call (81,010,831 samples, 0.32%)</title><rect x="175.3" y="501" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="178.27" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,117 samples, 0.10%)</title><rect x="132.9" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.89" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,608,589 samples, 0.10%)</title><rect x="140.8" y="421" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="143.83" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,641 samples, 0.10%)</title><rect x="157.5" y="469" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="160.48" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (57,618,186 samples, 0.23%)</title><rect x="142.1" y="805" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="145.06" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (218,757,699 samples, 0.86%)</title><rect x="118.4" y="805" width="10.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="815.5" ></text>
</g>
<g >
<title>_dlerror_run (26,103,680 samples, 0.10%)</title><rect x="189.9" y="501" width="1.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="192.88" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,124 samples, 0.10%)</title><rect x="137.0" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.00" y="495.5" ></text>
</g>
<g >
<title>array_dealloc (34,200,686 samples, 0.13%)</title><rect x="679.1" y="789" width="1.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="682.09" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,971,420 samples, 0.13%)</title><rect x="77.8" y="725" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="80.80" y="735.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,887,809 samples, 0.13%)</title><rect x="234.1" y="389" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="237.05" y="399.5" ></text>
</g>
<g >
<title>PyArray_Scalar (33,614,985 samples, 0.13%)</title><rect x="677.5" y="837" width="1.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="680.54" y="847.5" ></text>
</g>
<g >
<title>[python3.12] (29,795,781 samples, 0.12%)</title><rect x="124.7" y="517" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.74" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,252,610 samples, 0.10%)</title><rect x="127.3" y="309" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.33" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (79,217,342 samples, 0.31%)</title><rect x="114.8" y="757" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.77" y="767.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (79,622,491 samples, 0.31%)</title><rect x="254.9" y="885" width="3.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="257.94" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (81,010,831 samples, 0.32%)</title><rect x="175.3" y="373" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.27" y="383.5" ></text>
</g>
<g >
<title>_dl_catch_exception (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="949" width="5.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1167.01" y="959.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::allocate (33,619,449 samples, 0.13%)</title><rect x="1132.7" y="629" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1135.65" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (33,213,644 samples, 0.13%)</title><rect x="671.2" y="917" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="674.16" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,089 samples, 0.10%)</title><rect x="126.1" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.12" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (56,584,638 samples, 0.22%)</title><rect x="138.2" y="405" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="141.21" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,209,924 samples, 0.10%)</title><rect x="143.5" y="581" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="146.51" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (185,954,992 samples, 0.73%)</title><rect x="157.5" y="757" width="8.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="160.48" y="767.5" ></text>
</g>
<g >
<title>clear_page_erms (26,181,436 samples, 0.10%)</title><rect x="188.7" y="245" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="191.67" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="341" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="351.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (79,018,391 samples, 0.31%)</title><rect x="150.2" y="517" width="3.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="153.21" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (158,025,177 samples, 0.62%)</title><rect x="111.1" y="885" width="7.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.13" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (33,887,809 samples, 0.13%)</title><rect x="234.1" y="421" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (101,775,938 samples, 0.40%)</title><rect x="79.3" y="741" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="82.28" y="751.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (3,808,570 samples, 0.01%)</title><rect x="635.1" y="853" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="638.12" y="863.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (26,208,540 samples, 0.10%)</title><rect x="187.5" y="309" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="190.46" y="319.5" ></text>
</g>
<g >
<title>_PyObject_Call (30,842,997 samples, 0.12%)</title><rect x="108.5" y="517" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="111.49" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="245" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="255.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="725" width="5.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1167.01" y="735.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::cpp_function&lt;IT_outputs, Nexullance_IT_interface, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (2,513,249,956 samples, 9.84%)</title><rect x="1046.3" y="757" width="116.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1049.31" y="767.5" >pybind11::cpp_..</text>
</g>
<g >
<title>vfs_read (32,972,956 samples, 0.13%)</title><rect x="222.6" y="229" width="1.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="225.55" y="239.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (56,584,638 samples, 0.22%)</title><rect x="138.2" y="741" width="2.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="141.21" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (68,016,116 samples, 0.27%)</title><rect x="638.6" y="917" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="641.55" y="927.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (35,710,632 samples, 0.14%)</title><rect x="74.9" y="661" width="1.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="77.94" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,375,403 samples, 0.10%)</title><rect x="112.3" y="293" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="115.34" y="303.5" ></text>
</g>
<g >
<title>PyArray_NewFromDescr (67,764,359 samples, 0.27%)</title><rect x="1043.2" y="693" width="3.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1046.18" y="703.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (34,125,424 samples, 0.13%)</title><rect x="1116.9" y="581" width="1.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1119.94" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,402 samples, 0.10%)</title><rect x="45.0" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,209,664 samples, 0.10%)</title><rect x="201.8" y="533" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="204.76" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (31,408,262 samples, 0.12%)</title><rect x="142.1" y="693" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.06" y="703.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,206 samples, 0.10%)</title><rect x="163.5" y="565" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="166.53" y="575.5" ></text>
</g>
<g >
<title>llvm::TargetPassConfig::addMachinePasses (34,103,598 samples, 0.13%)</title><rect x="236.8" y="757" width="1.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="239.83" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (135,304,273 samples, 0.53%)</title><rect x="216.3" y="645" width="6.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="219.30" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,213,486 samples, 0.10%)</title><rect x="95.2" y="485" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="98.22" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (93,844,012 samples, 0.37%)</title><rect x="166.1" y="741" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.08" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,334,934 samples, 0.24%)</title><rect x="201.8" y="725" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="204.76" y="735.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,208,540 samples, 0.10%)</title><rect x="187.5" y="405" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="190.46" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,924 samples, 0.10%)</title><rect x="143.5" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="146.51" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (32,972,956 samples, 0.13%)</title><rect x="222.6" y="677" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,201,768 samples, 0.10%)</title><rect x="73.7" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="76.73" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (54,033,009 samples, 0.21%)</title><rect x="96.4" y="325" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="99.43" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (33,887,809 samples, 0.13%)</title><rect x="234.1" y="357" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="367.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (34,103,797 samples, 0.13%)</title><rect x="704.0" y="309" width="1.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="706.98" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (33,763,538 samples, 0.13%)</title><rect x="1044.7" y="645" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1047.75" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (180,672,026 samples, 0.71%)</title><rect x="100.1" y="549" width="8.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.14" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (177,178,313 samples, 0.69%)</title><rect x="56.3" y="773" width="8.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.33" y="783.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (300,450,950 samples, 1.18%)</title><rect x="208.7" y="773" width="13.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="211.67" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="565" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,486 samples, 0.10%)</title><rect x="95.2" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.22" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (121,474,829 samples, 0.48%)</title><rect x="224.1" y="693" width="5.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="227.08" y="703.5" ></text>
</g>
<g >
<title>pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;IT_outputs, Nexullance_IT_interface, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, int, pybind11::name, pybind11::is_method, pybind11::sibling&gt; (2,513,249,956 samples, 9.84%)</title><rect x="1046.3" y="821" width="116.2" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="1049.31" y="831.5" >pybind11::cpp_..</text>
</g>
<g >
<title>[python3.12] (300,450,950 samples, 1.18%)</title><rect x="208.7" y="789" width="13.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="211.67" y="799.5" ></text>
</g>
<g >
<title>generic_wrapped_legacy_loop (67,797,907 samples, 0.27%)</title><rect x="242.8" y="997" width="3.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="245.76" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,242,896 samples, 0.24%)</title><rect x="231.3" y="869" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="234.27" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (46,324,964 samples, 0.18%)</title><rect x="48.6" y="373" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,410,200 samples, 0.21%)</title><rect x="104.9" y="309" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="107.86" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="917" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="927.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (3,038,619 samples, 0.01%)</title><rect x="634.7" y="869" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="637.66" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (101,775,938 samples, 0.40%)</title><rect x="79.3" y="693" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.28" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,192,495 samples, 0.10%)</title><rect x="107.3" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="110.28" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (80,246,495 samples, 0.31%)</title><rect x="95.2" y="661" width="3.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="98.22" y="671.5" ></text>
</g>
<g >
<title>PyTuple_New (34,205,605 samples, 0.13%)</title><rect x="682.2" y="741" width="1.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="685.22" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (29,795,781 samples, 0.12%)</title><rect x="124.7" y="469" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.74" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (56,584,638 samples, 0.22%)</title><rect x="138.2" y="773" width="2.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="141.21" y="783.5" ></text>
</g>
<g >
<title>__dlopen (35,710,632 samples, 0.14%)</title><rect x="74.9" y="421" width="1.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="77.94" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,206 samples, 0.10%)</title><rect x="163.5" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.53" y="319.5" ></text>
</g>
<g >
<title>do_numa_page (3,557,578 samples, 0.01%)</title><rect x="634.8" y="853" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="637.80" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (109,094,002 samples, 0.43%)</title><rect x="216.3" y="373" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.30" y="383.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; (1,428,178,587 samples, 5.59%)</title><rect x="1060.4" y="677" width="66.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1063.39" y="687.5" >boost::..</text>
</g>
<g >
<title>[python3.12] (33,933,369 samples, 0.13%)</title><rect x="131.3" y="389" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.32" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,048,891 samples, 0.10%)</title><rect x="88.8" y="389" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="91.81" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (66,343,501 samples, 0.26%)</title><rect x="147.1" y="549" width="3.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="150.14" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,207,124 samples, 0.10%)</title><rect x="137.0" y="469" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="140.00" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,768 samples, 0.10%)</title><rect x="57.9" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="60.89" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (218,757,699 samples, 0.86%)</title><rect x="118.4" y="821" width="10.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="121.43" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,402 samples, 0.10%)</title><rect x="45.0" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="383.5" ></text>
</g>
<g >
<title>llvm::TargetPassConfig::addPass (34,103,598 samples, 0.13%)</title><rect x="236.8" y="741" width="1.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="239.83" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (26,269,387 samples, 0.10%)</title><rect x="116.0" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.98" y="527.5" ></text>
</g>
<g >
<title>[[heap]] (86,373,368 samples, 0.34%)</title><rect x="10.0" y="1045" width="4.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.04" y="1055.5" ></text>
</g>
<g >
<title>[python3.12] (136,500,219 samples, 0.53%)</title><rect x="118.4" y="325" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="335.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (78,807,835 samples, 0.31%)</title><rect x="111.1" y="613" width="3.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="114.13" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (25,897,915 samples, 0.10%)</title><rect x="85.2" y="405" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="88.19" y="415.5" ></text>
</g>
<g >
<title>_convert_from_str (33,834,615 samples, 0.13%)</title><rect x="40.7" y="1029" width="1.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="43.66" y="1039.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (31,971,420 samples, 0.13%)</title><rect x="77.8" y="885" width="1.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="80.80" y="895.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,201,768 samples, 0.10%)</title><rect x="73.7" y="421" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="76.73" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,540 samples, 0.10%)</title><rect x="187.5" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="190.46" y="447.5" ></text>
</g>
<g >
<title>PyArray_ToList (33,962,576 samples, 0.13%)</title><rect x="70.7" y="325" width="1.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="73.70" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,924 samples, 0.10%)</title><rect x="143.5" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="146.51" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,608,589 samples, 0.10%)</title><rect x="140.8" y="773" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.83" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,226,179 samples, 0.10%)</title><rect x="46.2" y="325" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="49.22" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (136,115,151 samples, 0.53%)</title><rect x="637.0" y="933" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="639.98" y="943.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (89,071,796 samples, 0.35%)</title><rect x="204.6" y="741" width="4.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="207.55" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (34,125,270 samples, 0.13%)</title><rect x="203.0" y="549" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.97" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (83,065,672 samples, 0.33%)</title><rect x="59.1" y="501" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="62.11" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,177 samples, 0.10%)</title><rect x="172.8" y="453" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.85" y="463.5" ></text>
</g>
<g >
<title>page_fault (33,866,376 samples, 0.13%)</title><rect x="242.8" y="965" width="1.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="245.76" y="975.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,204,568 samples, 0.10%)</title><rect x="235.6" y="661" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="238.62" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,209,664 samples, 0.10%)</title><rect x="201.8" y="373" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="204.76" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (84,707,870 samples, 0.33%)</title><rect x="192.7" y="309" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.66" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,221,506 samples, 0.10%)</title><rect x="226.9" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="229.92" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,919,975 samples, 0.13%)</title><rect x="128.5" y="725" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="131.54" y="735.5" ></text>
</g>
<g >
<title>_PyRuntime (146,205,735 samples, 0.57%)</title><rect x="245.9" y="1045" width="6.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="248.89" y="1055.5" ></text>
</g>
<g >
<title>perf_event_mmap (33,962,576 samples, 0.13%)</title><rect x="70.7" y="117" width="1.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="73.70" y="127.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (54,043,429 samples, 0.21%)</title><rect x="225.6" y="581" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="228.64" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (31,408,262 samples, 0.12%)</title><rect x="142.1" y="597" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.06" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="709" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="719.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34,102,323 samples, 0.13%)</title><rect x="82.4" y="245" width="1.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="85.41" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::vector (33,507,394 samples, 0.13%)</title><rect x="28.2" y="1029" width="1.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="31.19" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (79,018,391 samples, 0.31%)</title><rect x="150.2" y="533" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="153.21" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,735 samples, 0.10%)</title><rect x="199.0" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="202.00" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_relocate (68,104,877 samples, 0.27%)</title><rect x="1138.9" y="645" width="3.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1141.91" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (218,757,699 samples, 0.86%)</title><rect x="118.4" y="901" width="10.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="121.43" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (342,334,393 samples, 1.34%)</title><rect x="174.1" y="741" width="15.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.06" y="751.5" ></text>
</g>
<g >
<title>new_sync_read (26,164,943 samples, 0.10%)</title><rect x="169.2" y="165" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="172.20" y="175.5" ></text>
</g>
<g >
<title>[python3.12] (197,576,523 samples, 0.77%)</title><rect x="147.1" y="917" width="9.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (59,971,167 samples, 0.23%)</title><rect x="52.0" y="981" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,334,934 samples, 0.24%)</title><rect x="201.8" y="773" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="204.76" y="783.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,204,568 samples, 0.10%)</title><rect x="235.6" y="709" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="238.62" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="287.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (62,857,718 samples, 0.25%)</title><rect x="204.6" y="421" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="207.55" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,226,179 samples, 0.10%)</title><rect x="46.2" y="533" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="49.22" y="543.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pop (34,072,251 samples, 0.13%)</title><rect x="1131.1" y="677" width="1.6" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1134.08" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (78,807,835 samples, 0.31%)</title><rect x="111.1" y="789" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="114.13" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,951,168 samples, 0.13%)</title><rect x="54.8" y="469" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="479.5" ></text>
</g>
<g >
<title>native_write_msr (6,905,843 samples, 0.03%)</title><rect x="254.6" y="917" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="257.58" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (57,618,186 samples, 0.23%)</title><rect x="142.1" y="789" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.06" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (135,304,273 samples, 0.53%)</title><rect x="216.3" y="549" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.30" y="559.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,078 samples, 0.10%)</title><rect x="207.5" y="341" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="210.46" y="351.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (82,886,498 samples, 0.32%)</title><rect x="217.5" y="325" width="3.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="220.51" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,294,663 samples, 0.10%)</title><rect x="98.9" y="533" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.93" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,390 samples, 0.10%)</title><rect x="174.1" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.06" y="415.5" ></text>
</g>
<g >
<title>do_page_fault (26,181,436 samples, 0.10%)</title><rect x="188.7" y="389" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="191.67" y="399.5" ></text>
</g>
<g >
<title>PySequence_Tuple (54,033,009 samples, 0.21%)</title><rect x="96.4" y="469" width="2.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="99.43" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (135,304,273 samples, 0.53%)</title><rect x="216.3" y="485" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="219.30" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,408,262 samples, 0.12%)</title><rect x="142.1" y="549" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="145.06" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (211,515,023 samples, 0.83%)</title><rect x="100.1" y="645" width="9.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="103.14" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,206,402 samples, 0.10%)</title><rect x="45.0" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="639.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,735,126 samples, 0.10%)</title><rect x="117.2" y="501" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="120.20" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::~new_allocator (33,987,172 samples, 0.13%)</title><rect x="17.2" y="1029" width="1.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="20.18" y="1039.5" ></text>
</g>
<g >
<title>do_page_fault (3,557,578 samples, 0.01%)</title><rect x="634.8" y="933" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="637.80" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (101,775,938 samples, 0.40%)</title><rect x="79.3" y="485" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="82.28" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (101,775,938 samples, 0.40%)</title><rect x="79.3" y="725" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.28" y="735.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (33,820,940 samples, 0.13%)</title><rect x="976.9" y="341" width="1.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="979.87" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (28,613,862 samples, 0.11%)</title><rect x="175.3" y="293" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.27" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,103,680 samples, 0.10%)</title><rect x="189.9" y="597" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="192.88" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (89,071,796 samples, 0.35%)</title><rect x="204.6" y="517" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.55" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,211,345 samples, 0.10%)</title><rect x="52.0" y="853" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="54.99" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,408,262 samples, 0.12%)</title><rect x="142.1" y="661" width="1.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.06" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,972,956 samples, 0.13%)</title><rect x="222.6" y="421" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="225.55" y="431.5" ></text>
</g>
<g >
<title>inode_permission (26,155,874 samples, 0.10%)</title><rect x="162.3" y="197" width="1.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="165.33" y="207.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (136,500,219 samples, 0.53%)</title><rect x="118.4" y="533" width="6.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="121.43" y="543.5" ></text>
</g>
<g >
<title>handle_mm_fault (68,237,848 samples, 0.27%)</title><rect x="702.4" y="357" width="3.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="705.40" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (135,304,273 samples, 0.53%)</title><rect x="216.3" y="677" width="6.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="219.30" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,226,179 samples, 0.10%)</title><rect x="46.2" y="629" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="49.22" y="639.5" ></text>
</g>
<g >
<title>get_page_from_freelist (33,128,933 samples, 0.13%)</title><rect x="148.7" y="229" width="1.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="151.67" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="853" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (67,961,851 samples, 0.27%)</title><rect x="80.8" y="421" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="83.84" y="431.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,210,491 samples, 0.10%)</title><rect x="156.3" y="341" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="159.27" y="351.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch2&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (1,394,141,567 samples, 5.46%)</title><rect x="1060.4" y="645" width="64.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1063.39" y="655.5" >boost::..</text>
</g>
<g >
<title>[python3.12] (80,246,495 samples, 0.31%)</title><rect x="95.2" y="757" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.22" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (196,993,364 samples, 0.77%)</title><rect x="192.7" y="725" width="9.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="195.66" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,806,834 samples, 0.13%)</title><rect x="224.1" y="469" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="227.08" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (135,304,273 samples, 0.53%)</title><rect x="216.3" y="405" width="6.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="219.30" y="415.5" ></text>
</g>
<g >
<title>vfs_read (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="805" width="5.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1167.01" y="815.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_not_relaxed&gt; (102,314,013 samples, 0.40%)</title><rect x="1082.4" y="581" width="4.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1085.40" y="591.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (34,162,017 samples, 0.13%)</title><rect x="1074.5" y="549" width="1.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1077.52" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (237,809,686 samples, 0.93%)</title><rect x="98.9" y="821" width="11.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.93" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,242,896 samples, 0.24%)</title><rect x="231.3" y="389" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="234.27" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (52,740,293 samples, 0.21%)</title><rect x="170.4" y="341" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.41" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (80,246,495 samples, 0.31%)</title><rect x="95.2" y="581" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.22" y="591.5" ></text>
</g>
<g >
<title>PyObject_GetItem (25,897,915 samples, 0.10%)</title><rect x="85.2" y="581" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="88.19" y="591.5" ></text>
</g>
<g >
<title>__GI___mmap64 (33,962,576 samples, 0.13%)</title><rect x="70.7" y="261" width="1.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="73.70" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (34,021,995 samples, 0.13%)</title><rect x="191.1" y="405" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="415.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,924 samples, 0.10%)</title><rect x="143.5" y="501" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="146.51" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,664 samples, 0.10%)</title><rect x="201.8" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.76" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (180,672,026 samples, 0.71%)</title><rect x="100.1" y="597" width="8.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="103.14" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,078 samples, 0.10%)</title><rect x="207.5" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="210.46" y="431.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (52,421,034 samples, 0.21%)</title><rect x="86.4" y="373" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="89.39" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,271 samples, 0.10%)</title><rect x="221.3" y="389" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="224.34" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (29,795,781 samples, 0.12%)</title><rect x="124.7" y="437" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.74" y="447.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (34,074,924 samples, 0.13%)</title><rect x="62.9" y="517" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="65.94" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_allocate (33,619,449 samples, 0.13%)</title><rect x="1132.7" y="645" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1135.65" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (218,757,699 samples, 0.86%)</title><rect x="118.4" y="741" width="10.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="751.5" ></text>
</g>
<g >
<title>PyBuffer_Release (33,138,934 samples, 0.13%)</title><rect x="700.9" y="485" width="1.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="703.87" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,735,126 samples, 0.10%)</title><rect x="117.2" y="597" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="120.20" y="607.5" ></text>
</g>
<g >
<title>__libc_start_main (11,404,382,256 samples, 44.66%)</title><rect x="637.0" y="1029" width="527.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="639.98" y="1039.5" >__libc_start_main</text>
</g>
<g >
<title>[python3.12] (26,207,124 samples, 0.10%)</title><rect x="137.0" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.00" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,314 samples, 0.10%)</title><rect x="84.0" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.98" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (29,795,781 samples, 0.12%)</title><rect x="124.7" y="533" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.74" y="543.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,021,995 samples, 0.13%)</title><rect x="191.1" y="485" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="194.09" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,294,663 samples, 0.10%)</title><rect x="98.9" y="437" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="101.93" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (26,221,506 samples, 0.10%)</title><rect x="226.9" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="229.92" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (67,679,069 samples, 0.27%)</title><rect x="166.1" y="389" width="3.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="169.08" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (72,532,213 samples, 0.28%)</title><rect x="48.6" y="965" width="3.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="51.64" y="975.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,208,540 samples, 0.10%)</title><rect x="187.5" y="565" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="190.46" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (66,709,822 samples, 0.26%)</title><rect x="1151.5" y="629" width="3.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1154.50" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="533" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="543.5" ></text>
</g>
<g >
<title>_dl_open (26,181,436 samples, 0.10%)</title><rect x="188.7" y="517" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="191.67" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (32,972,956 samples, 0.13%)</title><rect x="222.6" y="757" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="767.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::schedulePass (34,103,598 samples, 0.13%)</title><rect x="236.8" y="725" width="1.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="239.83" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,641 samples, 0.10%)</title><rect x="157.5" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.48" y="575.5" ></text>
</g>
<g >
<title>free@plt (33,562,729 samples, 0.13%)</title><rect x="711.5" y="469" width="1.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="714.49" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,529,649 samples, 0.13%)</title><rect x="251.1" y="981" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="254.10" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (52,425,899 samples, 0.21%)</title><rect x="197.8" y="341" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="200.79" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (131,233,022 samples, 0.51%)</title><rect x="150.2" y="645" width="6.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="153.21" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (33,128,933 samples, 0.13%)</title><rect x="148.7" y="501" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="151.67" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,807,835 samples, 0.31%)</title><rect x="111.1" y="549" width="3.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="114.13" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,624,566 samples, 0.13%)</title><rect x="228.1" y="581" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="231.14" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,924 samples, 0.10%)</title><rect x="143.5" y="597" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="146.51" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (32,972,956 samples, 0.13%)</title><rect x="222.6" y="389" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (32,972,956 samples, 0.13%)</title><rect x="222.6" y="533" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="225.55" y="543.5" ></text>
</g>
<g >
<title>do_page_fault (27,821,923 samples, 0.11%)</title><rect x="225.6" y="341" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="228.64" y="351.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (35,710,632 samples, 0.14%)</title><rect x="74.9" y="389" width="1.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="77.94" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,314 samples, 0.10%)</title><rect x="84.0" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.98" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,242,896 samples, 0.24%)</title><rect x="231.3" y="709" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="234.27" y="719.5" ></text>
</g>
<g >
<title>[libffi.so.7.1.0] (34,103,598 samples, 0.13%)</title><rect x="236.8" y="869" width="1.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="239.83" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,608,589 samples, 0.10%)</title><rect x="140.8" y="645" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.83" y="655.5" ></text>
</g>
<g >
<title>do_futex (3,184,120 samples, 0.01%)</title><rect x="1177.4" y="997" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1180.43" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,089 samples, 0.10%)</title><rect x="126.1" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.12" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (211,515,023 samples, 0.83%)</title><rect x="100.1" y="757" width="9.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.14" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (231,015,359 samples, 0.90%)</title><rect x="191.1" y="773" width="10.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="783.5" ></text>
</g>
<g >
<title>_PyAST_Compile (26,210,271 samples, 0.10%)</title><rect x="221.3" y="341" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="224.34" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (52,482,216 samples, 0.21%)</title><rect x="114.8" y="565" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.77" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,217,406 samples, 0.10%)</title><rect x="76.6" y="549" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="79.59" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (218,757,699 samples, 0.86%)</title><rect x="118.4" y="789" width="10.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="121.43" y="799.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,608,589 samples, 0.10%)</title><rect x="140.8" y="581" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="143.83" y="591.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (35,710,632 samples, 0.14%)</title><rect x="74.9" y="325" width="1.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="77.94" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (32,972,956 samples, 0.13%)</title><rect x="222.6" y="453" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="463.5" ></text>
</g>
<g >
<title>Nexullance_IT::get_routing_table (34,208,575 samples, 0.13%)</title><rect x="1046.3" y="725" width="1.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1049.31" y="735.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (33,436,054 samples, 0.13%)</title><rect x="1126.4" y="677" width="1.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1129.39" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,021,995 samples, 0.13%)</title><rect x="191.1" y="661" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.09" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="725" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="735.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (3,184,120 samples, 0.01%)</title><rect x="1177.4" y="965" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1180.43" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,221,506 samples, 0.10%)</title><rect x="226.9" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="229.92" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (25,897,915 samples, 0.10%)</title><rect x="85.2" y="533" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="88.19" y="543.5" ></text>
</g>
<g >
<title>do_brk_flags (67,577,419 samples, 0.26%)</title><rect x="705.6" y="293" width="3.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="708.56" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (28,758,057 samples, 0.11%)</title><rect x="164.7" y="309" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.75" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3,038,619 samples, 0.01%)</title><rect x="634.7" y="917" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="637.66" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,540,248 samples, 0.21%)</title><rect x="151.4" y="389" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="154.43" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,971,420 samples, 0.13%)</title><rect x="77.8" y="357" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="80.80" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,491 samples, 0.10%)</title><rect x="156.3" y="709" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="719.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (34,048,876 samples, 0.13%)</title><rect x="709.9" y="469" width="1.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="712.91" y="479.5" ></text>
</g>
<g >
<title>do_page_fault (33,128,933 samples, 0.13%)</title><rect x="148.7" y="357" width="1.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="151.67" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,208,540 samples, 0.10%)</title><rect x="187.5" y="501" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="190.46" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,517 samples, 0.10%)</title><rect x="130.1" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (33,617,398 samples, 0.13%)</title><rect x="1134.2" y="645" width="1.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1137.21" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (123,866,183 samples, 0.49%)</title><rect x="69.2" y="693" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.21" y="703.5" ></text>
</g>
<g >
<title>vmacache_find (32,183,736 samples, 0.13%)</title><rect x="956.5" y="373" width="1.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="959.49" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (104,774,088 samples, 0.41%)</title><rect x="158.7" y="597" width="4.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="161.69" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (34,125,270 samples, 0.13%)</title><rect x="203.0" y="565" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="205.97" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,211,345 samples, 0.10%)</title><rect x="52.0" y="533" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="54.99" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (31,408,262 samples, 0.12%)</title><rect x="142.1" y="581" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.06" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,334,934 samples, 0.24%)</title><rect x="201.8" y="709" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="204.76" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,486 samples, 0.10%)</title><rect x="95.2" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.22" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,117 samples, 0.10%)</title><rect x="132.9" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.89" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (177,178,313 samples, 0.69%)</title><rect x="56.3" y="709" width="8.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="59.33" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,517 samples, 0.10%)</title><rect x="130.1" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,212,517 samples, 0.10%)</title><rect x="130.1" y="565" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="133.11" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (31,971,420 samples, 0.13%)</title><rect x="77.8" y="501" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.80" y="511.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,207,249 samples, 0.10%)</title><rect x="50.8" y="565" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="53.78" y="575.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (237,809,686 samples, 0.93%)</title><rect x="98.9" y="805" width="11.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="101.93" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (59,971,167 samples, 0.23%)</title><rect x="52.0" y="901" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,217,406 samples, 0.10%)</title><rect x="76.6" y="677" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.59" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,217,406 samples, 0.10%)</title><rect x="76.6" y="597" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.59" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (78,807,835 samples, 0.31%)</title><rect x="111.1" y="453" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.13" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (154,447,785 samples, 0.60%)</title><rect x="222.6" y="853" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="863.5" ></text>
</g>
<g >
<title>do_numa_page (34,024,903 samples, 0.13%)</title><rect x="669.6" y="773" width="1.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="672.58" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (93,844,012 samples, 0.37%)</title><rect x="166.1" y="869" width="4.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.08" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="821" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="831.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,924 samples, 0.10%)</title><rect x="143.5" y="709" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="146.51" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (165,146,677 samples, 0.65%)</title><rect x="208.7" y="581" width="7.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="211.67" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (34,109,534 samples, 0.13%)</title><rect x="229.7" y="693" width="1.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="232.69" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (206,306,201 samples, 0.81%)</title><rect x="79.3" y="757" width="9.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="82.28" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="469" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (67,679,069 samples, 0.27%)</title><rect x="166.1" y="597" width="3.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="169.08" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (52,421,034 samples, 0.21%)</title><rect x="86.4" y="565" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="89.39" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (197,576,523 samples, 0.77%)</title><rect x="147.1" y="997" width="9.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="150.14" y="1007.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,048,891 samples, 0.10%)</title><rect x="88.8" y="549" width="1.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="91.81" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,733 samples, 0.10%)</title><rect x="155.1" y="549" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.06" y="559.5" ></text>
</g>
<g >
<title>handle_mm_fault (34,024,903 samples, 0.13%)</title><rect x="669.6" y="805" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="672.58" y="815.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (136,500,219 samples, 0.53%)</title><rect x="118.4" y="421" width="6.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="121.43" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,581 samples, 0.21%)</title><rect x="45.0" y="709" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="719.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (62,857,718 samples, 0.25%)</title><rect x="204.6" y="453" width="2.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="207.55" y="463.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (33,933,369 samples, 0.13%)</title><rect x="131.3" y="565" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="134.32" y="575.5" ></text>
</g>
<g >
<title>do_sys_open (26,211,314 samples, 0.10%)</title><rect x="84.0" y="245" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="86.98" y="255.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,806,834 samples, 0.13%)</title><rect x="224.1" y="565" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="227.08" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (66,343,501 samples, 0.26%)</title><rect x="147.1" y="661" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="150.14" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,632,261 samples, 0.31%)</title><rect x="672.7" y="485" width="3.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="675.69" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (33,806,834 samples, 0.13%)</title><rect x="224.1" y="597" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="227.08" y="607.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,214,177 samples, 0.10%)</title><rect x="172.8" y="421" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="175.85" y="431.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (25,897,915 samples, 0.10%)</title><rect x="85.2" y="453" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="88.19" y="463.5" ></text>
</g>
<g >
<title>IsAligned (33,859,030 samples, 0.13%)</title><rect x="1040.1" y="661" width="1.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1043.06" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="341" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (515,132,875 samples, 2.02%)</title><rect x="166.1" y="949" width="23.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.08" y="959.5" >_..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,951,168 samples, 0.13%)</title><rect x="54.8" y="581" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="57.76" y="591.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::update (34,120,277 samples, 0.13%)</title><rect x="1080.8" y="597" width="1.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1083.83" y="607.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (180,672,026 samples, 0.71%)</title><rect x="100.1" y="629" width="8.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="103.14" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (78,634,538 samples, 0.31%)</title><rect x="196.6" y="501" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.57" y="511.5" ></text>
</g>
<g >
<title>do_exit (133,536,178 samples, 0.52%)</title><rect x="1171.3" y="981" width="6.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1174.26" y="991.5" ></text>
</g>
<g >
<title>clear_page_erms (34,134,051 samples, 0.13%)</title><rect x="702.4" y="229" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="705.40" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (33,951,168 samples, 0.13%)</title><rect x="54.8" y="453" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (52,421,034 samples, 0.21%)</title><rect x="86.4" y="437" width="2.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="89.39" y="447.5" ></text>
</g>
<g >
<title>_PyObject_CallMethod (7,460,114,942 samples, 29.22%)</title><rect x="695.3" y="645" width="344.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="698.30" y="655.5" >_PyObject_CallMethod</text>
</g>
<g >
<title>_PyFunction_Vectorcall (109,274,440 samples, 0.43%)</title><rect x="57.9" y="533" width="5.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="60.89" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (34,125,270 samples, 0.13%)</title><rect x="203.0" y="293" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.97" y="303.5" ></text>
</g>
<g >
<title>[dtypes.cpython-312-x86_64-linux-gnu.so] (26,048,891 samples, 0.10%)</title><rect x="88.8" y="773" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="91.81" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,206 samples, 0.10%)</title><rect x="163.5" y="421" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.53" y="431.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (26,181,436 samples, 0.10%)</title><rect x="188.7" y="453" width="1.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="191.67" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (421,288,863 samples, 1.65%)</title><rect x="170.4" y="773" width="19.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="173.41" y="783.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,806,834 samples, 0.13%)</title><rect x="224.1" y="533" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="227.08" y="543.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (28,758,057 samples, 0.11%)</title><rect x="164.7" y="501" width="1.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="167.75" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (196,993,364 samples, 0.77%)</title><rect x="192.7" y="533" width="9.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="195.66" y="543.5" ></text>
</g>
<g >
<title>addPassesToGenerateCode (34,103,598 samples, 0.13%)</title><rect x="236.8" y="773" width="1.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="239.83" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (52,432,581 samples, 0.21%)</title><rect x="45.0" y="789" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="48.00" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (67,679,069 samples, 0.27%)</title><rect x="166.1" y="485" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.08" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (82,886,498 samples, 0.32%)</title><rect x="217.5" y="309" width="3.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="220.51" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,217,406 samples, 0.10%)</title><rect x="76.6" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.59" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,209,610 samples, 0.10%)</title><rect x="111.1" y="389" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="114.13" y="399.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (26,218,610 samples, 0.10%)</title><rect x="696.9" y="549" width="1.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="699.87" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (52,420,284 samples, 0.21%)</title><rect x="10.0" y="1029" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="13.04" y="1039.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,206 samples, 0.10%)</title><rect x="163.5" y="613" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="166.53" y="623.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (68,034,374 samples, 0.27%)</title><rect x="1098.1" y="565" width="3.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1101.06" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="261" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (96,572,314 samples, 0.38%)</title><rect x="183.0" y="277" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.00" y="287.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,410,200 samples, 0.21%)</title><rect x="104.9" y="325" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="107.86" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (33,951,168 samples, 0.13%)</title><rect x="54.8" y="565" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="437" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,164,943 samples, 0.10%)</title><rect x="169.2" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="172.20" y="495.5" ></text>
</g>
<g >
<title>start_thread (8,233,201,862 samples, 32.24%)</title><rect x="254.9" y="1029" width="380.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="257.92" y="1039.5" >start_thread</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,744,075 samples, 0.13%)</title><rect x="180.2" y="405" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="183.23" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (135,304,273 samples, 0.53%)</title><rect x="216.3" y="629" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="219.30" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (78,954,470 samples, 0.31%)</title><rect x="170.4" y="597" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.41" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,252,610 samples, 0.10%)</title><rect x="127.3" y="357" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="130.33" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,164,943 samples, 0.10%)</title><rect x="169.2" y="261" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="172.20" y="271.5" ></text>
</g>
<g >
<title>clear_page_erms (26,201,768 samples, 0.10%)</title><rect x="73.7" y="117" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="76.73" y="127.5" ></text>
</g>
<g >
<title>_PyObject_Call (31,971,420 samples, 0.13%)</title><rect x="77.8" y="693" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="80.80" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (30,842,997 samples, 0.12%)</title><rect x="108.5" y="597" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.49" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,457,574 samples, 0.21%)</title><rect x="208.7" y="389" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="211.67" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (165,146,677 samples, 0.65%)</title><rect x="208.7" y="693" width="7.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="211.67" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (96,572,314 samples, 0.38%)</title><rect x="183.0" y="373" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="186.00" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,204,568 samples, 0.10%)</title><rect x="235.6" y="645" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="238.62" y="655.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (33,803,067 samples, 0.13%)</title><rect x="707.1" y="229" width="1.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="710.12" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (34,125,270 samples, 0.13%)</title><rect x="203.0" y="373" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.97" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="837" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="847.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (34,102,323 samples, 0.13%)</title><rect x="82.4" y="165" width="1.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="85.41" y="175.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (107,219,221 samples, 0.42%)</title><rect x="174.1" y="517" width="4.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="177.06" y="527.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,210,491 samples, 0.10%)</title><rect x="156.3" y="757" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="159.27" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (67,679,069 samples, 0.27%)</title><rect x="166.1" y="549" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.08" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,210,491 samples, 0.10%)</title><rect x="156.3" y="629" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="159.27" y="639.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (52,421,034 samples, 0.21%)</title><rect x="86.4" y="469" width="2.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="89.39" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (33,214,568 samples, 0.13%)</title><rect x="147.1" y="453" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (34,063,632 samples, 0.13%)</title><rect x="214.7" y="437" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.73" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,145,886 samples, 0.24%)</title><rect x="130.1" y="837" width="2.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="133.11" y="847.5" ></text>
</g>
<g >
<title>PyObject_Hash (26,207,575 samples, 0.10%)</title><rect x="32.5" y="1029" width="1.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="35.52" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (603,494,545 samples, 2.36%)</title><rect x="643.3" y="949" width="27.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="646.27" y="959.5" >[..</text>
</g>
<g >
<title>_PyObject_Call (104,530,263 samples, 0.41%)</title><rect x="84.0" y="661" width="4.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="86.98" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,390 samples, 0.10%)</title><rect x="174.1" y="389" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="177.06" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (33,951,168 samples, 0.13%)</title><rect x="54.8" y="549" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (26,213,486 samples, 0.10%)</title><rect x="95.2" y="517" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="98.22" y="527.5" ></text>
</g>
<g >
<title>_start (11,528,630,558 samples, 45.15%)</title><rect x="637.0" y="1045" width="532.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="639.98" y="1055.5" >_start</text>
</g>
<g >
<title>[python3.12] (26,294,663 samples, 0.10%)</title><rect x="98.9" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.93" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (78,807,835 samples, 0.31%)</title><rect x="111.1" y="709" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.13" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (136,500,219 samples, 0.53%)</title><rect x="118.4" y="597" width="6.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="121.43" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (31,971,420 samples, 0.13%)</title><rect x="77.8" y="773" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.80" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,768 samples, 0.10%)</title><rect x="57.9" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="60.89" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (115,150,104 samples, 0.45%)</title><rect x="132.9" y="789" width="5.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="135.89" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="309" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (177,178,313 samples, 0.69%)</title><rect x="56.3" y="645" width="8.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="59.33" y="655.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,294,663 samples, 0.10%)</title><rect x="98.9" y="453" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.93" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,774,088 samples, 0.41%)</title><rect x="158.7" y="581" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="161.69" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (60,092,377 samples, 0.24%)</title><rect x="234.1" y="965" width="2.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="237.05" y="975.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (26,103,680 samples, 0.10%)</title><rect x="189.9" y="421" width="1.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="192.88" y="431.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (26,211,314 samples, 0.10%)</title><rect x="84.0" y="469" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="86.98" y="479.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (67,679,069 samples, 0.27%)</title><rect x="166.1" y="469" width="3.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="169.08" y="479.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (26,164,943 samples, 0.10%)</title><rect x="169.2" y="117" width="1.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="172.20" y="127.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,208,540 samples, 0.10%)</title><rect x="187.5" y="581" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="190.46" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,213,486 samples, 0.10%)</title><rect x="95.2" y="373" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="98.22" y="383.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (33,962,576 samples, 0.13%)</title><rect x="70.7" y="181" width="1.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="73.70" y="191.5" ></text>
</g>
<g >
<title>[python3.12] (89,071,796 samples, 0.35%)</title><rect x="204.6" y="789" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.55" y="799.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,432,581 samples, 0.21%)</title><rect x="45.0" y="757" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="48.00" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (67,679,069 samples, 0.27%)</title><rect x="166.1" y="453" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.08" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (60,242,896 samples, 0.24%)</title><rect x="231.3" y="725" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.27" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,214,177 samples, 0.10%)</title><rect x="172.8" y="389" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="175.85" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_check_len (68,176,878 samples, 0.27%)</title><rect x="1135.8" y="645" width="3.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1138.76" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (27,821,923 samples, 0.11%)</title><rect x="225.6" y="501" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="228.64" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (56,584,638 samples, 0.22%)</title><rect x="138.2" y="869" width="2.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="141.21" y="879.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (68,348,513 samples, 0.27%)</title><rect x="1148.3" y="629" width="3.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1151.34" y="639.5" ></text>
</g>
<g >
<title>dl_open_worker (26,103,680 samples, 0.10%)</title><rect x="189.9" y="405" width="1.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="192.88" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,002,898 samples, 0.10%)</title><rect x="153.9" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="156.86" y="383.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (169,854,191 samples, 0.67%)</title><rect x="790.7" y="341" width="7.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="793.65" y="351.5" ></text>
</g>
<g >
<title>llvm::MCJIT::generateCodeForModule (34,103,598 samples, 0.13%)</title><rect x="236.8" y="821" width="1.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="239.83" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (25,897,915 samples, 0.10%)</title><rect x="85.2" y="485" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="88.19" y="495.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,221,506 samples, 0.10%)</title><rect x="226.9" y="389" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="229.92" y="399.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,092,377 samples, 0.24%)</title><rect x="234.1" y="917" width="2.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="237.05" y="927.5" ></text>
</g>
<g >
<title>[python3.12] (33,951,168 samples, 0.13%)</title><rect x="54.8" y="805" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="815.5" ></text>
</g>
<g >
<title>PyEval_RestoreThread (60,753,411 samples, 0.24%)</title><rect x="708.7" y="485" width="2.8" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="711.68" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (60,092,377 samples, 0.24%)</title><rect x="234.1" y="981" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (78,807,835 samples, 0.31%)</title><rect x="111.1" y="421" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="114.13" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (93,844,012 samples, 0.37%)</title><rect x="166.1" y="901" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.08" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (136,500,219 samples, 0.53%)</title><rect x="118.4" y="437" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (287,400,527 samples, 1.13%)</title><rect x="64.5" y="757" width="13.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="67.52" y="767.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_down (101,649,073 samples, 0.40%)</title><rect x="1068.2" y="581" width="4.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1071.24" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,314 samples, 0.10%)</title><rect x="84.0" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.98" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="901" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="911.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (31,971,420 samples, 0.13%)</title><rect x="77.8" y="549" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="80.80" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (232,355,092 samples, 0.91%)</title><rect x="79.3" y="901" width="10.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="82.28" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (101,606,306 samples, 0.40%)</title><rect x="64.5" y="373" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="67.52" y="383.5" ></text>
</g>
<g >
<title>PyThread_release_lock (26,294,663 samples, 0.10%)</title><rect x="98.9" y="325" width="1.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="101.93" y="335.5" ></text>
</g>
<g >
<title>PyObject_GetItem (26,210,206 samples, 0.10%)</title><rect x="163.5" y="437" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="166.53" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,210,491 samples, 0.10%)</title><rect x="156.3" y="405" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="159.27" y="415.5" ></text>
</g>
<g >
<title>std::map&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt;, std::less&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;unsigned long, unsigned long&gt; const, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; &gt;::insert&lt;std::pair&lt;std::pair&lt;int, int&gt;, std::vector&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt;, std::allocator&lt;std::pair&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, float&gt; &gt; &gt; &gt; &gt; (34,208,575 samples, 0.13%)</title><rect x="1046.3" y="709" width="1.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1049.31" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (175,295,990 samples, 0.69%)</title><rect x="130.1" y="869" width="8.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="133.11" y="879.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,089 samples, 0.10%)</title><rect x="126.1" y="469" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.12" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (26,164,943 samples, 0.10%)</title><rect x="169.2" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.20" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (78,954,470 samples, 0.31%)</title><rect x="170.4" y="613" width="3.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="173.41" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (212,165,483 samples, 0.83%)</title><rect x="156.3" y="949" width="9.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="159.27" y="959.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (88,938,987 samples, 0.35%)</title><rect x="134.1" y="613" width="4.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="137.10" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (60,242,896 samples, 0.24%)</title><rect x="231.3" y="757" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.27" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (34,125,270 samples, 0.13%)</title><rect x="203.0" y="357" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.97" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (80,246,495 samples, 0.31%)</title><rect x="95.2" y="629" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="98.22" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (34,021,995 samples, 0.13%)</title><rect x="191.1" y="341" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="351.5" ></text>
</g>
<g >
<title>handle_mm_fault (476,401,070 samples, 1.87%)</title><rect x="958.0" y="389" width="22.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="960.98" y="399.5" >h..</text>
</g>
<g >
<title>PyArray_AssignRawScalar (33,759,822 samples, 0.13%)</title><rect x="53.2" y="821" width="1.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="56.20" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,971,420 samples, 0.13%)</title><rect x="77.8" y="453" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="80.80" y="463.5" ></text>
</g>
<g >
<title>filename_lookup (26,155,874 samples, 0.10%)</title><rect x="162.3" y="245" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="165.33" y="255.5" ></text>
</g>
<g >
<title>[python3.12] (26,221,506 samples, 0.10%)</title><rect x="226.9" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="229.92" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (158,025,177 samples, 0.62%)</title><rect x="111.1" y="933" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.13" y="943.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,208,540 samples, 0.10%)</title><rect x="187.5" y="373" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="190.46" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="869" width="5.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1167.01" y="879.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (56,584,638 samples, 0.22%)</title><rect x="138.2" y="629" width="2.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="141.21" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (72,532,213 samples, 0.28%)</title><rect x="48.6" y="869" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="879.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (78,625,471 samples, 0.31%)</title><rect x="211.1" y="405" width="3.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="214.09" y="415.5" ></text>
</g>
<g >
<title>dl_open_worker (26,181,436 samples, 0.10%)</title><rect x="188.7" y="485" width="1.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="191.67" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (79,018,391 samples, 0.31%)</title><rect x="150.2" y="469" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="153.21" y="479.5" ></text>
</g>
<g >
<title>PyObject_IsTrue (26,233,280 samples, 0.10%)</title><rect x="90.0" y="1029" width="1.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="93.02" y="1039.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (197,576,523 samples, 0.77%)</title><rect x="147.1" y="725" width="9.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="150.14" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (80,246,495 samples, 0.31%)</title><rect x="95.2" y="709" width="3.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="98.22" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (60,145,886 samples, 0.24%)</title><rect x="130.1" y="821" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="831.5" ></text>
</g>
<g >
<title>openaux (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="933" width="5.8" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1167.01" y="943.5" ></text>
</g>
<g >
<title>[python3.12] (264,030,292 samples, 1.03%)</title><rect x="98.9" y="933" width="12.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="101.93" y="943.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (131,233,022 samples, 0.51%)</title><rect x="150.2" y="693" width="6.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="153.21" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (60,092,377 samples, 0.24%)</title><rect x="234.1" y="885" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="895.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (135,304,273 samples, 0.53%)</title><rect x="216.3" y="597" width="6.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="219.30" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,951,168 samples, 0.13%)</title><rect x="54.8" y="725" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.76" y="735.5" ></text>
</g>
<g >
<title>handle_mm_fault (26,201,768 samples, 0.10%)</title><rect x="73.7" y="213" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="76.73" y="223.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,252,610 samples, 0.10%)</title><rect x="127.3" y="405" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="130.33" y="415.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (80,246,495 samples, 0.31%)</title><rect x="95.2" y="693" width="3.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="98.22" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (232,355,092 samples, 0.91%)</title><rect x="79.3" y="805" width="10.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.28" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,201,768 samples, 0.10%)</title><rect x="73.7" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="76.73" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (80,246,495 samples, 0.31%)</title><rect x="95.2" y="677" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.22" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (72,532,213 samples, 0.28%)</title><rect x="48.6" y="1013" width="3.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="51.64" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (88,938,987 samples, 0.35%)</title><rect x="134.1" y="597" width="4.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.10" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (211,515,023 samples, 0.83%)</title><rect x="100.1" y="677" width="9.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.14" y="687.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (123,866,183 samples, 0.49%)</title><rect x="69.2" y="677" width="5.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="72.21" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,210,206 samples, 0.10%)</title><rect x="163.5" y="533" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="166.53" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Call (89,071,796 samples, 0.35%)</title><rect x="204.6" y="709" width="4.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="207.55" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,828,949 samples, 0.13%)</title><rect x="56.3" y="533" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="59.33" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (32,972,956 samples, 0.13%)</title><rect x="222.6" y="741" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="225.55" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (101,606,306 samples, 0.40%)</title><rect x="64.5" y="645" width="4.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="67.52" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (34,074,924 samples, 0.13%)</title><rect x="62.9" y="357" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.94" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (185,954,992 samples, 0.73%)</title><rect x="157.5" y="741" width="8.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="160.48" y="751.5" ></text>
</g>
<g >
<title>[python3.12] (104,839,818 samples, 0.41%)</title><rect x="672.7" y="741" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (67,679,069 samples, 0.27%)</title><rect x="166.1" y="581" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.08" y="591.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,887,809 samples, 0.13%)</title><rect x="234.1" y="437" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="237.05" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="677" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="687.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (68,040,040 samples, 0.27%)</title><rect x="798.5" y="357" width="3.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="801.50" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,209,924 samples, 0.10%)</title><rect x="143.5" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="146.51" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33,715,088 samples, 0.13%)</title><rect x="1162.5" y="885" width="1.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1165.45" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (122,777,601 samples, 0.48%)</title><rect x="181.8" y="469" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.79" y="479.5" ></text>
</g>
<g >
<title>[timestamps.cpython-312-x86_64-linux-gnu.so] (26,103,680 samples, 0.10%)</title><rect x="189.9" y="949" width="1.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="192.88" y="959.5" ></text>
</g>
<g >
<title>open_verify (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="901" width="5.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1167.01" y="911.5" ></text>
</g>
<g >
<title>do_user_addr_fault (33,128,933 samples, 0.13%)</title><rect x="148.7" y="325" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="151.67" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (136,500,219 samples, 0.53%)</title><rect x="118.4" y="373" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="383.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,211,345 samples, 0.10%)</title><rect x="52.0" y="645" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="54.99" y="655.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (26,164,943 samples, 0.10%)</title><rect x="169.2" y="149" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="172.20" y="159.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,269,387 samples, 0.10%)</title><rect x="116.0" y="357" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.98" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,345 samples, 0.10%)</title><rect x="52.0" y="325" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (35,710,632 samples, 0.14%)</title><rect x="74.9" y="677" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="77.94" y="687.5" ></text>
</g>
<g >
<title>__mod_memcg_state (33,451,159 samples, 0.13%)</title><rect x="1175.9" y="805" width="1.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1178.89" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,557 samples, 0.10%)</title><rect x="676.3" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="679.33" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (101,775,938 samples, 0.40%)</title><rect x="79.3" y="661" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.28" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (72,532,213 samples, 0.28%)</title><rect x="48.6" y="933" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="943.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (33,916,728 samples, 0.13%)</title><rect x="1099.6" y="533" width="1.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1102.64" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (54,033,009 samples, 0.21%)</title><rect x="96.4" y="485" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.43" y="495.5" ></text>
</g>
<g >
<title>__memset_erms (29,795,781 samples, 0.12%)</title><rect x="124.7" y="389" width="1.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="127.74" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (52,432,581 samples, 0.21%)</title><rect x="45.0" y="693" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="703.5" ></text>
</g>
<g >
<title>do_anonymous_page (26,201,768 samples, 0.10%)</title><rect x="73.7" y="181" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="76.73" y="191.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (33,715,584 samples, 0.13%)</title><rect x="1058.8" y="677" width="1.6" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1061.83" y="687.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (26,212,641 samples, 0.10%)</title><rect x="157.5" y="357" width="1.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="160.48" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (93,844,012 samples, 0.37%)</title><rect x="166.1" y="709" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.08" y="719.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,924 samples, 0.10%)</title><rect x="143.5" y="677" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="146.51" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,269,387 samples, 0.10%)</title><rect x="116.0" y="501" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="118.98" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,206 samples, 0.10%)</title><rect x="163.5" y="293" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.53" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,220,606 samples, 0.10%)</title><rect x="109.9" y="645" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="112.92" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (72,532,213 samples, 0.28%)</title><rect x="48.6" y="805" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="815.5" ></text>
</g>
<g >
<title>do_page_fault (34,024,903 samples, 0.13%)</title><rect x="669.6" y="853" width="1.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="672.58" y="863.5" ></text>
</g>
<g >
<title>xas_start (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="677" width="5.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1167.01" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,924 samples, 0.10%)</title><rect x="143.5" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="146.51" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,217,406 samples, 0.10%)</title><rect x="76.6" y="501" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="79.59" y="511.5" ></text>
</g>
<g >
<title>[unknown] (4,346,931,470 samples, 17.02%)</title><rect x="45.0" y="1045" width="200.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="48.00" y="1055.5" >[unknown]</text>
</g>
<g >
<title>do_user_addr_fault (34,104,445 samples, 0.13%)</title><rect x="695.3" y="453" width="1.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="698.30" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (52,422,650 samples, 0.21%)</title><rect x="59.1" y="341" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.11" y="351.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (96,572,314 samples, 0.38%)</title><rect x="183.0" y="341" width="4.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="186.00" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (30,643,022 samples, 0.12%)</title><rect x="61.5" y="405" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.53" y="415.5" ></text>
</g>
<g >
<title>do_page_fault (542,678,834 samples, 2.13%)</title><rect x="954.9" y="437" width="25.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="957.91" y="447.5" >d..</text>
</g>
<g >
<title>[python3.12] (26,207,557 samples, 0.10%)</title><rect x="676.3" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="679.33" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (196,993,364 samples, 0.77%)</title><rect x="192.7" y="565" width="9.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.66" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (60,049,855 samples, 0.24%)</title><rect x="689.7" y="645" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="692.74" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (34,147,781 samples, 0.13%)</title><rect x="1076.1" y="549" width="1.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1079.10" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (33,624,566 samples, 0.13%)</title><rect x="228.1" y="469" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.14" y="479.5" ></text>
</g>
<g >
<title>do_user_addr_fault (33,866,376 samples, 0.13%)</title><rect x="242.8" y="917" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="245.76" y="927.5" ></text>
</g>
<g >
<title>_PyObject_Call (33,887,809 samples, 0.13%)</title><rect x="234.1" y="565" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="237.05" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,002,898 samples, 0.10%)</title><rect x="153.9" y="453" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="156.86" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (84,707,870 samples, 0.33%)</title><rect x="192.7" y="453" width="3.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="195.66" y="463.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (52,432,581 samples, 0.21%)</title><rect x="45.0" y="997" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="48.00" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (31,408,262 samples, 0.12%)</title><rect x="142.1" y="373" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.06" y="383.5" ></text>
</g>
<g >
<title>Py_FinalizeEx (772,823,340 samples, 3.03%)</title><rect x="637.0" y="981" width="35.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="639.98" y="991.5" >Py_..</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (78,632,261 samples, 0.31%)</title><rect x="672.7" y="517" width="3.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="675.69" y="527.5" ></text>
</g>
<g >
<title>PyIter_Next (26,375,403 samples, 0.10%)</title><rect x="112.3" y="325" width="1.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="115.34" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (78,634,538 samples, 0.31%)</title><rect x="196.6" y="485" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.57" y="495.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,252,610 samples, 0.10%)</title><rect x="127.3" y="501" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="130.33" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,212,517 samples, 0.10%)</title><rect x="130.1" y="501" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="133.11" y="511.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,951,168 samples, 0.13%)</title><rect x="54.8" y="757" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="57.76" y="767.5" ></text>
</g>
<g >
<title>boost::optional&lt;std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; &gt;::operator (33,700,461 samples, 0.13%)</title><rect x="1052.6" y="661" width="1.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1055.57" y="671.5" ></text>
</g>
<g >
<title>copy_page_to_iter (32,972,956 samples, 0.13%)</title><rect x="222.6" y="133" width="1.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="225.55" y="143.5" ></text>
</g>
<g >
<title>[python3.12] (33,951,168 samples, 0.13%)</title><rect x="54.8" y="309" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (27,821,923 samples, 0.11%)</title><rect x="225.6" y="517" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="228.64" y="527.5" ></text>
</g>
<g >
<title>PyImport_Import (26,048,891 samples, 0.10%)</title><rect x="88.8" y="501" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="91.81" y="511.5" ></text>
</g>
<g >
<title>PyNumber_Remainder (26,210,206 samples, 0.10%)</title><rect x="163.5" y="469" width="1.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="166.53" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (832,586,848 samples, 3.26%)</title><rect x="166.1" y="981" width="38.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="169.08" y="991.5" >[py..</text>
</g>
<g >
<title>[python3.12] (52,432,581 samples, 0.21%)</title><rect x="45.0" y="805" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="48.00" y="815.5" ></text>
</g>
<g >
<title>[python3.12] (65,522,071 samples, 0.26%)</title><rect x="70.7" y="405" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.70" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,608,589 samples, 0.10%)</title><rect x="140.8" y="629" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="143.83" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (121,474,829 samples, 0.48%)</title><rect x="224.1" y="773" width="5.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.08" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,271 samples, 0.10%)</title><rect x="221.3" y="357" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="224.34" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (32,972,956 samples, 0.13%)</title><rect x="222.6" y="501" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="225.55" y="511.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (79,622,491 samples, 0.31%)</title><rect x="254.9" y="853" width="3.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="257.94" y="863.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (31,408,262 samples, 0.12%)</title><rect x="142.1" y="437" width="1.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="145.06" y="447.5" ></text>
</g>
<g >
<title>alloc_pages_vma (26,181,436 samples, 0.10%)</title><rect x="188.7" y="293" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="191.67" y="303.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,207,124 samples, 0.10%)</title><rect x="137.0" y="405" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="140.00" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,733 samples, 0.10%)</title><rect x="155.1" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="158.06" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (83,743,036 samples, 0.33%)</title><rect x="142.1" y="997" width="3.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.06" y="1007.5" ></text>
</g>
<g >
<title>alloc_pages_vma (33,128,933 samples, 0.13%)</title><rect x="148.7" y="261" width="1.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="151.67" y="271.5" ></text>
</g>
<g >
<title>alloc_pages_vma (169,854,191 samples, 0.67%)</title><rect x="790.7" y="357" width="7.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="793.65" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (33,806,834 samples, 0.13%)</title><rect x="224.1" y="501" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="227.08" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,641 samples, 0.10%)</title><rect x="157.5" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.48" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (97,664,415 samples, 0.38%)</title><rect x="69.2" y="517" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="72.21" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (78,632,261 samples, 0.31%)</title><rect x="672.7" y="469" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="675.69" y="479.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (34,120,277 samples, 0.13%)</title><rect x="1080.8" y="581" width="1.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1083.83" y="591.5" ></text>
</g>
<g >
<title>_PyImport_GetModuleAttr (28,613,862 samples, 0.11%)</title><rect x="175.3" y="325" width="1.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="178.27" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (177,178,313 samples, 0.69%)</title><rect x="56.3" y="693" width="8.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="59.33" y="703.5" ></text>
</g>
<g >
<title>__do_page_fault (339,743,190 samples, 1.33%)</title><rect x="789.1" y="437" width="15.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="792.08" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (33,951,168 samples, 0.13%)</title><rect x="54.8" y="533" width="1.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="57.76" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (72,532,213 samples, 0.28%)</title><rect x="48.6" y="725" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (26,269,387 samples, 0.10%)</title><rect x="116.0" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="118.98" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (33,887,809 samples, 0.13%)</title><rect x="234.1" y="677" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="237.05" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (60,242,896 samples, 0.24%)</title><rect x="231.3" y="341" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="234.27" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (34,125,270 samples, 0.13%)</title><rect x="203.0" y="501" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="205.97" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,314 samples, 0.10%)</title><rect x="84.0" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.98" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (136,500,219 samples, 0.53%)</title><rect x="118.4" y="501" width="6.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="121.43" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,211,314 samples, 0.10%)</title><rect x="84.0" y="293" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="86.98" y="303.5" ></text>
</g>
<g >
<title>[python3.12] (25,897,915 samples, 0.10%)</title><rect x="85.2" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.19" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (34,021,995 samples, 0.13%)</title><rect x="191.1" y="389" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.09" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call (154,444,807 samples, 0.60%)</title><rect x="229.7" y="1029" width="7.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="232.69" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (175,295,990 samples, 0.69%)</title><rect x="130.1" y="981" width="8.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="991.5" ></text>
</g>
<g >
<title>do_mmap (33,962,576 samples, 0.13%)</title><rect x="70.7" y="149" width="1.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="73.70" y="159.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (68,034,374 samples, 0.27%)</title><rect x="1098.1" y="581" width="3.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1101.06" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (33,962,576 samples, 0.13%)</title><rect x="70.7" y="197" width="1.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="73.70" y="207.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (196,993,364 samples, 0.77%)</title><rect x="192.7" y="613" width="9.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="195.66" y="623.5" ></text>
</g>
<g >
<title>[python3.12] (34,125,270 samples, 0.13%)</title><rect x="203.0" y="437" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.97" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (56,584,638 samples, 0.22%)</title><rect x="138.2" y="981" width="2.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="141.21" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (104,839,818 samples, 0.41%)</title><rect x="672.7" y="709" width="4.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="675.69" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,735,126 samples, 0.10%)</title><rect x="117.2" y="581" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="120.20" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (29,795,781 samples, 0.12%)</title><rect x="124.7" y="581" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.74" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (31,559,495 samples, 0.12%)</title><rect x="72.3" y="341" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="75.27" y="351.5" ></text>
</g>
<g >
<title>perf_iterate_sb (33,962,576 samples, 0.13%)</title><rect x="70.7" y="101" width="1.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="73.70" y="111.5" ></text>
</g>
<g >
<title>PyIter_Next (54,033,009 samples, 0.21%)</title><rect x="96.4" y="437" width="2.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="99.43" y="447.5" ></text>
</g>
<g >
<title>__do_page_fault (34,102,323 samples, 0.13%)</title><rect x="82.4" y="261" width="1.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="85.41" y="271.5" ></text>
</g>
<g >
<title>calculate_sigpending (6,641,246 samples, 0.03%)</title><rect x="254.2" y="997" width="0.3" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="257.22" y="1007.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (80,246,495 samples, 0.31%)</title><rect x="95.2" y="837" width="3.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="98.22" y="847.5" ></text>
</g>
<g >
<title>vfs_statx (26,201,209 samples, 0.10%)</title><rect x="177.8" y="261" width="1.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="180.80" y="271.5" ></text>
</g>
<g >
<title>[python3.12] (762,856,520 samples, 2.99%)</title><rect x="54.8" y="1013" width="35.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="57.76" y="1023.5" >[p..</text>
</g>
<g >
<title>__handle_mm_fault (33,128,933 samples, 0.13%)</title><rect x="148.7" y="293" width="1.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="151.67" y="303.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,207,557 samples, 0.10%)</title><rect x="676.3" y="453" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="679.33" y="463.5" ></text>
</g>
<g >
<title>_PyObject_Call (46,324,964 samples, 0.18%)</title><rect x="48.6" y="469" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="51.64" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="229" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="239.5" ></text>
</g>
<g >
<title>[python3.12] (28,758,057 samples, 0.11%)</title><rect x="164.7" y="421" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.75" y="431.5" ></text>
</g>
<g >
<title>PyRun_StringFlags (33,887,809 samples, 0.13%)</title><rect x="234.1" y="341" width="1.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="237.05" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,269,387 samples, 0.10%)</title><rect x="116.0" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="118.98" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (81,010,831 samples, 0.32%)</title><rect x="175.3" y="437" width="3.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="178.27" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,806,834 samples, 0.13%)</title><rect x="224.1" y="437" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="227.08" y="447.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,211,733 samples, 0.10%)</title><rect x="155.1" y="421" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="158.06" y="431.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (34,074,924 samples, 0.13%)</title><rect x="62.9" y="469" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="65.94" y="479.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (78,625,471 samples, 0.31%)</title><rect x="211.1" y="389" width="3.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="214.09" y="399.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (52,410,200 samples, 0.21%)</title><rect x="104.9" y="357" width="2.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="107.86" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (81,010,831 samples, 0.32%)</title><rect x="175.3" y="421" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.27" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (123,866,183 samples, 0.49%)</title><rect x="69.2" y="629" width="5.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.21" y="639.5" ></text>
</g>
<g >
<title>_PyObject_Call (123,866,183 samples, 0.49%)</title><rect x="69.2" y="613" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.21" y="623.5" ></text>
</g>
<g >
<title>[Nexullance_IT_cpp.cpython-312-x86_64-linux-gnu.so] (33,617,398 samples, 0.13%)</title><rect x="1134.2" y="517" width="1.6" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1137.21" y="527.5" ></text>
</g>
<g >
<title>[python3.12] (33,744,075 samples, 0.13%)</title><rect x="180.2" y="357" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.23" y="367.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,345 samples, 0.10%)</title><rect x="52.0" y="837" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="847.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (107,219,221 samples, 0.42%)</title><rect x="174.1" y="565" width="4.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="177.06" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,478,143 samples, 0.10%)</title><rect x="150.2" y="421" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="153.21" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (26,048,891 samples, 0.10%)</title><rect x="88.8" y="485" width="1.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="91.81" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (515,132,875 samples, 2.02%)</title><rect x="166.1" y="965" width="23.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="169.08" y="975.5" >P..</text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="437" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,294,663 samples, 0.10%)</title><rect x="98.9" y="725" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="101.93" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (25,897,915 samples, 0.10%)</title><rect x="85.2" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.19" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (136,500,219 samples, 0.53%)</title><rect x="118.4" y="453" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="121.43" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,220,606 samples, 0.10%)</title><rect x="109.9" y="789" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="112.92" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (34,109,534 samples, 0.13%)</title><rect x="229.7" y="421" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="232.69" y="431.5" ></text>
</g>
<g >
<title>_int_malloc (135,815,267 samples, 0.53%)</title><rect x="702.4" y="437" width="6.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="705.40" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,117 samples, 0.10%)</title><rect x="132.9" y="341" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="135.89" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (66,343,501 samples, 0.26%)</title><rect x="147.1" y="693" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.14" y="703.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (6,632,667,284 samples, 25.98%)</title><rect x="698.1" y="549" width="306.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="701.09" y="559.5" >PyObject_VectorcallMethod</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (68,195,513 samples, 0.27%)</title><rect x="1154.6" y="645" width="3.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1157.58" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (83,065,672 samples, 0.33%)</title><rect x="59.1" y="437" width="3.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="62.11" y="447.5" ></text>
</g>
<g >
<title>dlopen_doit (26,181,436 samples, 0.10%)</title><rect x="188.7" y="533" width="1.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="191.67" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (32,972,956 samples, 0.13%)</title><rect x="222.6" y="485" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,103,680 samples, 0.10%)</title><rect x="189.9" y="837" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="192.88" y="847.5" ></text>
</g>
<g >
<title>__perf_event__output_id_sample (33,962,576 samples, 0.13%)</title><rect x="70.7" y="53" width="1.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="73.70" y="63.5" ></text>
</g>
<g >
<title>[python3.12] (72,532,213 samples, 0.28%)</title><rect x="48.6" y="997" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="51.64" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (80,246,495 samples, 0.31%)</title><rect x="95.2" y="565" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.22" y="575.5" ></text>
</g>
<g >
<title>[python3.12] (212,165,483 samples, 0.83%)</title><rect x="156.3" y="997" width="9.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,276,806 samples, 0.10%)</title><rect x="186.2" y="261" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="189.25" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,608,589 samples, 0.10%)</title><rect x="140.8" y="437" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="143.83" y="447.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (26,210,206 samples, 0.10%)</title><rect x="163.5" y="373" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="166.53" y="383.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (26,204,568 samples, 0.10%)</title><rect x="235.6" y="549" width="1.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="238.62" y="559.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (60,242,896 samples, 0.24%)</title><rect x="231.3" y="885" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="234.27" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (33,496,489 samples, 0.13%)</title><rect x="680.7" y="661" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="683.67" y="671.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,924 samples, 0.10%)</title><rect x="143.5" y="437" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="146.51" y="447.5" ></text>
</g>
<g >
<title>_PyObject_Call (52,461,699 samples, 0.21%)</title><rect x="126.1" y="581" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="129.12" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,212,517 samples, 0.10%)</title><rect x="130.1" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="133.11" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (78,807,835 samples, 0.31%)</title><rect x="111.1" y="629" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="114.13" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (34,074,924 samples, 0.13%)</title><rect x="62.9" y="533" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="65.94" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (32,972,956 samples, 0.13%)</title><rect x="222.6" y="517" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="225.55" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (33,887,809 samples, 0.13%)</title><rect x="234.1" y="661" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="237.05" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (25,897,915 samples, 0.10%)</title><rect x="85.2" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.19" y="319.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (68,040,040 samples, 0.27%)</title><rect x="798.5" y="325" width="3.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="801.50" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (33,529,649 samples, 0.13%)</title><rect x="251.1" y="965" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="254.10" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call (232,355,092 samples, 0.91%)</title><rect x="79.3" y="837" width="10.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="82.28" y="847.5" ></text>
</g>
<g >
<title>try_charge (33,820,940 samples, 0.13%)</title><rect x="976.9" y="309" width="1.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="979.87" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="661" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,048,891 samples, 0.10%)</title><rect x="88.8" y="709" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="91.81" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,117 samples, 0.10%)</title><rect x="132.9" y="405" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="135.89" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,517 samples, 0.10%)</title><rect x="130.1" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="133.11" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,345 samples, 0.10%)</title><rect x="52.0" y="741" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="54.99" y="751.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,242,896 samples, 0.24%)</title><rect x="231.3" y="677" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="234.27" y="687.5" ></text>
</g>
<g >
<title>_PyObject_Call (59,971,167 samples, 0.23%)</title><rect x="52.0" y="933" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.99" y="943.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (192,801,358 samples, 0.76%)</title><rect x="984.7" y="437" width="8.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="987.71" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (33,887,809 samples, 0.13%)</title><rect x="234.1" y="693" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="703.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,220,606 samples, 0.10%)</title><rect x="109.9" y="581" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="112.92" y="591.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (289,944,417 samples, 1.14%)</title><rect x="174.1" y="581" width="13.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="177.06" y="591.5" ></text>
</g>
<g >
<title>[python3.12] (543,970,531 samples, 2.13%)</title><rect x="204.6" y="965" width="25.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.55" y="975.5" >[..</text>
</g>
<g >
<title>[python3.12] (26,211,117 samples, 0.10%)</title><rect x="132.9" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="135.89" y="367.5" ></text>
</g>
<g >
<title>_PyObject_Call (136,500,219 samples, 0.53%)</title><rect x="118.4" y="469" width="6.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="121.43" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,207,249 samples, 0.10%)</title><rect x="50.8" y="405" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="53.78" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (84,707,870 samples, 0.33%)</title><rect x="192.7" y="357" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="195.66" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,735,126 samples, 0.10%)</title><rect x="117.2" y="709" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="120.20" y="719.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (26,155,874 samples, 0.10%)</title><rect x="162.3" y="229" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="165.33" y="239.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (80,246,495 samples, 0.31%)</title><rect x="95.2" y="549" width="3.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="98.22" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (65,522,071 samples, 0.26%)</title><rect x="70.7" y="389" width="3.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="73.70" y="399.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="485" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="495.5" ></text>
</g>
<g >
<title>[python3.12] (32,972,956 samples, 0.13%)</title><rect x="222.6" y="693" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (33,933,369 samples, 0.13%)</title><rect x="131.3" y="549" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.32" y="559.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (26,210,206 samples, 0.10%)</title><rect x="163.5" y="629" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="166.53" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,491 samples, 0.10%)</title><rect x="156.3" y="613" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="623.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (218,757,699 samples, 0.86%)</title><rect x="118.4" y="917" width="10.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="121.43" y="927.5" ></text>
</g>
<g >
<title>PyDict_GetItemWithError (52,420,248 samples, 0.21%)</title><rect x="672.7" y="341" width="2.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="675.69" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,089 samples, 0.10%)</title><rect x="126.1" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.12" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (177,178,313 samples, 0.69%)</title><rect x="56.3" y="677" width="8.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.33" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (104,530,263 samples, 0.41%)</title><rect x="84.0" y="645" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.98" y="655.5" ></text>
</g>
<g >
<title>[python3.12] (26,608,589 samples, 0.10%)</title><rect x="140.8" y="965" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="143.83" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,038,619 samples, 0.01%)</title><rect x="634.7" y="949" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="637.66" y="959.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,294,663 samples, 0.10%)</title><rect x="98.9" y="421" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="101.93" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (72,532,213 samples, 0.28%)</title><rect x="48.6" y="949" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="51.64" y="959.5" ></text>
</g>
<g >
<title>[python3.12] (56,584,638 samples, 0.22%)</title><rect x="138.2" y="757" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.21" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (28,758,057 samples, 0.11%)</title><rect x="164.7" y="245" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.75" y="255.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (101,606,306 samples, 0.40%)</title><rect x="64.5" y="661" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="67.52" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,209,664 samples, 0.10%)</title><rect x="201.8" y="453" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.76" y="463.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,211,117 samples, 0.10%)</title><rect x="132.9" y="501" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="135.89" y="511.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (35,710,632 samples, 0.14%)</title><rect x="74.9" y="229" width="1.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="77.94" y="239.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (132,503,380 samples, 0.52%)</title><rect x="48.6" y="1029" width="6.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="51.64" y="1039.5" ></text>
</g>
<g >
<title>[python3.12] (26,211,314 samples, 0.10%)</title><rect x="84.0" y="565" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.98" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (421,288,863 samples, 1.65%)</title><rect x="170.4" y="853" width="19.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="173.41" y="863.5" ></text>
</g>
<g >
<title>[python3.12] (88,938,987 samples, 0.35%)</title><rect x="134.1" y="629" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="137.10" y="639.5" ></text>
</g>
<g >
<title>[python3.12] (26,213,486 samples, 0.10%)</title><rect x="95.2" y="501" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="98.22" y="511.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="453" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (52,740,293 samples, 0.21%)</title><rect x="170.4" y="373" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.41" y="383.5" ></text>
</g>
<g >
<title>boost::relax_target&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::plus&lt;float&gt;, std::less&lt;float&gt; &gt; (272,426,513 samples, 1.07%)</title><rect x="1107.5" y="597" width="12.6" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="1110.50" y="607.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (30,643,022 samples, 0.12%)</title><rect x="61.5" y="421" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="64.53" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (26,203,520 samples, 0.10%)</title><rect x="179.0" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.02" y="383.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (252,677,674 samples, 0.99%)</title><rect x="118.4" y="965" width="11.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="121.43" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,768 samples, 0.10%)</title><rect x="57.9" y="405" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="60.89" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (630,877,244 samples, 2.47%)</title><rect x="1010.9" y="485" width="29.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1013.90" y="495.5" >[p..</text>
</g>
<g >
<title>[python3.12] (26,210,491 samples, 0.10%)</title><rect x="156.3" y="677" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,641 samples, 0.10%)</title><rect x="157.5" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.48" y="383.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (165,146,677 samples, 0.65%)</title><rect x="208.7" y="565" width="7.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="211.67" y="575.5" ></text>
</g>
<g >
<title>_PyObject_Call (93,844,012 samples, 0.37%)</title><rect x="166.1" y="725" width="4.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="169.08" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (62,731,863 samples, 0.25%)</title><rect x="134.1" y="341" width="2.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.10" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (185,954,992 samples, 0.73%)</title><rect x="157.5" y="789" width="8.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.48" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="741" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="751.5" ></text>
</g>
<g >
<title>PyFunction_NewWithQualName (33,854,054 samples, 0.13%)</title><rect x="64.5" y="357" width="1.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="67.52" y="367.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,209,089 samples, 0.10%)</title><rect x="126.1" y="389" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="129.12" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (34,185,343 samples, 0.13%)</title><rect x="1145.2" y="645" width="1.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1148.20" y="655.5" ></text>
</g>
<g >
<title>PyRun_StringFlags (33,650,956 samples, 0.13%)</title><rect x="200.2" y="501" width="1.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="203.21" y="511.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (34,074,924 samples, 0.13%)</title><rect x="62.9" y="549" width="1.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="65.94" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (33,744,075 samples, 0.13%)</title><rect x="180.2" y="421" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="183.23" y="431.5" ></text>
</g>
<g >
<title>[python3.12] (78,954,470 samples, 0.31%)</title><rect x="170.4" y="661" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="173.41" y="671.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (68,034,374 samples, 0.27%)</title><rect x="1098.1" y="597" width="3.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1101.06" y="607.5" ></text>
</g>
<g >
<title>_PyObject_Call (26,209,924 samples, 0.10%)</title><rect x="143.5" y="629" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="146.51" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::push_back (237,653,416 samples, 0.93%)</title><rect x="1132.7" y="677" width="10.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1135.65" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (33,933,369 samples, 0.13%)</title><rect x="131.3" y="533" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="134.32" y="543.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (78,954,470 samples, 0.31%)</title><rect x="170.4" y="581" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="173.41" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,204,568 samples, 0.10%)</title><rect x="235.6" y="677" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="238.62" y="687.5" ></text>
</g>
<g >
<title>[python3.12] (26,164,943 samples, 0.10%)</title><rect x="169.2" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="172.20" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (26,220,606 samples, 0.10%)</title><rect x="109.9" y="261" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="112.92" y="271.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,269,387 samples, 0.10%)</title><rect x="116.0" y="421" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="118.98" y="431.5" ></text>
</g>
<g >
<title>ksys_read (124,248,302 samples, 0.49%)</title><rect x="1164.0" y="821" width="5.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1167.01" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (28,758,057 samples, 0.11%)</title><rect x="164.7" y="613" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="167.75" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (300,450,950 samples, 1.18%)</title><rect x="208.7" y="757" width="13.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="211.67" y="767.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="437" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (60,242,896 samples, 0.24%)</title><rect x="231.3" y="549" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.27" y="559.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,212,829 samples, 0.10%)</title><rect x="114.8" y="405" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="117.77" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (67,679,069 samples, 0.27%)</title><rect x="166.1" y="373" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="169.08" y="383.5" ></text>
</g>
<g >
<title>[python3.12] (30,842,997 samples, 0.12%)</title><rect x="108.5" y="549" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="111.49" y="559.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (498,530,008 samples, 1.95%)</title><rect x="54.8" y="885" width="23.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="57.76" y="895.5" >P..</text>
</g>
<g >
<title>_PyObject_Call (101,460,497 samples, 0.40%)</title><rect x="1041.6" y="741" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1044.62" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (291,350,293 samples, 1.14%)</title><rect x="191.1" y="901" width="13.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="194.09" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,829 samples, 0.10%)</title><rect x="114.8" y="309" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="117.77" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (33,887,809 samples, 0.13%)</title><rect x="234.1" y="405" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="237.05" y="415.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,271 samples, 0.10%)</title><rect x="221.3" y="325" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="224.34" y="335.5" ></text>
</g>
<g >
<title>[python3.12] (83,193,227 samples, 0.33%)</title><rect x="138.2" y="997" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="141.21" y="1007.5" ></text>
</g>
<g >
<title>[python3.12] (26,208,639 samples, 0.10%)</title><rect x="196.6" y="341" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="199.57" y="351.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,491 samples, 0.10%)</title><rect x="156.3" y="805" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="159.27" y="815.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,208,540 samples, 0.10%)</title><rect x="187.5" y="549" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="190.46" y="559.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (7,911,938,383 samples, 30.99%)</title><rect x="680.7" y="805" width="365.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="683.67" y="815.5" >PyObject_Vectorcall</text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,204,568 samples, 0.10%)</title><rect x="235.6" y="773" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="238.62" y="783.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,482,216 samples, 0.21%)</title><rect x="114.8" y="725" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="117.77" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,608,589 samples, 0.10%)</title><rect x="140.8" y="981" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="143.83" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (26,212,641 samples, 0.10%)</title><rect x="157.5" y="437" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="160.48" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (122,777,601 samples, 0.48%)</title><rect x="181.8" y="453" width="5.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="184.79" y="463.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (6,905,843 samples, 0.03%)</title><rect x="254.6" y="933" width="0.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="257.58" y="943.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (26,210,491 samples, 0.10%)</title><rect x="156.3" y="485" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="159.27" y="495.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (26,210,491 samples, 0.10%)</title><rect x="156.3" y="501" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="159.27" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (26,211,117 samples, 0.10%)</title><rect x="132.9" y="661" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="135.89" y="671.5" ></text>
</g>
<g >
<title>PyUnicode_Substring (26,201,768 samples, 0.10%)</title><rect x="73.7" y="309" width="1.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="76.73" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (33,650,956 samples, 0.13%)</title><rect x="200.2" y="469" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="203.21" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (52,461,699 samples, 0.21%)</title><rect x="126.1" y="533" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="129.12" y="543.5" ></text>
</g>
<g >
<title>[python3.12] (57,618,186 samples, 0.23%)</title><rect x="142.1" y="773" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="145.06" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (34,200,686 samples, 0.13%)</title><rect x="679.1" y="821" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="682.09" y="831.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (733,237,885 samples, 2.87%)</title><rect x="1006.2" y="517" width="33.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1009.17" y="527.5" >_P..</text>
</g>
<g >
<title>PyObject_GetItem (26,214,177 samples, 0.10%)</title><rect x="172.8" y="309" width="1.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="175.85" y="319.5" ></text>
</g>
<g >
<title>[python3.12] (34,125,270 samples, 0.13%)</title><rect x="203.0" y="533" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="205.97" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,164,943 samples, 0.10%)</title><rect x="169.2" y="501" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="172.20" y="511.5" ></text>
</g>
<g >
<title>PyType_GenericAlloc (34,102,323 samples, 0.13%)</title><rect x="82.4" y="341" width="1.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="85.41" y="351.5" ></text>
</g>
<g >
<title>[vectorized.cpython-312-x86_64-linux-gnu.so] (26,124,850 samples, 0.10%)</title><rect x="144.7" y="901" width="1.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="147.72" y="911.5" ></text>
</g>
<g >
<title>[python3.12] (101,460,497 samples, 0.40%)</title><rect x="1041.6" y="725" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1044.62" y="735.5" ></text>
</g>
<g >
<title>[python3.12] (59,947,595 samples, 0.23%)</title><rect x="179.0" y="469" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="182.02" y="479.5" ></text>
</g>
<g >
<title>[python3.12] (104,530,263 samples, 0.41%)</title><rect x="84.0" y="709" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="86.98" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,211,345 samples, 0.10%)</title><rect x="52.0" y="693" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="54.99" y="703.5" ></text>
</g>
<g >
<title>__handle_mm_fault (26,201,768 samples, 0.10%)</title><rect x="73.7" y="197" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="76.73" y="207.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,211,117 samples, 0.10%)</title><rect x="132.9" y="421" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="135.89" y="431.5" ></text>
</g>
<g >
<title>_PyObject_Call (287,400,527 samples, 1.13%)</title><rect x="64.5" y="789" width="13.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="67.52" y="799.5" ></text>
</g>
<g >
<title>[python3.12] (33,919,975 samples, 0.13%)</title><rect x="128.5" y="389" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="131.54" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (101,606,306 samples, 0.40%)</title><rect x="64.5" y="453" width="4.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="67.52" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (81,010,831 samples, 0.32%)</title><rect x="175.3" y="453" width="3.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="178.27" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (72,532,213 samples, 0.28%)</title><rect x="48.6" y="885" width="3.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="51.64" y="895.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (26,218,610 samples, 0.10%)</title><rect x="696.9" y="533" width="1.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="699.87" y="543.5" ></text>
</g>
<g >
<title>alloc_pages_vma (34,102,323 samples, 0.13%)</title><rect x="82.4" y="181" width="1.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="85.41" y="191.5" ></text>
</g>
<g >
<title>do_anonymous_page (34,102,323 samples, 0.13%)</title><rect x="82.4" y="197" width="1.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="85.41" y="207.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (34,162,017 samples, 0.13%)</title><rect x="1074.5" y="581" width="1.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1077.52" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (26,002,898 samples, 0.10%)</title><rect x="153.9" y="437" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="156.86" y="447.5" ></text>
</g>
<g >
<title>[python3.12] (75,860,990 samples, 0.30%)</title><rect x="101.4" y="357" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.36" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (52,425,899 samples, 0.21%)</title><rect x="197.8" y="309" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="200.79" y="319.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (33,887,809 samples, 0.13%)</title><rect x="234.1" y="469" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="237.05" y="479.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (26,210,491 samples, 0.10%)</title><rect x="156.3" y="549" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="159.27" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (34,038,864 samples, 0.13%)</title><rect x="232.5" y="325" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="235.48" y="335.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (102,069,331 samples, 0.40%)</title><rect x="100.1" y="453" width="4.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="103.14" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (34,109,534 samples, 0.13%)</title><rect x="229.7" y="517" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="232.69" y="527.5" ></text>
</g>
<g >
<title>__handle_mm_fault (305,694,740 samples, 1.20%)</title><rect x="790.7" y="389" width="14.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="793.65" y="399.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (26,608,589 samples, 0.10%)</title><rect x="140.8" y="661" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.83" y="671.5" ></text>
</g>
<g >
<title>[python3.12] (26,103,680 samples, 0.10%)</title><rect x="189.9" y="533" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.88" y="543.5" ></text>
</g>
<g >
<title>_PyCode_Validate (33,214,568 samples, 0.13%)</title><rect x="147.1" y="405" width="1.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="150.14" y="415.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (26,103,680 samples, 0.10%)</title><rect x="189.9" y="725" width="1.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="192.88" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (300,450,950 samples, 1.18%)</title><rect x="208.7" y="885" width="13.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="211.67" y="895.5" ></text>
</g>
<g >
<title>[python3.12] (26,735,126 samples, 0.10%)</title><rect x="117.2" y="629" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="120.20" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (123,866,183 samples, 0.49%)</title><rect x="69.2" y="549" width="5.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="72.21" y="559.5" ></text>
</g>
<g >
<title>[python3.12] (78,618,214 samples, 0.31%)</title><rect x="158.7" y="341" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="161.69" y="351.5" ></text>
</g>
<g >
<title>ksys_read (32,972,956 samples, 0.13%)</title><rect x="222.6" y="245" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="225.55" y="255.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (26,211,345 samples, 0.10%)</title><rect x="52.0" y="709" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="54.99" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (197,576,523 samples, 0.77%)</title><rect x="147.1" y="805" width="9.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="150.14" y="815.5" ></text>
</g>
<g >
<title>_PyObject_Call (60,145,886 samples, 0.24%)</title><rect x="130.1" y="773" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="133.11" y="783.5" ></text>
</g>
<g >
<title>[python3.12] (54,033,009 samples, 0.21%)</title><rect x="96.4" y="277" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="99.43" y="287.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (530,501,428 samples, 2.08%)</title><rect x="54.8" y="917" width="24.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="57.76" y="927.5" >P..</text>
</g>
<g >
<title>_PyObject_MakeTpCall (52,422,650 samples, 0.21%)</title><rect x="59.1" y="357" width="2.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="62.11" y="367.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (34,021,995 samples, 0.13%)</title><rect x="191.1" y="693" width="1.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="194.09" y="703.5" ></text>
</g>
<g >
<title>[python3.12] (26,207,124 samples, 0.10%)</title><rect x="137.0" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.00" y="383.5" ></text>
</g>
<g >
<title>error_entry (33,992,056 samples, 0.13%)</title><rect x="953.3" y="453" width="1.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="956.34" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (26,226,179 samples, 0.10%)</title><rect x="46.2" y="677" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="49.22" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (212,165,483 samples, 0.83%)</title><rect x="156.3" y="853" width="9.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="159.27" y="863.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (175,295,990 samples, 0.69%)</title><rect x="130.1" y="965" width="8.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="133.11" y="975.5" ></text>
</g>
<g >
<title>[python3.12] (26,210,206 samples, 0.10%)</title><rect x="163.5" y="357" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="166.53" y="367.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (300,450,950 samples, 1.18%)</title><rect x="208.7" y="741" width="13.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="211.67" y="751.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (33,887,809 samples, 0.13%)</title><rect x="234.1" y="645" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="237.05" y="655.5" ></text>
</g>
<g >
<title>_PyObject_Call (83,743,036 samples, 0.33%)</title><rect x="142.1" y="981" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="145.06" y="991.5" ></text>
</g>
<g >
<title>[python3.12] (25,897,915 samples, 0.10%)</title><rect x="85.2" y="517" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="88.19" y="527.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (78,625,471 samples, 0.31%)</title><rect x="211.1" y="453" width="3.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="214.09" y="463.5" ></text>
</g>
<g >
<title>[python3.12] (32,972,956 samples, 0.13%)</title><rect x="222.6" y="565" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.55" y="575.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (130,986,729 samples, 0.51%)</title><rect x="157.5" y="661" width="6.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="160.48" y="671.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (101,364,905 samples, 0.40%)</title><rect x="1091.8" y="597" width="4.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1094.81" y="607.5" ></text>
</g>
<g >
<title>[python3.12] (29,795,781 samples, 0.12%)</title><rect x="124.7" y="485" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="127.74" y="495.5" ></text>
</g>
</g>
</svg>
