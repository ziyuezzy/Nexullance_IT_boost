<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="454.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="437" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="437" > </text>
<g id="frames">
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt; &gt; (5,092,580 samples, 0.08%)</title><rect x="276.4" y="229" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="279.36" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (3,453,029 samples, 0.06%)</title><rect x="1124.0" y="277" width="0.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1127.04" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_Tuple_impl (1,230,797 samples, 0.02%)</title><rect x="34.7" y="213" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="37.67" y="223.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (9,492,403 samples, 0.15%)</title><rect x="819.2" y="181" width="1.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="822.21" y="191.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (1,149,900 samples, 0.02%)</title><rect x="71.0" y="149" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="74.01" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (2,545,978 samples, 0.04%)</title><rect x="1138.1" y="277" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1141.15" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (713,947 samples, 0.01%)</title><rect x="127.3" y="149" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="130.27" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,391,072 samples, 0.02%)</title><rect x="13.1" y="341" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="16.06" y="351.5" ></text>
</g>
<g >
<title>boost::range_detail::integer_iterator&lt;unsigned long&gt;::dereference (1,532,378 samples, 0.02%)</title><rect x="869.2" y="197" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="872.24" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (131,657,093 samples, 2.10%)</title><rect x="623.6" y="133" width="24.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="626.60" y="143.5" >s..</text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (15,858,644 samples, 0.25%)</title><rect x="1005.2" y="293" width="3.0" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1008.24" y="303.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (4,370,299 samples, 0.07%)</title><rect x="468.9" y="149" width="0.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="471.85" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,951,564 samples, 0.03%)</title><rect x="147.9" y="261" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="150.94" y="271.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (684,221 samples, 0.01%)</title><rect x="480.1" y="133" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="483.12" y="143.5" ></text>
</g>
<g >
<title>__libc_start_main (6,059,924,928 samples, 96.89%)</title><rect x="21.5" y="373" width="1143.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="24.55" y="383.5" >__libc_start_main</text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (6,621,188 samples, 0.11%)</title><rect x="315.6" y="277" width="1.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="318.61" y="287.5" ></text>
</g>
<g >
<title>boost::vertices&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (1,207,514 samples, 0.02%)</title><rect x="878.6" y="229" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="881.65" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (602,262 samples, 0.01%)</title><rect x="1014.9" y="181" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1017.88" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::allocate (3,207,267 samples, 0.05%)</title><rect x="1024.1" y="229" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1027.10" y="239.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt;, boost::edge_weight_t, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, double&gt; (2,197,644 samples, 0.04%)</title><rect x="280.5" y="309" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="283.46" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (619,535 samples, 0.01%)</title><rect x="121.3" y="197" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="124.31" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (11,985,291 samples, 0.19%)</title><rect x="666.2" y="197" width="2.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="669.16" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_use_relocate (685,192 samples, 0.01%)</title><rect x="1057.2" y="277" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1060.18" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (9,184,813 samples, 0.15%)</title><rect x="940.5" y="133" width="1.7" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="943.48" y="143.5" ></text>
</g>
<g >
<title>tick_sched_timer (688,780 samples, 0.01%)</title><rect x="757.5" y="133" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="760.55" y="143.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::copy_impl (4,436,101 samples, 0.07%)</title><rect x="1163.4" y="293" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1166.36" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (1,813,663 samples, 0.03%)</title><rect x="969.8" y="277" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="972.82" y="287.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (996,003 samples, 0.02%)</title><rect x="494.8" y="149" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="497.82" y="159.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (5,084,621 samples, 0.08%)</title><rect x="546.5" y="197" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="549.53" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (684,542 samples, 0.01%)</title><rect x="448.4" y="149" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="451.44" y="159.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (3,633,827 samples, 0.06%)</title><rect x="453.7" y="165" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="456.71" y="175.5" ></text>
</g>
<g >
<title>do_brk_flags (1,014,447 samples, 0.02%)</title><rect x="13.1" y="293" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="16.08" y="303.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1,565,334 samples, 0.03%)</title><rect x="1045.4" y="245" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1048.44" y="255.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (1,010,404 samples, 0.02%)</title><rect x="474.3" y="197" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="477.30" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (6,527,080 samples, 0.10%)</title><rect x="1159.8" y="245" width="1.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1162.75" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::~allocator (1,921,642 samples, 0.03%)</title><rect x="1071.2" y="165" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1074.16" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_do_relocate (1,355,319 samples, 0.02%)</title><rect x="1098.1" y="261" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1101.15" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (7,592,263 samples, 0.12%)</title><rect x="1087.7" y="245" width="1.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1090.66" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (6,620,403 samples, 0.11%)</title><rect x="946.5" y="261" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="949.48" y="271.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::front (9,001,670 samples, 0.14%)</title><rect x="1002.2" y="293" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1005.19" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (1,227,973 samples, 0.02%)</title><rect x="112.0" y="213" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="115.01" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (955,783 samples, 0.02%)</title><rect x="988.0" y="277" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="991.01" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::end (545,333 samples, 0.01%)</title><rect x="277.4" y="261" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="280.37" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (1,196,604 samples, 0.02%)</title><rect x="1035.9" y="213" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1038.91" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (867,984 samples, 0.01%)</title><rect x="271.6" y="309" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="274.56" y="319.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (2,356,407 samples, 0.04%)</title><rect x="773.5" y="149" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="776.47" y="159.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (15,980,324 samples, 0.26%)</title><rect x="69.8" y="165" width="3.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="72.85" y="175.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_initialize_map (1,901,383 samples, 0.03%)</title><rect x="1008.3" y="245" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1011.30" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (1,558,662 samples, 0.02%)</title><rect x="70.3" y="149" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="73.32" y="159.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (6,162,529 samples, 0.10%)</title><rect x="705.9" y="181" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="708.95" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (3,707,018 samples, 0.06%)</title><rect x="1142.1" y="245" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1145.08" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (928,439 samples, 0.01%)</title><rect x="127.6" y="197" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="130.63" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (3,086,669 samples, 0.05%)</title><rect x="138.2" y="213" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="141.23" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (293,213,394 samples, 4.69%)</title><rect x="892.4" y="277" width="55.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="895.41" y="287.5" >boost..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (928,397 samples, 0.01%)</title><rect x="28.8" y="277" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="31.84" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (10,850,344 samples, 0.17%)</title><rect x="943.0" y="245" width="2.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="946.03" y="255.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::out_edge_list (6,562,157 samples, 0.10%)</title><rect x="988.2" y="277" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="991.19" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (557,853 samples, 0.01%)</title><rect x="274.2" y="245" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="277.20" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (643,138 samples, 0.01%)</title><rect x="1044.2" y="261" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1047.19" y="271.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (7,609,411 samples, 0.12%)</title><rect x="878.9" y="229" width="1.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="881.87" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::deallocate (667,801 samples, 0.01%)</title><rect x="1075.2" y="229" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1078.16" y="239.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (2,115,819 samples, 0.03%)</title><rect x="1054.9" y="213" width="0.4" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1057.89" y="223.5" ></text>
</g>
<g >
<title>boost::tuples::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type&gt; &gt;::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const&gt; (623,860 samples, 0.01%)</title><rect x="88.6" y="245" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="91.56" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_allocate_buckets (817,453 samples, 0.01%)</title><rect x="121.7" y="229" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="124.72" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;float, std::allocator&lt;float&gt; &gt;::push_back (4,148,610 samples, 0.07%)</title><rect x="1130.0" y="309" width="0.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1133.05" y="319.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (1,016,066 samples, 0.02%)</title><rect x="1137.0" y="309" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1139.98" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_node&lt;float const&amp;&gt; (2,042,851 samples, 0.03%)</title><rect x="1130.1" y="277" width="0.4" height="15.0" fill="rgb(219,66,16)" rx="2" ry="2" />
<text  x="1133.11" y="287.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (932,804 samples, 0.01%)</title><rect x="1148.7" y="197" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1151.70" y="207.5" ></text>
</g>
<g >
<title>std::operator!=&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; (858,369 samples, 0.01%)</title><rect x="1134.0" y="309" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1137.01" y="319.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (1,979,369 samples, 0.03%)</title><rect x="1052.6" y="229" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1055.55" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (5,026,679 samples, 0.08%)</title><rect x="485.4" y="165" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="488.35" y="175.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (84,623,341 samples, 1.35%)</title><rect x="541.6" y="213" width="16.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="544.60" y="223.5" ></text>
</g>
<g >
<title>boost::num_vertices&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (685,553 samples, 0.01%)</title><rect x="280.2" y="309" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="283.23" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::emplace_back&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,340,390 samples, 0.02%)</title><rect x="1163.6" y="181" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1166.59" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::emplace_back&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (4,701,667 samples, 0.08%)</title><rect x="1057.4" y="277" width="0.9" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1060.39" y="287.5" ></text>
</g>
<g >
<title>boost::lookup_named_param_def&lt;boost::vertex_index_t, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt;, boost::param_not_found&gt;::get (707,160 samples, 0.01%)</title><rect x="882.3" y="261" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="885.33" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (5,089,314 samples, 0.08%)</title><rect x="278.1" y="309" width="1.0" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="281.13" y="319.5" ></text>
</g>
<g >
<title>__lru_cache_add (1,251,952 samples, 0.02%)</title><rect x="1178.0" y="229" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1181.01" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (3,581,605 samples, 0.06%)</title><rect x="457.1" y="181" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="460.07" y="191.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (1,260,074 samples, 0.02%)</title><rect x="94.5" y="133" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="97.53" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (709,230 samples, 0.01%)</title><rect x="120.3" y="213" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="123.31" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (963,973 samples, 0.02%)</title><rect x="1139.4" y="245" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1142.43" y="255.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (2,312,719 samples, 0.04%)</title><rect x="1096.1" y="213" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1099.12" y="223.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (746,297 samples, 0.01%)</title><rect x="697.3" y="197" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="700.27" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (31,011,497 samples, 0.50%)</title><rect x="1066.0" y="213" width="5.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1068.96" y="223.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (1,130,672 samples, 0.02%)</title><rect x="29.7" y="277" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="32.71" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (925,664 samples, 0.01%)</title><rect x="142.3" y="277" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="145.30" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (3,868,816 samples, 0.06%)</title><rect x="96.8" y="133" width="0.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="99.85" y="143.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt; &gt; (39,663,333 samples, 0.63%)</title><rect x="45.5" y="245" width="7.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="48.46" y="255.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt;*&gt;::pointer_to (864,942 samples, 0.01%)</title><rect x="1159.4" y="229" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1162.40" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,001,100 samples, 0.02%)</title><rect x="1129.6" y="261" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1132.60" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_Hash_node_value_base (927,334 samples, 0.01%)</title><rect x="114.6" y="245" width="0.2" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="117.61" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (541,772 samples, 0.01%)</title><rect x="1061.9" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1064.90" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt;::operator (2,180,456 samples, 0.03%)</title><rect x="276.8" y="213" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="279.80" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (790,686 samples, 0.01%)</title><rect x="1034.4" y="181" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1037.35" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_v (542,381 samples, 0.01%)</title><rect x="1144.1" y="277" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1147.12" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned long&gt;, unsigned long&gt;::_S_select_on_copy (925,048 samples, 0.01%)</title><rect x="144.2" y="293" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="147.22" y="303.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (2,887,815 samples, 0.05%)</title><rect x="1163.4" y="277" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1166.38" y="287.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (7,954,056 samples, 0.13%)</title><rect x="71.2" y="149" width="1.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="74.22" y="159.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (688,780 samples, 0.01%)</title><rect x="757.5" y="181" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="760.55" y="191.5" ></text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (2,568,034 samples, 0.04%)</title><rect x="513.7" y="181" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="516.65" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; (626,739 samples, 0.01%)</title><rect x="21.8" y="149" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="24.82" y="159.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (9,879,879 samples, 0.16%)</title><rect x="533.3" y="181" width="1.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="536.27" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator= (16,526,289 samples, 0.26%)</title><rect x="136.5" y="309" width="3.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="139.45" y="319.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (3,297,832 samples, 0.05%)</title><rect x="19.4" y="309" width="0.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="22.36" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;unsigned long*&gt; (561,712 samples, 0.01%)</title><rect x="1067.8" y="181" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1070.79" y="191.5" ></text>
</g>
<g >
<title>operator new (616,586 samples, 0.01%)</title><rect x="54.5" y="293" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="57.51" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (3,193,066 samples, 0.05%)</title><rect x="618.6" y="149" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="621.57" y="159.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, false, false&gt;::derived (1,415,890 samples, 0.02%)</title><rect x="868.6" y="229" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="871.59" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (2,827,390 samples, 0.05%)</title><rect x="97.7" y="149" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="100.72" y="159.5" ></text>
</g>
<g >
<title>operator new (670,543 samples, 0.01%)</title><rect x="1087.2" y="229" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1090.15" y="239.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (3,579,881 samples, 0.06%)</title><rect x="637.2" y="85" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="640.25" y="95.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,999,929 samples, 0.03%)</title><rect x="271.9" y="277" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="274.85" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt;::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, true&gt; (6,869,547 samples, 0.11%)</title><rect x="729.9" y="181" width="1.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="732.89" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator* (907,387 samples, 0.01%)</title><rect x="456.3" y="181" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="459.27" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~pair (5,922,853 samples, 0.09%)</title><rect x="1159.8" y="213" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1162.82" y="223.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (932,025 samples, 0.01%)</title><rect x="79.1" y="133" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="82.10" y="143.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (4,732,528 samples, 0.08%)</title><rect x="603.7" y="165" width="0.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="606.66" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (1,046,464 samples, 0.02%)</title><rect x="106.9" y="261" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="109.91" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (793,318 samples, 0.01%)</title><rect x="1106.8" y="261" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1109.75" y="271.5" ></text>
</g>
<g >
<title>boost::graph_detail::find_dispatch&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (7,536,075 samples, 0.12%)</title><rect x="276.0" y="277" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="279.05" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_base (753,370 samples, 0.01%)</title><rect x="1000.3" y="293" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1003.30" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_allocate_buckets (1,131,208 samples, 0.02%)</title><rect x="112.9" y="213" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="115.86" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (2,557,026 samples, 0.04%)</title><rect x="126.9" y="181" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="129.94" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get_deleter (4,522,714 samples, 0.07%)</title><rect x="38.0" y="261" width="0.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="41.00" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (1,230,316 samples, 0.02%)</title><rect x="138.4" y="181" width="0.3" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="141.45" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size (11,267,375 samples, 0.18%)</title><rect x="1094.4" y="229" width="2.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1097.43" y="239.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (4,878,909 samples, 0.08%)</title><rect x="501.7" y="213" width="0.9" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="504.65" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (110,795,941 samples, 1.77%)</title><rect x="627.0" y="117" width="20.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="629.95" y="127.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (6,173,406 samples, 0.10%)</title><rect x="145.3" y="293" width="1.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="148.35" y="303.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (866,574 samples, 0.01%)</title><rect x="1041.1" y="149" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1044.07" y="159.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::update (772,608 samples, 0.01%)</title><rect x="321.9" y="229" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="324.90" y="239.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (533,621 samples, 0.01%)</title><rect x="476.3" y="165" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="479.30" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (1,103,635 samples, 0.02%)</title><rect x="1109.3" y="245" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1112.30" y="255.5" ></text>
</g>
<g >
<title>boost::graph_detail::sequence_tag::sequence_tag (3,073,195 samples, 0.05%)</title><rect x="43.9" y="245" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="46.86" y="255.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, false&gt;::operator mpl_::bool_&lt;false&gt; const&amp; (539,205 samples, 0.01%)</title><rect x="377.1" y="197" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="380.14" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (7,515,573 samples, 0.12%)</title><rect x="90.6" y="261" width="1.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="93.57" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (2,805,228 samples, 0.04%)</title><rect x="1147.5" y="309" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1150.54" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (5,126,630 samples, 0.08%)</title><rect x="111.4" y="229" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="114.43" y="239.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (10,432,806 samples, 0.17%)</title><rect x="612.2" y="165" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="615.16" y="175.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::out_edge_list (7,358,182 samples, 0.12%)</title><rect x="727.4" y="197" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="730.39" y="207.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt; (2,162,128 samples, 0.03%)</title><rect x="143.0" y="245" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="146.00" y="255.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1,151,778 samples, 0.02%)</title><rect x="1178.0" y="213" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1181.01" y="223.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (23,398,872 samples, 0.37%)</title><rect x="1117.0" y="229" width="4.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1119.96" y="239.5" ></text>
</g>
<g >
<title>free_unref_page_list (869,515 samples, 0.01%)</title><rect x="1179.6" y="197" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1182.65" y="207.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (3,644,228 samples, 0.06%)</title><rect x="65.7" y="197" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="68.71" y="207.5" ></text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (1,278,307 samples, 0.02%)</title><rect x="515.5" y="197" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="518.49" y="207.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long*&gt; (4,880,909 samples, 0.08%)</title><rect x="1101.8" y="213" width="1.0" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1104.83" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data (823,513 samples, 0.01%)</title><rect x="145.1" y="261" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="148.13" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_Tuple_impl (877,575 samples, 0.01%)</title><rect x="274.4" y="229" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="277.36" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (660,224 samples, 0.01%)</title><rect x="445.6" y="181" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="448.61" y="191.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (1,966,142 samples, 0.03%)</title><rect x="496.3" y="149" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="499.26" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_ptr (752,425 samples, 0.01%)</title><rect x="1143.1" y="181" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1146.11" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size (1,988,953 samples, 0.03%)</title><rect x="480.7" y="133" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="483.75" y="143.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (857,666 samples, 0.01%)</title><rect x="1086.3" y="229" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1089.33" y="239.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (5,338,034 samples, 0.09%)</title><rect x="71.7" y="101" width="1.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="74.72" y="111.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (43,265,411 samples, 0.69%)</title><rect x="44.8" y="261" width="8.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="47.82" y="271.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (976,994 samples, 0.02%)</title><rect x="273.8" y="293" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="276.77" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (5,541,904 samples, 0.09%)</title><rect x="134.9" y="245" width="1.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="137.86" y="255.5" ></text>
</g>
<g >
<title>std::tuple&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::tuple&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, true&gt; (826,127 samples, 0.01%)</title><rect x="34.9" y="261" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="37.94" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (3,421,142 samples, 0.05%)</title><rect x="1125.4" y="277" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1128.37" y="287.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long*&gt; (581,909 samples, 0.01%)</title><rect x="1120.3" y="197" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1123.30" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;unsigned long, unsigned long&amp;, unsigned long*&gt;::_Deque_iterator (3,335,579 samples, 0.05%)</title><rect x="1003.3" y="245" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1006.26" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;float, std::allocator&lt;float&gt; &gt;::_M_insert&lt;float const&amp;&gt; (2,144,498 samples, 0.03%)</title><rect x="1130.1" y="293" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1133.11" y="303.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (2,097,810 samples, 0.03%)</title><rect x="83.3" y="229" width="0.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="86.35" y="239.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (2,400,486 samples, 0.04%)</title><rect x="21.6" y="277" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="24.61" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash_aux (3,898,561 samples, 0.06%)</title><rect x="112.6" y="245" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="115.63" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (18,434,518 samples, 0.29%)</title><rect x="419.6" y="165" width="3.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="422.59" y="175.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (330,398,954 samples, 5.28%)</title><rect x="885.4" y="293" width="62.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="888.39" y="303.5" >boost:..</text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (78,133,312 samples, 1.25%)</title><rect x="668.4" y="197" width="14.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="671.42" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::allocate (821,163 samples, 0.01%)</title><rect x="92.9" y="229" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="95.88" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (6,402,354 samples, 0.10%)</title><rect x="1034.5" y="197" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1037.50" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (1,539,726 samples, 0.02%)</title><rect x="138.4" y="197" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="141.39" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (10,022,804 samples, 0.16%)</title><rect x="1112.1" y="245" width="1.9" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1115.08" y="255.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (1,590,673 samples, 0.03%)</title><rect x="476.0" y="165" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="479.00" y="175.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (1,674,658 samples, 0.03%)</title><rect x="91.4" y="165" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="94.44" y="175.5" ></text>
</g>
<g >
<title>boost::graph_detail::random_access_container_tag::random_access_container_tag (4,305,493 samples, 0.07%)</title><rect x="42.3" y="245" width="0.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="45.31" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (116,703,482 samples, 1.87%)</title><rect x="963.3" y="293" width="22.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="966.31" y="303.5" >b..</text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (3,796,362 samples, 0.06%)</title><rect x="279.1" y="309" width="0.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="282.09" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (1,797,439 samples, 0.03%)</title><rect x="1137.4" y="261" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1140.38" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (926,554 samples, 0.01%)</title><rect x="1078.8" y="277" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1081.80" y="287.5" ></text>
</g>
<g >
<title>_dl_map_object (679,662 samples, 0.01%)</title><rect x="1164.9" y="373" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1167.92" y="383.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long const&amp;&gt; (643,786 samples, 0.01%)</title><rect x="1090.4" y="229" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1093.42" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate_node (544,740 samples, 0.01%)</title><rect x="1008.5" y="213" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1011.45" y="223.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (540,209 samples, 0.01%)</title><rect x="1121.8" y="277" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1124.78" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (1,025,459 samples, 0.02%)</title><rect x="26.3" y="309" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="29.33" y="319.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (8,627,666 samples, 0.14%)</title><rect x="812.9" y="165" width="1.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="815.91" y="175.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (3,871,824 samples, 0.06%)</title><rect x="72.0" y="85" width="0.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="74.99" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (2,286,315 samples, 0.04%)</title><rect x="82.9" y="229" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="85.89" y="239.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (86,229,660 samples, 1.38%)</title><rect x="423.3" y="181" width="16.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="426.26" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (1,516,327 samples, 0.02%)</title><rect x="1148.3" y="277" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1151.27" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (791,188 samples, 0.01%)</title><rect x="1140.8" y="181" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1143.83" y="191.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long*&gt; (665,627 samples, 0.01%)</title><rect x="482.0" y="117" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="484.97" y="127.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (9,542,870 samples, 0.15%)</title><rect x="951.1" y="277" width="1.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="954.14" y="287.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (4,692,426 samples, 0.08%)</title><rect x="438.6" y="149" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="441.64" y="159.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;unsigned long, unsigned long&gt; (1,360,429 samples, 0.02%)</title><rect x="103.2" y="197" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="106.19" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (769,423 samples, 0.01%)</title><rect x="1127.7" y="245" width="0.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1130.72" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (3,138,700 samples, 0.05%)</title><rect x="93.8" y="197" width="0.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="96.78" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_deallocate_node (5,530,586 samples, 0.09%)</title><rect x="1157.0" y="261" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1159.99" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_base (1,129,513 samples, 0.02%)</title><rect x="129.2" y="293" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="132.24" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (2,850,230 samples, 0.05%)</title><rect x="501.0" y="165" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="503.99" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (12,882,558 samples, 0.21%)</title><rect x="957.8" y="245" width="2.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="960.76" y="255.5" ></text>
</g>
<g >
<title>std::plus&lt;float&gt;::operator (4,648,649 samples, 0.07%)</title><rect x="861.1" y="213" width="0.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="864.10" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt; &gt; (5,776,119 samples, 0.09%)</title><rect x="276.2" y="245" width="1.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="279.23" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt;::_M_next (687,680 samples, 0.01%)</title><rect x="1131.1" y="277" width="0.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1134.09" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (597,760 samples, 0.01%)</title><rect x="276.7" y="213" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="279.69" y="223.5" ></text>
</g>
<g >
<title>boost::tuples::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type&gt; &gt;::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const&gt; (8,412,462 samples, 0.13%)</title><rect x="997.0" y="261" width="1.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="999.99" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (748,998 samples, 0.01%)</title><rect x="1016.0" y="277" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1019.02" y="287.5" ></text>
</g>
<g >
<title>boost::relax_target&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::plus&lt;float&gt;, std::less&lt;float&gt; &gt; (19,648,460 samples, 0.31%)</title><rect x="76.3" y="197" width="3.8" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="79.35" y="207.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (1,086,861 samples, 0.02%)</title><rect x="500.0" y="149" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="502.98" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::push_back (44,665,440 samples, 0.71%)</title><rect x="90.3" y="277" width="8.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="93.30" y="287.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch2&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (106,224,985 samples, 1.70%)</title><rect x="61.4" y="245" width="20.0" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="64.37" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (731,320 samples, 0.01%)</title><rect x="22.1" y="261" width="0.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="25.12" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (629,410 samples, 0.01%)</title><rect x="86.2" y="277" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="89.23" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (2,092,496 samples, 0.03%)</title><rect x="85.8" y="261" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="88.76" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (1,034,637 samples, 0.02%)</title><rect x="133.7" y="213" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="136.73" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (1,031,610 samples, 0.02%)</title><rect x="1154.6" y="325" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1157.59" y="335.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (1,490,680 samples, 0.02%)</title><rect x="734.2" y="213" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="737.22" y="223.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::erase (1,733,891 samples, 0.03%)</title><rect x="1140.6" y="309" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1143.65" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (1,227,960 samples, 0.02%)</title><rect x="1115.6" y="277" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1118.57" y="287.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (1,776,827 samples, 0.03%)</title><rect x="76.0" y="197" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="78.99" y="207.5" ></text>
</g>
<g >
<title>boost::graph_detail::vector_tag::vector_tag (25,899,633 samples, 0.41%)</title><rect x="39.6" y="261" width="4.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="42.55" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (4,928,215 samples, 0.08%)</title><rect x="30.6" y="245" width="1.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="33.62" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::~_Vector_impl (3,865,721 samples, 0.06%)</title><rect x="1070.8" y="181" width="0.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1073.80" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size (16,687,734 samples, 0.27%)</title><rect x="1093.4" y="245" width="3.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1096.41" y="255.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (8,748,989 samples, 0.14%)</title><rect x="468.2" y="165" width="1.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="471.23" y="175.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;unsigned long*&gt; (557,551 samples, 0.01%)</title><rect x="1040.5" y="133" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1043.53" y="143.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (4,734,977 samples, 0.08%)</title><rect x="454.7" y="197" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="457.71" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (14,697,943 samples, 0.23%)</title><rect x="1176.0" y="277" width="2.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1179.04" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_push_back_aux&lt;unsigned long const&amp;&gt; (935,828 samples, 0.01%)</title><rect x="1008.0" y="261" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1011.04" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (1,299,040 samples, 0.02%)</title><rect x="1139.0" y="277" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1141.97" y="287.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (1,459,798 samples, 0.02%)</title><rect x="502.6" y="213" width="0.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="505.57" y="223.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator* (1,148,946 samples, 0.02%)</title><rect x="22.1" y="277" width="0.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="25.06" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt; (1,619,183 samples, 0.03%)</title><rect x="460.4" y="181" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="463.39" y="191.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (940,607 samples, 0.02%)</title><rect x="65.0" y="165" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="68.02" y="175.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (543,513 samples, 0.01%)</title><rect x="1122.2" y="181" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1125.20" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (20,166,147 samples, 0.32%)</title><rect x="69.2" y="197" width="3.8" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="72.15" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (12,261,920 samples, 0.20%)</title><rect x="1141.6" y="261" width="2.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1144.56" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (2,779,228 samples, 0.04%)</title><rect x="144.5" y="277" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="147.55" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (1,133,930 samples, 0.02%)</title><rect x="147.3" y="293" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="150.32" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_front (564,671 samples, 0.01%)</title><rect x="1001.2" y="293" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1004.16" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (3,555,237 samples, 0.06%)</title><rect x="107.4" y="261" width="0.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="110.40" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (5,462,462 samples, 0.09%)</title><rect x="497.3" y="181" width="1.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="500.27" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data (4,745,346 samples, 0.08%)</title><rect x="1114.3" y="245" width="0.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1117.33" y="255.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (7,692,842 samples, 0.12%)</title><rect x="132.1" y="165" width="1.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="135.13" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (626,815 samples, 0.01%)</title><rect x="1145.5" y="277" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1148.53" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (9,896,849 samples, 0.16%)</title><rect x="653.8" y="181" width="1.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="656.80" y="191.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (1,141,992 samples, 0.02%)</title><rect x="1071.8" y="229" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1074.81" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::begin (5,363,826 samples, 0.09%)</title><rect x="1011.5" y="277" width="1.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1014.52" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (722,779 samples, 0.01%)</title><rect x="55.5" y="293" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="58.50" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (5,988,814 samples, 0.10%)</title><rect x="1012.5" y="277" width="1.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1015.53" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::__normal_iterator (585,237 samples, 0.01%)</title><rect x="304.3" y="293" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="307.32" y="303.5" ></text>
</g>
<g >
<title>NexullanceIT::step_2 (5,306,277,904 samples, 84.84%)</title><rect x="148.6" y="325" width="1001.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="151.64" y="335.5" >NexullanceIT::step_2</text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (647,282 samples, 0.01%)</title><rect x="496.6" y="149" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="499.63" y="159.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long const&amp;&gt; (682,392 samples, 0.01%)</title><rect x="478.9" y="165" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="481.86" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt;::_M_next (4,412,088 samples, 0.07%)</title><rect x="1156.1" y="261" width="0.9" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1159.13" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (875,283 samples, 0.01%)</title><rect x="1035.5" y="181" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1038.54" y="191.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (8,024,612 samples, 0.13%)</title><rect x="918.8" y="245" width="1.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="921.84" y="255.5" ></text>
</g>
<g >
<title>std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::operator (1,125,983 samples, 0.02%)</title><rect x="37.5" y="261" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="40.46" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (6,420,396 samples, 0.10%)</title><rect x="622.4" y="133" width="1.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="625.39" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (12,968,611 samples, 0.21%)</title><rect x="1141.5" y="277" width="2.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1144.49" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt; (903,249 samples, 0.01%)</title><rect x="1005.0" y="261" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1008.03" y="271.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::parent (540,667 samples, 0.01%)</title><rect x="489.0" y="197" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="491.95" y="207.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator* (630,784 samples, 0.01%)</title><rect x="26.6" y="309" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="29.57" y="319.5" ></text>
</g>
<g >
<title>release_pages (1,242,027 samples, 0.02%)</title><rect x="1179.6" y="213" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1182.60" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (2,187,738 samples, 0.03%)</title><rect x="91.3" y="213" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="94.34" y="223.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (772,824 samples, 0.01%)</title><rect x="1039.2" y="117" width="0.1" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1042.18" y="127.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (668,618 samples, 0.01%)</title><rect x="1029.6" y="197" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1032.59" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (864,895 samples, 0.01%)</title><rect x="727.2" y="197" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="730.23" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (4,928,152 samples, 0.08%)</title><rect x="1137.9" y="293" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1140.86" y="303.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (730,994 samples, 0.01%)</title><rect x="79.5" y="181" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="82.55" y="191.5" ></text>
</g>
<g >
<title>boost::range_detail::integer_iterator&lt;unsigned long&gt;::equal (2,535,664 samples, 0.04%)</title><rect x="874.1" y="197" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="877.13" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::size (877,840 samples, 0.01%)</title><rect x="1057.0" y="261" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1060.01" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (34,724,597 samples, 0.56%)</title><rect x="1065.3" y="229" width="6.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1068.26" y="239.5" ></text>
</g>
<g >
<title>get_page_from_freelist (5,806,050 samples, 0.09%)</title><rect x="1176.7" y="213" width="1.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1179.69" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (14,917,044 samples, 0.24%)</title><rect x="1158.2" y="277" width="2.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1161.22" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (640,179 samples, 0.01%)</title><rect x="1016.2" y="277" width="0.1" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="1019.16" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (625,704 samples, 0.01%)</title><rect x="94.2" y="181" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="97.24" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (2,139,688 samples, 0.03%)</title><rect x="48.4" y="213" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="51.43" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (854,979 samples, 0.01%)</title><rect x="1078.5" y="277" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1081.54" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (4,072,529 samples, 0.07%)</title><rect x="1158.8" y="245" width="0.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1161.80" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (1,573,216 samples, 0.03%)</title><rect x="862.1" y="213" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="865.12" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (5,343,622 samples, 0.09%)</title><rect x="138.1" y="245" width="1.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="141.08" y="255.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (1,881,491 samples, 0.03%)</title><rect x="60.8" y="277" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="63.84" y="287.5" ></text>
</g>
<g >
<title>boost::multi_index::detail::sequenced_index&lt;boost::multi_index::detail::nth_layer&lt;1, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, boost::multi_index::indexed_by&lt;boost::multi_index::sequenced&lt;boost::multi_index::tag&lt;mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na&gt; &gt;, boost::multi_index::ordered_non_unique&lt;boost::multi_index::tag&lt;boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::subs::by_name, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na&gt;, boost::multi_index::member&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, &amp;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::first&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::vector0&lt;mpl_::na&gt; &gt;::insert (657,458 samples, 0.01%)</title><rect x="12.1" y="341" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="15.14" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (1,516,327 samples, 0.02%)</title><rect x="1148.3" y="261" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1151.27" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (627,736 samples, 0.01%)</title><rect x="66.4" y="165" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="69.44" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (1,262,351 samples, 0.02%)</title><rect x="100.1" y="229" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="103.09" y="239.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (563,211 samples, 0.01%)</title><rect x="1112.9" y="213" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1115.86" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (1,331,943 samples, 0.02%)</title><rect x="52.4" y="197" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="55.44" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (5,112,316 samples, 0.08%)</title><rect x="960.6" y="293" width="0.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="963.55" y="303.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (766,752 samples, 0.01%)</title><rect x="500.4" y="197" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="503.42" y="207.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::first_child (3,862,422 samples, 0.06%)</title><rect x="407.6" y="181" width="0.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="410.57" y="191.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (21,216,155 samples, 0.34%)</title><rect x="483.8" y="197" width="4.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="486.80" y="207.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (14,855,030 samples, 0.24%)</title><rect x="82.5" y="245" width="2.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="85.48" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~_Vector_base (1,239,335 samples, 0.02%)</title><rect x="136.1" y="293" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="139.10" y="303.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (106,224,985 samples, 1.70%)</title><rect x="61.4" y="229" width="20.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="64.37" y="239.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (5,732,042 samples, 0.09%)</title><rect x="557.7" y="213" width="1.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="560.67" y="223.5" ></text>
</g>
<g >
<title>[unknown] (679,691 samples, 0.01%)</title><rect x="19.2" y="325" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="22.17" y="335.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (665,641 samples, 0.01%)</title><rect x="874.7" y="229" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="877.67" y="239.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (4,175,656 samples, 0.07%)</title><rect x="68.1" y="197" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="71.13" y="207.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (2,922,214 samples, 0.05%)</title><rect x="68.4" y="181" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="71.37" y="191.5" ></text>
</g>
<g >
<title>[unknown] (53,537,509 samples, 0.86%)</title><rect x="11.2" y="373" width="10.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.15" y="383.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::~stored_edge_property (2,436,425 samples, 0.04%)</title><rect x="274.6" y="293" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="277.63" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (854,208 samples, 0.01%)</title><rect x="1065.6" y="213" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1068.64" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::empty (18,641,133 samples, 0.30%)</title><rect x="1010.1" y="293" width="3.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1013.14" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, false, false&gt;::derived (3,177,637 samples, 0.05%)</title><rect x="869.9" y="213" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="872.87" y="223.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (2,302,332 samples, 0.04%)</title><rect x="64.6" y="165" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="67.57" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (7,894,308 samples, 0.13%)</title><rect x="132.1" y="181" width="1.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="135.09" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (687,674 samples, 0.01%)</title><rect x="1121.9" y="261" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1124.93" y="271.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (101,087,459 samples, 1.62%)</title><rect x="758.5" y="197" width="19.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="761.55" y="207.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (1,994,719 samples, 0.03%)</title><rect x="77.7" y="165" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="80.71" y="175.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::__uniq_ptr_impl (11,782,552 samples, 0.19%)</title><rect x="32.7" y="261" width="2.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="35.72" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (663,642 samples, 0.01%)</title><rect x="500.6" y="197" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="503.56" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;float, std::allocator&lt;float&gt; &gt;::end (537,803 samples, 0.01%)</title><rect x="1129.9" y="309" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1132.95" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (6,700,888 samples, 0.11%)</title><rect x="101.1" y="245" width="1.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="104.08" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1,187,204 samples, 0.02%)</title><rect x="1046.3" y="229" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1049.25" y="239.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (2,801,687 samples, 0.04%)</title><rect x="67.6" y="181" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="70.60" y="191.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt;*&gt;::pointer_to (1,104,845 samples, 0.02%)</title><rect x="1157.7" y="229" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1160.66" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned long&gt;, unsigned long&gt;::_S_select_on_copy (5,134,874 samples, 0.08%)</title><rect x="1108.5" y="277" width="1.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1111.54" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (9,127,558 samples, 0.15%)</title><rect x="131.9" y="213" width="1.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="134.90" y="223.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_not_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (2,505,934 samples, 0.04%)</title><rect x="66.7" y="197" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="69.67" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::new_allocator (702,460 samples, 0.01%)</title><rect x="1114.2" y="245" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1117.20" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (755,162 samples, 0.01%)</title><rect x="1011.4" y="261" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1014.37" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (1,272,608 samples, 0.02%)</title><rect x="1137.9" y="277" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1140.88" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (876,736 samples, 0.01%)</title><rect x="389.7" y="149" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="392.68" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::deallocate (6,384,646 samples, 0.10%)</title><rect x="1074.9" y="245" width="1.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1077.90" y="255.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (5,814,458 samples, 0.09%)</title><rect x="726.1" y="197" width="1.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="729.13" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (4,699,959 samples, 0.08%)</title><rect x="871.8" y="229" width="0.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="874.81" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (565,334 samples, 0.01%)</title><rect x="1140.9" y="165" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1143.87" y="175.5" ></text>
</g>
<g >
<title>boost::range_detail::integer_iterator&lt;unsigned long&gt;::increment (3,685,340 samples, 0.06%)</title><rect x="870.7" y="197" width="0.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="873.70" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (8,028,546 samples, 0.13%)</title><rect x="704.4" y="181" width="1.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="707.41" y="191.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (1,799,282 samples, 0.03%)</title><rect x="451.6" y="197" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="454.55" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (22,194,713 samples, 0.35%)</title><rect x="130.3" y="229" width="4.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="133.31" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (42,769,267 samples, 0.68%)</title><rect x="1064.1" y="245" width="8.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1067.07" y="255.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (26,703,700 samples, 0.43%)</title><rect x="433.6" y="149" width="5.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="436.60" y="159.5" ></text>
</g>
<g >
<title>_int_free (1,966,439 samples, 0.03%)</title><rect x="1069.6" y="149" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1072.62" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (7,001,458 samples, 0.11%)</title><rect x="90.6" y="229" width="1.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="93.65" y="239.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (5,822,992 samples, 0.09%)</title><rect x="819.7" y="165" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="822.72" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (580,806 samples, 0.01%)</title><rect x="1109.7" y="277" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1112.69" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, true&gt;::_Head_base (617,008 samples, 0.01%)</title><rect x="34.6" y="213" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="37.55" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::empty (774,088 samples, 0.01%)</title><rect x="1144.8" y="309" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1147.85" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (628,583 samples, 0.01%)</title><rect x="90.2" y="277" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="93.18" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Deque_base (1,058,828 samples, 0.02%)</title><rect x="1008.8" y="261" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1011.81" y="271.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pop (7,171,842 samples, 0.11%)</title><rect x="1003.9" y="293" width="1.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1006.89" y="303.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; (2,782,340 samples, 0.04%)</title><rect x="19.4" y="277" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="22.38" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (66,049,766 samples, 1.06%)</title><rect x="947.7" y="293" width="12.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="950.73" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_v (544,044 samples, 0.01%)</title><rect x="1140.1" y="277" width="0.1" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="1143.12" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (1,258,124 samples, 0.02%)</title><rect x="84.9" y="133" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="87.94" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (12,945,930 samples, 0.21%)</title><rect x="1158.5" y="261" width="2.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1161.54" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_valptr (1,030,927 samples, 0.02%)</title><rect x="122.2" y="197" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="125.25" y="207.5" ></text>
</g>
<g >
<title>__ieee754_pow_sse2 (19,497,320 samples, 0.31%)</title><rect x="1149.9" y="325" width="3.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1152.91" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::allocator (577,663 samples, 0.01%)</title><rect x="1061.8" y="261" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1064.79" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (1,566,454 samples, 0.03%)</title><rect x="107.6" y="245" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="110.56" y="255.5" ></text>
</g>
<g >
<title>std::make_pair&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, bool&gt; (4,412,670 samples, 0.07%)</title><rect x="54.7" y="293" width="0.8" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="57.65" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (933,524 samples, 0.01%)</title><rect x="1014.8" y="197" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1017.83" y="207.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (4,481,840 samples, 0.07%)</title><rect x="641.3" y="69" width="0.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="644.28" y="79.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::allocator (1,285,976 samples, 0.02%)</title><rect x="1061.5" y="245" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1064.51" y="255.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (2,984,082,950 samples, 47.71%)</title><rect x="317.3" y="245" width="563.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="320.35" y="255.5" >boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS..</text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::out_edge_list (563,734 samples, 0.01%)</title><rect x="999.8" y="293" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1002.80" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (687,674 samples, 0.01%)</title><rect x="1121.9" y="245" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1124.93" y="255.5" ></text>
</g>
<g >
<title>malloc (961,520 samples, 0.02%)</title><rect x="1087.0" y="229" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1089.97" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;unsigned long const&gt;::operator (1,690,296 samples, 0.03%)</title><rect x="1133.6" y="261" width="0.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1136.58" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (706,605 samples, 0.01%)</title><rect x="882.1" y="229" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="885.13" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (155,177,153 samples, 2.48%)</title><rect x="619.2" y="149" width="29.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="622.17" y="159.5" >st..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (10,052,886 samples, 0.16%)</title><rect x="1059.9" y="261" width="1.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1062.86" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_relocate (545,992 samples, 0.01%)</title><rect x="1058.1" y="245" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1061.05" y="255.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (1,979,891 samples, 0.03%)</title><rect x="91.4" y="197" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="94.38" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (6,264,228 samples, 0.10%)</title><rect x="132.2" y="149" width="1.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="135.20" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (1,232,161 samples, 0.02%)</title><rect x="1087.4" y="245" width="0.3" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1090.42" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (1,256,100 samples, 0.02%)</title><rect x="105.2" y="213" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="108.17" y="223.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2,104,759 samples, 0.03%)</title><rect x="271.9" y="293" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="274.85" y="303.5" ></text>
</g>
<g >
<title>std::equal_to&lt;unsigned long&gt;::operator (908,895 samples, 0.01%)</title><rect x="1143.5" y="213" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1146.47" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (15,709,782 samples, 0.25%)</title><rect x="722.2" y="165" width="3.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="725.24" y="175.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (631,875 samples, 0.01%)</title><rect x="83.6" y="213" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="86.62" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (5,219,680 samples, 0.08%)</title><rect x="33.2" y="245" width="1.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="36.18" y="255.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (954,917 samples, 0.02%)</title><rect x="873.7" y="213" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="876.65" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (19,169,420 samples, 0.31%)</title><rect x="378.9" y="197" width="3.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="381.92" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__stoa&lt;float, float, char&gt; (734,973 samples, 0.01%)</title><rect x="1164.4" y="309" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1167.44" y="319.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (545,582 samples, 0.01%)</title><rect x="306.4" y="293" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="309.44" y="303.5" ></text>
</g>
<g >
<title>pow@@GLIBC_2.29 (1,332,354 samples, 0.02%)</title><rect x="1153.7" y="325" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1156.72" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (1,844,149 samples, 0.03%)</title><rect x="1148.3" y="293" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1151.25" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (10,156,950 samples, 0.16%)</title><rect x="119.7" y="261" width="1.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="122.69" y="271.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (3,113,165 samples, 0.05%)</title><rect x="541.0" y="197" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="544.01" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (1,141,718 samples, 0.02%)</title><rect x="1126.3" y="277" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1129.31" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (750,807 samples, 0.01%)</title><rect x="379.5" y="181" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="382.47" y="191.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::operator[] (9,646,139 samples, 0.15%)</title><rect x="1138.8" y="309" width="1.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1141.83" y="319.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (2,775,351 samples, 0.04%)</title><rect x="496.8" y="181" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="499.75" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, false, false&gt;::operator* (3,624,430 samples, 0.06%)</title><rect x="868.9" y="229" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="871.86" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_valptr (618,619 samples, 0.01%)</title><rect x="1157.1" y="245" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1160.13" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt;::allocate (820,853 samples, 0.01%)</title><rect x="125.1" y="245" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="128.11" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1,701,895 samples, 0.03%)</title><rect x="1155.6" y="277" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1158.56" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (2,177,521 samples, 0.03%)</title><rect x="1089.1" y="261" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1092.09" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (3,481,165 samples, 0.06%)</title><rect x="486.3" y="165" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="489.30" y="175.5" ></text>
</g>
<g >
<title>boost::graph_detail::push&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,773,904 samples, 0.03%)</title><rect x="21.6" y="229" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="24.64" y="239.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (8,102,041 samples, 0.13%)</title><rect x="453.1" y="181" width="1.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="456.12" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt; (4,945,793 samples, 0.08%)</title><rect x="870.5" y="213" width="0.9" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="873.47" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (3,465,175 samples, 0.06%)</title><rect x="1139.2" y="277" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1142.22" y="287.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (1,504,287 samples, 0.02%)</title><rect x="1120.9" y="213" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1123.93" y="223.5" ></text>
</g>
<g >
<title>std::make_pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (12,435,320 samples, 0.20%)</title><rect x="728.8" y="197" width="2.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="731.84" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::emplace_back&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,461,015 samples, 0.02%)</title><rect x="21.7" y="181" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="24.70" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_get_node (1,239,218 samples, 0.02%)</title><rect x="1130.2" y="261" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1133.17" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (628,507 samples, 0.01%)</title><rect x="94.1" y="149" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="97.12" y="159.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (1,727,222 samples, 0.03%)</title><rect x="1014.7" y="229" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1017.73" y="239.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (1,249,752 samples, 0.02%)</title><rect x="68.6" y="165" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="71.56" y="175.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (981,130 samples, 0.02%)</title><rect x="820.8" y="165" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="823.82" y="175.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long const&amp;&gt; (660,978 samples, 0.01%)</title><rect x="1007.9" y="245" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1010.91" y="255.5" ></text>
</g>
<g >
<title>boost::mutate_graph_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::do_add_edge (3,813,305 samples, 0.06%)</title><rect x="19.3" y="325" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="22.34" y="335.5" ></text>
</g>
<g >
<title>malloc (793,644 samples, 0.01%)</title><rect x="1024.7" y="229" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1027.75" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_check_len (3,240,715 samples, 0.05%)</title><rect x="95.0" y="245" width="0.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="98.05" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (3,108,242 samples, 0.05%)</title><rect x="647.9" y="117" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="650.86" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (4,266,140 samples, 0.07%)</title><rect x="1022.5" y="261" width="0.8" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="1025.54" y="271.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (10,043,858 samples, 0.16%)</title><rect x="838.8" y="213" width="1.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="841.80" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (749,917 samples, 0.01%)</title><rect x="1077.4" y="293" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1080.39" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::__normal_iterator (2,327,338 samples, 0.04%)</title><rect x="1013.2" y="261" width="0.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1016.20" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (2,666,811 samples, 0.04%)</title><rect x="141.4" y="277" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="144.39" y="287.5" ></text>
</g>
<g >
<title>_int_free (2,651,906 samples, 0.04%)</title><rect x="1075.3" y="229" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1078.28" y="239.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (2,504,523 samples, 0.04%)</title><rect x="73.5" y="181" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="76.53" y="191.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::initialize_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (7,626,314 samples, 0.12%)</title><rect x="319.9" y="229" width="1.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="322.94" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_allocate_buckets (1,941,873 samples, 0.03%)</title><rect x="112.7" y="229" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="115.74" y="239.5" ></text>
</g>
<g >
<title>__brk (1,391,072 samples, 0.02%)</title><rect x="13.1" y="357" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="16.06" y="367.5" ></text>
</g>
<g >
<title>boost::graph_detail::find&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (12,604,372 samples, 0.20%)</title><rect x="275.1" y="293" width="2.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="278.09" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (1,599,282 samples, 0.03%)</title><rect x="726.9" y="181" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="729.93" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (563,989 samples, 0.01%)</title><rect x="1016.6" y="277" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1019.62" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned long&gt;, unsigned long&gt;::_S_select_on_copy (1,678,210 samples, 0.03%)</title><rect x="104.3" y="261" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="107.32" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (557,853 samples, 0.01%)</title><rect x="274.2" y="229" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="277.20" y="239.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (2,753,127 samples, 0.04%)</title><rect x="864.0" y="229" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="867.03" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (2,099,551 samples, 0.03%)</title><rect x="94.4" y="165" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="97.42" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (7,662,089 samples, 0.12%)</title><rect x="1032.9" y="165" width="1.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1035.91" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (6,620,352 samples, 0.11%)</title><rect x="448.6" y="181" width="1.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="451.61" y="191.5" ></text>
</g>
<g >
<title>bash (5,927,233 samples, 0.09%)</title><rect x="10.0" y="389" width="1.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,094,516 samples, 0.05%)</title><rect x="1179.5" y="373" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1182.51" y="383.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (16,245,456 samples, 0.26%)</title><rect x="514.6" y="213" width="3.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="517.60" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (4,647,079 samples, 0.07%)</title><rect x="446.6" y="165" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="449.57" y="175.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_down (561,447 samples, 0.01%)</title><rect x="461.7" y="213" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="464.70" y="223.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (619,313 samples, 0.01%)</title><rect x="31.4" y="181" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="34.44" y="191.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (1,333,625 samples, 0.02%)</title><rect x="31.3" y="197" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="34.30" y="207.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long*&gt; (1,952,044 samples, 0.03%)</title><rect x="1099.8" y="229" width="0.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1102.85" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (1,754,779 samples, 0.03%)</title><rect x="1011.2" y="277" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1014.18" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_valptr (865,957 samples, 0.01%)</title><rect x="1158.6" y="245" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1161.63" y="255.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::parent (910,090 samples, 0.01%)</title><rect x="467.0" y="181" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="469.95" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (5,350,278 samples, 0.09%)</title><rect x="130.8" y="213" width="1.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="133.85" y="223.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (646,840 samples, 0.01%)</title><rect x="863.8" y="229" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="866.82" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (5,280,967 samples, 0.08%)</title><rect x="896.8" y="261" width="1.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="899.79" y="271.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (838,028 samples, 0.01%)</title><rect x="66.4" y="181" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="69.40" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt;::_M_next (1,144,505 samples, 0.02%)</title><rect x="123.0" y="229" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="125.97" y="239.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (5,514,849 samples, 0.09%)</title><rect x="582.7" y="181" width="1.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="585.73" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::~_Vector_impl (1,123,659 samples, 0.02%)</title><rect x="148.3" y="277" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="151.31" y="287.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (15,920,660 samples, 0.25%)</title><rect x="818.0" y="197" width="3.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="821.00" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (69,134,144 samples, 1.11%)</title><rect x="929.2" y="197" width="13.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="932.17" y="207.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::clear (1,236,930 samples, 0.02%)</title><rect x="108.7" y="309" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="111.67" y="319.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (3,297,832 samples, 0.05%)</title><rect x="19.4" y="293" width="0.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="22.36" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (1,048,557 samples, 0.02%)</title><rect x="94.0" y="165" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="97.04" y="175.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (4,857,748 samples, 0.08%)</title><rect x="556.6" y="181" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="559.65" y="191.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (11,350,270 samples, 0.18%)</title><rect x="771.8" y="165" width="2.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="774.77" y="175.5" ></text>
</g>
<g >
<title>[main.exe] (681,522 samples, 0.01%)</title><rect x="1113.0" y="213" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1115.97" y="223.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::~stored_edge_property (19,930,108 samples, 0.32%)</title><rect x="35.1" y="293" width="3.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="38.09" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (8,275,489 samples, 0.13%)</title><rect x="93.4" y="213" width="1.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="96.45" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (2,012,578 samples, 0.03%)</title><rect x="1148.6" y="229" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1151.64" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::push_back (232,245,773 samples, 3.71%)</title><rect x="1015.2" y="293" width="43.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1018.15" y="303.5" >std:..</text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (4,734,805 samples, 0.08%)</title><rect x="144.4" y="293" width="0.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="147.43" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (807,393 samples, 0.01%)</title><rect x="485.1" y="165" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="488.07" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::size (8,506,518 samples, 0.14%)</title><rect x="1048.9" y="245" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1051.94" y="255.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_edge&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (100,347,747 samples, 1.60%)</title><rect x="356.2" y="213" width="18.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="359.16" y="223.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (823,905 samples, 0.01%)</title><rect x="26.9" y="309" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="29.90" y="319.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (4,117,584 samples, 0.07%)</title><rect x="1001.4" y="293" width="0.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1004.41" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (1,979,891 samples, 0.03%)</title><rect x="91.4" y="181" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="94.38" y="191.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (2,263,228 samples, 0.04%)</title><rect x="1119.9" y="197" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1122.87" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (26,934,759 samples, 0.43%)</title><rect x="98.8" y="277" width="5.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="101.78" y="287.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::dummy_property_map, boost::detail::dummy_pmap_reference, unsigned long, unsigned long&gt; (3,657,281 samples, 0.06%)</title><rect x="874.8" y="229" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="877.79" y="239.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_edge&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (3,560,810 samples, 0.06%)</title><rect x="62.6" y="197" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="65.55" y="207.5" ></text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (3,184,235 samples, 0.05%)</title><rect x="374.0" y="181" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="376.97" y="191.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2,419,983 samples, 0.04%)</title><rect x="271.8" y="309" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="274.79" y="319.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (12,535,635 samples, 0.20%)</title><rect x="1052.9" y="229" width="2.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1055.92" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (860,533 samples, 0.01%)</title><rect x="1079.2" y="277" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1082.22" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (1,540,268 samples, 0.02%)</title><rect x="144.7" y="245" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="147.75" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (731,794 samples, 0.01%)</title><rect x="103.9" y="277" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="106.86" y="287.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (1,130,988 samples, 0.02%)</title><rect x="116.3" y="181" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="119.29" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~_Vector_base (1,085,375 samples, 0.02%)</title><rect x="1000.4" y="293" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1003.44" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (139,885,564 samples, 2.24%)</title><rect x="1079.6" y="277" width="26.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1082.62" y="287.5" >s..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (3,809,311 samples, 0.06%)</title><rect x="36.7" y="261" width="0.8" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="39.74" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (3,933,853 samples, 0.06%)</title><rect x="1057.5" y="261" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1060.51" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (9,405,032 samples, 0.15%)</title><rect x="74.2" y="197" width="1.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="77.22" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (1,644,878 samples, 0.03%)</title><rect x="135.5" y="197" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="138.46" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (1,036,024 samples, 0.02%)</title><rect x="66.1" y="181" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="69.13" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt;::construct&lt;std::pair&lt;unsigned long const, float&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (6,990,694 samples, 0.11%)</title><rect x="115.6" y="245" width="1.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="118.56" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (1,047,912 samples, 0.02%)</title><rect x="98.1" y="117" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="101.05" y="127.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1,444,904 samples, 0.02%)</title><rect x="1075.8" y="229" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1078.78" y="239.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (3,340,415 samples, 0.05%)</title><rect x="80.1" y="197" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="83.13" y="207.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (3,246,186 samples, 0.05%)</title><rect x="883.1" y="293" width="0.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="886.14" y="303.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (26,424,553 samples, 0.42%)</title><rect x="551.7" y="181" width="4.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="554.66" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (18,145,199 samples, 0.29%)</title><rect x="648.4" y="165" width="3.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="651.44" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (1,147,041 samples, 0.02%)</title><rect x="63.4" y="181" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="66.40" y="191.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_nodes (544,740 samples, 0.01%)</title><rect x="1008.5" y="229" width="0.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1011.45" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false, false&gt;::operator (924,012 samples, 0.01%)</title><rect x="128.2" y="277" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="131.20" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (1,250,646 samples, 0.02%)</title><rect x="1068.0" y="197" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1071.01" y="207.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (2,203,937 samples, 0.04%)</title><rect x="94.4" y="181" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="97.40" y="191.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (46,055,662 samples, 0.74%)</title><rect x="725.2" y="213" width="8.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="728.20" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (2,150,156 samples, 0.03%)</title><rect x="127.0" y="165" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="130.00" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (727,840 samples, 0.01%)</title><rect x="1115.4" y="261" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1118.44" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt; (2,235,615 samples, 0.04%)</title><rect x="869.1" y="213" width="0.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="872.10" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back (559,366 samples, 0.01%)</title><rect x="862.0" y="213" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="864.99" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_do_relocate (2,263,897 samples, 0.04%)</title><rect x="143.0" y="261" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="145.98" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::allocate (1,952,113 samples, 0.03%)</title><rect x="125.0" y="261" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="128.02" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (3,038,042 samples, 0.05%)</title><rect x="1123.5" y="277" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1126.47" y="287.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::vec_adj_list_impl (4,489,809 samples, 0.07%)</title><rect x="21.6" y="309" width="0.9" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="24.61" y="319.5" ></text>
</g>
<g >
<title>boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::walk_path (603,552 samples, 0.01%)</title><rect x="1179.2" y="373" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1182.24" y="383.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::vec_adj_list_impl (4,537,439 samples, 0.07%)</title><rect x="1163.3" y="309" width="0.9" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1166.34" y="319.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (833,764 samples, 0.01%)</title><rect x="70.8" y="133" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="73.85" y="143.5" ></text>
</g>
<g >
<title>boost::graph_detail::find&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (80,240,629 samples, 1.28%)</title><rect x="39.0" y="293" width="15.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="41.99" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (1,946,638 samples, 0.03%)</title><rect x="960.2" y="293" width="0.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="963.19" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (1,747,769 samples, 0.03%)</title><rect x="118.9" y="277" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="121.89" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (620,979 samples, 0.01%)</title><rect x="56.5" y="277" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="59.45" y="287.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pop (1,225,424 samples, 0.02%)</title><rect x="321.5" y="229" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="324.50" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::deallocate (909,903 samples, 0.01%)</title><rect x="1077.0" y="261" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1080.01" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (47,268,705 samples, 0.76%)</title><rect x="713.3" y="165" width="8.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="716.30" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (22,325,919 samples, 0.36%)</title><rect x="119.3" y="277" width="4.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="122.28" y="287.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (7,997,118 samples, 0.13%)</title><rect x="375.1" y="213" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="378.09" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (3,153,255 samples, 0.05%)</title><rect x="1001.6" y="277" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1004.55" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (647,688 samples, 0.01%)</title><rect x="1110.8" y="261" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1113.77" y="271.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (2,295,854 samples, 0.04%)</title><rect x="21.6" y="261" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="24.61" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, float&gt;::pair&lt;unsigned long const&amp;&gt; (3,292,178 samples, 0.05%)</title><rect x="115.9" y="229" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="118.89" y="239.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (838,540 samples, 0.01%)</title><rect x="1146.9" y="229" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1149.87" y="239.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::stored_edge_property (626,739 samples, 0.01%)</title><rect x="21.8" y="69" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="24.82" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Hash_node_value_base (614,674 samples, 0.01%)</title><rect x="124.4" y="245" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="127.42" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_valptr (1,026,489 samples, 0.02%)</title><rect x="111.8" y="197" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="114.82" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_v (1,128,879 samples, 0.02%)</title><rect x="111.8" y="213" width="0.2" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="114.80" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::vector (16,071,999 samples, 0.26%)</title><rect x="1059.0" y="293" width="3.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1061.97" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;&amp;&gt; (560,261 samples, 0.01%)</title><rect x="1143.6" y="213" width="0.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1146.64" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::empty (3,661,564 samples, 0.06%)</title><rect x="89.5" y="277" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="92.49" y="287.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (872,038 samples, 0.01%)</title><rect x="469.5" y="133" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="472.51" y="143.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (647,569 samples, 0.01%)</title><rect x="1037.2" y="165" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1040.18" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::select_on_container_copy_construction (2,921,617 samples, 0.05%)</title><rect x="1109.0" y="261" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1111.96" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt; (2,161,621 samples, 0.03%)</title><rect x="45.1" y="245" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="48.05" y="255.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (2,037,446 samples, 0.03%)</title><rect x="652.4" y="181" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="655.41" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (6,630,104 samples, 0.11%)</title><rect x="472.9" y="181" width="1.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="475.92" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (1,952,190 samples, 0.03%)</title><rect x="118.4" y="261" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="121.43" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (2,850,230 samples, 0.05%)</title><rect x="501.0" y="181" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="503.99" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (87,388,933 samples, 1.40%)</title><rect x="926.5" y="213" width="16.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="929.54" y="223.5" ></text>
</g>
<g >
<title>std::plus&lt;float&gt;::operator (44,346,648 samples, 0.71%)</title><rect x="829.6" y="197" width="8.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="832.58" y="207.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long*&gt; (732,967 samples, 0.01%)</title><rect x="103.1" y="197" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="106.06" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (3,315,831 samples, 0.05%)</title><rect x="1157.2" y="245" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1160.24" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (5,552,547 samples, 0.09%)</title><rect x="1159.9" y="197" width="1.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1162.89" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (9,437,519 samples, 0.15%)</title><rect x="1138.9" y="293" width="1.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1141.87" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (754,817 samples, 0.01%)</title><rect x="1146.3" y="293" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1149.27" y="303.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (3,453,729 samples, 0.06%)</title><rect x="890.8" y="277" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="893.84" y="287.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (8,613,191 samples, 0.14%)</title><rect x="132.0" y="197" width="1.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="134.99" y="207.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,189,527 samples, 0.02%)</title><rect x="1118.5" y="181" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1121.53" y="191.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (627,859 samples, 0.01%)</title><rect x="68.8" y="165" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="71.80" y="175.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (1,566,771 samples, 0.03%)</title><rect x="64.7" y="149" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="67.71" y="159.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (3,522,318 samples, 0.06%)</title><rect x="878.0" y="229" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="880.98" y="239.5" ></text>
</g>
<g >
<title>boost::tuples::tie&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (1,043,775 samples, 0.02%)</title><rect x="88.5" y="277" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="91.50" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (555,297 samples, 0.01%)</title><rect x="881.6" y="213" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="884.57" y="223.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (6,057,132 samples, 0.10%)</title><rect x="78.2" y="181" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="81.21" y="191.5" ></text>
</g>
<g >
<title>clear_page_rep (3,797,399 samples, 0.06%)</title><rect x="1176.7" y="197" width="0.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1179.75" y="207.5" ></text>
</g>
<g >
<title>boost::graph_detail::forward_container_tag::forward_container_tag (1,026,639 samples, 0.02%)</title><rect x="42.1" y="245" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="45.11" y="255.5" ></text>
</g>
<g >
<title>boost::scoped_array&lt;unsigned long&gt;::~scoped_array (985,001 samples, 0.02%)</title><rect x="838.0" y="213" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="840.95" y="223.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, false&gt;::operator mpl_::bool_&lt;false&gt; const&amp; (2,473,407 samples, 0.04%)</title><rect x="514.1" y="181" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="517.14" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (543,742 samples, 0.01%)</title><rect x="1078.7" y="277" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1081.70" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (2,251,694 samples, 0.04%)</title><rect x="1030.6" y="213" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1033.57" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (3,289,801 samples, 0.05%)</title><rect x="52.1" y="213" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="55.07" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config::stored_vertex, std::allocator&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config::stored_vertex&gt; &gt;::operator[] (4,165,932 samples, 0.07%)</title><rect x="988.6" y="261" width="0.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="991.65" y="271.5" ></text>
</g>
<g >
<title>_int_free (2,405,920 samples, 0.04%)</title><rect x="1128.2" y="229" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1131.21" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (9,215,304 samples, 0.15%)</title><rect x="93.3" y="245" width="1.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="96.29" y="255.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (4,577,927 samples, 0.07%)</title><rect x="67.3" y="197" width="0.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="70.27" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt;::_Iter_equals_val (821,855 samples, 0.01%)</title><rect x="45.3" y="229" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="48.31" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (1,430,300 samples, 0.02%)</title><rect x="378.2" y="197" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="381.19" y="207.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (1,144,814 samples, 0.02%)</title><rect x="495.0" y="181" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="498.00" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (685,615 samples, 0.01%)</title><rect x="485.2" y="165" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="488.22" y="175.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (2,130,913 samples, 0.03%)</title><rect x="440.6" y="181" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="443.55" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash_aux (8,891,504 samples, 0.14%)</title><rect x="121.6" y="245" width="1.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="124.60" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (1,788,543 samples, 0.03%)</title><rect x="100.0" y="245" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="102.99" y="255.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::verify_heap (1,000,219 samples, 0.02%)</title><rect x="423.1" y="181" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="426.07" y="191.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (9,373,906 samples, 0.15%)</title><rect x="917.0" y="229" width="1.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="920.05" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate (5,659,133 samples, 0.09%)</title><rect x="102.4" y="245" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="105.38" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::begin (942,346 samples, 0.02%)</title><rect x="89.8" y="261" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="92.78" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_do_relocate (1,202,484 samples, 0.02%)</title><rect x="1050.5" y="261" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1053.54" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (988,425 samples, 0.02%)</title><rect x="1160.1" y="181" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1163.05" y="191.5" ></text>
</g>
<g >
<title>[unknown] (1,123,404 samples, 0.02%)</title><rect x="20.9" y="341" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="23.88" y="351.5" ></text>
</g>
<g >
<title>boost::tuples::tuple&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type&gt;::tuple (13,579,433 samples, 0.22%)</title><rect x="996.2" y="277" width="2.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="999.20" y="287.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (5,037,194 samples, 0.08%)</title><rect x="138.1" y="229" width="1.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="141.14" y="239.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (4,154,457 samples, 0.07%)</title><rect x="312.7" y="277" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="315.71" y="287.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (688,780 samples, 0.01%)</title><rect x="757.5" y="197" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="760.55" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (93,558,751 samples, 1.50%)</title><rect x="1026.2" y="245" width="17.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1029.20" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data (609,914 samples, 0.01%)</title><rect x="22.8" y="277" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="25.79" y="287.5" ></text>
</g>
<g >
<title>std::prev&lt;std::_List_iterator&lt;float&gt; &gt; (13,583,661 samples, 0.22%)</title><rect x="1134.3" y="309" width="2.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1137.27" y="319.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; (2,087,077 samples, 0.03%)</title><rect x="21.6" y="245" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="24.61" y="255.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (1,979,367 samples, 0.03%)</title><rect x="937.7" y="149" width="0.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="940.74" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (612,430 samples, 0.01%)</title><rect x="112.2" y="213" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="115.24" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::__uniq_ptr_impl (2,438,614 samples, 0.04%)</title><rect x="274.1" y="261" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="277.11" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_allocate (618,361 samples, 0.01%)</title><rect x="129.3" y="261" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="132.28" y="271.5" ></text>
</g>
<g >
<title>std::advance&lt;std::_List_iterator&lt;float&gt;, long&gt; (13,479,177 samples, 0.22%)</title><rect x="1134.3" y="293" width="2.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1137.29" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::erase (4,346,211 samples, 0.07%)</title><rect x="1146.4" y="309" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1149.41" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (3,452,671 samples, 0.06%)</title><rect x="96.9" y="117" width="0.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="99.91" y="127.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (21,697,094 samples, 0.35%)</title><rect x="938.1" y="149" width="4.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="941.12" y="159.5" ></text>
</g>
<g >
<title>boost::graph_detail::push_dispatch&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,444,295 samples, 0.02%)</title><rect x="1163.6" y="213" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1166.57" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_allocate (880,323 samples, 0.01%)</title><rect x="1016.3" y="277" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1019.29" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (3,875,261 samples, 0.06%)</title><rect x="380.7" y="181" width="0.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="383.72" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::size (943,863 samples, 0.02%)</title><rect x="95.5" y="229" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="98.48" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (534,285 samples, 0.01%)</title><rect x="1120.2" y="181" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1123.20" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (667,532 samples, 0.01%)</title><rect x="1118.0" y="197" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1121.00" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (2,460,284 samples, 0.04%)</title><rect x="109.5" y="261" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="112.51" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (9,595,677 samples, 0.15%)</title><rect x="1087.3" y="261" width="1.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1090.28" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_relocate (14,767,943 samples, 0.24%)</title><rect x="95.7" y="245" width="2.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="98.68" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (884,723 samples, 0.01%)</title><rect x="476.4" y="197" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="479.40" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (767,084 samples, 0.01%)</title><rect x="862.5" y="213" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="865.54" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (747,804 samples, 0.01%)</title><rect x="1038.4" y="133" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1041.36" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (646,892 samples, 0.01%)</title><rect x="1000.2" y="293" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1003.18" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (1,887,803 samples, 0.03%)</title><rect x="105.0" y="229" width="0.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="108.05" y="239.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::operator== (924,891 samples, 0.01%)</title><rect x="52.7" y="213" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="55.71" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*&gt; (626,739 samples, 0.01%)</title><rect x="21.8" y="101" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="24.82" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (24,628,271 samples, 0.39%)</title><rect x="99.0" y="261" width="4.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="102.02" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (712,820 samples, 0.01%)</title><rect x="22.8" y="325" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="25.77" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::select_on_container_copy_construction (582,713 samples, 0.01%)</title><rect x="1041.7" y="213" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1044.69" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (839,658 samples, 0.01%)</title><rect x="91.5" y="149" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="94.53" y="159.5" ></text>
</g>
<g >
<title>__GI_____strtof_l_internal (1,258,509 samples, 0.02%)</title><rect x="21.3" y="373" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="24.28" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~vector (80,451,989 samples, 1.29%)</title><rect x="1062.0" y="293" width="15.2" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1065.00" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (6,135,937 samples, 0.10%)</title><rect x="477.8" y="181" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="480.83" y="191.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (26,815,608 samples, 0.43%)</title><rect x="1036.4" y="197" width="5.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1039.38" y="207.5" ></text>
</g>
<g >
<title>page_fault (17,607,921 samples, 0.28%)</title><rect x="1175.7" y="357" width="3.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1178.69" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (21,055,801 samples, 0.34%)</title><rect x="139.7" y="309" width="4.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="142.71" y="319.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (5,774,354 samples, 0.09%)</title><rect x="539.9" y="197" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="542.92" y="207.5" ></text>
</g>
<g >
<title>[unknown] (4,702,979 samples, 0.08%)</title><rect x="19.2" y="341" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="22.17" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate (5,065,858 samples, 0.08%)</title><rect x="481.2" y="165" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="484.24" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (25,285,418 samples, 0.40%)</title><rect x="1116.6" y="245" width="4.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1119.61" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (1,127,158 samples, 0.02%)</title><rect x="146.6" y="293" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="149.63" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (4,208,833 samples, 0.07%)</title><rect x="30.8" y="229" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="33.76" y="239.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (1,406,075 samples, 0.02%)</title><rect x="461.8" y="213" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="464.81" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::new_allocator (752,323 samples, 0.01%)</title><rect x="1034.6" y="181" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1037.65" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (19,882,827 samples, 0.32%)</title><rect x="81.7" y="277" width="3.7" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="84.67" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (1,148,056 samples, 0.02%)</title><rect x="90.0" y="261" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="92.96" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (1,354,413 samples, 0.02%)</title><rect x="1139.6" y="245" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1142.61" y="255.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (644,254 samples, 0.01%)</title><rect x="321.4" y="229" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="324.38" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (5,022,914 samples, 0.08%)</title><rect x="387.2" y="165" width="1.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="390.21" y="175.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::vertex_set (770,318 samples, 0.01%)</title><rect x="985.7" y="277" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="988.71" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (15,728,448 samples, 0.25%)</title><rect x="1031.5" y="197" width="3.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1034.53" y="207.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::top (25,996,716 samples, 0.42%)</title><rect x="483.3" y="213" width="4.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="486.27" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (899,118 samples, 0.01%)</title><rect x="1027.1" y="229" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1030.10" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (3,485,722 samples, 0.06%)</title><rect x="1119.2" y="181" width="0.7" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1122.21" y="191.5" ></text>
</g>
<g >
<title>malloc (647,520 samples, 0.01%)</title><rect x="479.8" y="133" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="482.76" y="143.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (6,904,179 samples, 0.11%)</title><rect x="71.4" y="133" width="1.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="74.42" y="143.5" ></text>
</g>
<g >
<title>std::forward&lt;float const&amp;&gt; (572,439 samples, 0.01%)</title><rect x="1130.7" y="293" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1133.72" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (666,014 samples, 0.01%)</title><rect x="272.0" y="229" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="274.98" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~_Vector_base (21,202,516 samples, 0.34%)</title><rect x="1073.2" y="277" width="4.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1076.18" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (10,239,200 samples, 0.16%)</title><rect x="711.4" y="165" width="1.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="714.37" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::__normal_iterator (789,373 samples, 0.01%)</title><rect x="1056.5" y="245" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1059.51" y="255.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (37,540,703 samples, 0.60%)</title><rect x="935.1" y="165" width="7.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="938.13" y="175.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (134,685,878 samples, 2.15%)</title><rect x="789.2" y="181" width="25.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="792.15" y="191.5" >b..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (3,682,021 samples, 0.06%)</title><rect x="925.8" y="213" width="0.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="928.85" y="223.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (4,040,980 samples, 0.06%)</title><rect x="555.9" y="165" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="558.88" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::select_on_container_copy_construction (1,467,882 samples, 0.02%)</title><rect x="104.4" y="245" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="107.36" y="255.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt; (3,453,863 samples, 0.06%)</title><rect x="102.8" y="213" width="0.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="105.80" y="223.5" ></text>
</g>
<g >
<title>boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::adjacency_list (4,537,439 samples, 0.07%)</title><rect x="1163.3" y="325" width="0.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1166.34" y="335.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (1,821,447 samples, 0.03%)</title><rect x="1120.6" y="213" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1123.59" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (719,449 samples, 0.01%)</title><rect x="137.7" y="245" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="140.75" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; &gt; (2,599,031 samples, 0.04%)</title><rect x="1014.6" y="277" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1017.60" y="287.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, false&gt;::operator mpl_::bool_&lt;false&gt; const&amp; (2,437,053 samples, 0.04%)</title><rect x="508.5" y="197" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="511.47" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (8,899,891 samples, 0.14%)</title><rect x="93.3" y="229" width="1.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="96.33" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (774,030 samples, 0.01%)</title><rect x="380.6" y="165" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="383.55" y="175.5" ></text>
</g>
<g >
<title>_int_malloc (74,576,711 samples, 1.19%)</title><rect x="1165.1" y="373" width="14.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1168.08" y="383.5" ></text>
</g>
<g >
<title>boost::num_vertices&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (2,904,331 samples, 0.05%)</title><rect x="985.3" y="293" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="988.32" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (617,237 samples, 0.01%)</title><rect x="139.1" y="293" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="142.14" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*&gt; (1,089,780 samples, 0.02%)</title><rect x="1126.0" y="277" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1129.02" y="287.5" ></text>
</g>
<g >
<title>main (6,059,860,271 samples, 96.89%)</title><rect x="21.5" y="357" width="1143.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="24.55" y="367.5" >main</text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (126,843,418 samples, 2.03%)</title><rect x="517.7" y="213" width="23.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="520.67" y="223.5" >b..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (1,384,947 samples, 0.02%)</title><rect x="486.0" y="149" width="0.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="489.04" y="159.5" ></text>
</g>
<g >
<title>do_lookup_x (580,284 samples, 0.01%)</title><rect x="1179.4" y="373" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1182.40" y="383.5" ></text>
</g>
<g >
<title>unmap_vmas (1,356,267 samples, 0.02%)</title><rect x="1179.8" y="261" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1182.83" y="271.5" ></text>
</g>
<g >
<title>boost::tuples::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type&gt;::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (1,243,324 samples, 0.02%)</title><rect x="998.3" y="245" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1001.31" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (2,926,958 samples, 0.05%)</title><rect x="75.3" y="149" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="78.28" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::vector (29,593,880 samples, 0.47%)</title><rect x="129.1" y="309" width="5.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="132.07" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (5,746,297 samples, 0.09%)</title><rect x="381.5" y="181" width="1.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="384.45" y="191.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::operator[] (20,059,946 samples, 0.32%)</title><rect x="1141.0" y="309" width="3.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1143.98" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (535,226 samples, 0.01%)</title><rect x="381.4" y="165" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="384.35" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (4,193,256 samples, 0.07%)</title><rect x="992.6" y="261" width="0.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="995.59" y="271.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (629,779 samples, 0.01%)</title><rect x="61.1" y="261" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="64.08" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::max_size (829,814 samples, 0.01%)</title><rect x="95.3" y="229" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="98.33" y="239.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, double&gt; (1,549,405 samples, 0.02%)</title><rect x="280.6" y="293" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="283.58" y="303.5" ></text>
</g>
<g >
<title>boost::lookup_named_param_def&lt;boost::vertex_index_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt;, boost::param_not_found&gt;::get (550,431 samples, 0.01%)</title><rect x="882.5" y="261" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="885.46" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (9,216,083 samples, 0.15%)</title><rect x="1161.1" y="309" width="1.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1164.05" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_do_relocate (4,396,818 samples, 0.07%)</title><rect x="102.6" y="229" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="105.62" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (16,558,581 samples, 0.26%)</title><rect x="1068.7" y="197" width="3.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1071.69" y="207.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::stored_edge_property (18,351,983 samples, 0.29%)</title><rect x="31.6" y="293" width="3.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="34.63" y="303.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;float&gt;::operator-- (12,016,434 samples, 0.19%)</title><rect x="1134.6" y="261" width="2.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1137.57" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (5,441,864 samples, 0.09%)</title><rect x="132.3" y="133" width="1.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="135.30" y="143.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_front (5,471,045 samples, 0.09%)</title><rect x="1004.2" y="277" width="1.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1007.21" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (1,640,137 samples, 0.03%)</title><rect x="304.4" y="293" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="307.43" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (1,127,738 samples, 0.02%)</title><rect x="121.2" y="213" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="124.21" y="223.5" ></text>
</g>
<g >
<title>std::copy&lt;unsigned long const*, unsigned long*&gt; (961,854 samples, 0.02%)</title><rect x="1122.2" y="213" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1125.16" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (545,582 samples, 0.01%)</title><rect x="306.4" y="261" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="309.44" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::operator++ (1,857,831 samples, 0.03%)</title><rect x="304.8" y="293" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="307.78" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (27,041,653 samples, 0.43%)</title><rect x="1124.7" y="293" width="5.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1127.69" y="303.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1,099,758 samples, 0.02%)</title><rect x="1128.7" y="229" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1131.67" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (732,955 samples, 0.01%)</title><rect x="1065.8" y="213" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1068.82" y="223.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (1,867,032 samples, 0.03%)</title><rect x="418.7" y="117" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="421.72" y="127.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1,223,014 samples, 0.02%)</title><rect x="501.2" y="133" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="504.19" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::allocate (7,587,541 samples, 0.12%)</title><rect x="1023.7" y="245" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1026.66" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1,335,090 samples, 0.02%)</title><rect x="731.9" y="181" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="734.85" y="191.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (4,187,513 samples, 0.07%)</title><rect x="105.8" y="213" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="108.82" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::~_Vector_base (917,611 samples, 0.01%)</title><rect x="882.1" y="245" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="885.13" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;unsigned long const&gt; &gt; (2,982,057 samples, 0.05%)</title><rect x="1133.4" y="293" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1136.39" y="303.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (26,615,826 samples, 0.43%)</title><rect x="129.5" y="277" width="5.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="132.49" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (3,679,595 samples, 0.06%)</title><rect x="33.5" y="229" width="0.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="36.47" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (1,800,773 samples, 0.03%)</title><rect x="1146.8" y="261" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1149.79" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (1,412,050 samples, 0.02%)</title><rect x="1072.9" y="277" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1075.91" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (9,006,350 samples, 0.14%)</title><rect x="865.6" y="229" width="1.7" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="868.60" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (13,640,172 samples, 0.22%)</title><rect x="719.6" y="149" width="2.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="722.62" y="159.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2,191,132 samples, 0.04%)</title><rect x="1178.3" y="245" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1181.32" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (700,737 samples, 0.01%)</title><rect x="1142.5" y="213" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1145.46" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::~allocator (1,263,619 samples, 0.02%)</title><rect x="1121.5" y="277" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1124.46" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~vector (10,691,960 samples, 0.17%)</title><rect x="1161.0" y="325" width="2.0" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1164.03" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (859,989 samples, 0.01%)</title><rect x="1141.3" y="245" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1144.31" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt;::construct&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,067,295 samples, 0.02%)</title><rect x="1144.4" y="245" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1147.41" y="255.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1,614,505 samples, 0.03%)</title><rect x="1179.5" y="245" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1182.53" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~allocator (1,904,618 samples, 0.03%)</title><rect x="1076.6" y="245" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1079.61" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::max_size (647,531 samples, 0.01%)</title><rect x="480.9" y="117" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="483.91" y="127.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (1,367,273 samples, 0.02%)</title><rect x="471.6" y="149" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="474.63" y="159.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, false, false&gt;::operator* (539,023 samples, 0.01%)</title><rect x="880.5" y="245" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="883.49" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (1,404,030 samples, 0.02%)</title><rect x="1138.4" y="245" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1141.36" y="255.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (3,910,240 samples, 0.06%)</title><rect x="132.4" y="117" width="0.7" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="135.38" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (936,153 samples, 0.01%)</title><rect x="66.1" y="165" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="69.14" y="175.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (687,977 samples, 0.01%)</title><rect x="865.2" y="229" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="868.23" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (564,352 samples, 0.01%)</title><rect x="386.1" y="181" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="389.05" y="191.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (4,850,605 samples, 0.08%)</title><rect x="912.0" y="245" width="1.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="915.05" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::~unique_ptr (18,185,443 samples, 0.29%)</title><rect x="35.4" y="277" width="3.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="38.42" y="287.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (1,573,377 samples, 0.03%)</title><rect x="1101.5" y="213" width="0.3" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1104.53" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (3,059,740 samples, 0.05%)</title><rect x="500.9" y="197" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="503.95" y="207.5" ></text>
</g>
<g >
<title>main.exe (6,248,643,306 samples, 99.90%)</title><rect x="11.1" y="389" width="1178.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="14.12" y="399.5" >main.exe</text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::~allocator (767,503 samples, 0.01%)</title><rect x="1071.5" y="181" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1074.53" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (11,167,718 samples, 0.18%)</title><rect x="1156.0" y="277" width="2.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1158.99" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,148,057 samples, 0.02%)</title><rect x="21.7" y="165" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="24.74" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::max_size (762,835 samples, 0.01%)</title><rect x="1094.2" y="229" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1097.18" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (3,597,456 samples, 0.06%)</title><rect x="109.4" y="277" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="112.35" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (1,886,074 samples, 0.03%)</title><rect x="93.9" y="181" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="96.88" y="191.5" ></text>
</g>
<g >
<title>std::addressof&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; (617,449 samples, 0.01%)</title><rect x="1159.4" y="213" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1162.45" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (2,754,463 samples, 0.04%)</title><rect x="1025.2" y="261" width="0.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1028.24" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (2,262,028 samples, 0.04%)</title><rect x="28.6" y="293" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="31.59" y="303.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (746,297 samples, 0.01%)</title><rect x="697.3" y="181" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="700.27" y="191.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (628,999 samples, 0.01%)</title><rect x="13.5" y="325" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="16.52" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (2,762,727 samples, 0.04%)</title><rect x="945.1" y="245" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="948.08" y="255.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (999,496 samples, 0.02%)</title><rect x="412.8" y="165" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="415.84" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::push_back (1,340,390 samples, 0.02%)</title><rect x="1163.6" y="197" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1166.59" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_check_len (32,916,782 samples, 0.53%)</title><rect x="1044.3" y="261" width="6.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1047.33" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (921,372 samples, 0.01%)</title><rect x="146.8" y="293" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="149.84" y="303.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (1,295,216 samples, 0.02%)</title><rect x="322.1" y="229" width="0.3" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="325.13" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (2,061,112 samples, 0.03%)</title><rect x="145.8" y="213" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="148.83" y="223.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (18,997,454 samples, 0.30%)</title><rect x="535.1" y="181" width="3.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="538.13" y="191.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (2,926,403 samples, 0.05%)</title><rect x="876.7" y="197" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="879.71" y="207.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (2,135,317 samples, 0.03%)</title><rect x="1146.8" y="277" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1149.79" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (4,397,429 samples, 0.07%)</title><rect x="487.0" y="165" width="0.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="489.96" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (628,843 samples, 0.01%)</title><rect x="1144.0" y="245" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1146.98" y="255.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (6,121,639 samples, 0.10%)</title><rect x="822.4" y="197" width="1.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="825.41" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (1,030,292 samples, 0.02%)</title><rect x="49.7" y="197" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="52.71" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (20,526,814 samples, 0.33%)</title><rect x="956.3" y="261" width="3.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="959.31" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (3,442,371 samples, 0.06%)</title><rect x="449.9" y="181" width="0.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="452.86" y="191.5" ></text>
</g>
<g >
<title>std::operator==&lt;unsigned long, unsigned long&amp;, unsigned long*&gt; (2,296,819 samples, 0.04%)</title><rect x="1001.7" y="261" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1004.71" y="271.5" ></text>
</g>
<g >
<title>boost::detail::dummy_pmap_reference::operator=&lt;unsigned long&gt; (989,931 samples, 0.02%)</title><rect x="758.2" y="197" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="761.22" y="207.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (13,549,118 samples, 0.22%)</title><rect x="609.6" y="149" width="2.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="612.60" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::max_size (16,789,226 samples, 0.27%)</title><rect x="1045.8" y="245" width="3.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1048.77" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;unsigned long const, float&gt;, false&gt;::_M_incr (917,197 samples, 0.01%)</title><rect x="1131.0" y="293" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1134.05" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (598,508 samples, 0.01%)</title><rect x="1149.5" y="261" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1152.52" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (859,851 samples, 0.01%)</title><rect x="1139.9" y="277" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1142.89" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (30,584,525 samples, 0.49%)</title><rect x="977.5" y="245" width="5.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="980.47" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (3,871,407 samples, 0.06%)</title><rect x="84.5" y="181" width="0.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="87.45" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (2,460,162 samples, 0.04%)</title><rect x="137.5" y="277" width="0.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="140.48" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (6,362,919 samples, 0.10%)</title><rect x="976.3" y="245" width="1.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="979.27" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (1,879,771 samples, 0.03%)</title><rect x="73.6" y="165" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="76.65" y="175.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::unordered_map (1,046,650 samples, 0.02%)</title><rect x="22.5" y="325" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="25.47" y="335.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_down (319,787,797 samples, 5.11%)</title><rect x="390.2" y="197" width="60.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="393.18" y="207.5" >boost:..</text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (2,521,179 samples, 0.04%)</title><rect x="973.4" y="261" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="976.44" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pair&lt;unsigned long const&amp;, 0ul&gt; (6,675,461 samples, 0.11%)</title><rect x="126.2" y="213" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="129.20" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (765,832 samples, 0.01%)</title><rect x="273.8" y="277" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="276.81" y="287.5" ></text>
</g>
<g >
<title>do_anonymous_page (13,286,193 samples, 0.21%)</title><rect x="1176.3" y="261" width="2.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1179.27" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (981,650 samples, 0.02%)</title><rect x="986.8" y="277" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="989.81" y="287.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (2,770,183 samples, 0.04%)</title><rect x="419.1" y="133" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="422.07" y="143.5" ></text>
</g>
<g >
<title>std::operator!= (809,508 samples, 0.01%)</title><rect x="1133.1" y="293" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1136.09" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (5,338,380 samples, 0.09%)</title><rect x="105.7" y="261" width="1.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="108.66" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (563,006 samples, 0.01%)</title><rect x="446.5" y="165" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="449.46" y="175.5" ></text>
</g>
<g >
<title>std::_Construct&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&amp;&gt; (626,739 samples, 0.01%)</title><rect x="21.8" y="85" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="24.82" y="95.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (120,175,646 samples, 1.92%)</title><rect x="920.4" y="245" width="22.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="923.36" y="255.5" >b..</text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (1,043,532 samples, 0.02%)</title><rect x="106.2" y="165" width="0.2" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="109.17" y="175.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (846,729 samples, 0.01%)</title><rect x="865.4" y="229" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="868.44" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (2,352,675 samples, 0.04%)</title><rect x="142.5" y="277" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="145.50" y="287.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::top (556,706 samples, 0.01%)</title><rect x="321.8" y="229" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="324.80" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (7,307,495 samples, 0.12%)</title><rect x="90.6" y="245" width="1.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="93.59" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~vector (1,724,286 samples, 0.03%)</title><rect x="1145.7" y="309" width="0.4" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1148.73" y="319.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt;, boost::vertex_index_t&gt; (875,904 samples, 0.01%)</title><rect x="882.7" y="293" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="885.67" y="303.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_examine_edge&gt; (3,871,081 samples, 0.06%)</title><rect x="559.3" y="213" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="562.26" y="223.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (1,542,808 samples, 0.02%)</title><rect x="116.5" y="213" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="119.55" y="223.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (1,231,434 samples, 0.02%)</title><rect x="126.7" y="181" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="129.69" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (628,743 samples, 0.01%)</title><rect x="105.2" y="197" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="108.25" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (725,170 samples, 0.01%)</title><rect x="20.7" y="357" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="23.67" y="367.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator* (487,054,929 samples, 7.79%)</title><rect x="563.8" y="213" width="91.9" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="566.79" y="223.5" >boost::ite..</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (24,476,811 samples, 0.39%)</title><rect x="1036.8" y="181" width="4.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1039.76" y="191.5" ></text>
</g>
<g >
<title>do_group_exit (3,094,516 samples, 0.05%)</title><rect x="1179.5" y="325" width="0.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1182.51" y="335.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (4,036,065 samples, 0.06%)</title><rect x="1070.0" y="149" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1072.99" y="159.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::~unordered_map (15,165,748 samples, 0.24%)</title><rect x="1158.2" y="325" width="2.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1161.17" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::__normal_iterator (2,107,115 samples, 0.03%)</title><rect x="1058.6" y="261" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1061.57" y="271.5" ></text>
</g>
<g >
<title>[unknown] (2,426,580 samples, 0.04%)</title><rect x="10.0" y="373" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.03" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::operator* (543,276 samples, 0.01%)</title><rect x="271.2" y="309" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="274.16" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (1,904,057 samples, 0.03%)</title><rect x="479.6" y="165" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="482.58" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (103,673,331 samples, 1.66%)</title><rect x="923.5" y="229" width="19.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="926.47" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt;::_Hash_node (1,340,290 samples, 0.02%)</title><rect x="114.5" y="261" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="117.53" y="271.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (1,786,231 samples, 0.03%)</title><rect x="94.5" y="149" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="97.48" y="159.5" ></text>
</g>
<g >
<title>[unknown] (2,746,848 samples, 0.04%)</title><rect x="11.3" y="341" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.32" y="351.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (14,384,494 samples, 0.23%)</title><rect x="467.2" y="181" width="2.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="470.17" y="191.5" ></text>
</g>
<g >
<title>all (6,254,592,971 samples, 100%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned long const, float&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (769,594 samples, 0.01%)</title><rect x="1140.4" y="261" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1143.40" y="271.5" ></text>
</g>
<g >
<title>boost::relax_target&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::plus&lt;float&gt;, std::less&lt;float&gt; &gt; (548,314,233 samples, 8.77%)</title><rect x="734.5" y="213" width="103.5" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="737.51" y="223.5" >boost::relax..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (2,880,766 samples, 0.05%)</title><rect x="1033.4" y="149" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1036.44" y="159.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;unsigned long const*, unsigned long*&gt; (1,400,943 samples, 0.02%)</title><rect x="1122.1" y="245" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1125.08" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_create_storage (819,263 samples, 0.01%)</title><rect x="129.2" y="277" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="132.24" y="287.5" ></text>
</g>
<g >
<title>operator new (753,024 samples, 0.01%)</title><rect x="1034.2" y="149" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1037.21" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (6,089,700 samples, 0.10%)</title><rect x="1089.7" y="261" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1092.68" y="271.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (5,333,368 samples, 0.09%)</title><rect x="652.8" y="181" width="1.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="655.79" y="191.5" ></text>
</g>
<g >
<title>boost::tuples::tuple&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type&gt;::tuple (833,971 samples, 0.01%)</title><rect x="88.5" y="261" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="91.54" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (3,452,095 samples, 0.06%)</title><rect x="482.6" y="197" width="0.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="485.62" y="207.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1,614,505 samples, 0.03%)</title><rect x="1179.5" y="261" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1182.53" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (615,807 samples, 0.01%)</title><rect x="142.8" y="261" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="145.82" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (1,146,709 samples, 0.02%)</title><rect x="1023.1" y="245" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1026.13" y="255.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::out_edge_list (1,234,652 samples, 0.02%)</title><rect x="840.7" y="213" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="843.70" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_allocate (9,153,885 samples, 0.15%)</title><rect x="1023.4" y="261" width="1.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1026.37" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (1,958,359 samples, 0.03%)</title><rect x="134.1" y="213" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="137.12" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (2,780,524 samples, 0.04%)</title><rect x="955.8" y="261" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="958.77" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_v (1,344,220 samples, 0.02%)</title><rect x="122.2" y="213" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="125.19" y="223.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (719,010 samples, 0.01%)</title><rect x="54.9" y="277" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="57.90" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned long const, float&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (8,023,174 samples, 0.13%)</title><rect x="115.5" y="261" width="1.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="118.48" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (628,976 samples, 0.01%)</title><rect x="1139.4" y="229" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1142.43" y="239.5" ></text>
</g>
<g >
<title>boost::graph_detail::random_access_container_tag::random_access_container_tag (1,100,517 samples, 0.02%)</title><rect x="275.7" y="245" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="278.67" y="255.5" ></text>
</g>
<g >
<title>_int_free (822,469 samples, 0.01%)</title><rect x="148.0" y="245" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="151.02" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,094,516 samples, 0.05%)</title><rect x="1179.5" y="357" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1182.51" y="367.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (195,818,653 samples, 3.13%)</title><rect x="777.6" y="197" width="37.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="780.62" y="207.5" >boo..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (631,314 samples, 0.01%)</title><rect x="100.1" y="213" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="103.13" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (2,976,823 samples, 0.05%)</title><rect x="135.3" y="213" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="138.35" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt;::deallocate (621,049 samples, 0.01%)</title><rect x="1159.0" y="213" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1162.03" y="223.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::operator[] (47,584,587 samples, 0.76%)</title><rect x="108.9" y="309" width="9.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="111.91" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (2,460,907 samples, 0.04%)</title><rect x="118.4" y="277" width="0.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="121.41" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (3,306,082 samples, 0.05%)</title><rect x="1089.9" y="245" width="0.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1092.92" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (8,847,991 samples, 0.14%)</title><rect x="1161.1" y="277" width="1.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1164.12" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (2,048,134 samples, 0.03%)</title><rect x="137.6" y="261" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="140.56" y="271.5" ></text>
</g>
<g >
<title>boost::relax_target&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::plus&lt;float&gt;, std::less&lt;float&gt; &gt; (3,229,818 samples, 0.05%)</title><rect x="877.3" y="229" width="0.7" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="880.35" y="239.5" ></text>
</g>
<g >
<title>operator new (1,042,192 samples, 0.02%)</title><rect x="1024.9" y="229" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1027.90" y="239.5" ></text>
</g>
<g >
<title>boost::tuples::detail::cnull (4,067,412 samples, 0.07%)</title><rect x="995.4" y="277" width="0.8" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="998.44" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (3,216,338 samples, 0.05%)</title><rect x="1139.3" y="261" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1142.26" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (820,444 samples, 0.01%)</title><rect x="143.7" y="309" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="146.68" y="319.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (8,274,995 samples, 0.13%)</title><rect x="775.5" y="181" width="1.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="778.51" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (774,135 samples, 0.01%)</title><rect x="1109.5" y="277" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1112.51" y="287.5" ></text>
</g>
<g >
<title>boost::edge&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (155,501,399 samples, 2.49%)</title><rect x="27.2" y="309" width="29.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="30.23" y="319.5" >bo..</text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (2,158,876 samples, 0.03%)</title><rect x="147.9" y="277" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="150.90" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (2,407,712 samples, 0.04%)</title><rect x="72.3" y="53" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="75.27" y="63.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (4,341,125 samples, 0.07%)</title><rect x="1013.7" y="293" width="0.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1016.66" y="303.5" ></text>
</g>
<g >
<title>_int_free (2,835,287 samples, 0.05%)</title><rect x="1088.0" y="229" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1090.97" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (2,850,230 samples, 0.05%)</title><rect x="501.0" y="149" width="0.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="503.99" y="159.5" ></text>
</g>
<g >
<title>boost::dummy_property_map::operator[]&lt;unsigned long&gt; (765,476 samples, 0.01%)</title><rect x="758.4" y="197" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="761.40" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (11,032,361 samples, 0.18%)</title><rect x="983.2" y="245" width="2.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="986.24" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (213,008,220 samples, 3.41%)</title><rect x="1017.0" y="277" width="40.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1019.99" y="287.5" >std..</text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (201,592,079 samples, 3.22%)</title><rect x="687.2" y="213" width="38.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="690.17" y="223.5" >boo..</text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (913,929 samples, 0.01%)</title><rect x="319.7" y="229" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="322.73" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (4,448,624 samples, 0.07%)</title><rect x="1142.9" y="229" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1145.91" y="239.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (6,407,005 samples, 0.10%)</title><rect x="276.1" y="261" width="1.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="279.11" y="271.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (24,698,307 samples, 0.39%)</title><rect x="441.0" y="181" width="4.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="443.95" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (1,328,497 samples, 0.02%)</title><rect x="29.0" y="293" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.02" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (543,374 samples, 0.01%)</title><rect x="273.8" y="261" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="276.85" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (543,991 samples, 0.01%)</title><rect x="1145.0" y="309" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1147.99" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (581,696 samples, 0.01%)</title><rect x="1072.0" y="229" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1075.03" y="239.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (3,052,266 samples, 0.05%)</title><rect x="945.9" y="261" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="948.90" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config::stored_vertex, std::allocator&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config::stored_vertex&gt; &gt;::operator[] (929,062 samples, 0.01%)</title><rect x="54.3" y="277" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="57.32" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::~_Vector_impl (628,272 samples, 0.01%)</title><rect x="98.1" y="101" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="101.13" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (835,107 samples, 0.01%)</title><rect x="63.7" y="165" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="66.70" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1,822,391 samples, 0.03%)</title><rect x="1155.5" y="293" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1158.53" y="303.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (5,350,571 samples, 0.09%)</title><rect x="475.4" y="181" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="478.39" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (679,554 samples, 0.01%)</title><rect x="881.5" y="229" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="884.55" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (14,467,311 samples, 0.23%)</title><rect x="1155.4" y="309" width="2.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1158.44" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (730,597 samples, 0.01%)</title><rect x="89.6" y="261" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="92.65" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,442,271 samples, 0.02%)</title><rect x="135.5" y="181" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="138.50" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (29,989,889 samples, 0.48%)</title><rect x="1115.8" y="277" width="5.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1118.80" y="287.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (13,854,616 samples, 0.22%)</title><rect x="492.4" y="181" width="2.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="495.39" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~pair (791,188 samples, 0.01%)</title><rect x="1140.8" y="197" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1143.83" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (984,155 samples, 0.02%)</title><rect x="1138.4" y="229" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1141.36" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::__normal_iterator (2,212,699 samples, 0.04%)</title><rect x="1009.7" y="277" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1012.70" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (721,274 samples, 0.01%)</title><rect x="144.9" y="229" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="147.90" y="239.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (1,666,434 samples, 0.03%)</title><rect x="70.7" y="149" width="0.3" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="73.69" y="159.5" ></text>
</g>
<g >
<title>boost::tuples::tie&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (19,645,382 samples, 0.31%)</title><rect x="995.1" y="293" width="3.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="998.06" y="303.5" ></text>
</g>
<g >
<title>std::tuple&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::tuple&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, true&gt; (4,106,184 samples, 0.07%)</title><rect x="34.2" y="245" width="0.7" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="37.16" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (980,051 samples, 0.02%)</title><rect x="446.3" y="165" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="449.28" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (954,425 samples, 0.02%)</title><rect x="1079.0" y="277" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1081.98" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::front (7,338,402 samples, 0.12%)</title><rect x="1002.5" y="277" width="1.4" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1005.50" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt;::destroy&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (791,188 samples, 0.01%)</title><rect x="1140.8" y="213" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1143.83" y="223.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (1,793,833 samples, 0.03%)</title><rect x="1040.7" y="149" width="0.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1043.73" y="159.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (846,328 samples, 0.01%)</title><rect x="1046.6" y="229" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1049.57" y="239.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (5,026,379 samples, 0.08%)</title><rect x="105.7" y="245" width="1.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="108.72" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (7,709,327 samples, 0.12%)</title><rect x="581.2" y="181" width="1.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="584.23" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (16,848,153 samples, 0.27%)</title><rect x="1126.6" y="277" width="3.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1129.61" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_Tuple_impl (3,286,424 samples, 0.05%)</title><rect x="34.3" y="229" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="37.28" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (817,442 samples, 0.01%)</title><rect x="123.6" y="261" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="126.59" y="271.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (9,879,995 samples, 0.16%)</title><rect x="875.5" y="229" width="1.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="878.48" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, bool&gt;::pair&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, bool, true&gt; (2,358,590 samples, 0.04%)</title><rect x="55.0" y="277" width="0.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="58.04" y="287.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator++ (629,825 samples, 0.01%)</title><rect x="26.7" y="293" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="29.69" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (4,592,212 samples, 0.07%)</title><rect x="1076.1" y="261" width="0.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1079.10" y="271.5" ></text>
</g>
<g >
<title>std::make_pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (727,233 samples, 0.01%)</title><rect x="88.1" y="261" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="91.11" y="271.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1,516,186 samples, 0.02%)</title><rect x="13.5" y="357" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="16.49" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (8,627,679 samples, 0.14%)</title><rect x="110.9" y="261" width="1.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="113.90" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;float&gt;::_M_ptr (2,261,171 samples, 0.04%)</title><rect x="1132.5" y="261" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1135.53" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt;::construct&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (12,023,601 samples, 0.19%)</title><rect x="125.6" y="245" width="2.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="128.62" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (1,232,999 samples, 0.02%)</title><rect x="131.5" y="197" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="134.53" y="207.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;unsigned long*&gt; (630,236 samples, 0.01%)</title><rect x="1120.4" y="197" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1123.41" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_do_relocate (17,602,506 samples, 0.28%)</title><rect x="1052.1" y="245" width="3.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1055.15" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (1,747,662 samples, 0.03%)</title><rect x="1141.2" y="277" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1144.16" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (659,693 samples, 0.01%)</title><rect x="407.4" y="181" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="410.38" y="191.5" ></text>
</g>
<g >
<title>alloc_pages_vma (7,512,658 samples, 0.12%)</title><rect x="1176.5" y="245" width="1.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1179.50" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (8,692,251 samples, 0.14%)</title><rect x="883.8" y="293" width="1.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="886.75" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (1,052,585 samples, 0.02%)</title><rect x="487.6" y="149" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="490.57" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_ptr (686,389 samples, 0.01%)</title><rect x="1131.3" y="277" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1134.31" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (3,558,719 samples, 0.06%)</title><rect x="698.8" y="197" width="0.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="701.78" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (5,952,280 samples, 0.10%)</title><rect x="1148.1" y="309" width="1.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1151.09" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (1,569,175 samples, 0.03%)</title><rect x="90.9" y="197" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="93.90" y="207.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_not_relaxed&gt; (2,030,889 samples, 0.03%)</title><rect x="558.8" y="213" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="561.75" y="223.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (703,728 samples, 0.01%)</title><rect x="353.7" y="213" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="356.73" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (6,159,157 samples, 0.10%)</title><rect x="74.8" y="181" width="1.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="77.83" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (2,181,232 samples, 0.03%)</title><rect x="1014.6" y="261" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1017.64" y="271.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (620,551 samples, 0.01%)</title><rect x="127.7" y="181" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="130.69" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::push_back (994,591 samples, 0.02%)</title><rect x="1145.1" y="309" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1148.10" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, void&gt; (13,635,636 samples, 0.22%)</title><rect x="32.5" y="277" width="2.6" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="35.52" y="287.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (6,262,521 samples, 0.10%)</title><rect x="876.2" y="213" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="879.17" y="223.5" ></text>
</g>
<g >
<title>NexullanceIT::step_1 (666,473,802 samples, 10.66%)</title><rect x="22.9" y="325" width="125.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="25.90" y="335.5" >NexullanceIT::s..</text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (5,829,213 samples, 0.09%)</title><rect x="361.4" y="197" width="1.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="364.39" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (5,370,398 samples, 0.09%)</title><rect x="121.9" y="229" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="124.89" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pair&lt;unsigned long const&amp;&gt; (7,707,687 samples, 0.12%)</title><rect x="126.0" y="229" width="1.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="129.03" y="239.5" ></text>
</g>
<g >
<title>boost::tuples::tuple&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type&gt;::operator=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (5,032,309 samples, 0.08%)</title><rect x="998.8" y="293" width="0.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1001.77" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (5,091,288 samples, 0.08%)</title><rect x="1006.9" y="245" width="0.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1009.87" y="255.5" ></text>
</g>
<g >
<title>std::make_pair&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, bool&gt; (1,067,699 samples, 0.02%)</title><rect x="277.6" y="293" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="280.56" y="303.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (7,764,880 samples, 0.12%)</title><rect x="495.3" y="181" width="1.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="498.29" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (1,134,505 samples, 0.02%)</title><rect x="145.1" y="277" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="148.07" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, unsigned long const*, unsigned long*&gt; (856,601 samples, 0.01%)</title><rect x="1122.2" y="197" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1125.18" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (877,024 samples, 0.01%)</title><rect x="1079.5" y="277" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1082.46" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (3,106,991 samples, 0.05%)</title><rect x="1142.1" y="229" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1145.13" y="239.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long const&amp;&gt; (979,553 samples, 0.02%)</title><rect x="478.7" y="149" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="481.66" y="159.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (6,388,783 samples, 0.10%)</title><rect x="538.7" y="181" width="1.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="541.72" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_max_size (725,162 samples, 0.01%)</title><rect x="95.3" y="213" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="98.35" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::end (9,467,483 samples, 0.15%)</title><rect x="732.1" y="197" width="1.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="735.11" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (1,733,891 samples, 0.03%)</title><rect x="1140.6" y="293" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1143.65" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;float&gt; &gt; &gt;::allocate (1,239,218 samples, 0.02%)</title><rect x="1130.2" y="245" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1133.17" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_valptr (1,533,049 samples, 0.02%)</title><rect x="120.5" y="197" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="123.52" y="207.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_single_source (261,132,951 samples, 4.18%)</title><rect x="58.8" y="293" width="49.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="61.80" y="303.5" >comp..</text>
</g>
<g >
<title>std::forward&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (878,898 samples, 0.01%)</title><rect x="1027.3" y="229" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1030.31" y="239.5" ></text>
</g>
<g >
<title>boost::graph_detail::reversible_container_tag::reversible_container_tag (3,912,454 samples, 0.06%)</title><rect x="43.1" y="245" width="0.8" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="46.12" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (3,556,699 samples, 0.06%)</title><rect x="1042.0" y="213" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1045.04" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (136,509,537 samples, 2.18%)</title><rect x="699.4" y="197" width="25.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="702.45" y="207.5" >b..</text>
</g>
<g >
<title>__memset_sse2_unaligned_erms (817,453 samples, 0.01%)</title><rect x="121.7" y="213" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="124.72" y="223.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (3,126,506 samples, 0.05%)</title><rect x="87.8" y="277" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="90.79" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (2,298,435 samples, 0.04%)</title><rect x="87.3" y="229" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="90.28" y="239.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (2,890,876 samples, 0.05%)</title><rect x="777.1" y="181" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="780.07" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator- (3,320,143 samples, 0.05%)</title><rect x="456.4" y="181" width="0.7" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="459.44" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (1,042,945 samples, 0.02%)</title><rect x="105.4" y="245" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="108.40" y="255.5" ></text>
</g>
<g >
<title>boost::graph_detail::container_category&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; (713,708 samples, 0.01%)</title><rect x="38.9" y="293" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="41.85" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (722,260 samples, 0.01%)</title><rect x="122.8" y="197" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="125.75" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (561,151 samples, 0.01%)</title><rect x="1005.4" y="277" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1008.38" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (14,493,770 samples, 0.23%)</title><rect x="1037.9" y="149" width="2.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1040.90" y="159.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (1,140,127 samples, 0.02%)</title><rect x="991.0" y="245" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="994.03" y="255.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (6,213,395 samples, 0.10%)</title><rect x="1188.8" y="373" width="1.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1191.82" y="383.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (5,527,801 samples, 0.09%)</title><rect x="73.0" y="197" width="1.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="75.96" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt; (3,443,810 samples, 0.06%)</title><rect x="972.8" y="261" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="975.79" y="271.5" ></text>
</g>
<g >
<title>boost::graph_detail::container_category&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; (4,608,242 samples, 0.07%)</title><rect x="275.2" y="277" width="0.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="278.18" y="287.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::vertex_set (751,090 samples, 0.01%)</title><rect x="878.6" y="213" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="881.65" y="223.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long&gt; (3,105,545 samples, 0.05%)</title><rect x="1133.4" y="309" width="0.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1136.36" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (787,452 samples, 0.01%)</title><rect x="1026.9" y="229" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1029.86" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (1,565,779 samples, 0.03%)</title><rect x="1149.4" y="293" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1152.43" y="303.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (6,895,158 samples, 0.11%)</title><rect x="537.4" y="165" width="1.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="540.41" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,631,362 samples, 0.03%)</title><rect x="1144.4" y="261" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1147.37" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (5,186,055 samples, 0.08%)</title><rect x="1122.5" y="277" width="1.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1125.49" y="287.5" ></text>
</g>
<g >
<title>std::equal&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (542,412 samples, 0.01%)</title><rect x="1134.1" y="277" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1137.05" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (2,093,981 samples, 0.03%)</title><rect x="100.3" y="245" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="103.33" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (7,910,955 samples, 0.13%)</title><rect x="147.1" y="309" width="1.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="150.15" y="319.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::swap_heap_elements (1,934,914 samples, 0.03%)</title><rect x="450.5" y="197" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="453.51" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1,132,882 samples, 0.02%)</title><rect x="117.5" y="277" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="120.46" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_ptr (625,997 samples, 0.01%)</title><rect x="122.3" y="181" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="125.32" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt;, true&gt;::_S_get (825,828 samples, 0.01%)</title><rect x="115.0" y="245" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="118.01" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::operator++ (1,015,370 samples, 0.02%)</title><rect x="271.3" y="309" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="274.27" y="319.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (4,380,676 samples, 0.07%)</title><rect x="78.5" y="165" width="0.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="81.52" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::~unique_ptr (1,855,667 samples, 0.03%)</title><rect x="274.7" y="277" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="277.74" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (1,034,554 samples, 0.02%)</title><rect x="133.9" y="213" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="136.93" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (45,891,444 samples, 0.73%)</title><rect x="1063.5" y="261" width="8.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1066.52" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const&amp;&gt; (1,338,139 samples, 0.02%)</title><rect x="116.3" y="197" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="119.26" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::end (4,726,749 samples, 0.08%)</title><rect x="55.7" y="293" width="0.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="58.68" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt;::_M_next (1,356,337 samples, 0.02%)</title><rect x="1158.3" y="261" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.29" y="271.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::finish_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (8,125,730 samples, 0.13%)</title><rect x="376.6" y="213" width="1.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="379.60" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (622,823 samples, 0.01%)</title><rect x="456.9" y="165" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="459.95" y="175.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (9,041,362 samples, 0.14%)</title><rect x="1118.2" y="197" width="1.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1121.17" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (8,095,014 samples, 0.13%)</title><rect x="120.0" y="245" width="1.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="123.02" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (2,191,078 samples, 0.04%)</title><rect x="1043.4" y="213" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1046.44" y="223.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (7,644,511 samples, 0.12%)</title><rect x="86.3" y="277" width="1.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="89.35" y="287.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (2,530,269 samples, 0.04%)</title><rect x="272.2" y="309" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="275.25" y="319.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::find (5,138,699 samples, 0.08%)</title><rect x="1137.9" y="309" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1140.86" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (897,706 samples, 0.01%)</title><rect x="1115.2" y="245" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1118.23" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (4,491,366 samples, 0.07%)</title><rect x="316.0" y="261" width="0.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="319.01" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_do_relocate (4,438,857 samples, 0.07%)</title><rect x="481.4" y="149" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="484.36" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::max_size (540,505 samples, 0.01%)</title><rect x="1057.9" y="229" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1060.93" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (1,954,315 samples, 0.03%)</title><rect x="479.9" y="165" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="482.94" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::max_size (1,870,410 samples, 0.03%)</title><rect x="1056.7" y="261" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1059.66" y="271.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (21,289,740 samples, 0.34%)</title><rect x="385.8" y="197" width="4.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="388.85" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (1,651,459 samples, 0.03%)</title><rect x="1105.1" y="245" width="0.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1108.14" y="255.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long*&gt; (647,918 samples, 0.01%)</title><rect x="1040.4" y="133" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1043.40" y="143.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (26,819,769 samples, 0.43%)</title><rect x="129.5" y="293" width="5.0" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="132.45" y="303.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (3,567,318 samples, 0.06%)</title><rect x="1054.2" y="213" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1057.22" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (4,252,945 samples, 0.07%)</title><rect x="1104.6" y="261" width="0.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1107.65" y="271.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (1,315,515 samples, 0.02%)</title><rect x="454.4" y="165" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="457.40" y="175.5" ></text>
</g>
<g >
<title>boost::graph_detail::push&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,965,643 samples, 0.03%)</title><rect x="19.5" y="261" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="22.48" y="271.5" ></text>
</g>
<g >
<title>malloc (34,654,598 samples, 0.55%)</title><rect x="1180.1" y="373" width="6.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1183.09" y="383.5" ></text>
</g>
<g >
<title>_int_free (620,675 samples, 0.01%)</title><rect x="135.6" y="165" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="138.56" y="175.5" ></text>
</g>
<g >
<title>boost::iterators::operator-&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long&gt; (686,272 samples, 0.01%)</title><rect x="985.6" y="261" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="988.58" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (979,485 samples, 0.02%)</title><rect x="1146.2" y="309" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1149.23" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (1,413,443 samples, 0.02%)</title><rect x="387.9" y="149" width="0.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="390.89" y="159.5" ></text>
</g>
<g >
<title>std::tuple&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::tuple&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, true&gt; (1,211,938 samples, 0.02%)</title><rect x="274.3" y="245" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="277.34" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (2,856,484 samples, 0.05%)</title><rect x="651.9" y="165" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="654.87" y="175.5" ></text>
</g>
<g >
<title>boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~basic_ptree (646,307 samples, 0.01%)</title><rect x="12.3" y="341" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="15.34" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_brk (1,288,460 samples, 0.02%)</title><rect x="13.1" y="309" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="16.06" y="319.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (545,582 samples, 0.01%)</title><rect x="306.4" y="277" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="309.44" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (531,098 samples, 0.01%)</title><rect x="484.1" y="181" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="487.10" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (1,229,073 samples, 0.02%)</title><rect x="1160.5" y="165" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1163.50" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_max_size (11,692,004 samples, 0.19%)</title><rect x="1046.7" y="229" width="2.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1049.73" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (746,297 samples, 0.01%)</title><rect x="697.3" y="165" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="700.27" y="175.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*&gt; (1,806,163 samples, 0.03%)</title><rect x="1067.4" y="181" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1070.45" y="191.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (24,155,420 samples, 0.39%)</title><rect x="129.9" y="245" width="4.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="132.94" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (8,184,728 samples, 0.13%)</title><rect x="457.9" y="197" width="1.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="460.85" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (1,226,706 samples, 0.02%)</title><rect x="123.5" y="277" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="126.53" y="287.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch1&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (106,636,890 samples, 1.70%)</title><rect x="61.4" y="261" width="20.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="64.37" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (1,043,468 samples, 0.02%)</title><rect x="73.8" y="149" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="76.81" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_node_allocator (1,335,353 samples, 0.02%)</title><rect x="124.7" y="261" width="0.3" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="127.71" y="271.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (1,057,897 samples, 0.02%)</title><rect x="1014.8" y="213" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1017.81" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (873,708 samples, 0.01%)</title><rect x="382.4" y="165" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="385.37" y="175.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::examine_edge&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (6,551,438 samples, 0.10%)</title><rect x="318.5" y="229" width="1.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="321.49" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_use_relocate (3,821,908 samples, 0.06%)</title><rect x="1103.9" y="261" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1106.93" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::deallocate (2,466,869 samples, 0.04%)</title><rect x="1158.9" y="229" width="0.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1161.94" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (793,535 samples, 0.01%)</title><rect x="1025.1" y="261" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1028.09" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::end (982,360 samples, 0.02%)</title><rect x="277.8" y="293" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="280.84" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::destroy&lt;unsigned long&gt; (850,167 samples, 0.01%)</title><rect x="1004.0" y="277" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1007.05" y="287.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1,606,898 samples, 0.03%)</title><rect x="1178.4" y="229" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1181.41" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (5,794,606 samples, 0.09%)</title><rect x="1127.9" y="245" width="1.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1130.87" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (34,965,743 samples, 0.56%)</title><rect x="92.0" y="261" width="6.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="95.01" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (7,740,011 samples, 0.12%)</title><rect x="1161.3" y="261" width="1.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1164.26" y="271.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_not_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (57,404,580 samples, 0.92%)</title><rect x="503.8" y="213" width="10.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="506.77" y="223.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::operator== (1,615,869 samples, 0.03%)</title><rect x="276.9" y="197" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="279.90" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::emplace_back&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,136,036 samples, 0.02%)</title><rect x="19.6" y="213" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="22.61" y="223.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (2,865,021,394 samples, 45.81%)</title><rect x="322.4" y="229" width="540.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="325.37" y="239.5" >boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;..</text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_relaxed&gt; (9,918,675 samples, 0.16%)</title><rect x="515.8" y="197" width="1.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="518.80" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (3,085,056 samples, 0.05%)</title><rect x="881.5" y="261" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="884.47" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (710,652 samples, 0.01%)</title><rect x="147.0" y="293" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="150.01" y="303.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_not_relaxed&gt; (30,076,030 samples, 0.48%)</title><rect x="508.9" y="197" width="5.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="511.93" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_allocate (1,031,890 samples, 0.02%)</title><rect x="92.8" y="245" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="95.84" y="255.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::verify_heap (1,631,780 samples, 0.03%)</title><rect x="450.9" y="197" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="453.87" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (36,294,203 samples, 0.58%)</title><rect x="1091.3" y="261" width="6.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1094.30" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (619,947 samples, 0.01%)</title><rect x="110.8" y="261" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="113.79" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long const&amp;&gt; (734,014 samples, 0.01%)</title><rect x="1090.7" y="245" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1093.69" y="255.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch1&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (2,996,475,684 samples, 47.91%)</title><rect x="317.0" y="277" width="565.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="319.99" y="287.5" >boost::detail::dijkstra_no_color_map_dispatch1&lt;boost::adjacency_list&lt;boost::v..</text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (1,151,059 samples, 0.02%)</title><rect x="1030.1" y="181" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1033.10" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt;::construct&lt;std::pair&lt;unsigned long const, float&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (563,689 samples, 0.01%)</title><rect x="1140.4" y="245" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1143.42" y="255.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (14,603,469 samples, 0.23%)</title><rect x="451.9" y="197" width="2.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="454.89" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (2,508,260 samples, 0.04%)</title><rect x="1144.2" y="277" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1147.22" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (668,653 samples, 0.01%)</title><rect x="1077.5" y="293" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1080.53" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (631,028 samples, 0.01%)</title><rect x="91.9" y="213" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="94.85" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;unsigned long const, float&gt;, false, false&gt;::operator (1,164,722 samples, 0.02%)</title><rect x="1131.2" y="309" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1134.22" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;unsigned long, unsigned long&amp;, unsigned long*&gt;::operator* (792,892 samples, 0.01%)</title><rect x="1002.8" y="261" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1005.84" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (745,492 samples, 0.01%)</title><rect x="1071.7" y="181" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1074.67" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (4,773,516 samples, 0.08%)</title><rect x="1003.0" y="261" width="0.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1005.99" y="271.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (23,025,824 samples, 0.37%)</title><rect x="415.2" y="149" width="4.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="418.25" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (16,846,823 samples, 0.27%)</title><rect x="104.0" y="277" width="3.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="107.00" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::max_size (687,823 samples, 0.01%)</title><rect x="1047.9" y="213" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1050.89" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (1,530,678 samples, 0.02%)</title><rect x="447.2" y="149" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="450.16" y="159.5" ></text>
</g>
<g >
<title>exit_mmap (3,094,516 samples, 0.05%)</title><rect x="1179.5" y="277" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1182.51" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (703,728 samples, 0.01%)</title><rect x="353.7" y="181" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="356.73" y="191.5" ></text>
</g>
<g >
<title>__do_page_fault (17,214,926 samples, 0.28%)</title><rect x="1175.8" y="325" width="3.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1178.76" y="335.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (1,430,165 samples, 0.02%)</title><rect x="734.0" y="213" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="736.95" y="223.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (703,523 samples, 0.01%)</title><rect x="474.5" y="197" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="477.49" y="207.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (848,513 samples, 0.01%)</title><rect x="498.4" y="197" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="501.37" y="207.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (2,536,671 samples, 0.04%)</title><rect x="1148.6" y="261" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1151.60" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (1,290,898 samples, 0.02%)</title><rect x="1148.3" y="245" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1151.31" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,106,829 samples, 0.02%)</title><rect x="1160.5" y="149" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1163.52" y="159.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (5,254,479 samples, 0.08%)</title><rect x="145.5" y="245" width="1.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="148.52" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (736,043 samples, 0.01%)</title><rect x="92.7" y="245" width="0.1" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="95.70" y="255.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (6,679,699 samples, 0.11%)</title><rect x="313.5" y="293" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="316.50" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (4,499,711 samples, 0.07%)</title><rect x="86.9" y="245" width="0.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="89.94" y="255.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (7,447,804 samples, 0.12%)</title><rect x="437.2" y="133" width="1.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="440.24" y="143.5" ></text>
</g>
<g >
<title>std::_List_node&lt;float&gt;::_M_valptr (2,909,851 samples, 0.05%)</title><rect x="1132.4" y="277" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1135.41" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (838,969 samples, 0.01%)</title><rect x="72.6" y="37" width="0.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="75.56" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (1,341,264 samples, 0.02%)</title><rect x="122.4" y="213" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="125.44" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (19,310,752 samples, 0.31%)</title><rect x="386.2" y="181" width="3.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="389.20" y="191.5" ></text>
</g>
<g >
<title>boost::source&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (7,449,271 samples, 0.12%)</title><rect x="821.0" y="197" width="1.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="824.00" y="207.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (1,351,920 samples, 0.02%)</title><rect x="63.4" y="197" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="66.36" y="207.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (5,864,000 samples, 0.09%)</title><rect x="145.4" y="277" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="148.41" y="287.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (13,930,579 samples, 0.22%)</title><rect x="95.8" y="213" width="2.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="98.80" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (6,976,152 samples, 0.11%)</title><rect x="134.7" y="277" width="1.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="137.67" y="287.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (1,540,308 samples, 0.02%)</title><rect x="310.6" y="277" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="313.56" y="287.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_filebuf (1,123,404 samples, 0.02%)</title><rect x="20.9" y="357" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="23.88" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (1,253,249 samples, 0.02%)</title><rect x="60.6" y="277" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="63.60" y="287.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (2,053,682 samples, 0.03%)</title><rect x="31.2" y="213" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="34.17" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (977,626 samples, 0.02%)</title><rect x="1009.1" y="293" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1012.10" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (28,108,174 samples, 0.45%)</title><rect x="1036.1" y="213" width="5.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1039.14" y="223.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_down (8,052,972 samples, 0.13%)</title><rect x="63.9" y="181" width="1.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="66.86" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (427,907,295 samples, 6.84%)</title><rect x="574.9" y="197" width="80.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="577.93" y="207.5" >boost::it..</text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~deque (1,715,566 samples, 0.03%)</title><rect x="1008.7" y="277" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1011.70" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (1,020,194 samples, 0.02%)</title><rect x="1143.3" y="213" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1146.28" y="223.5" ></text>
</g>
<g >
<title>boost::detail::dijkstra_no_color_map_dispatch2&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (2,989,369,062 samples, 47.79%)</title><rect x="317.2" y="261" width="564.0" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="320.21" y="271.5" >boost::detail::dijkstra_no_color_map_dispatch2&lt;boost::adjacency_list&lt;boost::v..</text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1,354,609 samples, 0.02%)</title><rect x="1178.0" y="245" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1180.99" y="255.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (8,890,966 samples, 0.14%)</title><rect x="993.4" y="293" width="1.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="996.38" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (936,654 samples, 0.01%)</title><rect x="1063.9" y="245" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1066.89" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;unsigned long const, float&gt;, false, false&gt;::operator++ (917,197 samples, 0.01%)</title><rect x="1131.0" y="309" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1134.05" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (1,650,187 samples, 0.03%)</title><rect x="131.2" y="181" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="134.18" y="191.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,210,454 samples, 0.02%)</title><rect x="271.9" y="261" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="274.87" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt;::operator (1,033,891 samples, 0.02%)</title><rect x="46.2" y="229" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="49.16" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (26,067,757 samples, 0.42%)</title><rect x="1031.0" y="213" width="4.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1034.00" y="223.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (861,428 samples, 0.01%)</title><rect x="1159.2" y="213" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1162.22" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (7,905,786 samples, 0.13%)</title><rect x="142.0" y="293" width="1.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="145.03" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (542,504 samples, 0.01%)</title><rect x="1137.7" y="261" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1140.71" y="271.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pop (419,392,727 samples, 6.71%)</title><rect x="382.6" y="213" width="79.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="385.58" y="223.5" >boost::d_..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (3,439,062 samples, 0.05%)</title><rect x="1162.0" y="197" width="0.6" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1164.98" y="207.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_examine_vertex&gt; (5,213,239 samples, 0.08%)</title><rect x="375.6" y="197" width="1.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="378.62" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,729,397 samples, 0.03%)</title><rect x="1140.2" y="277" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1143.24" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (18,175,501 samples, 0.29%)</title><rect x="69.5" y="181" width="3.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="72.53" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_use_relocate (3,652,788 samples, 0.06%)</title><rect x="1055.5" y="261" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1058.47" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;unsigned long const&gt; &gt; (2,456,825 samples, 0.04%)</title><rect x="1133.5" y="277" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1136.48" y="287.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, false&gt;::operator mpl_::bool_&lt;false&gt; const&amp; (575,933 samples, 0.01%)</title><rect x="320.4" y="213" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="323.41" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::max_size (3,148,070 samples, 0.05%)</title><rect x="1095.5" y="213" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1098.53" y="223.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, double&gt; (5,348,123 samples, 0.09%)</title><rect x="57.5" y="293" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="60.50" y="303.5" ></text>
</g>
<g >
<title>std::fill&lt;unsigned long*, unsigned long&gt; (3,181,842 samples, 0.05%)</title><rect x="503.1" y="181" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="506.11" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (925,763 samples, 0.01%)</title><rect x="139.4" y="293" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="142.39" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (1,019,592 samples, 0.02%)</title><rect x="1139.6" y="229" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1142.63" y="239.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;unsigned long*&gt; (564,780 samples, 0.01%)</title><rect x="1121.3" y="213" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1124.27" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (1,001,042 samples, 0.02%)</title><rect x="1140.8" y="245" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1143.79" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (1,324,860 samples, 0.02%)</title><rect x="33.9" y="197" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="36.91" y="207.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (6,156,450 samples, 0.10%)</title><rect x="137.9" y="277" width="1.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="140.94" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (2,867,434 samples, 0.05%)</title><rect x="126.9" y="197" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="129.92" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (23,395,764 samples, 0.37%)</title><rect x="661.7" y="197" width="4.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="664.75" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::max_size (2,635,316 samples, 0.04%)</title><rect x="1048.0" y="213" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1051.02" y="223.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (1,968,172 samples, 0.03%)</title><rect x="451.2" y="197" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="454.18" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (1,319,812 samples, 0.02%)</title><rect x="1084.7" y="261" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1087.70" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (2,927,821 samples, 0.05%)</title><rect x="105.9" y="197" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="108.94" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (895,169 samples, 0.01%)</title><rect x="388.6" y="149" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="391.63" y="159.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (7,234,211 samples, 0.12%)</title><rect x="697.4" y="197" width="1.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="700.41" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (1,134,849 samples, 0.02%)</title><rect x="131.3" y="165" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="134.27" y="175.5" ></text>
</g>
<g >
<title>do_user_addr_fault (16,497,043 samples, 0.26%)</title><rect x="1175.8" y="309" width="3.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1178.78" y="319.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (6,853,118 samples, 0.11%)</title><rect x="867.3" y="229" width="1.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="870.30" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::push_back (1,136,036 samples, 0.02%)</title><rect x="19.6" y="229" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="22.61" y="239.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (943,817 samples, 0.02%)</title><rect x="89.0" y="277" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="92.01" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (3,909,274 samples, 0.06%)</title><rect x="145.7" y="229" width="0.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="148.68" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*&gt; (866,601 samples, 0.01%)</title><rect x="1160.1" y="165" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1163.08" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (3,883,592 samples, 0.06%)</title><rect x="673.0" y="181" width="0.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="675.95" y="191.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (1,888,725 samples, 0.03%)</title><rect x="1148.6" y="213" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1151.64" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (8,046,709 samples, 0.13%)</title><rect x="1006.5" y="261" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1009.52" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (646,554 samples, 0.01%)</title><rect x="999.9" y="293" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1002.95" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,391,072 samples, 0.02%)</title><rect x="13.1" y="325" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="16.06" y="335.5" ></text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (5,258,366 samples, 0.08%)</title><rect x="507.5" y="197" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="510.48" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (3,687,028 samples, 0.06%)</title><rect x="1161.9" y="213" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1164.93" y="223.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (623,436 samples, 0.01%)</title><rect x="1148.9" y="197" width="0.1" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1151.88" y="207.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::operator[] (639,727 samples, 0.01%)</title><rect x="1154.2" y="325" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1157.16" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (1,221,502 samples, 0.02%)</title><rect x="476.6" y="197" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="479.61" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (2,777,669 samples, 0.04%)</title><rect x="1113.1" y="213" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1116.09" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1,566,788 samples, 0.03%)</title><rect x="97.1" y="85" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="100.09" y="95.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (557,853 samples, 0.01%)</title><rect x="274.2" y="213" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="277.20" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (2,011,854 samples, 0.03%)</title><rect x="1090.8" y="261" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1093.83" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (1,628,587 samples, 0.03%)</title><rect x="1140.7" y="261" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1143.67" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (8,293,329 samples, 0.13%)</title><rect x="1085.7" y="261" width="1.6" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1088.71" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt;::operator (17,150,281 samples, 0.27%)</title><rect x="48.8" y="213" width="3.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="51.84" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, unsigned long*, unsigned long*&gt; (1,067,806 samples, 0.02%)</title><rect x="1146.9" y="245" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1149.85" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (4,412,022 samples, 0.07%)</title><rect x="112.5" y="261" width="0.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="115.53" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (3,361,899 samples, 0.05%)</title><rect x="388.2" y="165" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="391.16" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt;::_Hash_node (811,070 samples, 0.01%)</title><rect x="124.4" y="261" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="127.38" y="271.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long&gt; (3,511,264 samples, 0.06%)</title><rect x="864.5" y="229" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="867.55" y="239.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (27,640,232 samples, 0.44%)</title><rect x="1116.2" y="261" width="5.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1119.25" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (606,925 samples, 0.01%)</title><rect x="139.3" y="293" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="142.28" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (4,670,802 samples, 0.07%)</title><rect x="1161.8" y="229" width="0.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1164.84" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::begin (3,745,579 samples, 0.06%)</title><rect x="991.4" y="277" width="0.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="994.42" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (29,317,332 samples, 0.47%)</title><rect x="677.6" y="165" width="5.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="680.63" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (791,188 samples, 0.01%)</title><rect x="1140.8" y="229" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1143.83" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (3,531,972 samples, 0.06%)</title><rect x="1085.0" y="261" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1088.01" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (38,546,246 samples, 0.62%)</title><rect x="596.4" y="165" width="7.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="599.39" y="175.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (6,952,408 samples, 0.11%)</title><rect x="952.9" y="277" width="1.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="955.94" y="287.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (3,247,133 samples, 0.05%)</title><rect x="72.1" y="69" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="75.11" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (46,247,864 samples, 0.74%)</title><rect x="109.0" y="293" width="8.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="112.04" y="303.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (2,887,815 samples, 0.05%)</title><rect x="1163.4" y="261" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1166.38" y="271.5" ></text>
</g>
<g >
<title>do_exit (3,094,516 samples, 0.05%)</title><rect x="1179.5" y="309" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1182.51" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (2,536,671 samples, 0.04%)</title><rect x="1148.6" y="293" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1151.60" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (1,123,314 samples, 0.02%)</title><rect x="1077.2" y="293" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1080.18" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (95,900,287 samples, 1.53%)</title><rect x="707.1" y="181" width="18.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="710.11" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (4,918,056 samples, 0.08%)</title><rect x="96.7" y="149" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="99.65" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (8,891,504 samples, 0.14%)</title><rect x="121.6" y="261" width="1.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="124.60" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (1,182,821 samples, 0.02%)</title><rect x="1141.2" y="261" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1144.25" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_relocate (24,348,762 samples, 0.39%)</title><rect x="1050.9" y="261" width="4.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1053.87" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~_Vector_base (980,847 samples, 0.02%)</title><rect x="1162.9" y="309" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1165.86" y="319.5" ></text>
</g>
<g >
<title>malloc_consolidate (10,142,843 samples, 0.16%)</title><rect x="1186.6" y="373" width="1.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.63" y="383.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (1,358,296 samples, 0.02%)</title><rect x="65.8" y="181" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="68.77" y="191.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (40,312,522 samples, 0.64%)</title><rect x="604.6" y="165" width="7.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="607.55" y="175.5" ></text>
</g>
<g >
<title>operator new (805,487 samples, 0.01%)</title><rect x="1090.5" y="245" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1093.54" y="255.5" ></text>
</g>
<g >
<title>boost::graph_detail::push_dispatch&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,238,317 samples, 0.02%)</title><rect x="19.6" y="245" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="22.59" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::begin (3,397,102 samples, 0.05%)</title><rect x="731.5" y="197" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="734.46" y="207.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (36,886,689 samples, 0.59%)</title><rect x="306.5" y="293" width="7.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="309.54" y="303.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (56,297,078 samples, 0.90%)</title><rect x="428.9" y="165" width="10.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="431.90" y="175.5" ></text>
</g>
<g >
<title>boost::graph_detail::push_dispatch&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,565,427 samples, 0.03%)</title><rect x="21.7" y="213" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="24.68" y="223.5" ></text>
</g>
<g >
<title>std::operator==&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; (541,581 samples, 0.01%)</title><rect x="1134.2" y="309" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1137.17" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (9,093,205 samples, 0.15%)</title><rect x="1161.1" y="293" width="1.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1164.08" y="303.5" ></text>
</g>
<g >
<title>boost::graph_detail::vector_tag::vector_tag (4,503,004 samples, 0.07%)</title><rect x="275.2" y="261" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="278.20" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*&gt; (579,811 samples, 0.01%)</title><rect x="1067.9" y="197" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1070.90" y="207.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (34,770,372 samples, 0.56%)</title><rect x="413.0" y="165" width="6.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="416.03" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned long&gt;, unsigned long&gt;::_S_select_on_copy (1,217,558 samples, 0.02%)</title><rect x="130.5" y="213" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="133.48" y="223.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::verify_heap (686,103 samples, 0.01%)</title><rect x="474.2" y="197" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="477.17" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back (6,885,234 samples, 0.11%)</title><rect x="459.4" y="197" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="462.40" y="207.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (1,883,498 samples, 0.03%)</title><rect x="771.4" y="165" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="774.42" y="175.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (13,640,661 samples, 0.22%)</title><rect x="561.2" y="213" width="2.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="564.22" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_base (856,031 samples, 0.01%)</title><rect x="1145.5" y="293" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1148.53" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (2,199,067 samples, 0.04%)</title><rect x="1086.6" y="229" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1089.55" y="239.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (943,240 samples, 0.02%)</title><rect x="1055.3" y="229" width="0.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1058.29" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (2,927,126 samples, 0.05%)</title><rect x="97.0" y="101" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="99.99" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (878,380 samples, 0.01%)</title><rect x="1139.0" y="245" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1142.03" y="255.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (2,857,024 samples, 0.05%)</title><rect x="757.7" y="197" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="760.68" y="207.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::stored_edge_property (3,614,317 samples, 0.06%)</title><rect x="274.0" y="293" width="0.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="276.95" y="303.5" ></text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (746,943 samples, 0.01%)</title><rect x="321.2" y="197" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="324.20" y="207.5" ></text>
</g>
<g >
<title>std::__fill_a&lt;unsigned long*, unsigned long&gt; (3,181,842 samples, 0.05%)</title><rect x="503.1" y="165" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="506.11" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::deque (2,253,387 samples, 0.04%)</title><rect x="1008.2" y="277" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1011.23" y="287.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1,108,784 samples, 0.02%)</title><rect x="1157.5" y="213" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1160.45" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data (3,878,720 samples, 0.06%)</title><rect x="1034.8" y="181" width="0.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1037.81" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (1,030,380 samples, 0.02%)</title><rect x="122.7" y="213" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="125.69" y="223.5" ></text>
</g>
<g >
<title>boost::out_edges&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (39,815,385 samples, 0.64%)</title><rect x="985.9" y="293" width="7.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="988.87" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (1,358,157 samples, 0.02%)</title><rect x="85.9" y="245" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="88.90" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (5,331,829 samples, 0.09%)</title><rect x="460.7" y="197" width="1.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="463.70" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_ptr (619,958 samples, 0.01%)</title><rect x="1158.7" y="229" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1161.68" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (5,860,836 samples, 0.09%)</title><rect x="96.6" y="165" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="99.55" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (17,572,884 samples, 0.28%)</title><rect x="143.8" y="309" width="3.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="146.83" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (721,302 samples, 0.01%)</title><rect x="1163.7" y="165" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1166.71" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config::stored_vertex, std::allocator&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config::stored_vertex&gt; &gt;::operator[] (670,615 samples, 0.01%)</title><rect x="731.3" y="197" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="734.34" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;unsigned long const, float&gt;, false, false&gt;::operator (1,114,394 samples, 0.02%)</title><rect x="117.1" y="277" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="120.09" y="287.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::update (66,438,613 samples, 1.06%)</title><rect x="488.2" y="213" width="12.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="491.18" y="223.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (2,181,232 samples, 0.03%)</title><rect x="1014.6" y="245" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1017.64" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (15,625,194 samples, 0.25%)</title><rect x="1117.6" y="213" width="2.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1120.58" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (1,251,820 samples, 0.02%)</title><rect x="1068.2" y="197" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1071.24" y="207.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator* (621,849 samples, 0.01%)</title><rect x="1163.9" y="277" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1166.92" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (1,335,323 samples, 0.02%)</title><rect x="48.2" y="213" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="51.18" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (861,175 samples, 0.01%)</title><rect x="1163.0" y="325" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1166.05" y="335.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (181,904,435 samples, 2.91%)</title><rect x="614.1" y="165" width="34.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="617.13" y="175.5" >bo..</text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (626,422 samples, 0.01%)</title><rect x="22.1" y="229" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="25.14" y="239.5" ></text>
</g>
<g >
<title>try_charge (755,945 samples, 0.01%)</title><rect x="1178.6" y="213" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1181.57" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (690,586 samples, 0.01%)</title><rect x="1123.3" y="261" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1126.34" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (1,774,787 samples, 0.03%)</title><rect x="106.0" y="181" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="109.04" y="191.5" ></text>
</g>
<g >
<title>[unknown] (8,264,022 samples, 0.13%)</title><rect x="11.2" y="357" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.24" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (9,970,550 samples, 0.16%)</title><rect x="1032.5" y="181" width="1.9" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1035.47" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (834,308 samples, 0.01%)</title><rect x="75.8" y="149" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="78.84" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (22,268,365 samples, 0.36%)</title><rect x="123.9" y="277" width="4.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="126.94" y="287.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long&gt; (9,368,162 samples, 0.15%)</title><rect x="498.5" y="197" width="1.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="501.53" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (2,227,870 samples, 0.04%)</title><rect x="279.8" y="309" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="282.80" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_v (1,191,411 samples, 0.02%)</title><rect x="1143.0" y="213" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1146.03" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (1,877,729 samples, 0.03%)</title><rect x="923.1" y="229" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="926.11" y="239.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::copy_impl (4,489,809 samples, 0.07%)</title><rect x="21.6" y="293" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="24.61" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (18,463,156 samples, 0.30%)</title><rect x="484.3" y="181" width="3.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="487.30" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (8,857,456 samples, 0.14%)</title><rect x="1069.1" y="181" width="1.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1072.12" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (14,221,267 samples, 0.23%)</title><rect x="1005.6" y="277" width="2.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1008.55" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::allocate (826,784 samples, 0.01%)</title><rect x="1025.8" y="261" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1028.76" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (6,085,226 samples, 0.10%)</title><rect x="684.1" y="213" width="1.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="687.07" y="223.5" ></text>
</g>
<g >
<title>boost::graph_detail::push&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,752,643 samples, 0.03%)</title><rect x="1163.5" y="229" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1166.51" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (642,969 samples, 0.01%)</title><rect x="726.0" y="197" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="729.01" y="207.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::push (112,377,891 samples, 1.80%)</title><rect x="462.1" y="213" width="21.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="465.07" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (626,739 samples, 0.01%)</title><rect x="21.8" y="133" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="24.82" y="143.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (6,520,529 samples, 0.10%)</title><rect x="1176.6" y="229" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1179.58" y="239.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long&gt; (10,468,678 samples, 0.17%)</title><rect x="872.7" y="229" width="2.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="875.69" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (14,917,044 samples, 0.24%)</title><rect x="1158.2" y="293" width="2.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1161.22" y="303.5" ></text>
</g>
<g >
<title>boost::graph_detail::container_category&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; (27,653,095 samples, 0.44%)</title><rect x="39.2" y="277" width="5.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="42.22" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (913,258 samples, 0.01%)</title><rect x="1043.2" y="197" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1046.24" y="207.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (1,950,886 samples, 0.03%)</title><rect x="127.5" y="213" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="130.50" y="223.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (974,563 samples, 0.02%)</title><rect x="280.7" y="277" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="283.67" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (7,797,570 samples, 0.12%)</title><rect x="30.2" y="277" width="1.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="33.16" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (7,335,408 samples, 0.12%)</title><rect x="1112.6" y="229" width="1.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1115.58" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::~_Vector_impl (3,196,948 samples, 0.05%)</title><rect x="1129.0" y="261" width="0.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1131.96" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt; (1,246,081 samples, 0.02%)</title><rect x="871.6" y="229" width="0.2" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="874.57" y="239.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt; (1,376,798 samples, 0.02%)</title><rect x="1099.2" y="245" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1102.17" y="255.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (564,099 samples, 0.01%)</title><rect x="1094.3" y="229" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1097.33" y="239.5" ></text>
</g>
<g >
<title>update_process_times (666,014 samples, 0.01%)</title><rect x="272.0" y="213" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="274.98" y="223.5" ></text>
</g>
<g >
<title>boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::adjacency_list (4,489,809 samples, 0.07%)</title><rect x="21.6" y="325" width="0.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="24.61" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::~_Vector_impl (1,105,375 samples, 0.02%)</title><rect x="1068.5" y="197" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1071.48" y="207.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple (2,158,846 samples, 0.03%)</title><rect x="127.5" y="229" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="130.48" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (4,921,145 samples, 0.08%)</title><rect x="104.7" y="261" width="0.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="107.69" y="271.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (2,536,671 samples, 0.04%)</title><rect x="1148.6" y="277" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1151.60" y="287.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (748,391 samples, 0.01%)</title><rect x="469.9" y="181" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="472.88" y="191.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (2,509,603 samples, 0.04%)</title><rect x="84.7" y="165" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="87.71" y="175.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (30,404,935 samples, 0.49%)</title><rect x="642.1" y="69" width="5.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="645.12" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_do_relocate (545,992 samples, 0.01%)</title><rect x="1058.1" y="229" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1061.05" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (2,751,605 samples, 0.04%)</title><rect x="447.4" y="165" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="450.44" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_node_allocator (1,134,246 samples, 0.02%)</title><rect x="115.0" y="261" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="117.96" y="271.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, float&amp;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt; &gt; (4,293,657 samples, 0.07%)</title><rect x="77.4" y="181" width="0.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="80.40" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::range_detail::integer_iterator&lt;unsigned long&gt; &gt; (4,094,013 samples, 0.07%)</title><rect x="873.8" y="213" width="0.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="876.83" y="223.5" ></text>
</g>
<g >
<title>boost::tuples::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;&amp;, boost::tuples::null_type&gt; &gt;::cons&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const, boost::tuples::null_type const&gt; (1,187,274 samples, 0.02%)</title><rect x="995.2" y="277" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="998.21" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::iterator_adaptor (1,019,770 samples, 0.02%)</title><rect x="987.8" y="261" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="990.82" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (980,594 samples, 0.02%)</title><rect x="1035.7" y="197" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1038.73" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (631,265 samples, 0.01%)</title><rect x="1155.0" y="325" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1158.04" y="335.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (1,359,939 samples, 0.02%)</title><rect x="73.2" y="181" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="76.23" y="191.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::discover_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (6,528,451 samples, 0.10%)</title><rect x="354.9" y="213" width="1.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="357.93" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (17,780,973 samples, 0.28%)</title><rect x="479.0" y="181" width="3.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="482.01" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_valptr (1,164,722 samples, 0.02%)</title><rect x="1131.2" y="293" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1134.22" y="303.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt; (3,649,615 samples, 0.06%)</title><rect x="481.5" y="133" width="0.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="484.49" y="143.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_examine_edge&gt; (61,231,710 samples, 0.98%)</title><rect x="363.5" y="197" width="11.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="366.54" y="207.5" ></text>
</g>
<g >
<title>boost::source&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (3,533,315 samples, 0.06%)</title><rect x="838.1" y="213" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="841.14" y="223.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (31,906,011 samples, 0.51%)</title><rect x="823.6" y="197" width="6.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="826.56" y="207.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (8,475,368 samples, 0.14%)</title><rect x="773.9" y="165" width="1.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="776.91" y="175.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*&gt; (626,739 samples, 0.01%)</title><rect x="21.8" y="117" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="24.82" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (7,254,416 samples, 0.12%)</title><rect x="1114.0" y="261" width="1.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1117.03" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (1,714,525 samples, 0.03%)</title><rect x="730.9" y="165" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="733.86" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (5,664,974 samples, 0.09%)</title><rect x="145.4" y="261" width="1.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="148.44" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const&gt; &gt; (34,313,513 samples, 0.55%)</title><rect x="46.4" y="229" width="6.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="49.41" y="239.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (5,647,675 samples, 0.09%)</title><rect x="138.0" y="261" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="141.04" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (7,007,980 samples, 0.11%)</title><rect x="1161.4" y="245" width="1.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1164.40" y="255.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (580,372 samples, 0.01%)</title><rect x="1033.3" y="149" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1036.27" y="159.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (2,045,070 samples, 0.03%)</title><rect x="1040.0" y="133" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1043.02" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size (2,927,444 samples, 0.05%)</title><rect x="101.5" y="229" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="104.47" y="239.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple (1,955,990 samples, 0.03%)</title><rect x="116.5" y="229" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="119.51" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate (2,469,254 samples, 0.04%)</title><rect x="142.9" y="277" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="145.94" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::unique_ptr (626,739 samples, 0.01%)</title><rect x="21.8" y="53" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="24.82" y="63.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (48,629,762 samples, 0.78%)</title><rect x="1063.1" y="277" width="9.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1066.12" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (4,821,128 samples, 0.08%)</title><rect x="135.0" y="229" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="138.00" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, float&gt; &gt;::_M_valptr (821,936 samples, 0.01%)</title><rect x="114.8" y="261" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="117.80" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (4,187,424 samples, 0.07%)</title><rect x="480.5" y="165" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="483.45" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (780,472 samples, 0.01%)</title><rect x="881.5" y="245" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="884.53" y="255.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (9,427,325 samples, 0.15%)</title><rect x="474.6" y="197" width="1.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="477.62" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (561,264 samples, 0.01%)</title><rect x="315.5" y="277" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="318.51" y="287.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,806,751 samples, 0.03%)</title><rect x="932.5" y="181" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="935.50" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (1,331,563 samples, 0.02%)</title><rect x="110.1" y="277" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="113.07" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (768,915 samples, 0.01%)</title><rect x="1130.6" y="293" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1133.58" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (725,942 samples, 0.01%)</title><rect x="139.6" y="309" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="142.57" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (4,187,513 samples, 0.07%)</title><rect x="105.8" y="229" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="108.82" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::__normal_iterator (750,768 samples, 0.01%)</title><rect x="1012.4" y="261" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1015.39" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt;::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, true&gt; (806,799 samples, 0.01%)</title><rect x="731.2" y="197" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="734.19" y="207.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (1,135,777 samples, 0.02%)</title><rect x="58.3" y="261" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="61.25" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_do_relocate (14,244,676 samples, 0.23%)</title><rect x="95.8" y="229" width="2.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="98.78" y="239.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (21,390,739 samples, 0.34%)</title><rect x="1037.3" y="165" width="4.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1040.34" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1,232,530 samples, 0.02%)</title><rect x="127.0" y="149" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="130.04" y="159.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1,578,551 samples, 0.03%)</title><rect x="1093.0" y="245" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1096.05" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt;::destroy&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (6,165,146 samples, 0.10%)</title><rect x="1159.8" y="229" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1162.80" y="239.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (4,330,152 samples, 0.07%)</title><rect x="942.2" y="197" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="945.21" y="207.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::get_property (630,308 samples, 0.01%)</title><rect x="61.2" y="277" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="64.19" y="287.5" ></text>
</g>
<g >
<title>malloc (754,723 samples, 0.01%)</title><rect x="1034.1" y="149" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1037.07" y="159.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (3,685,900 samples, 0.06%)</title><rect x="1039.3" y="117" width="0.7" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1042.32" y="127.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pop (11,081,724 samples, 0.18%)</title><rect x="63.6" y="197" width="2.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="66.62" y="207.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map_no_init&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::dijkstra_visitor&lt;boost::null_visitor&gt;, boost::dummy_property_map, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, std::less&lt;float&gt;, std::plus&lt;float&gt;, float, float&gt; (102,894,786 samples, 1.65%)</title><rect x="61.5" y="213" width="19.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="64.45" y="223.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (1,881,175 samples, 0.03%)</title><rect x="84.8" y="149" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="87.83" y="159.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::parent (1,180,164 samples, 0.02%)</title><rect x="492.1" y="181" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="495.15" y="191.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (49,042,555 samples, 0.78%)</title><rect x="489.1" y="197" width="9.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="492.05" y="207.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::operator== (11,091,837 samples, 0.18%)</title><rect x="50.0" y="197" width="2.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="52.98" y="207.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (617,137 samples, 0.01%)</title><rect x="148.2" y="245" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="151.18" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,729,127 samples, 0.03%)</title><rect x="480.0" y="149" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="482.98" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config::stored_vertex, std::allocator&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config::stored_vertex&gt; &gt;::operator[] (4,625,092 samples, 0.07%)</title><rect x="727.9" y="181" width="0.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="730.91" y="191.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (9,031,233 samples, 0.14%)</title><rect x="29.9" y="293" width="1.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="32.93" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (3,243,985 samples, 0.05%)</title><rect x="1146.6" y="293" width="0.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1149.60" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (895,334 samples, 0.01%)</title><rect x="271.9" y="245" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="274.93" y="255.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::queue&lt;std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, void&gt; (2,253,387 samples, 0.04%)</title><rect x="1008.2" y="293" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1011.23" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (770,417 samples, 0.01%)</title><rect x="1087.8" y="229" width="0.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1090.82" y="239.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~d_ary_heap_indirect (3,394,012 samples, 0.05%)</title><rect x="500.9" y="213" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="503.89" y="223.5" ></text>
</g>
<g >
<title>page_fault (615,669 samples, 0.01%)</title><rect x="121.8" y="197" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="124.76" y="207.5" ></text>
</g>
<g >
<title>boost::detail::get_dispatch&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt;, boost::edge_weight_t&gt; (922,732 samples, 0.01%)</title><rect x="57.3" y="277" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="60.32" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (665,374 samples, 0.01%)</title><rect x="1092.9" y="245" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1095.92" y="255.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,203,708 samples, 0.04%)</title><rect x="1162.2" y="181" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1165.21" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (1,117,424 samples, 0.02%)</title><rect x="457.5" y="165" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="460.53" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;unsigned long const*, unsigned long*&gt; (1,400,943 samples, 0.02%)</title><rect x="1122.1" y="229" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1125.08" y="239.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const&amp;&gt; (1,437,646 samples, 0.02%)</title><rect x="126.6" y="197" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="129.65" y="207.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (1,264,939 samples, 0.02%)</title><rect x="1041.8" y="213" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1044.80" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (30,639,691 samples, 0.49%)</title><rect x="476.8" y="197" width="5.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="479.84" y="207.5" ></text>
</g>
<g >
<title>_int_free (1,028,607 samples, 0.02%)</title><rect x="36.3" y="261" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="39.26" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (15,314,131 samples, 0.24%)</title><rect x="1176.0" y="293" width="2.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1178.96" y="303.5" ></text>
</g>
<g >
<title>boost::detail::vertex_property_map_generator_helper&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, true&gt;::build (4,355,645 samples, 0.07%)</title><rect x="502.9" y="197" width="0.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="505.89" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (7,278,564 samples, 0.12%)</title><rect x="961.9" y="293" width="1.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="964.93" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::allocate (1,645,971 samples, 0.03%)</title><rect x="115.2" y="261" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="118.17" y="271.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; (2,999,063,143 samples, 47.95%)</title><rect x="316.9" y="293" width="565.8" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="319.86" y="303.5" >boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS..</text>
</g>
<g >
<title>boost::tuples::detail::cnull (876,950 samples, 0.01%)</title><rect x="998.6" y="261" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1001.60" y="271.5" ></text>
</g>
<g >
<title>std::accumulate&lt;std::_List_iterator&lt;float&gt;, float&gt; (9,024,855 samples, 0.14%)</title><rect x="1131.5" y="309" width="1.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1134.54" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (7,379,827 samples, 0.12%)</title><rect x="120.1" y="229" width="1.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="123.05" y="239.5" ></text>
</g>
<g >
<title>boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::basic_ptree (1,327,646 samples, 0.02%)</title><rect x="11.4" y="325" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="14.43" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (1,535,943 samples, 0.02%)</title><rect x="934.8" y="165" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="937.84" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (2,194,760 samples, 0.04%)</title><rect x="90.9" y="213" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="93.89" y="223.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (703,728 samples, 0.01%)</title><rect x="353.7" y="197" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="356.73" y="207.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt;::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, true&gt; (5,093,839 samples, 0.08%)</title><rect x="990.3" y="261" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="993.29" y="271.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (2,845,169 samples, 0.05%)</title><rect x="272.8" y="309" width="0.5" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="275.77" y="319.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (17,364,899 samples, 0.28%)</title><rect x="82.1" y="261" width="3.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="85.14" y="271.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (933,134 samples, 0.01%)</title><rect x="481.7" y="117" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="484.75" y="127.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (10,576,443 samples, 0.17%)</title><rect x="96.3" y="181" width="2.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="99.31" y="191.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (12,256,220 samples, 0.20%)</title><rect x="96.1" y="197" width="2.3" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="99.06" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (733,547 samples, 0.01%)</title><rect x="89.1" y="261" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="92.05" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,672,925 samples, 0.03%)</title><rect x="100.4" y="229" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="103.41" y="239.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (761,712 samples, 0.01%)</title><rect x="470.0" y="181" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="473.02" y="191.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::verify_heap (916,705 samples, 0.01%)</title><rect x="500.7" y="213" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="503.71" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (17,564,678 samples, 0.28%)</title><rect x="110.4" y="277" width="3.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="113.40" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::increment (50,112,598 samples, 0.80%)</title><rect x="673.7" y="181" width="9.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="676.71" y="191.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::base (731,568 samples, 0.01%)</title><rect x="72.7" y="149" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="75.72" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (880,956 samples, 0.01%)</title><rect x="1000.7" y="293" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1003.69" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (735,884 samples, 0.01%)</title><rect x="1137.6" y="229" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1140.56" y="239.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_examine_edge&gt; (2,300,930 samples, 0.04%)</title><rect x="62.8" y="181" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="65.79" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (2,325,674 samples, 0.04%)</title><rect x="991.7" y="261" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="994.69" y="271.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (722,414 samples, 0.01%)</title><rect x="143.1" y="229" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="146.13" y="239.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (3,878,727 samples, 0.06%)</title><rect x="85.4" y="277" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="88.42" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (86,119,420 samples, 1.38%)</title><rect x="1027.6" y="229" width="16.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1030.60" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;float&gt;::_M_addr (979,169 samples, 0.02%)</title><rect x="1132.8" y="245" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1135.77" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (772,687 samples, 0.01%)</title><rect x="1072.8" y="277" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1075.77" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (1,733,590 samples, 0.03%)</title><rect x="1022.2" y="261" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1025.17" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size (2,986,021 samples, 0.05%)</title><rect x="480.6" y="149" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="483.56" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::begin (2,669,349 samples, 0.04%)</title><rect x="1056.2" y="261" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1059.16" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_do_relocate (23,862,300 samples, 0.38%)</title><rect x="1099.4" y="245" width="4.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1102.43" y="255.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (5,380,098 samples, 0.09%)</title><rect x="987.0" y="277" width="1.0" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="990.00" y="287.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (249,072,249 samples, 3.98%)</title><rect x="898.6" y="261" width="47.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="901.61" y="271.5" >boos..</text>
</g>
<g >
<title>std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::pair&lt;unsigned long const&amp;&gt; (542,899 samples, 0.01%)</title><rect x="1144.4" y="229" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1147.43" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (722,840 samples, 0.01%)</title><rect x="1149.5" y="277" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1152.49" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::vector (2,392,716 samples, 0.04%)</title><rect x="1145.3" y="309" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1148.28" y="319.5" ></text>
</g>
<g >
<title>_int_free (733,823 samples, 0.01%)</title><rect x="100.5" y="213" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="103.47" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (688,780 samples, 0.01%)</title><rect x="757.5" y="149" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="760.55" y="159.5" ></text>
</g>
<g >
<title>NexullanceIT::~NexullanceIT (42,658,855 samples, 0.68%)</title><rect x="1155.2" y="341" width="8.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1158.16" y="351.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (5,405,143 samples, 0.09%)</title><rect x="572.5" y="197" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="575.48" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator= (1,394,263 samples, 0.02%)</title><rect x="1147.2" y="309" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1150.23" y="319.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (47,634,923 samples, 0.76%)</title><rect x="766.5" y="181" width="9.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="769.52" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (942,305 samples, 0.02%)</title><rect x="22.5" y="309" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="25.47" y="319.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (627,222 samples, 0.01%)</title><rect x="88.4" y="277" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="91.38" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (3,486,778 samples, 0.06%)</title><rect x="1106.2" y="277" width="0.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1109.24" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_node_allocator (742,533 samples, 0.01%)</title><rect x="1159.6" y="245" width="0.1" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="1162.57" y="255.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (53,407,978 samples, 0.85%)</title><rect x="547.5" y="197" width="10.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="550.49" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (650,264 samples, 0.01%)</title><rect x="486.8" y="149" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="489.84" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (918,847 samples, 0.01%)</title><rect x="1016.5" y="277" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1019.45" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size (926,933 samples, 0.01%)</title><rect x="142.6" y="245" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="145.65" y="255.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,670,520 samples, 0.04%)</title><rect x="1088.5" y="229" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1091.50" y="239.5" ></text>
</g>
<g >
<title>std::__advance&lt;std::_List_iterator&lt;float&gt;, long&gt; (13,165,292 samples, 0.21%)</title><rect x="1134.4" y="277" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1137.35" y="287.5" ></text>
</g>
<g >
<title>std::move&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*&amp;&gt; (1,326,127 samples, 0.02%)</title><rect x="37.8" y="261" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="40.75" y="271.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;unsigned long, unsigned long&gt; (5,832,152 samples, 0.09%)</title><rect x="1102.8" y="213" width="1.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1105.75" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::max_size (732,230 samples, 0.01%)</title><rect x="101.8" y="197" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="104.85" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (28,188,383 samples, 0.45%)</title><rect x="1110.3" y="277" width="5.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1113.25" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (14,278,580 samples, 0.23%)</title><rect x="125.4" y="261" width="2.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="128.39" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_valptr (962,987 samples, 0.02%)</title><rect x="1143.1" y="197" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1146.07" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (16,468,370 samples, 0.26%)</title><rect x="114.0" y="277" width="3.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="116.98" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (2,195,557 samples, 0.04%)</title><rect x="961.5" y="293" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="964.52" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned long&gt;, unsigned long&gt;::_S_select_on_copy (6,053,263 samples, 0.10%)</title><rect x="1029.2" y="213" width="1.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1032.17" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (5,440,064 samples, 0.09%)</title><rect x="379.7" y="181" width="1.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="382.67" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocator (836,952 samples, 0.01%)</title><rect x="104.5" y="229" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="107.48" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (6,157,924 samples, 0.10%)</title><rect x="111.4" y="245" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="114.35" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::~allocator (1,505,884 samples, 0.02%)</title><rect x="1129.3" y="245" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1132.28" y="255.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_all_s_d (262,915,199 samples, 4.20%)</title><rect x="58.5" y="309" width="49.6" height="15.0" fill="rgb(230,117,27)" rx="2" ry="2" />
<text  x="61.53" y="319.5" >compu..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (1,135,529 samples, 0.02%)</title><rect x="113.7" y="277" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="116.71" y="287.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (67,425,311 samples, 1.08%)</title><rect x="800.2" y="165" width="12.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="803.19" y="175.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (5,445,129 samples, 0.09%)</title><rect x="86.8" y="261" width="1.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="89.76" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::begin (4,451,071 samples, 0.07%)</title><rect x="1009.3" y="293" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1012.28" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (9,956,222 samples, 0.16%)</title><rect x="137.3" y="293" width="1.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="140.26" y="303.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt;, boost::edge_weight_t, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, double&gt; (9,761,849 samples, 0.16%)</title><rect x="56.7" y="309" width="1.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="59.67" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (706,605 samples, 0.01%)</title><rect x="882.1" y="213" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="885.13" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (623,785 samples, 0.01%)</title><rect x="1030.3" y="213" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1033.32" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator++ (1,447,668 samples, 0.02%)</title><rect x="45.9" y="229" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="48.89" y="239.5" ></text>
</g>
<g >
<title>boost::add_edge&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; (2,576,361 samples, 0.04%)</title><rect x="1163.4" y="245" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1166.38" y="255.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (9,371,073 samples, 0.15%)</title><rect x="470.2" y="181" width="1.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="473.17" y="191.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_initialize_vertex&gt; (4,573,638 samples, 0.07%)</title><rect x="320.5" y="213" width="0.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="323.52" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_v (1,942,460 samples, 0.03%)</title><rect x="120.4" y="213" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="123.44" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (7,596,159 samples, 0.12%)</title><rect x="1074.7" y="261" width="1.4" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1077.67" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (60,448,268 samples, 0.97%)</title><rect x="973.9" y="261" width="11.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="976.92" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::~vector (8,930,742 samples, 0.14%)</title><rect x="134.6" y="309" width="1.7" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="137.65" y="319.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::dummy_property_map, boost::detail::dummy_pmap_reference, unsigned long, unsigned long&gt; (3,674,857 samples, 0.06%)</title><rect x="817.3" y="197" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="820.31" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (823,839 samples, 0.01%)</title><rect x="142.3" y="261" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="145.32" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_ptr (709,923 samples, 0.01%)</title><rect x="30.3" y="261" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="33.34" y="271.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;void, true&gt; (925,738 samples, 0.01%)</title><rect x="128.6" y="277" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="131.58" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::vector (789,128 samples, 0.01%)</title><rect x="1154.3" y="325" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1157.32" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (93,949,122 samples, 1.50%)</title><rect x="1107.0" y="293" width="17.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1109.97" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (5,030,336 samples, 0.08%)</title><rect x="147.7" y="293" width="0.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="150.69" y="303.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (14,558,034 samples, 0.23%)</title><rect x="814.6" y="197" width="2.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="817.56" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (1,129,627 samples, 0.02%)</title><rect x="118.6" y="245" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="121.58" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (734,269 samples, 0.01%)</title><rect x="1069.5" y="149" width="0.1" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1072.48" y="159.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::d_ary_heap_indirect (1,761,173 samples, 0.03%)</title><rect x="378.1" y="213" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="381.13" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::__normal_iterator (623,369 samples, 0.01%)</title><rect x="90.1" y="245" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="93.06" y="255.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (1,022,777 samples, 0.02%)</title><rect x="146.2" y="213" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="149.22" y="223.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (106,306,203 samples, 1.70%)</title><rect x="841.0" y="213" width="20.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="843.97" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (1,628,587 samples, 0.03%)</title><rect x="1140.7" y="277" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1143.67" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1,131,016 samples, 0.02%)</title><rect x="119.0" y="261" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="122.01" y="271.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (3,879,943 samples, 0.06%)</title><rect x="494.1" y="149" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="497.08" y="159.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (17,111,702 samples, 0.27%)</title><rect x="809.7" y="149" width="3.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="812.69" y="159.5" ></text>
</g>
<g >
<title>boost::mutate_graph_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::~mutate_graph_impl (4,702,979 samples, 0.08%)</title><rect x="19.2" y="357" width="0.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="22.17" y="367.5" ></text>
</g>
<g >
<title>NexullanceIT::NexullanceIT (7,190,131 samples, 0.11%)</title><rect x="21.5" y="341" width="1.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="24.55" y="351.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (4,844,458 samples, 0.08%)</title><rect x="891.5" y="277" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="894.49" y="287.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (1,317,931 samples, 0.02%)</title><rect x="990.0" y="261" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="993.04" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::operator= (3,595,006 samples, 0.06%)</title><rect x="1014.5" y="293" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1017.48" y="303.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (2,250,983 samples, 0.04%)</title><rect x="1048.5" y="213" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1051.52" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (8,404,662 samples, 0.13%)</title><rect x="1096.6" y="245" width="1.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1099.56" y="255.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_relaxed&gt; (637,841 samples, 0.01%)</title><rect x="559.1" y="213" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="562.14" y="223.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (1,280,844 samples, 0.02%)</title><rect x="882.9" y="293" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="885.90" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base (712,820 samples, 0.01%)</title><rect x="22.8" y="309" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="25.77" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::select_on_container_copy_construction (3,205,270 samples, 0.05%)</title><rect x="1029.7" y="197" width="0.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1032.71" y="207.5" ></text>
</g>
<g >
<title>boost::detail::invoke_dispatch&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (703,328 samples, 0.01%)</title><rect x="378.0" y="181" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="380.96" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (1,675,876 samples, 0.03%)</title><rect x="102.0" y="229" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="105.03" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (1,357,987 samples, 0.02%)</title><rect x="882.0" y="261" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="885.05" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (3,354,212 samples, 0.05%)</title><rect x="104.8" y="245" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="107.77" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;&amp;&gt; (581,595 samples, 0.01%)</title><rect x="1143.3" y="197" width="0.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1146.34" y="207.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (10,047,433 samples, 0.16%)</title><rect x="493.1" y="165" width="1.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="496.11" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~_Vector_base (3,575,564 samples, 0.06%)</title><rect x="1160.3" y="181" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1163.26" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (8,343,793 samples, 0.13%)</title><rect x="981.7" y="229" width="1.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="984.67" y="239.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (1,407,669 samples, 0.02%)</title><rect x="820.6" y="149" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="823.55" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (56,909,340 samples, 0.91%)</title><rect x="118.0" y="293" width="10.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="121.02" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (819,084 samples, 0.01%)</title><rect x="117.3" y="277" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="120.30" y="287.5" ></text>
</g>
<g >
<title>mmput (3,094,516 samples, 0.05%)</title><rect x="1179.5" y="293" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1182.51" y="303.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::top (838,028 samples, 0.01%)</title><rect x="66.4" y="197" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="69.40" y="207.5" ></text>
</g>
<g >
<title>unmap_page_range (1,356,267 samples, 0.02%)</title><rect x="1179.8" y="229" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1182.83" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (7,279,865 samples, 0.12%)</title><rect x="134.6" y="293" width="1.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="137.65" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::empty (15,024,664 samples, 0.24%)</title><rect x="445.7" y="181" width="2.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="448.74" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (718,646 samples, 0.01%)</title><rect x="135.1" y="213" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="138.11" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (628,759 samples, 0.01%)</title><rect x="75.7" y="133" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="78.72" y="143.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, float&gt;::pair&lt;unsigned long const&amp;, 0ul&gt; (2,670,920 samples, 0.04%)</title><rect x="116.0" y="213" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="119.00" y="223.5" ></text>
</g>
<g >
<title>dl_main (1,457,426 samples, 0.02%)</title><rect x="13.5" y="341" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="16.50" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size (1,027,917 samples, 0.02%)</title><rect x="142.6" y="261" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="145.63" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (6,163,227 samples, 0.10%)</title><rect x="30.5" y="261" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="33.47" y="271.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (3,540,255 samples, 0.06%)</title><rect x="428.2" y="165" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="431.24" y="175.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::first_child (1,663,891 samples, 0.03%)</title><rect x="389.9" y="197" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="392.86" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (19,293,143 samples, 0.31%)</title><rect x="1141.1" y="293" width="3.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1144.12" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (4,710,353 samples, 0.08%)</title><rect x="84.3" y="197" width="0.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="87.33" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (646,322 samples, 0.01%)</title><rect x="481.1" y="149" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="484.12" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (5,827,407 samples, 0.09%)</title><rect x="1060.4" y="245" width="1.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1063.41" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (1,029,263 samples, 0.02%)</title><rect x="126.7" y="165" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="129.73" y="175.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::operator[] (57,943,464 samples, 0.93%)</title><rect x="117.9" y="309" width="10.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="120.88" y="319.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;&gt; (2,156,703 samples, 0.03%)</title><rect x="38.4" y="213" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="41.45" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (731,437 samples, 0.01%)</title><rect x="107.2" y="261" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="110.22" y="271.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (5,527,820 samples, 0.09%)</title><rect x="499.3" y="181" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="502.26" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1,126,219 samples, 0.02%)</title><rect x="110.1" y="261" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="113.11" y="271.5" ></text>
</g>
<g >
<title>NexullanceIT::optimize (6,001,542,653 samples, 95.95%)</title><rect x="22.9" y="341" width="1132.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="25.90" y="351.5" >NexullanceIT::optimize</text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (1,044,835 samples, 0.02%)</title><rect x="63.7" y="181" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="66.66" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (1,327,535 samples, 0.02%)</title><rect x="1010.9" y="277" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1013.93" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (825,262 samples, 0.01%)</title><rect x="113.8" y="261" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="116.75" y="271.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_not_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (4,938,660 samples, 0.08%)</title><rect x="862.9" y="229" width="0.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="865.89" y="239.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;::get_property (7,429,504 samples, 0.12%)</title><rect x="83.8" y="229" width="1.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="86.82" y="239.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, false, false&gt;::operator++ (10,165,608 samples, 0.16%)</title><rect x="869.5" y="229" width="2.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="872.54" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::operator[] (1,865,339 samples, 0.03%)</title><rect x="487.8" y="197" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="490.83" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector (539,466 samples, 0.01%)</title><rect x="862.7" y="213" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="865.73" y="223.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (1,534,253 samples, 0.02%)</title><rect x="51.8" y="181" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="54.78" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (735,917 samples, 0.01%)</title><rect x="1116.1" y="261" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1119.11" y="271.5" ></text>
</g>
<g >
<title>boost::dijkstra_shortest_paths_no_color_map&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; (106,636,890 samples, 1.70%)</title><rect x="61.4" y="277" width="20.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="64.37" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (3,220,270 samples, 0.05%)</title><rect x="448.0" y="165" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="450.96" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (1,846,311 samples, 0.03%)</title><rect x="120.9" y="213" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="123.87" y="223.5" ></text>
</g>
<g >
<title>boost::graph_detail::back_insertion_sequence_tag::back_insertion_sequence_tag (6,171,687 samples, 0.10%)</title><rect x="40.9" y="245" width="1.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="43.95" y="255.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt; (19,283,342 samples, 0.31%)</title><rect x="1100.2" y="229" width="3.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1103.21" y="239.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (1,065,178 samples, 0.02%)</title><rect x="469.7" y="149" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="472.68" y="159.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (3,170,773 samples, 0.05%)</title><rect x="499.6" y="165" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="502.58" y="175.5" ></text>
</g>
<g >
<title>std::operator==&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; (858,369 samples, 0.01%)</title><rect x="1134.0" y="293" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1137.01" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (583,862 samples, 0.01%)</title><rect x="757.6" y="117" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="760.57" y="127.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (2,882,071 samples, 0.05%)</title><rect x="57.9" y="277" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="60.92" y="287.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, __gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::use_default, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; (4,910,072 samples, 0.08%)</title><rect x="75.1" y="165" width="0.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="78.07" y="175.5" ></text>
</g>
<g >
<title>operator new (1,123,051 samples, 0.02%)</title><rect x="1113.8" y="213" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1116.76" y="223.5" ></text>
</g>
<g >
<title>read_matrix (1,156,552 samples, 0.02%)</title><rect x="1164.4" y="341" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1167.36" y="351.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (2,603,404 samples, 0.04%)</title><rect x="78.8" y="149" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="81.78" y="159.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (750,188 samples, 0.01%)</title><rect x="1000.9" y="293" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1003.86" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_deleter (3,488,860 samples, 0.06%)</title><rect x="38.2" y="245" width="0.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="41.20" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*&gt; (1,769,247 samples, 0.03%)</title><rect x="1125.6" y="261" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1128.60" y="271.5" ></text>
</g>
<g >
<title>boost::iterator_range_detail::iterator_range_base&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::iterators::random_access_traversal_tag&gt;::size (1,468,280 samples, 0.02%)</title><rect x="985.4" y="277" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="988.43" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (11,726,636 samples, 0.19%)</title><rect x="645.6" y="53" width="2.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="648.64" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_ptr (820,026 samples, 0.01%)</title><rect x="120.7" y="181" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="123.65" y="191.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (3,496,740 samples, 0.06%)</title><rect x="29.3" y="293" width="0.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="32.27" y="303.5" ></text>
</g>
<g >
<title>std::make_pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (9,413,570 samples, 0.15%)</title><rect x="989.5" y="277" width="1.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="992.47" y="287.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (617,309 samples, 0.01%)</title><rect x="145.9" y="197" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="148.95" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::size (1,843,286 samples, 0.03%)</title><rect x="1105.7" y="261" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1108.67" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; (6,367,000 samples, 0.10%)</title><rect x="305.2" y="293" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="308.15" y="303.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long, unsigned long&gt; (837,210 samples, 0.01%)</title><rect x="64.4" y="149" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="67.37" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (154,992,068 samples, 2.48%)</title><rect x="1077.7" y="293" width="29.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1080.66" y="303.5" >st..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (3,825,950 samples, 0.06%)</title><rect x="1042.7" y="213" width="0.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1045.71" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (583,080 samples, 0.01%)</title><rect x="1000.1" y="293" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1003.07" y="303.5" ></text>
</g>
<g >
<title>boost::put&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, float&amp;, unsigned long, float&gt; (724,711 samples, 0.01%)</title><rect x="79.4" y="181" width="0.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="82.39" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::deallocate (751,532 samples, 0.01%)</title><rect x="1128.1" y="229" width="0.1" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1131.07" y="239.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (6,395,306 samples, 0.10%)</title><rect x="417.9" y="133" width="1.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="420.86" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (4,305,950 samples, 0.07%)</title><rect x="141.2" y="293" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="144.18" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::operator* (6,071,973 samples, 0.10%)</title><rect x="84.1" y="213" width="1.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="87.08" y="223.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_discover_vertex&gt; (4,745,196 samples, 0.08%)</title><rect x="355.3" y="197" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="358.26" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_valptr (619,575 samples, 0.01%)</title><rect x="128.3" y="261" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="131.25" y="271.5" ></text>
</g>
<g >
<title>std::less&lt;float&gt;::operator (5,230,023 samples, 0.08%)</title><rect x="471.9" y="181" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="474.93" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (2,545,978 samples, 0.04%)</title><rect x="1138.1" y="261" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1141.15" y="271.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*&gt; (2,326,866 samples, 0.04%)</title><rect x="1148.6" y="245" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1151.64" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (2,522,590 samples, 0.04%)</title><rect x="729.4" y="181" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="732.41" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (2,302,645 samples, 0.04%)</title><rect x="97.8" y="133" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="100.82" y="143.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::operator++ (145,664,430 samples, 2.33%)</title><rect x="655.7" y="213" width="27.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="658.68" y="223.5" >b..</text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::stored_edge (1,541,399 samples, 0.02%)</title><rect x="32.1" y="277" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="35.13" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::begin (1,364,343 samples, 0.02%)</title><rect x="89.2" y="277" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="92.23" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_Vector_base (14,111,869 samples, 0.23%)</title><rect x="1059.2" y="277" width="2.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1062.24" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::back (11,335,536 samples, 0.18%)</title><rect x="455.6" y="197" width="2.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="458.60" y="207.5" ></text>
</g>
<g >
<title>boost::edge&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt; (24,668,260 samples, 0.39%)</title><rect x="273.4" y="309" width="4.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="276.37" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::end (3,688,430 samples, 0.06%)</title><rect x="1058.3" y="277" width="0.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1061.27" y="287.5" ></text>
</g>
<g >
<title>std::addressof&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; (858,013 samples, 0.01%)</title><rect x="1157.7" y="213" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.71" y="223.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;float&gt;::operator* (3,576,403 samples, 0.06%)</title><rect x="1132.3" y="293" width="0.7" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1135.28" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (951,126 samples, 0.02%)</title><rect x="482.4" y="181" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="485.44" y="191.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (5,670,603 samples, 0.09%)</title><rect x="560.2" y="213" width="1.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="563.15" y="223.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (3,281,894 samples, 0.05%)</title><rect x="38.2" y="229" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="41.23" y="239.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (1,028,725 samples, 0.02%)</title><rect x="38.7" y="197" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="41.66" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (2,568,900 samples, 0.04%)</title><rect x="1137.4" y="293" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1140.38" y="303.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (5,988,363 samples, 0.10%)</title><rect x="470.8" y="165" width="1.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="473.80" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (15,165,748 samples, 0.24%)</title><rect x="1158.2" y="309" width="2.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1161.17" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_valptr (716,268 samples, 0.01%)</title><rect x="124.6" y="261" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="127.57" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (927,660 samples, 0.01%)</title><rect x="19.7" y="197" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="22.65" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::__normal_iterator (660,664 samples, 0.01%)</title><rect x="387.0" y="165" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="390.03" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_S_nothrow_relocate (541,877 samples, 0.01%)</title><rect x="1050.8" y="261" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1053.77" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (5,562,143 samples, 0.09%)</title><rect x="388.8" y="165" width="1.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="391.79" y="175.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::preserve_heap_property_up (57,978,747 samples, 0.93%)</title><rect x="463.2" y="197" width="11.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="466.23" y="207.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, false&gt;::operator mpl_::bool_&lt;false&gt; const&amp; (5,542,144 samples, 0.09%)</title><rect x="362.5" y="197" width="1.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="365.49" y="207.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (2,320,589 samples, 0.04%)</title><rect x="414.8" y="149" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="417.81" y="159.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::dereference (363,783,159 samples, 5.82%)</title><rect x="583.8" y="181" width="68.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="586.77" y="191.5" >boost::..</text>
</g>
<g >
<title>std::_Destroy&lt;unsigned long*, unsigned long&gt; (3,265,443 samples, 0.05%)</title><rect x="1067.3" y="197" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1070.28" y="207.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (52,664,772 samples, 0.84%)</title><rect x="637.9" y="85" width="10.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="640.92" y="95.5" ></text>
</g>
<g >
<title>boost::graph_detail::back_insertion_sequence_tag::back_insertion_sequence_tag (1,349,855 samples, 0.02%)</title><rect x="275.4" y="245" width="0.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="278.38" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (2,986,299 samples, 0.05%)</title><rect x="36.9" y="245" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="39.90" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (10,342,981 samples, 0.17%)</title><rect x="685.2" y="213" width="2.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="688.22" y="223.5" ></text>
</g>
<g >
<title>_dl_relocate_object (702,303 samples, 0.01%)</title><rect x="13.6" y="325" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="16.63" y="335.5" ></text>
</g>
<g >
<title>rmqueue (1,217,803 samples, 0.02%)</title><rect x="1177.6" y="197" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1180.56" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (6,447,408 samples, 0.10%)</title><rect x="1086.1" y="245" width="1.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1089.06" y="255.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (4,208,432 samples, 0.07%)</title><rect x="897.8" y="261" width="0.8" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="900.81" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::begin (1,337,123 samples, 0.02%)</title><rect x="53.0" y="261" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="55.98" y="271.5" ></text>
</g>
<g >
<title>compute_all_shortest_paths_single_s_d (4,495,518,943 samples, 71.88%)</title><rect x="281.7" y="309" width="848.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="284.66" y="319.5" >compute_all_shortest_paths_single_s_d</text>
</g>
<g >
<title>boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~basic_ptree (585,154 samples, 0.01%)</title><rect x="20.1" y="357" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="23.09" y="367.5" ></text>
</g>
<g >
<title>boost::iterators::operator!=&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long, boost::range_detail::integer_iterator&lt;unsigned long&gt;, unsigned long, boost::iterators::random_access_traversal_tag, unsigned long, long&gt; (543,672 samples, 0.01%)</title><rect x="880.7" y="245" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="883.65" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_S_check_init_len (990,843 samples, 0.02%)</title><rect x="881.8" y="245" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="884.81" y="255.5" ></text>
</g>
<g >
<title>boost::bfs_visitor&lt;boost::null_visitor&gt;::discover_vertex&lt;unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (999,644 samples, 0.02%)</title><rect x="318.3" y="229" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="321.30" y="239.5" ></text>
</g>
<g >
<title>perf_event_mmap (539,374 samples, 0.01%)</title><rect x="13.1" y="277" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="16.09" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (1,122,157 samples, 0.02%)</title><rect x="133.1" y="117" width="0.2" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="136.12" y="127.5" ></text>
</g>
<g >
<title>operator delete (618,209 samples, 0.01%)</title><rect x="36.5" y="261" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="39.55" y="271.5" ></text>
</g>
<g >
<title>boost::graph_detail::find_dispatch&lt;std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;, boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (50,538,319 samples, 0.81%)</title><rect x="44.4" y="277" width="9.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="47.44" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::begin (543,644 samples, 0.01%)</title><rect x="484.2" y="181" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="487.20" y="191.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (76,023,622 samples, 1.22%)</title><rect x="633.5" y="101" width="14.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="636.51" y="111.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (6,874,596 samples, 0.11%)</title><rect x="134.7" y="261" width="1.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="137.67" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate (29,294,863 samples, 0.47%)</title><rect x="1098.4" y="261" width="5.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1101.40" y="271.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, true&gt;::operator mpl_::bool_&lt;true&gt; const&amp; (2,384,644 samples, 0.04%)</title><rect x="969.4" y="277" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="972.37" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::end (6,659,839 samples, 0.11%)</title><rect x="992.1" y="277" width="1.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="995.13" y="287.5" ></text>
</g>
<g >
<title>unmap_single_vma (1,356,267 samples, 0.02%)</title><rect x="1179.8" y="245" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1182.83" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_S_max_size (552,235 samples, 0.01%)</title><rect x="881.9" y="229" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="884.90" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (688,780 samples, 0.01%)</title><rect x="757.5" y="165" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="760.55" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (2,568,900 samples, 0.04%)</title><rect x="1137.4" y="277" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1140.38" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (2,386,868 samples, 0.04%)</title><rect x="1109.8" y="277" width="0.5" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1112.80" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::_Vector_impl (712,820 samples, 0.01%)</title><rect x="22.8" y="293" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="25.77" y="303.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (731,320 samples, 0.01%)</title><rect x="22.1" y="245" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="25.12" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1,080,493 samples, 0.02%)</title><rect x="1014.3" y="277" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1017.27" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (963,929 samples, 0.02%)</title><rect x="1094.0" y="229" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1097.00" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (984,823 samples, 0.02%)</title><rect x="1089.5" y="261" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1092.50" y="271.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::swap_heap_elements (78,306,973 samples, 1.25%)</title><rect x="408.3" y="181" width="14.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="411.30" y="191.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long&gt; (822,961 samples, 0.01%)</title><rect x="146.1" y="197" width="0.1" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="149.07" y="207.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::~unordered_map (14,714,315 samples, 0.24%)</title><rect x="1155.4" y="325" width="2.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1158.39" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_range_initialize&lt;unsigned long const*&gt; (3,226,209 samples, 0.05%)</title><rect x="1121.9" y="277" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1124.88" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (4,703,623 samples, 0.08%)</title><rect x="107.2" y="277" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="110.18" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::construct&lt;unsigned long, unsigned long const&amp;&gt; (3,498,351 samples, 0.06%)</title><rect x="478.2" y="165" width="0.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="481.18" y="175.5" ></text>
</g>
<g >
<title>boost::lookup_one_property_internal&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t, void&gt;::lookup&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; (2,869,772 samples, 0.05%)</title><rect x="312.2" y="261" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="315.17" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::_M_head (1,129,065 samples, 0.02%)</title><rect x="37.2" y="213" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="40.25" y="223.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,398,145 samples, 0.02%)</title><rect x="1038.9" y="117" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1041.91" y="127.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (66,426,615 samples, 1.06%)</title><rect x="527.4" y="197" width="12.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="530.39" y="207.5" ></text>
</g>
<g >
<title>boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;::operator[] (5,615,709 samples, 0.09%)</title><rect x="353.9" y="213" width="1.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="356.87" y="223.5" ></text>
</g>
<g >
<title>boost::detail::vertex_property_map_generator&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long&gt;::build (4,895,060 samples, 0.08%)</title><rect x="502.8" y="213" width="1.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="505.85" y="223.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (2,455,325 samples, 0.04%)</title><rect x="33.7" y="213" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="36.70" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::get (6,384,728 samples, 0.10%)</title><rect x="71.5" y="117" width="1.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="74.52" y="127.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long*, unsigned long&gt; (2,308,785 samples, 0.04%)</title><rect x="94.4" y="197" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="97.38" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_deallocate_buckets (1,103,081 samples, 0.02%)</title><rect x="1155.6" y="261" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1158.60" y="271.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&gt; (6,173,742 samples, 0.10%)</title><rect x="788.0" y="181" width="1.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="790.99" y="191.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;unsigned long const*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (614,668 samples, 0.01%)</title><rect x="138.8" y="213" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="141.83" y="223.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_impl&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt; &gt;::out_edge_list (1,135,860 samples, 0.02%)</title><rect x="54.3" y="293" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="57.28" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (3,094,516 samples, 0.05%)</title><rect x="1179.5" y="341" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1182.51" y="351.5" ></text>
</g>
<g >
<title>std::forward&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (1,189,876 samples, 0.02%)</title><rect x="1043.9" y="245" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1046.91" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (8,000,981 samples, 0.13%)</title><rect x="1069.3" y="165" width="1.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1072.29" y="175.5" ></text>
</g>
<g >
<title>do_page_fault (17,214,926 samples, 0.28%)</title><rect x="1175.8" y="341" width="3.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1178.76" y="351.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::increment&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (31,445,791 samples, 0.50%)</title><rect x="954.3" y="277" width="5.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="957.25" y="287.5" ></text>
</g>
<g >
<title>std::plus&lt;float&gt;::operator (1,965,492 samples, 0.03%)</title><rect x="79.7" y="181" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="82.68" y="191.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Deque_base (2,128,617 samples, 0.03%)</title><rect x="1008.3" y="261" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1011.26" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_get_Tp_allocator (734,232 samples, 0.01%)</title><rect x="100.7" y="245" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="103.72" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;::base (1,170,210 samples, 0.02%)</title><rect x="306.1" y="277" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="309.13" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::__normal_iterator (7,080,148 samples, 0.11%)</title><rect x="732.6" y="181" width="1.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="735.56" y="191.5" ></text>
</g>
<g >
<title>boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;::edge_desc_impl (31,166,869 samples, 0.50%)</title><rect x="913.0" y="245" width="5.8" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="915.96" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::deallocate (1,472,834 samples, 0.02%)</title><rect x="1157.4" y="229" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1160.38" y="239.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config, boost::directed_graph_helper&lt;boost::detail::adj_list_gen&lt;boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt;::config&gt;, boost::edge_weight_t&gt; (2,456,047 samples, 0.04%)</title><rect x="57.0" y="293" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="60.03" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;unsigned long const*, unsigned long*, unsigned long&gt; (1,525,647 samples, 0.02%)</title><rect x="1122.1" y="261" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1125.06" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (16,622,824 samples, 0.27%)</title><rect x="1110.9" y="261" width="3.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1113.89" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (1,641,949 samples, 0.03%)</title><rect x="109.7" y="245" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="112.66" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::~allocator (1,333,183 samples, 0.02%)</title><rect x="1041.4" y="213" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1044.44" y="223.5" ></text>
</g>
<g >
<title>operator delete (562,007 samples, 0.01%)</title><rect x="501.4" y="133" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="504.42" y="143.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::empty (21,805,818 samples, 0.35%)</title><rect x="378.5" y="213" width="4.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="381.46" y="223.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (49,675,148 samples, 0.79%)</title><rect x="932.8" y="181" width="9.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="935.84" y="191.5" ></text>
</g>
<g >
<title>boost::get_param&lt;boost::vertex_index_t, boost::bgl_named_params&lt;boost::adj_list_edge_property_map&lt;boost::directed_tag, float, float&amp;, unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt;, boost::edge_weight_t, boost::bgl_named_params&lt;boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, boost::vertex_distance_t, boost::no_property&gt; &gt; &gt; (1,257,591 samples, 0.02%)</title><rect x="882.3" y="277" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="885.33" y="287.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; (1,024,811 samples, 0.02%)</title><rect x="1052.0" y="245" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1054.95" y="255.5" ></text>
</g>
<g >
<title>boost::target&lt;boost::directed_tag, unsigned long, boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; (3,543,696 samples, 0.06%)</title><rect x="280.9" y="309" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="283.87" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (623,317 samples, 0.01%)</title><rect x="1072.2" y="261" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1075.17" y="271.5" ></text>
</g>
<g >
<title>boost::get&lt;boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, unsigned long&amp;, unsigned long&gt; (582,050 samples, 0.01%)</title><rect x="557.6" y="213" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="560.56" y="223.5" ></text>
</g>
<g >
<title>boost::integral_constant&lt;bool, false&gt;::operator mpl_::bool_&lt;false&gt; const&amp; (2,758,457 samples, 0.04%)</title><rect x="374.6" y="181" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="377.57" y="191.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (2,439,512 samples, 0.04%)</title><rect x="1118.8" y="181" width="0.4" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1121.75" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (1,540,968 samples, 0.02%)</title><rect x="479.6" y="149" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="482.65" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_check_len (645,717 samples, 0.01%)</title><rect x="1057.9" y="245" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1060.93" y="255.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (4,800,605 samples, 0.08%)</title><rect x="683.2" y="213" width="0.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="686.16" y="223.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long const&amp;&gt; (1,475,745 samples, 0.02%)</title><rect x="1007.5" y="229" width="0.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1010.55" y="239.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (2,473,225 samples, 0.04%)</title><rect x="37.0" y="229" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="39.99" y="239.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;unsigned long*&gt; (557,453 samples, 0.01%)</title><rect x="1041.3" y="149" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1044.27" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_impl::~_Vector_impl (738,873 samples, 0.01%)</title><rect x="1160.7" y="165" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1163.73" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::end (3,894,756 samples, 0.06%)</title><rect x="53.2" y="261" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="56.24" y="271.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;::operator[] (5,100,395 samples, 0.08%)</title><rect x="495.8" y="165" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="498.79" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage (3,092,206 samples, 0.05%)</title><rect x="130.9" y="197" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="133.94" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, float&gt;, false&gt; &gt; &gt;::_M_deallocate_node (947,123 samples, 0.02%)</title><rect x="1137.5" y="245" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1140.54" y="255.5" ></text>
</g>
<g >
<title>std::queue&lt;unsigned long, std::deque&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::~queue (1,945,721 samples, 0.03%)</title><rect x="1008.7" y="293" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1011.66" y="303.5" ></text>
</g>
<g >
<title>boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;::operator[] (624,156 samples, 0.01%)</title><rect x="500.2" y="165" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="503.18" y="175.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (1,356,267 samples, 0.02%)</title><rect x="1179.8" y="213" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1182.83" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (943,531 samples, 0.02%)</title><rect x="93.0" y="245" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="96.03" y="255.5" ></text>
</g>
<g >
<title>boost::detail::adj_list_edge_iterator&lt;boost::range_detail::integer_iterator&lt;unsigned long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; &gt;::operator++ (629,825 samples, 0.01%)</title><rect x="26.7" y="309" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="29.69" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (1,849,443 samples, 0.03%)</title><rect x="144.7" y="261" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="147.69" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (1,194,169 samples, 0.02%)</title><rect x="1139.0" y="261" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1141.97" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; const*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::base (819,391 samples, 0.01%)</title><rect x="28.4" y="293" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="31.42" y="303.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, float, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt; &gt;::erase (2,568,900 samples, 0.04%)</title><rect x="1137.4" y="309" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1140.38" y="319.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned long const*, unsigned long*&gt; (7,931,237 samples, 0.13%)</title><rect x="1038.5" y="133" width="1.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1041.52" y="143.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_edge_not_relaxed&gt; (939,133 samples, 0.02%)</title><rect x="67.0" y="181" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="69.97" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::_M_deallocate (2,191,054 samples, 0.04%)</title><rect x="1072.4" y="277" width="0.4" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1075.36" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::deallocate (1,147,033 samples, 0.02%)</title><rect x="107.6" y="229" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="110.64" y="239.5" ></text>
</g>
<g >
<title>read_graphml (5,436,430 samples, 0.09%)</title><rect x="1163.3" y="341" width="1.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1166.34" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::max_size (1,146,984 samples, 0.02%)</title><rect x="1105.5" y="261" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1108.45" y="271.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::equal&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt; (80,383,676 samples, 1.29%)</title><rect x="970.2" y="277" width="15.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="973.16" y="287.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; (3,203,070 samples, 0.05%)</title><rect x="632.9" y="101" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="635.91" y="111.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (877,801 samples, 0.01%)</title><rect x="1143.9" y="277" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1146.94" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (942,977 samples, 0.02%)</title><rect x="103.7" y="261" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="106.69" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (1,022,220 samples, 0.02%)</title><rect x="1085.5" y="245" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1088.46" y="255.5" ></text>
</g>
<g >
<title>boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;::out_edge_iter (11,032,354 samples, 0.18%)</title><rect x="314.8" y="293" width="2.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="317.78" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_max_size (1,674,978 samples, 0.03%)</title><rect x="101.7" y="213" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="104.71" y="223.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (677,772 samples, 0.01%)</title><rect x="1178.0" y="197" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1181.05" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt;::push_back (1,461,015 samples, 0.02%)</title><rect x="21.7" y="197" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="24.70" y="207.5" ></text>
</g>
<g >
<title>boost::invoke_visitors&lt;boost::null_visitor, unsigned long, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const, boost::on_finish_vertex&gt; (4,697,247 samples, 0.08%)</title><rect x="377.2" y="197" width="0.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="380.25" y="207.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (735,551 samples, 0.01%)</title><rect x="85.6" y="261" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="88.60" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (628,843 samples, 0.01%)</title><rect x="1144.0" y="261" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1146.98" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (926,029 samples, 0.01%)</title><rect x="113.2" y="229" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="116.17" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt; &gt;::pair&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, true&gt; (582,344 samples, 0.01%)</title><rect x="991.2" y="277" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="994.25" y="287.5" ></text>
</g>
<g >
<title>boost::detail::edge_base&lt;boost::directed_tag, unsigned long&gt;::edge_base (666,965 samples, 0.01%)</title><rect x="501.5" y="213" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="504.53" y="223.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1,614,505 samples, 0.03%)</title><rect x="1179.5" y="229" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1182.53" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::stof (1,050,864 samples, 0.02%)</title><rect x="1164.4" y="325" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1167.38" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::pop_back (647,731 samples, 0.01%)</title><rect x="862.4" y="213" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="865.42" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_deallocate (7,981,520 samples, 0.13%)</title><rect x="1127.5" y="261" width="1.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1130.46" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::destroy&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (3,455,574 samples, 0.06%)</title><rect x="97.7" y="165" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="100.66" y="175.5" ></text>
</g>
<g >
<title>_int_free (27,547,739 samples, 0.44%)</title><rect x="13.8" y="357" width="5.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="16.78" y="367.5" ></text>
</g>
<g >
<title>boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;::operator[] (5,433,815 samples, 0.09%)</title><rect x="439.5" y="181" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="442.53" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::~vector (2,755,583 samples, 0.04%)</title><rect x="1149.2" y="309" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1152.21" y="319.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;*, false&gt;::_M_head (836,899 samples, 0.01%)</title><rect x="85.0" y="117" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="88.02" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;::operator* (26,815,058 samples, 0.43%)</title><rect x="906.9" y="245" width="5.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="909.92" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;&gt; (96,859,192 samples, 1.55%)</title><rect x="1025.9" y="261" width="18.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1028.92" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, void&gt; (2,879,970 samples, 0.05%)</title><rect x="274.1" y="277" width="0.5" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="277.09" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, float&gt;, std::allocator&lt;std::pair&lt;unsigned long const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (11,779,689 samples, 0.19%)</title><rect x="1155.9" y="293" width="2.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1158.88" y="303.5" ></text>
</g>
<g >
<title>boost::get_property_value&lt;boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::edge_weight_t&gt; (9,864,540 samples, 0.16%)</title><rect x="310.9" y="277" width="1.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="313.85" y="287.5" ></text>
</g>
<g >
<title>boost::detail::stored_edge&lt;unsigned long&gt;::get_target (1,613,635 samples, 0.03%)</title><rect x="945.6" y="261" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="948.60" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;*&gt; (26,099,433 samples, 0.42%)</title><rect x="129.6" y="261" width="4.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="132.59" y="271.5" ></text>
</g>
<g >
<title>__GI_____strtof_l_internal (1,369,643 samples, 0.02%)</title><rect x="12.8" y="357" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="15.80" y="367.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;boost::detail::out_edge_iter&lt;__gnu_cxx::__normal_iterator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;*, std::vector&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt;, std::allocator&lt;boost::detail::stored_edge_property&lt;unsigned long, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt; &gt; &gt; &gt; &gt;, unsigned long, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long&gt;, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, long, false, false&gt;::derived (7,621,249 samples, 0.12%)</title><rect x="573.5" y="197" width="1.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="576.50" y="207.5" ></text>
</g>
<g >
<title>boost::dijkstra_visitor&lt;boost::null_visitor&gt;::edge_relaxed&lt;boost::detail::edge_desc_impl&lt;boost::directed_tag, unsigned long&gt;, boost::adjacency_list&lt;boost::vecS, boost::vecS, boost::directedS, boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, boost::property&lt;boost::edge_weight_t, float, boost::no_property&gt;, boost::no_property, boost::listS&gt; const&gt; (627,992 samples, 0.01%)</title><rect x="67.1" y="197" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="70.15" y="207.5" ></text>
</g>
<g >
<title>boost::d_ary_heap_indirect&lt;unsigned long, 4ul, boost::iterator_property_map&lt;unsigned long*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, unsigned long, unsigned long&amp;&gt;, boost::iterator_property_map&lt;float*, boost::vec_adj_list_vertex_id_map&lt;boost::property&lt;boost::vertex_index_t, int, boost::no_property&gt;, unsigned long&gt;, float, float&amp;&gt;, std::less&lt;float&gt;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::swap_heap_elements (1,778,454 samples, 0.03%)</title><rect x="64.2" y="165" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="67.23" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (5,240,946 samples, 0.08%)</title><rect x="1142.9" y="245" width="1.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1145.89" y="255.5" ></text>
</g>
</g>
</svg>
